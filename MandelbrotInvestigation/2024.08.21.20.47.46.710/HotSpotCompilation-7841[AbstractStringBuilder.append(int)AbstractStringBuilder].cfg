begin_compilation
  name " HotSpotCompilation-7841[java.lang.AbstractStringBuilder.append(int)]"
  method "HotSpotCompilation-7841[java.lang.AbstractStringBuilder.append(int)]"
  date 1724269751094
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1150 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a1150  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.lang.AbstractStringBuilder
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v1169 ?7 v1171 ?136 v1170 v24 ?634 ?215 v1002 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1170 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1150 v701 v1000 v1002 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1150 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1170 
lastLocationAccess: - 
=== Succesors ===
next: i1151 
=== Usages ===
a649 v1172 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1170 lastLocationAccess: - #next: i1151  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i30 ?7 ?136 i34 i151 v26 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
localsSize: 4
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 831
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
i1151 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1150 
=== Succesors ===
=== Usages ===
i1151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1151 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-166667|0xfffffffffffd74f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 134]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v1172 
lastLocationAccess: - 
=== Succesors ===
next: v29 
=== Usages ===
v838 v1050 j1068 i73 i93 i96 i102 v111 v128 i129 a1020 
=== Predecessor ===
a1150 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v1172 lastLocationAccess: - #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:545) [bci: 0]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i35 i238 i143 v75 i956 i949 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:548) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: i32
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
i34 i151 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@jdk.graal.compiler.nodes.calc.NegateNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:834) [bci: 21]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v679 v26 i35 i143 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:546) [bci: 3]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i15 
=== Succesors ===
=== Usages ===
v29 i143 v146 v200 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:546) [bci: 3]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.0248451913249636
stamp: void
=== Inputs ===
condition: v26 
=== Succesors ===
trueSuccessor: v28 
falseSuccessor: v27 
=== Usages ===
=== Predecessor ===
i1151 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v26 #trueSuccessor: v28 #falseSuccessor: v27  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4582818360249579440
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:550) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:550) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
v28 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606958633211231298
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:547) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v33  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:550) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
v27 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:550) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v32 
values: i2 i30 
=== Succesors ===
=== Usages ===
v480 v558 v519 v249 v286 v324 v363 v402 v441 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v32 values: i2 i30  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:550) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v32 
values: i25 i15 
=== Succesors ===
=== Usages ===
i57 i59 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v32 values: i25 i15  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:550) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v31 v33 
=== Succesors ===
next: v224 
=== Usages ===
i34 i35 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v31 v33 #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid i185 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:523) [bci: 86]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: -9
stableDimension: 0
stamp: i32 [-9]
stampKind: i32
value: int[-9|0xfffffffffffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
v186 v249 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i185 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i34 y: i185  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 22]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i95 i238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i158 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 25]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: -99
stableDimension: 0
stamp: i32 [-99]
stampKind: i32
value: int[-99|0xffffffffffffff9d]
=== Inputs ===
=== Succesors ===
=== Usages ===
v159 v286 v611 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.5081433618708683
stamp: void
=== Inputs ===
condition: v249 
=== Succesors ===
trueSuccessor: v222 
falseSuccessor: v223 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v249 #trueSuccessor: v222 #falseSuccessor: v223  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B20" 
    xhandlers
    flags 
    probability 4602752168055621283
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:554) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v262  <|@  <|@
f <@~|@floating>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i158 
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i34 y: i158  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.5081433618708683
stamp: void
=== Inputs ===
condition: v286 
=== Succesors ===
trueSuccessor: v260 
falseSuccessor: v261 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v286 #trueSuccessor: v260 #falseSuccessor: v261  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B19" 
    xhandlers
    flags 
    probability 4598323111924218927
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:554) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v299  <|@  <|@
f <@~|@floating>@ <|@
tid i323 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: -999
stableDimension: 0
stamp: i32 [-999]
stampKind: i32
value: int[-999|0xfffffffffffffc19]
=== Inputs ===
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i323 
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i34 y: i323  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.5081433618708683
stamp: void
=== Inputs ===
condition: v324 
=== Succesors ===
trueSuccessor: v297 
falseSuccessor: v298 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v324 #trueSuccessor: v297 #falseSuccessor: v298  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B18" 
    xhandlers
    flags 
    probability 4593895269862142147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:554) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v338 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v338  <|@  <|@
f <@~|@floating>@ <|@
tid i362 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: -9999
stableDimension: 0
stamp: i32 [-9999]
stampKind: i32
value: int[-9999|0xffffffffffffd8f1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v363 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i362 
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i34 y: i362  <|@  <|@
f <@*|@fixed>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.5081433618708683
stamp: void
=== Inputs ===
condition: v363 
=== Succesors ===
trueSuccessor: v336 
falseSuccessor: v337 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v363 #trueSuccessor: v336 #falseSuccessor: v337  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" 
    xhandlers
    flags 
    probability 4589468661642602652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:554) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v377 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v377  <|@  <|@
f <@~|@floating>@ <|@
tid i401 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: -99999
stableDimension: 0
stamp: i32 [-99999]
stampKind: i32
value: int[-99999|0xfffffffffffe7961]
=== Inputs ===
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i401 
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i34 y: i401  <|@  <|@
f <@*|@fixed>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.5081433618708683
stamp: void
=== Inputs ===
condition: v402 
=== Succesors ===
trueSuccessor: v375 
falseSuccessor: v376 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v402 #trueSuccessor: v375 #falseSuccessor: v376  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4585043307360852988
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:554) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v416 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid i440 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: -999999
stableDimension: 0
stamp: i32 [-999999]
stampKind: i32
value: int[-999999|0xfffffffffff0bdc1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i440 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i34 y: i440  <|@  <|@
f <@*|@fixed>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.5081433618708683
stamp: void
=== Inputs ===
condition: v441 
=== Succesors ===
trueSuccessor: v414 
falseSuccessor: v415 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v441 #trueSuccessor: v414 #falseSuccessor: v415  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4580619227439431527
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:554) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
f <@~|@floating>@ <|@
tid i479 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: -9999999
stableDimension: 0
stamp: i32 [-9999999]
stampKind: i32
value: int[-9999999|0xffffffffff676981]
=== Inputs ===
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i479 
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i34 y: i479  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.5081433618708683
stamp: void
=== Inputs ===
condition: v480 
=== Succesors ===
trueSuccessor: v453 
falseSuccessor: v454 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v480 #trueSuccessor: v453 #falseSuccessor: v454  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4576196442633492882
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:554) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v494 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid i518 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: -99999999
stableDimension: 0
stamp: i32 [-99999999]
stampKind: i32
value: int[-99999999|0xfffffffffa0a1f01]
=== Inputs ===
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i518 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i34 y: i518  <|@  <|@
f <@*|@fixed>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.5081433618708683
stamp: void
=== Inputs ===
condition: v519 
=== Succesors ===
trueSuccessor: v492 
falseSuccessor: v493 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v519 #trueSuccessor: v492 #falseSuccessor: v493  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4571774974036225136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:554) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v533  <|@  <|@
f <@~|@floating>@ <|@
tid i557 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: -999999999
stableDimension: 0
stamp: i32 [-999999999]
stampKind: i32
value: int[-999999999|0xffffffffc4653601]
=== Inputs ===
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i557 
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i34 y: i557  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.5081433618708683
stamp: void
=== Inputs ===
condition: v558 
=== Succesors ===
trueSuccessor: v531 
falseSuccessor: v532 
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v558 #trueSuccessor: v531 #falseSuccessor: v532  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4567354843084355297
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:554) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
v533 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v69  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:551) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: 10
stableDimension: 0
stamp: i32 [10]
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
i59 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:556) [bci: 45]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: i32 [10 - 11] bits:0...0101x
=== Inputs ===
x: i35 
y: i43 
=== Succesors ===
=== Usages ===
i68 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i35 y: i43  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
v531 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567187905733353983
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
v533 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid i521 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:551) [bci: 36]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: 9
stableDimension: 0
stamp: i32 [9]
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
i238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
v532 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571610711976019636
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v609 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v609  <|@  <|@
f <@~|@floating>@ <|@
tid i482 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:551) [bci: 36]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
v493 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576034812990629180
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v608 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v608  <|@  <|@
f <@~|@floating>@ <|@
tid i443 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:551) [bci: 36]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: 7
stableDimension: 0
stamp: i32 [7]
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
v454 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580460188027533457
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v607  <|@  <|@
f <@~|@floating>@ <|@
tid i404 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:551) [bci: 36]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: 6
stableDimension: 0
stamp: i32 [6]
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
v415 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4584886816669611324
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v606 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v606  <|@  <|@
f <@~|@floating>@ <|@
tid i365 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:551) [bci: 36]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: 5
stableDimension: 0
stamp: i32 [5]
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
v376 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589314678826940650
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v605 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v605  <|@  <|@
f <@~|@floating>@ <|@
tid i326 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:551) [bci: 36]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: 4
stableDimension: 0
stamp: i32 [4]
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
v337 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593743754731554715
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v604 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v604  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:554) [bci: 34]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
v298 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598172830319288879
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v603 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v603  <|@  <|@
f <@*|@fixed>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
v261 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602532121406698170
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v233 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v233  <|@  <|@
f <@*|@fixed>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
v223 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B13" "B21" "B20" "B19" "B18" "B17" "B16" "B15" "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607162073407212554
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: i32 [1 - 9] bits:0...0xxxx
valueDescription: i32
=== Inputs ===
merge: v231 
values: i521 i25 i94 i61 i326 i365 i404 i443 i482 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v231 values: i521 i25 i94 i61 i326 i365 i404 i443 i482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v232 v233 v603 v604 v605 v606 v607 v608 v609 
=== Succesors ===
next: v67 
=== Usages ===
i238 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v232 v233 v603 v604 v605 v606 v607 v608 v609 #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 29]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: i32 [1 - 10] bits:0...0xxxx
=== Inputs ===
x: i35 
y: i238 
=== Succesors ===
=== Usages ===
i68 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i35 y: i238  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
v231 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B12" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i68 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 11] bits:0...0xxxx
valueDescription: i32
=== Inputs ===
merge: v66 
values: i57 i59 
=== Succesors ===
=== Usages ===
?7 i8 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v66 values: i57 i59  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v67 v69 
=== Succesors ===
next: i1152 
=== Usages ===
i68 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v67 v69 #next: i1152  <|@  <|@
f <@~|@floating>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1152 v795 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1152 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1169 
lastLocationAccess: - 
=== Succesors ===
next: i1153 
=== Usages ===
?7 ?7 i8 ?136 
=== Predecessor ===
v66 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1169 lastLocationAccess: - #next: i1153  <|@  <|@
f <@~|@floating>@ <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1153 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1153 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1171 
lastLocationAccess: - 
=== Succesors ===
next: v78 
=== Usages ===
i658 v826 
=== Predecessor ===
i1152 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1171 lastLocationAccess: - #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stamp: i32
=== Inputs ===
x: i68 
y: i1152 
=== Succesors ===
=== Usages ===
i92 ?136 i74 i637 ?215 v795 ?634 ?152 i617 i626 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i68 y: i1152  <|@  <|@
f <@~|@floating>@ <|@
tid i658 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1153 
=== Succesors ===
=== Usages ===
i73 i92 i95 i101 i80 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1153  <|@  <|@
f <@~|@floating>@ <|@
tid i73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i1151 
y: i658 
=== Succesors ===
=== Usages ===
i74 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1151 y: i658  <|@  <|@
f <@~|@floating>@ <|@
tid i74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 13]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i32
=== Inputs ===
x: i8 
y: i73 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i8 y: i73  <|@  <|@
f <@~|@floating>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i74 
y: i25 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i74 y: i25  <|@  <|@
f <@~|@floating>@ <|@
tid a649 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a1150 
=== Succesors ===
=== Usages ===
j1142 a863 j1062 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1150  <|@  <|@
f <@~|@floating>@ <|@
tid j967 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j963 j963 j963 v987 v997 v977 v1130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 44]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i170 i180 i201 i617 i938 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
profileData: PROFILED designatedSuccessorProbability: 0.9102668972297561
stamp: void
=== Inputs ===
condition: v75 
=== Succesors ===
trueSuccessor: v77 
falseSuccessor: v76 
=== Usages ===
=== Predecessor ===
i1153 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v75 #trueSuccessor: v77 #falseSuccessor: v76  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v84  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
v77 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B89" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v925 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v925  <|@  <|@
f <@~|@floating>@ <|@
tid i92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:261) [bci: 11]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i32
=== Inputs ===
x: i8 
y: i658 
=== Succesors ===
=== Usages ===
i93 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i8 y: i658  <|@  <|@
f <@~|@floating>@ <|@
tid i93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:262) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i32
=== Inputs ===
x: i92 
y: i1151 
=== Succesors ===
=== Usages ===
v108 i109 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i92 y: i1151  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 27]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i32
=== Inputs ===
x: i94 
y: i658 
=== Succesors ===
=== Usages ===
i96 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i94 y: i658  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i32
=== Inputs ===
x: i95 
y: i1151 
=== Succesors ===
=== Usages ===
v108 i109 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i95 y: i1151  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 3]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i93 
y: i96 
=== Succesors ===
=== Usages ===
i109 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i93 y: i96  <|@  <|@
f <@~|@floating>@ <|@
tid i109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 3]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i32
=== Inputs ===
condition: v108 
trueValue: i96 
falseValue: i93 
=== Succesors ===
=== Usages ===
i102 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v108 trueValue: i96 falseValue: i93  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 6]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i32
=== Inputs ===
x: i109 
y: i1151 
=== Succesors ===
=== Usages ===
i938 i101 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i109 y: i1151  <|@  <|@
f <@~|@floating>@ <|@
tid i938 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i32
=== Inputs ===
x: i102 
y: i169 
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i102 y: i169  <|@  <|@
f <@~|@floating>@ <|@
tid i939 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639]
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i938 
y: i939 
=== Succesors ===
=== Usages ===
v925 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i938 y: i939  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: iadd
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
sourceFile: AbstractStringBuilder.java
sourceLine: 832
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i1152 i68 a1 i2 i1152 
=== Succesors ===
=== Usages ===
v1166 v964 v1168 a1020 a1102 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i1152 i68 a1 i2 i1152  <|@  <|@
f <@*|@fixed>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v940 
=== Succesors ===
trueSuccessor: v923 
falseSuccessor: v924 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v940 #trueSuccessor: v923 #falseSuccessor: v924  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B31" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:742) [bci: 19]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
v925 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid i101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:267) [bci: 57]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i32
=== Inputs ===
x: i102 
y: i658 
=== Succesors ===
=== Usages ===
i80 
=== Predecessor ===
- >@ <|@
instruction <@>>|@jdk.graal.compiler.nodes.calc.RightShiftNode>@ x: i102 y: i658  <|@  <|@
f <@~|@floating>@ <|@
tid i80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i32
=== Inputs ===
x: i101 
y: i658 
=== Succesors ===
=== Usages ===
v111 v1129 v128 i129 v839 j1073 a1102 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i101 y: i658  <|@  <|@
f <@~|@floating>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3538) [bci: 3]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i80 
y: i1151 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i80 y: i1151  <|@  <|@
f <@~|@floating>@ <|@
tid v1149 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1049 v1128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1015 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1045 v1125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1020 a1102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1029 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1030 j1109 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1008 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1009 j1074 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3538) [bci: 3]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
profileData: PROFILED designatedSuccessorProbability: 3.433727982038448E-5
stamp: void
=== Inputs ===
condition: v111 
=== Succesors ===
trueSuccessor: v113 
falseSuccessor: v112 
=== Usages ===
=== Predecessor ===
v923 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v111 #trueSuccessor: v113 #falseSuccessor: v112  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1060 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1060  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1004 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1004  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1004 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1042 
=== Usages ===
v1187 v1188 
=== Predecessor ===
v1060 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1042  <|@  <|@
f <@~|@floating>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j1004 
index: - 
=== Succesors ===
=== Usages ===
j1042 v1044 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1004 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1042 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1187 
lastLocationAccess: - 
=== Succesors ===
next: j1043 
=== Usages ===
j1010 v1189 v1190 a1019 v1194 v1191 v1192 v1193 
=== Predecessor ===
j1004 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1187 lastLocationAccess: - #next: j1043  <|@  <|@
f <@~|@floating>@ <|@
tid v1188 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j1004 
index: - 
=== Succesors ===
=== Usages ===
j1043 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1004 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1043 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1188 
lastLocationAccess: - 
=== Succesors ===
next: v1014 
=== Usages ===
v1011 
=== Predecessor ===
j1042 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1188 lastLocationAccess: - #next: v1014  <|@  <|@
f <@~|@floating>@ <|@
tid j1068 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i1151 
=== Succesors ===
=== Usages ===
v1069 j1030 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1151  <|@  <|@
f <@~|@floating>@ <|@
tid j1030 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64 [23 - 2147483670] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j1068 
y: j1029 
=== Succesors ===
=== Usages ===
j1009 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1068 y: j1029  <|@  <|@
f <@~|@floating>@ <|@
tid j1009 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64 [0 - 2147483664] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j1030 
y: j1008 
=== Succesors ===
=== Usages ===
j1010 v1191 v1192 v1193 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j1030 y: j1008  <|@  <|@
f <@~|@floating>@ <|@
tid j1010 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64
=== Inputs ===
x: j1009 
y: j1042 
=== Succesors ===
=== Usages ===
v1011 v1044 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1009 y: j1042  <|@  <|@
f <@~|@floating>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1043 
y: j1010 
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j1043 y: j1010  <|@  <|@
f <@*|@fixed>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v1011 
=== Succesors ===
trueSuccessor: v1013 
falseSuccessor: v1012 
=== Usages ===
=== Predecessor ===
j1043 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1011 #trueSuccessor: v1013 #falseSuccessor: v1012  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1020 
=== Usages ===
=== Predecessor ===
v1014 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1020  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1020 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?7 
arguments: v1003 i1151 
=== Succesors ===
next: v1166 
=== Usages ===
v1166 a1040 
=== Predecessor ===
v1013 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?7 arguments: v1003 i1151 #next: v1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-270449|0xfffffffffffbdf8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?7 
object: a1020 
=== Succesors ===
next: v1024 
=== Usages ===
=== Predecessor ===
a1020 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?7 object: a1020 #next: v1024  <|@  <|@
f <@*|@fixed>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
v1166 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1044 
=== Usages ===
=== Predecessor ===
v1014 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1044  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1187 
lastLocationAccess: - 
value: j1010 
stateAfter: - 
=== Succesors ===
next: v1032 
=== Usages ===
=== Predecessor ===
v1012 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1187 lastLocationAccess: - value: j1010 stateAfter: - #next: v1032  <|@  <|@
f <@~|@floating>@ <|@
tid v1191 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j1009 
index: j1042 
=== Succesors ===
=== Usages ===
v1032 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1009 index: j1042  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
address: v1191 
=== Succesors ===
next: v1035 
=== Usages ===
=== Predecessor ===
v1044 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1191 #next: v1035  <|@  <|@
f <@~|@floating>@ <|@
tid v1192 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j1009 
index: j1042 
=== Succesors ===
=== Usages ===
v1035 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1009 index: j1042  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
address: v1192 
=== Succesors ===
next: v1038 
=== Usages ===
=== Predecessor ===
v1032 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1192 #next: v1038  <|@  <|@
f <@~|@floating>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j1009 
index: j1042 
=== Succesors ===
=== Usages ===
v1038 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1009 index: j1042  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
address: v1193 
=== Succesors ===
next: v1045 
=== Usages ===
=== Predecessor ===
v1035 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1193 #next: v1045  <|@  <|@
f <@~|@floating>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1042 
index: - 
=== Succesors ===
=== Usages ===
v1045 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1042 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1189 
lastLocationAccess: - 
value: j1015 
stateAfter: - 
=== Succesors ===
next: v1049 
=== Usages ===
=== Predecessor ===
v1038 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1189 lastLocationAccess: - value: j1015 stateAfter: - #next: v1049  <|@  <|@
f <@~|@floating>@ <|@
tid v1194 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j1042 
index: - 
=== Succesors ===
=== Usages ===
v1049 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1042 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1194 
lastLocationAccess: - 
value: v1149 
stateAfter: - 
=== Succesors ===
next: v1050 
=== Usages ===
=== Predecessor ===
v1045 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1194 lastLocationAccess: - value: v1149 stateAfter: - #next: v1050  <|@  <|@
f <@~|@floating>@ <|@
tid v1190 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j1042 
index: - 
=== Succesors ===
=== Usages ===
v1050 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1042 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1190 
lastLocationAccess: - 
value: i1151 
stateAfter: - 
=== Succesors ===
next: v1018 
=== Usages ===
=== Predecessor ===
v1049 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1190 lastLocationAccess: - value: i1151 stateAfter: - #next: v1018  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1019 
=== Usages ===
=== Predecessor ===
v1050 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a1019  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1019 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j1042 
=== Succesors ===
next: v1022 
=== Usages ===
a1040 
=== Predecessor ===
v1018 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j1042 #next: v1022  <|@  <|@
f <@*|@fixed>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
a1019 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1040 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v1023 
values: a1019 a1020 
=== Succesors ===
=== Usages ===
j1066 a666 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v1023 values: a1019 a1020  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1022 v1024 
=== Succesors ===
next: j1062 
=== Usages ===
a1040 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1022 v1024 #next: j1062  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1062 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64
=== Inputs ===
object: a649 
=== Succesors ===
next: j1066 
=== Usages ===
v1195 
=== Predecessor ===
v1023 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a649 #next: j1066  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1066 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64
=== Inputs ===
object: a1040 
=== Succesors ===
next: v1069 
=== Usages ===
v1196 
=== Predecessor ===
j1062 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a1040 #next: v1069  <|@  <|@
f <@~|@floating>@ <|@
tid v1195 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j1062 
index: - 
=== Succesors ===
=== Usages ===
v1069 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1062 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j1066 
index: - 
=== Succesors ===
=== Usages ===
v1069 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1066 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopyKillInit
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1195 v1196 j1068 
=== Succesors ===
next: v665 
=== Usages ===
=== Predecessor ===
j1066 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1195 v1196 j1068 #next: v665  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:80) [bci: 39] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a666 
=== Usages ===
=== Predecessor ===
v1069 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a666  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a666 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:81) [bci: 43] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: a!# byte[]
=== Inputs ===
object: a1040 
=== Succesors ===
next: v133 
=== Usages ===
a134 
=== Predecessor ===
v665 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1040 #next: v133  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
a666 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 14]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1140 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1140 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1070 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1070  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1070 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1122 
=== Usages ===
v1197 v1198 
=== Predecessor ===
v1140 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1122  <|@  <|@
f <@~|@floating>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j1070 
index: - 
=== Succesors ===
=== Usages ===
j1122 v1124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1070 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1122 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1197 
lastLocationAccess: - 
=== Succesors ===
next: j1123 
=== Usages ===
j1075 v1199 v1200 v1201 a1101 v1202 v1206 v1203 v1204 v1205 
=== Predecessor ===
j1070 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1197 lastLocationAccess: - #next: j1123  <|@  <|@
f <@~|@floating>@ <|@
tid v1198 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j1070 
index: - 
=== Succesors ===
=== Usages ===
j1123 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1070 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1123 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1198 
lastLocationAccess: - 
=== Succesors ===
next: v1079 
=== Usages ===
v1076 
=== Predecessor ===
j1122 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1198 lastLocationAccess: - #next: v1079  <|@  <|@
f <@~|@floating>@ <|@
tid j1073 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i80 
=== Succesors ===
=== Usages ===
j1109 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i80  <|@  <|@
f <@~|@floating>@ <|@
tid j1109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64 [23 - 4294967318] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j1073 
y: j1029 
=== Succesors ===
=== Usages ===
j1074 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1073 y: j1029  <|@  <|@
f <@~|@floating>@ <|@
tid j1074 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64 [0 - 4294967312] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j1109 
y: j1008 
=== Succesors ===
=== Usages ===
j1075 v1090 j1111 v1203 v1204 v1205 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j1109 y: j1008  <|@  <|@
f <@~|@floating>@ <|@
tid j1075 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64
=== Inputs ===
x: j1074 
y: j1122 
=== Succesors ===
=== Usages ===
v1076 v1124 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1074 y: j1122  <|@  <|@
f <@~|@floating>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1123 
y: j1075 
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j1123 y: j1075  <|@  <|@
f <@*|@fixed>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v1076 
=== Succesors ===
trueSuccessor: v1078 
falseSuccessor: v1077 
=== Usages ===
=== Predecessor ===
j1123 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1076 #trueSuccessor: v1078 #falseSuccessor: v1077  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1102 
=== Usages ===
=== Predecessor ===
v1079 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1102 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?7 
arguments: v1003 i80 
=== Succesors ===
next: v1168 
=== Usages ===
v1168 a1120 
=== Predecessor ===
v1078 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?7 arguments: v1003 i80 #next: v1168  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-290929|0xfffffffffffb8f8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?7 
object: a1102 
=== Succesors ===
next: v1106 
=== Usages ===
=== Predecessor ===
a1102 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?7 object: a1102 #next: v1106  <|@  <|@
f <@*|@fixed>@ <|@
tid v1106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1105 
=== Predecessor ===
v1168 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B38" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1124 
=== Usages ===
=== Predecessor ===
v1079 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1197 
lastLocationAccess: - 
value: j1075 
stateAfter: - 
=== Succesors ===
next: v1115 
=== Usages ===
=== Predecessor ===
v1077 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1197 lastLocationAccess: - value: j1075 stateAfter: - #next: v1115  <|@  <|@
f <@~|@floating>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j1074 
index: j1122 
=== Succesors ===
=== Usages ===
v1115 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1074 index: j1122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
address: v1203 
=== Succesors ===
next: v1117 
=== Usages ===
=== Predecessor ===
v1124 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1203 #next: v1117  <|@  <|@
f <@~|@floating>@ <|@
tid v1204 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j1074 
index: j1122 
=== Succesors ===
=== Usages ===
v1117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1074 index: j1122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
address: v1204 
=== Succesors ===
next: v1119 
=== Usages ===
=== Predecessor ===
v1115 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1204 #next: v1119  <|@  <|@
f <@~|@floating>@ <|@
tid v1205 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j1074 
index: j1122 
=== Succesors ===
=== Usages ===
v1119 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1074 index: j1122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
address: v1205 
=== Succesors ===
next: v1125 
=== Usages ===
=== Predecessor ===
v1117 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1205 #next: v1125  <|@  <|@
f <@~|@floating>@ <|@
tid v1199 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1122 
index: - 
=== Succesors ===
=== Usages ===
v1125 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1122 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1199 
lastLocationAccess: - 
value: j1015 
stateAfter: - 
=== Succesors ===
next: v1128 
=== Usages ===
=== Predecessor ===
v1119 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1199 lastLocationAccess: - value: j1015 stateAfter: - #next: v1128  <|@  <|@
f <@~|@floating>@ <|@
tid v1206 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j1122 
index: - 
=== Succesors ===
=== Usages ===
v1128 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1122 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1128 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1206 
lastLocationAccess: - 
value: v1149 
stateAfter: - 
=== Succesors ===
next: v1129 
=== Usages ===
=== Predecessor ===
v1125 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1206 lastLocationAccess: - value: v1149 stateAfter: - #next: v1129  <|@  <|@
f <@~|@floating>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j1122 
index: - 
=== Succesors ===
=== Usages ===
v1129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1122 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1200 
lastLocationAccess: - 
value: i80 
stateAfter: - 
=== Succesors ===
next: v1085 
=== Usages ===
=== Predecessor ===
v1128 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1200 lastLocationAccess: - value: i80 stateAfter: - #next: v1085  <|@  <|@
f <@~|@floating>@ <|@
tid j1110 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1111 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64 [-16 - 4294967296] bits:x...x000
=== Inputs ===
x: j1074 
y: j1110 
=== Succesors ===
=== Usages ===
v1082 v1086 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1074 y: j1110  <|@  <|@
f <@~|@floating>@ <|@
tid j1112 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1111 
y: j1112 
=== Succesors ===
=== Usages ===
v1085 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j1111 y: j1112  <|@  <|@
f <@*|@fixed>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v1082 
=== Succesors ===
trueSuccessor: v1084 
falseSuccessor: v1083 
=== Usages ===
=== Predecessor ===
v1129 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1082 #trueSuccessor: v1084 #falseSuccessor: v1083  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1087 
=== Usages ===
=== Predecessor ===
v1085 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1087  <|@  <|@
f <@~|@floating>@ <|@
tid j1047 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1098 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j655 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1089 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1088 
=== Predecessor ===
v1084 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1089 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1088 
values: j655 j1098 
=== Succesors ===
=== Usages ===
v1090 v1201 j1098 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v1088 values: j655 j1098  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 56
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v1087 
=== Succesors ===
next: v1096 
=== Usages ===
j1089 v1095 v1099 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v1087 #next: v1096  <|@  <|@
f <@~|@floating>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1089 
y: j1074 
=== Succesors ===
=== Usages ===
v1096 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j1089 y: j1074  <|@  <|@
f <@*|@fixed>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v1090 
=== Succesors ===
trueSuccessor: v1091 
falseSuccessor: v1095 
=== Usages ===
=== Predecessor ===
v1088 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1090 #trueSuccessor: v1091 #falseSuccessor: v1095  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1130 
=== Usages ===
=== Predecessor ===
v1096 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1130  <|@  <|@
f <@~|@floating>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1122 
index: j1089 
=== Succesors ===
=== Usages ===
v1130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1122 index: j1089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1201 
lastLocationAccess: - 
value: j967 
stateAfter: - 
=== Succesors ===
next: v1099 
=== Usages ===
=== Predecessor ===
v1091 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1201 lastLocationAccess: - value: j967 stateAfter: - #next: v1099  <|@  <|@
f <@~|@floating>@ <|@
tid j1098 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64
=== Inputs ===
x: j1089 
y: j1047 
=== Succesors ===
=== Usages ===
j1089 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1089 y: j1047  <|@  <|@
f <@*|@fixed>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
loopBegin: v1088 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1130 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v1088  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1088 
=== Succesors ===
next: v1094 
=== Usages ===
=== Predecessor ===
v1096 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1088 #next: v1094  <|@  <|@
f <@*|@fixed>@ <|@
tid v1094 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1093 
=== Predecessor ===
v1095 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1086 
=== Usages ===
=== Predecessor ===
v1085 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1086  <|@  <|@
f <@~|@floating>@ <|@
tid v1202 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j1122 
index: - 
=== Succesors ===
=== Usages ===
v1086 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1122 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1202 
lastLocationAccess: - 
length: j1111 
=== Succesors ===
next: v1092 
=== Usages ===
=== Predecessor ===
v1083 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v1202 lastLocationAccess: - length: j1111 #next: v1092  <|@  <|@
f <@*|@fixed>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1093 
=== Predecessor ===
v1086 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1092 v1094 
=== Succesors ===
next: v1100 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1092 v1094 #next: v1100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1101 
=== Usages ===
=== Predecessor ===
v1093 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a1101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j1122 
=== Succesors ===
next: v1104 
=== Usages ===
a1120 
=== Predecessor ===
v1100 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j1122 #next: v1104  <|@  <|@
f <@*|@fixed>@ <|@
tid v1104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1105 
=== Predecessor ===
a1101 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B32" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v1105 
values: a1101 a1102 
=== Succesors ===
=== Usages ===
j1144 a134 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v1105 values: a1101 a1102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1105 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1104 v1106 
=== Succesors ===
next: v929 
=== Usages ===
a1120 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1104 v1106 #next: v929  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3543) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i80 
y: i1151 
=== Succesors ===
=== Usages ===
i129 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i80 y: i1151  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3543) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i32
=== Inputs ===
condition: v128 
trueValue: i80 
falseValue: i1151 
=== Succesors ===
=== Usages ===
j1146 v679 v838 v839 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v128 trueValue: i80 falseValue: i1151  <|@  <|@
f <@~|@floating>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i129 
y: i15 
=== Succesors ===
=== Usages ===
v929 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i129 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v679 
=== Succesors ===
trueSuccessor: v927 
falseSuccessor: v928 
=== Usages ===
=== Predecessor ===
v1105 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v679 #trueSuccessor: v927 #falseSuccessor: v928  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v965 
=== Usages ===
=== Predecessor ===
v929 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v965  <|@  <|@
f <@~|@floating>@ <|@
tid i966 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: -237081
stableDimension: 0
stamp: i32 [-237081]
stampKind: i32
value: int[-237081|0xfffffffffffc61e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i962 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v958 
=== Predecessor ===
v927 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v933 
=== Usages ===
=== Predecessor ===
v929 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v933  <|@  <|@
f <@~|@floating>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1151 
y: i129 
=== Succesors ===
=== Usages ===
v933 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1151 y: i129  <|@  <|@
f <@*|@fixed>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v838 
=== Succesors ===
trueSuccessor: v931 
falseSuccessor: v932 
=== Usages ===
=== Predecessor ===
v928 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v838 #trueSuccessor: v931 #falseSuccessor: v932  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v968 
=== Usages ===
=== Predecessor ===
v933 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v968  <|@  <|@
f <@~|@floating>@ <|@
tid i969 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: -238105
stableDimension: 0
stamp: i32 [-238105]
stampKind: i32
value: int[-238105|0xfffffffffffc5de7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i962 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v958 
=== Predecessor ===
v931 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v937 
=== Usages ===
=== Predecessor ===
v933 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v937  <|@  <|@
f <@~|@floating>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i80 
y: i129 
=== Succesors ===
=== Usages ===
v937 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i80 y: i129  <|@  <|@
f <@*|@fixed>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v839 
=== Succesors ===
trueSuccessor: v935 
falseSuccessor: v936 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v839 #trueSuccessor: v935 #falseSuccessor: v936  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v970 
=== Usages ===
=== Predecessor ===
v937 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v970  <|@  <|@
f <@~|@floating>@ <|@
tid i971 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: -239129
stableDimension: 0
stamp: i32 [-239129]
stampKind: i32
value: int[-239129|0xfffffffffffc59e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i962 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v958 
=== Predecessor ===
v935 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1142 
=== Usages ===
=== Predecessor ===
v937 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64
=== Inputs ===
object: a649 
=== Succesors ===
next: j1144 
=== Usages ===
v1207 
=== Predecessor ===
v936 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a649 #next: j1144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64
=== Inputs ===
object: a1120 
=== Succesors ===
next: v1147 
=== Usages ===
v1208 
=== Predecessor ===
j1142 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a1120 #next: v1147  <|@  <|@
f <@~|@floating>@ <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j1142 
index: - 
=== Succesors ===
=== Usages ===
v1147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1142 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1208 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j1144 
index: - 
=== Succesors ===
=== Usages ===
v1147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1144 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1146 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i129 
=== Succesors ===
=== Usages ===
v1147 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i129  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1207 v1208 j1146 
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
j1144 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1207 v1208 j1146 #next: v135  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
v1147 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B30" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a134 <|@
d <@d|@=== Debug Properties ===
stamp: a!# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v132 
values: a666 a1120 
=== Succesors ===
=== Usages ===
a863 a700 v1002 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v132 values: a666 a1120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v133 v135 
=== Succesors ===
next: v1000 
=== Usages ===
a134 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v133 v135 #next: v1000  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
precise: true
stamp: void
=== Inputs ===
address: v1170 
value: - 
stateBefore: - 
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v1170 value: - stateBefore: - #next: v701  <|@  <|@
f <@~|@floating>@ <|@
tid a700 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
op: Compress
stamp: n!# byte[]
=== Inputs ===
value: a134 
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.value
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1170 
lastLocationAccess: - 
value: a700 
stateAfter: - 
=== Succesors ===
next: v1002 
=== Usages ===
=== Predecessor ===
v1000 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1170 lastLocationAccess: - value: a700 stateAfter: - #next: v1002  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
precise: false
stamp: void
=== Inputs ===
address: v1170 
value: a134 
object: a1 
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v1170 value: a134 object: a1 #next: v86  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
v1002 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" "B47" 
    successors "B49" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: a!# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v85 
values: a649 a134 
=== Succesors ===
=== Usages ===
v1183 v1184 ?152 ?157 ?635 v1174 v1175 ?197 ?178 v1186 ?184 v1181 v1177 v1179 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v85 values: a649 a134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v84 v86 
=== Succesors ===
next: v916 
=== Usages ===
a863 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v84 v86 #next: v916  <|@  <|@
f <@~|@floating>@ <|@
tid i825 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.isLatin1(AbstractStringBuilder.java:1693) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:834) [bci: 18]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v826 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.isLatin1(AbstractStringBuilder.java:1693) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:834) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1153 
y: i825 
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1153 y: i825  <|@  <|@
f <@*|@fixed>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:834) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v826 
=== Succesors ===
trueSuccessor: v914 
falseSuccessor: v915 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v826 #trueSuccessor: v914 #falseSuccessor: v915  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v146  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:508) [bci: 16]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
profileData: PROFILED designatedSuccessorProbability: 0.023714438988526654
stamp: void
=== Inputs ===
condition: v26 
=== Succesors ===
trueSuccessor: v145 
falseSuccessor: v144 
=== Usages ===
=== Predecessor ===
v914 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v26 #trueSuccessor: v145 #falseSuccessor: v144  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582492443078313792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v148  <|@  <|@
f <@*|@fixed>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
v145 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606968818122833350
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:509) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v150  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
v144 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v149 
values: i2 i30 
=== Succesors ===
=== Usages ===
?152 i865 v611 i616 j951 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v149 values: i2 i30  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v148 v150 
=== Succesors ===
next: i1154 
=== Usages ===
i151 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v148 v150 #next: i1154  <|@  <|@
f <@~|@floating>@ <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a863 
index: - 
=== Succesors ===
=== Usages ===
i1154 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a863 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1154 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 55]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1174 
lastLocationAccess: - 
=== Succesors ===
next: v614 
=== Usages ===
v718 v731 v750 v763 v786 v810 v797 
=== Predecessor ===
v149 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1174 lastLocationAccess: - #next: v614  <|@  <|@
f <@~|@floating>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 25]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i151 
y: i158 
=== Succesors ===
=== Usages ===
v614 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i151 y: i158  <|@  <|@
tid ?215 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
localsSize: 4
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 835
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - - i8 
=== Succesors ===
=== Usages ===
?152 ?157 ?184 ?197 ?178 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - i8  <|@  <|@
f <@~|@floating>@ <|@
tid i143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:507) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
condition: v26 
trueValue: i25 
falseValue: i15 
=== Succesors ===
=== Usages ===
?152 ?157 ?635 ?197 ?178 ?184 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v26 trueValue: i25 falseValue: i15  <|@  <|@
f <@~|@floating>@ <|@
tid a175 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 62]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: byte[100]{48, 48, 48, 48, 48, ...}
stableDimension: 0
stamp: a!# byte[]
stampKind: a java.lang.Object
value: Object[byte[100]{48, 48, 48, 48, 48, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1180 v1185 v1176 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a171 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 49]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: byte[100]{48, 49, 50, 51, 52, ...}
stableDimension: 0
stamp: a!# byte[]
stampKind: a java.lang.Object
value: Object[byte[100]{48, 49, 50, 51, 52, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1178 v1182 v1173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i212 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2]
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i213 i214 i626 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i166 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:514) [bci: 29]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: 100
stableDimension: 0
stamp: i32 [100]
stampKind: i32
value: int[100|0x64]
=== Inputs ===
=== Succesors ===
=== Usages ===
i167 v773 i615 v740 v704 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 25]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
profileData: PROFILED designatedSuccessorProbability: 0.20456323728994374
stamp: void
=== Inputs ===
condition: v611 
=== Succesors ===
trueSuccessor: v613 
falseSuccessor: v612 
=== Usages ===
=== Predecessor ===
i1154 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v611 #trueSuccessor: v613 #falseSuccessor: v612  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B69" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:514) [bci: 28]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v875 
=== Usages ===
=== Predecessor ===
v614 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v875  <|@  <|@
f <@~|@floating>@ <|@
tid j951 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:514) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i151 
=== Succesors ===
=== Usages ===
j952 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i151  <|@  <|@
f <@~|@floating>@ <|@
tid j942 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:514) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: 1374389535
stableDimension: 0
stamp: i64 [1374389535]
stampKind: i64
value: long[1374389535|0x51eb851f]
=== Inputs ===
=== Succesors ===
=== Usages ===
j943 j952 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j952 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:514) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i64 [-2951479052394823680 - 2951479051020434145]
=== Inputs ===
x: j951 
y: j942 
=== Succesors ===
=== Usages ===
j953 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: j951 y: j942  <|@  <|@
f <@~|@floating>@ <|@
tid i944 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:514) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: 37
stableDimension: 0
stamp: i32 [37]
stampKind: i32
value: int[37|0x25]
=== Inputs ===
=== Succesors ===
=== Usages ===
j945 j953 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j953 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:514) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i64 [-21474837 - 21474836]
=== Inputs ===
x: j952 
y: i944 
=== Succesors ===
=== Usages ===
i954 
=== Predecessor ===
- >@ <|@
instruction <@>>|@jdk.graal.compiler.nodes.calc.RightShiftNode>@ x: j952 y: i944  <|@  <|@
f <@~|@floating>@ <|@
tid i954 <|@
d <@d|@=== Debug Properties ===
inputBits: 64
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:514) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
resultBits: 32
stamp: i32 [-21474837 - 21474836]
=== Inputs ===
value: j953 
=== Succesors ===
=== Usages ===
i956 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: j953  <|@  <|@
f <@~|@floating>@ <|@
tid i956 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:514) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32 [-21474836 - 21474837]
=== Inputs ===
x: i954 
y: i25 
=== Succesors ===
=== Usages ===
i638 i615 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i954 y: i25  <|@  <|@
f <@~|@floating>@ <|@
tid i615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:515) [bci: 36]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32 [-2147483648 - 2147483644] bits:x...x00
=== Inputs ===
x: i956 
y: i166 
=== Succesors ===
=== Usages ===
i616 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: i956 y: i166  <|@  <|@
f <@~|@floating>@ <|@
tid i616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:515) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32
=== Inputs ===
x: i615 
y: i151 
=== Succesors ===
=== Usages ===
j827 v704 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i615 y: i151  <|@  <|@
f <@~|@floating>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i616 
y: i166 
=== Succesors ===
=== Usages ===
v875 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i616 y: i166  <|@  <|@
f <@*|@fixed>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v704 
=== Succesors ===
trueSuccessor: v872 
falseSuccessor: v874 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v704 #trueSuccessor: v872 #falseSuccessor: v874  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B68" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v879 
=== Usages ===
=== Predecessor ===
v875 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v879  <|@  <|@
f <@~|@floating>@ <|@
tid i617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 44]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32
=== Inputs ===
x: i8 
y: i169 
=== Succesors ===
=== Usages ===
j828 v718 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i8 y: i169  <|@  <|@
f <@~|@floating>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 55]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i617 
y: i1154 
=== Succesors ===
=== Usages ===
v879 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i617 y: i1154  <|@  <|@
f <@*|@fixed>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 55]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v718 
=== Succesors ===
trueSuccessor: v876 
falseSuccessor: v878 
=== Usages ===
=== Predecessor ===
v872 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v718 #trueSuccessor: v876 #falseSuccessor: v878  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B67" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 55]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v883 
=== Usages ===
v726 
=== Predecessor ===
v879 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v883  <|@  <|@
f <@~|@floating>@ <|@
tid i626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32
=== Inputs ===
x: i8 
y: i212 
=== Succesors ===
=== Usages ===
j829 v731 i639 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i8 y: i212  <|@  <|@
f <@~|@floating>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i626 
y: i1154 
=== Succesors ===
=== Usages ===
v883 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i626 y: i1154  <|@  <|@
f <@*|@fixed>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v731 
=== Succesors ===
trueSuccessor: v880 
falseSuccessor: v882 
=== Usages ===
=== Predecessor ===
v876 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v731 #trueSuccessor: v880 #falseSuccessor: v882  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1155 
=== Usages ===
v739 
=== Predecessor ===
v883 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1155  <|@  <|@
f <@~|@floating>@ <|@
tid j827 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i616 
=== Succesors ===
=== Usages ===
v1176 v1173 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i616  <|@  <|@
f <@~|@floating>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a171 
index: j827 
=== Succesors ===
=== Usages ===
i1155 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a171 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1155 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1173 
lastLocationAccess: - 
=== Succesors ===
next: v726 
=== Usages ===
v726 
=== Predecessor ===
v880 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1173 lastLocationAccess: - #next: v726  <|@  <|@
f <@~|@floating>@ <|@
tid j828 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 55]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i617 
=== Succesors ===
=== Usages ===
v1175 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i617  <|@  <|@
f <@~|@floating>@ <|@
tid v1175 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a863 
index: j828 
=== Succesors ===
=== Usages ===
v726 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a863 index: j828  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 55]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v876 
address: v1175 
lastLocationAccess: - 
value: i1155 
stateAfter: - 
=== Succesors ===
next: i1156 
=== Usages ===
=== Predecessor ===
i1155 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v876 address: v1175 lastLocationAccess: - value: i1155 stateAfter: - #next: i1156  <|@  <|@
f <@~|@floating>@ <|@
tid v1176 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a175 
index: j827 
=== Succesors ===
=== Usages ===
i1156 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a175 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1156 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 67]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1176 
lastLocationAccess: - 
=== Succesors ===
next: v739 
=== Usages ===
v739 
=== Predecessor ===
v726 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1176 lastLocationAccess: - #next: v739  <|@  <|@
f <@~|@floating>@ <|@
tid j829 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i626 
=== Succesors ===
=== Usages ===
v1177 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i626  <|@  <|@
f <@~|@floating>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a863 
index: j829 
=== Succesors ===
=== Usages ===
v739 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a863 index: j829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v880 
address: v1177 
lastLocationAccess: - 
value: i1156 
stateAfter: - 
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
i1156 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v880 address: v1177 lastLocationAccess: - value: i1156 stateAfter: - #next: v153  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
v739 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" 
    successors "B58" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596612633779284459
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v154 
values: i626 i213 
=== Succesors ===
=== Usages ===
?157 i637 i170 i213 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v154 values: i626 i213  <|@  <|@
f <@~|@floating>@ <|@
tid i638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32 [-21474836 - 21474836]
valueDescription: i32
=== Inputs ===
merge: v154 
values: i956 i949 
=== Succesors ===
=== Usages ===
?157 v159 j941 i168 i865 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v154 values: i956 i949  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 19
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v153 
=== Succesors ===
next: v165 
=== Usages ===
i639 i638 v160 v179 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v153 #next: v165  <|@  <|@
f <@~|@floating>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 25]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i638 
y: i158 
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i638 y: i158  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 25]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v159 
=== Succesors ===
trueSuccessor: v164 
falseSuccessor: v160 
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v159 #trueSuccessor: v164 #falseSuccessor: v160  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:514) [bci: 28]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v887 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v887  <|@  <|@
f <@~|@floating>@ <|@
tid j941 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:514) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
resultBits: 64
stamp: i64 [-21474836 - 21474836]
=== Inputs ===
value: i638 
=== Succesors ===
=== Usages ===
j943 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i638  <|@  <|@
f <@~|@floating>@ <|@
tid j943 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:514) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i64 [-29514789864241260 - 29514789864241260]
=== Inputs ===
x: j941 
y: j942 
=== Succesors ===
=== Usages ===
j945 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: j941 y: j942  <|@  <|@
f <@~|@floating>@ <|@
tid j945 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:514) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i64 [-214749 - 214748]
=== Inputs ===
x: j943 
y: i944 
=== Succesors ===
=== Usages ===
i946 
=== Predecessor ===
- >@ <|@
instruction <@>>|@jdk.graal.compiler.nodes.calc.RightShiftNode>@ x: j943 y: i944  <|@  <|@
f <@~|@floating>@ <|@
tid i946 <|@
d <@d|@=== Debug Properties ===
inputBits: 64
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:514) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
resultBits: 32
stamp: i32 [-214749 - 214748]
=== Inputs ===
value: j945 
=== Succesors ===
=== Usages ===
i949 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: j945  <|@  <|@
f <@~|@floating>@ <|@
tid i949 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:514) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32 [-214748 - 214749]
=== Inputs ===
x: i946 
y: i25 
=== Succesors ===
=== Usages ===
?178 i638 i167 ?178 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i946 y: i25  <|@  <|@
f <@~|@floating>@ <|@
tid i167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:515) [bci: 36]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32 [-21474800 - 21474900] bits:x...x00
=== Inputs ===
x: i949 
y: i166 
=== Succesors ===
=== Usages ===
i168 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: i949 y: i166  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:515) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32 [-42949636 - 42949736]
=== Inputs ===
x: i167 
y: i638 
=== Succesors ===
=== Usages ===
j830 ?178 v740 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i167 y: i638  <|@  <|@
f <@~|@floating>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i168 
y: i166 
=== Succesors ===
=== Usages ===
v887 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i168 y: i166  <|@  <|@
f <@*|@fixed>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v740 
=== Succesors ===
trueSuccessor: v884 
falseSuccessor: v886 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v740 #trueSuccessor: v884 #falseSuccessor: v886  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v891 
=== Usages ===
=== Predecessor ===
v887 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v891  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 44]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32
=== Inputs ===
x: i639 
y: i169 
=== Succesors ===
=== Usages ===
j831 v750 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i639 y: i169  <|@  <|@
f <@~|@floating>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 55]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i170 
y: i1154 
=== Succesors ===
=== Usages ===
v891 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i170 y: i1154  <|@  <|@
f <@*|@fixed>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 55]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v750 
=== Succesors ===
trueSuccessor: v888 
falseSuccessor: v890 
=== Usages ===
=== Predecessor ===
v884 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v750 #trueSuccessor: v888 #falseSuccessor: v890  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 55]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v895 
=== Usages ===
v758 
=== Predecessor ===
v891 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v895  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32
=== Inputs ===
x: i639 
y: i212 
=== Succesors ===
=== Usages ===
i639 j832 ?178 v763 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i639 y: i212  <|@  <|@
f <@~|@floating>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i213 
y: i1154 
=== Succesors ===
=== Usages ===
v895 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i213 y: i1154  <|@  <|@
f <@*|@fixed>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v763 
=== Succesors ===
trueSuccessor: v892 
falseSuccessor: v894 
=== Usages ===
=== Predecessor ===
v888 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v763 #trueSuccessor: v892 #falseSuccessor: v894  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1157 
=== Usages ===
v771 
=== Predecessor ===
v895 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1157  <|@  <|@
f <@~|@floating>@ <|@
tid j830 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i168 
=== Succesors ===
=== Usages ===
v1180 v1178 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i168  <|@  <|@
f <@~|@floating>@ <|@
tid v1178 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a171 
index: j830 
=== Succesors ===
=== Usages ===
i1157 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a171 index: j830  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1157 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1178 
lastLocationAccess: - 
=== Succesors ===
next: v758 
=== Usages ===
v758 
=== Predecessor ===
v892 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1178 lastLocationAccess: - #next: v758  <|@  <|@
f <@~|@floating>@ <|@
tid j831 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 55]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i170 
=== Succesors ===
=== Usages ===
v1179 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i170  <|@  <|@
f <@~|@floating>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a863 
index: j831 
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a863 index: j831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 55]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v888 
address: v1179 
lastLocationAccess: - 
value: i1157 
stateAfter: - 
=== Succesors ===
next: i1158 
=== Usages ===
=== Predecessor ===
i1157 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v888 address: v1179 lastLocationAccess: - value: i1157 stateAfter: - #next: i1158  <|@  <|@
f <@~|@floating>@ <|@
tid v1180 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a175 
index: j830 
=== Succesors ===
=== Usages ===
i1158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a175 index: j830  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1158 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 67]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1180 
lastLocationAccess: - 
=== Succesors ===
next: v771 
=== Usages ===
v771 
=== Predecessor ===
v758 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1180 lastLocationAccess: - #next: v771  <|@  <|@
f <@~|@floating>@ <|@
tid j832 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i213 
=== Succesors ===
=== Usages ===
v1181 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i213  <|@  <|@
f <@~|@floating>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a863 
index: j832 
=== Succesors ===
=== Usages ===
v771 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a863 index: j832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v892 
address: v1181 
lastLocationAccess: - 
value: i1158 
stateAfter: - 
=== Succesors ===
next: v912 
=== Usages ===
=== Predecessor ===
i1158 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v892 address: v1181 lastLocationAccess: - value: i1158 stateAfter: - #next: v912  <|@  <|@
tid ?178 <|@
d <@d|@=== Debug Properties ===
bci: 69
bytecode: goto
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, byte[])>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
sourceFile: Integer.java
sourceLine: 518
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?215 
values: i949 - a863 i949 i168 i213 i143 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?215 values: i949 - a863 i949 i168 i213 i143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
stateBefore: ?178 
=== Succesors ===
next: v179 
=== Usages ===
=== Predecessor ===
v771 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?178 #next: v179  <|@  <|@
f <@*|@fixed>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
loopBegin: v154 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v912 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v154  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 4596538187644396969
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 72]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v154 
=== Succesors ===
next: v630 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v154 #next: v630  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 72]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
v160 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v990 
=== Usages ===
=== Predecessor ===
v895 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v990  <|@  <|@
f <@~|@floating>@ <|@
tid i991 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: -195611
stableDimension: 0
stamp: i32 [-195611]
stampKind: i32
value: int[-195611|0xfffffffffffd03e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i985 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v982 
=== Predecessor ===
v894 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 55]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v988 
=== Usages ===
=== Predecessor ===
v891 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v988  <|@  <|@
f <@~|@floating>@ <|@
tid i989 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: -192283
stableDimension: 0
stamp: i32 [-192283]
stampKind: i32
value: int[-192283|0xfffffffffffd10e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i985 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v982 
=== Predecessor ===
v890 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v983 
=== Usages ===
=== Predecessor ===
v887 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v983  <|@  <|@
f <@~|@floating>@ <|@
tid i984 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: -189723
stableDimension: 0
stamp: i32 [-189723]
stampKind: i32
value: int[-189723|0xfffffffffffd1ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i985 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v982 
=== Predecessor ===
v886 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i985 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32 [-195611 - -189723] bits:1...101000xx0xx11100101
valueDescription: i32
=== Inputs ===
merge: v982 
values: i984 i989 i991 
=== Succesors ===
=== Usages ===
v987 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v982 values: i984 i989 i991  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v983 v988 v990 
=== Succesors ===
next: v987 
=== Usages ===
i985 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v983 v988 v990 #next: v987  <|@  <|@
tid ?157 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: iload_0
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, byte[])>
localsSize: 7
locksSize: 0
sourceFile: Integer.java
sourceLine: 513
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?215 
values: i638 - a863 - - i639 i143 
=== Succesors ===
=== Usages ===
v987 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?215 values: i638 - a863 - - i639 i143  <|@  <|@
f <@*|@fixed>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
stateBefore: ?157 
actionAndReason: i985 
speculation: j967 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v982 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?157 actionAndReason: i985 speculation: j967  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v980 
=== Usages ===
=== Predecessor ===
v883 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v980  <|@  <|@
f <@~|@floating>@ <|@
tid i981 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: -187419
stableDimension: 0
stamp: i32 [-187419]
stampKind: i32
value: int[-187419|0xfffffffffffd23e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i975 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v972 
=== Predecessor ===
v882 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 55]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v978 
=== Usages ===
=== Predecessor ===
v879 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v978  <|@  <|@
f <@~|@floating>@ <|@
tid i979 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: -184091
stableDimension: 0
stamp: i32 [-184091]
stampKind: i32
value: int[-184091|0xfffffffffffd30e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i975 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v972 
=== Predecessor ===
v878 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v973 
=== Usages ===
=== Predecessor ===
v875 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v973  <|@  <|@
f <@~|@floating>@ <|@
tid i974 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: -180507
stableDimension: 0
stamp: i32 [-180507]
stampKind: i32
value: int[-180507|0xfffffffffffd3ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i975 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v972 
=== Predecessor ===
v874 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i975 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32 [-187419 - -180507] bits:1...101001xxxxx11100101
valueDescription: i32
=== Inputs ===
merge: v972 
values: i974 i979 i981 
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v972 values: i974 i979 i981  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v973 v978 v980 
=== Succesors ===
next: v977 
=== Usages ===
i975 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v973 v978 v980 #next: v977  <|@  <|@
tid ?152 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: iload_0
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, byte[])>
localsSize: 7
locksSize: 0
sourceFile: Integer.java
sourceLine: 513
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?215 
values: i151 - a863 - - i8 i143 
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?215 values: i151 - a863 - - i8 i143  <|@  <|@
f <@*|@fixed>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
stateBefore: ?152 
actionAndReason: i975 
speculation: j967 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v972 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?152 actionAndReason: i975 speculation: j967  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605339876961552022
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 72]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v631 
=== Usages ===
=== Predecessor ===
v614 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v631  <|@  <|@
f <@*|@fixed>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 72]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
v612 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B62" "B71" 
    successors "B73" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i865 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 72]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32 [-21474836 - 2147483647]
valueDescription: i32
=== Inputs ===
merge: v629 
values: i638 i151 
=== Succesors ===
=== Usages ===
?635 i181 ?184 v186 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v629 values: i638 i151  <|@  <|@
f <@~|@floating>@ <|@
tid i637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 72]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v629 
values: i639 i8 
=== Succesors ===
=== Usages ===
?635 i180 i214 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v629 values: i639 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 72]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v630 v631 
=== Succesors ===
next: v899 
=== Usages ===
i865 i637 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v630 v631 #next: v899  <|@  <|@
f <@~|@floating>@ <|@
tid i181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 82]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32 [-2147483647 - 21474836]
=== Inputs ===
value: i865 
=== Succesors ===
=== Usages ===
j833 v773 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@jdk.graal.compiler.nodes.calc.NegateNode>@ value: i865  <|@  <|@
f <@~|@floating>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 83]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i181 
y: i166 
=== Succesors ===
=== Usages ===
v899 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i181 y: i166  <|@  <|@
f <@*|@fixed>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 83]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v773 
=== Succesors ===
trueSuccessor: v896 
falseSuccessor: v898 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v773 #trueSuccessor: v896 #falseSuccessor: v898  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 83]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v903 
=== Usages ===
=== Predecessor ===
v899 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v903  <|@  <|@
f <@~|@floating>@ <|@
tid i180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 73]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32
=== Inputs ===
x: i637 
y: i169 
=== Succesors ===
=== Usages ===
j834 ?184 i196 v786 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i637 y: i169  <|@  <|@
f <@~|@floating>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 84]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i180 
y: i1154 
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i180 y: i1154  <|@  <|@
f <@*|@fixed>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 84]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v786 
=== Succesors ===
trueSuccessor: v900 
falseSuccessor: v902 
=== Usages ===
=== Predecessor ===
v896 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v786 #trueSuccessor: v900 #falseSuccessor: v902  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 84]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1159 
=== Usages ===
v794 
=== Predecessor ===
v903 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1159  <|@  <|@
f <@~|@floating>@ <|@
tid j833 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 83]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i181 
=== Succesors ===
=== Usages ===
v1185 v1182 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i181  <|@  <|@
f <@~|@floating>@ <|@
tid v1182 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a171 
index: j833 
=== Succesors ===
=== Usages ===
i1159 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a171 index: j833  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1159 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 83]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1182 
lastLocationAccess: - 
=== Succesors ===
next: v794 
=== Usages ===
v794 
=== Predecessor ===
v900 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1182 lastLocationAccess: - #next: v794  <|@  <|@
f <@~|@floating>@ <|@
tid j834 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 84]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i180 
=== Succesors ===
=== Usages ===
v1183 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i180  <|@  <|@
f <@~|@floating>@ <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a863 
index: j834 
=== Succesors ===
=== Usages ===
v794 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a863 index: j834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 84]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v900 
address: v1183 
lastLocationAccess: - 
value: i1159 
stateAfter: - 
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
i1159 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v900 address: v1183 lastLocationAccess: - value: i1159 stateAfter: - #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:523) [bci: 88]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i865 
y: i185 
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i865 y: i185  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:523) [bci: 88]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
profileData: PROFILED designatedSuccessorProbability: 0.6223590908157148
stamp: void
=== Inputs ===
condition: v186 
=== Succesors ===
trueSuccessor: v188 
falseSuccessor: v187 
=== Usages ===
=== Predecessor ===
v794 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v186 #trueSuccessor: v188 #falseSuccessor: v187  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:524) [bci: 91]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v907 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v907  <|@  <|@
f <@~|@floating>@ <|@
tid i214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:524) [bci: 92]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32
=== Inputs ===
x: i637 
y: i212 
=== Succesors ===
=== Usages ===
j837 v810 i196 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i637 y: i212  <|@  <|@
f <@~|@floating>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:524) [bci: 103]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i214 
y: i1154 
=== Succesors ===
=== Usages ===
v907 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i214 y: i1154  <|@  <|@
f <@*|@fixed>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:524) [bci: 103]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v810 
=== Succesors ===
trueSuccessor: v904 
falseSuccessor: v906 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v810 #trueSuccessor: v904 #falseSuccessor: v906  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:524) [bci: 103]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1160 
=== Usages ===
v818 
=== Predecessor ===
v907 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1160  <|@  <|@
f <@~|@floating>@ <|@
tid v1185 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a175 
index: j833 
=== Succesors ===
=== Usages ===
i1160 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a175 index: j833  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1160 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:524) [bci: 102]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1185 
lastLocationAccess: - 
=== Succesors ===
next: v818 
=== Usages ===
v818 
=== Predecessor ===
v904 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1185 lastLocationAccess: - #next: v818  <|@  <|@
f <@~|@floating>@ <|@
tid j837 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:524) [bci: 103]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i214 
=== Succesors ===
=== Usages ===
v1186 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i214  <|@  <|@
f <@~|@floating>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a863 
index: j837 
=== Succesors ===
=== Usages ===
v818 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a863 index: j837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:524) [bci: 103]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v904 
address: v1186 
lastLocationAccess: - 
value: i1160 
stateAfter: - 
=== Succesors ===
next: v195 
=== Usages ===
=== Predecessor ===
i1160 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v904 address: v1186 lastLocationAccess: - value: i1160 stateAfter: - #next: v195  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:527) [bci: 104]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
v818 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:524) [bci: 103]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v905 
=== Usages ===
=== Predecessor ===
v907 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v905  <|@  <|@
tid ?184 <|@
d <@d|@=== Debug Properties ===
bci: 85
bytecode: iload_0
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, byte[])>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 84]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
sourceFile: Integer.java
sourceLine: 523
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?215 
values: i865 - a863 - - i180 i143 
=== Succesors ===
=== Usages ===
v905 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?215 values: i865 - a863 - - i180 i143  <|@  <|@
f <@*|@fixed>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 811
mayConvertToGuard: true
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:524) [bci: 103]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?184 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v906 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?184  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600474593749434728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:527) [bci: 104]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v193  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:527) [bci: 104]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
v187 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:527) [bci: 104]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v194 
values: i180 i214 
=== Succesors ===
=== Usages ===
?197 i201 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v194 values: i180 i214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:527) [bci: 104]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v193 v195 
=== Succesors ===
next: v200 
=== Usages ===
i196 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v193 v195 #next: v200  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:527) [bci: 106]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
profileData: PROFILED designatedSuccessorProbability: 0.023714554158984935
stamp: void
=== Inputs ===
condition: v26 
=== Succesors ===
trueSuccessor: v199 
falseSuccessor: v198 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v26 #trueSuccessor: v199 #falseSuccessor: v198  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:528) [bci: 109]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v911 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v911  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:528) [bci: 110]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32
=== Inputs ===
x: i196 
y: i169 
=== Succesors ===
=== Usages ===
j835 v797 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i196 y: i169  <|@  <|@
f <@~|@floating>@ <|@
tid v797 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:528) [bci: 117]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i201 
y: i1154 
=== Succesors ===
=== Usages ===
v911 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i201 y: i1154  <|@  <|@
f <@*|@fixed>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:528) [bci: 117]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v797 
=== Succesors ===
trueSuccessor: v908 
falseSuccessor: v910 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v797 #trueSuccessor: v908 #falseSuccessor: v910  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:528) [bci: 117]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v805 
=== Usages ===
v805 
=== Predecessor ===
v911 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v805  <|@  <|@
f <@~|@floating>@ <|@
tid j835 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:528) [bci: 117]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i201 
=== Succesors ===
=== Usages ===
v1184 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i201  <|@  <|@
f <@~|@floating>@ <|@
tid v1184 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a863 
index: j835 
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a863 index: j835  <|@  <|@
f <@~|@floating>@ <|@
tid i836 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:528) [bci: 117]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: 45
stableDimension: 0
stamp: i8 [45]
stampKind: i8
value: byte[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:528) [bci: 117]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v908 
address: v1184 
lastLocationAccess: - 
value: i836 
stateAfter: - 
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v908 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v908 address: v1184 lastLocationAccess: - value: i836 stateAfter: - #next: v207  <|@  <|@
f <@*|@fixed>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:530) [bci: 118]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
v805 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:528) [bci: 117]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v909 
=== Usages ===
=== Predecessor ===
v911 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v909  <|@  <|@
tid ?197 <|@
d <@d|@=== Debug Properties ===
bci: 104
bytecode: iload
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, byte[])>
localsSize: 7
locksSize: 0
sourceFile: Integer.java
sourceLine: 527
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?215 
values: - - a863 - - i196 i143 
=== Succesors ===
=== Usages ===
v909 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?215 values: - - a863 - - i196 i143  <|@  <|@
f <@*|@fixed>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 798
mayConvertToGuard: true
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:528) [bci: 117]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?197 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v910 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?197  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606968817085470084
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:530) [bci: 118]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v205  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:530) [bci: 118]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
v198 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:530) [bci: 118]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v205 v207 
=== Succesors ===
next: v795 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v205 v207 #next: v795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.count
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:839) [bci: 50]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1169 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1169 lastLocationAccess: - value: i8 stateAfter: - #next: v24  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:840) [bci: 54]
stamp: void
=== Inputs ===
memoryMap: - 
result: a1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v795 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a1  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 84]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v998 
=== Usages ===
=== Predecessor ===
v903 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v998  <|@  <|@
f <@~|@floating>@ <|@
tid i999 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 83]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: -201499
stableDimension: 0
stamp: i32 [-201499]
stampKind: i32
value: int[-201499|0xfffffffffffcece5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i995 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 83]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v992 
=== Predecessor ===
v902 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 83]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v993 
=== Usages ===
=== Predecessor ===
v899 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v993  <|@  <|@
f <@~|@floating>@ <|@
tid i994 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 83]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: -198171
stableDimension: 0
stamp: i32 [-198171]
stampKind: i32
value: int[-198171|0xfffffffffffcf9e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i995 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 83]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v992 
=== Predecessor ===
v898 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i995 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 83]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32 [-201499 - -198171] bits:1...100111x1x0x11100101
valueDescription: i32
=== Inputs ===
merge: v992 
values: i994 i999 
=== Succesors ===
=== Usages ===
v997 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v992 values: i994 i999  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 83]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v993 v998 
=== Succesors ===
next: v997 
=== Usages ===
i995 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v993 v998 #next: v997  <|@  <|@
tid ?634 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
localsSize: 4
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 835
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - - i8 
=== Succesors ===
=== Usages ===
?635 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - i8  <|@  <|@
tid ?635 <|@
d <@d|@=== Debug Properties ===
bci: 72
bytecode: aload_2
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, byte[])>
localsSize: 7
locksSize: 0
sourceFile: Integer.java
sourceLine: 522
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?634 
values: i865 - a863 - - i637 i143 
=== Succesors ===
=== Usages ===
v997 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?634 values: i865 - a863 - - i637 i143  <|@  <|@
f <@*|@fixed>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 83]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
stateBefore: ?635 
actionAndReason: i995 
speculation: j967 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v992 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?635 actionAndReason: i995 speculation: j967  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:834) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v913 
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v913  <|@  <|@
tid ?136 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
localsSize: 4
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 833
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 i1152 i8 
=== Succesors ===
=== Usages ===
?87 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i1152 i8  <|@  <|@
tid ?87 <|@
d <@d|@=== Debug Properties ===
bci: 38
bytecode: return
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 245
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?136 
=== Succesors ===
=== Usages ===
v913 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?136  <|@  <|@
f <@*|@fixed>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:834) [bci: 21]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x81281491]: UnreachedCode@6[HotSpotMethod<AbstractStringBuilder.append(int)>, 37]}
stamp: void
=== Inputs ===
stateBefore: ?87 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v915 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?87  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v959 
=== Usages ===
=== Predecessor ===
v925 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v959  <|@  <|@
f <@~|@floating>@ <|@
tid j961 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i960 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: -236051
stableDimension: 0
stamp: i32 [-236051]
stampKind: i32
value: int[-236051|0xfffffffffffc65ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i962 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v958 
=== Predecessor ===
v924 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B41" "B43" "B45" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i962 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i32 [-239129 - -236051] bits:1...10001xxxx011110x1x1
valueDescription: i32
=== Inputs ===
merge: v958 
values: i960 i966 i969 i971 
=== Succesors ===
=== Usages ===
v964 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v958 values: i960 i966 i969 i971  <|@  <|@
f <@~|@floating>@ <|@
tid j963 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64 [0 - 1300] bits:0...0x0x000x0x00
valueDescription: i64
=== Inputs ===
merge: v958 
values: j961 j967 j967 j967 
=== Succesors ===
=== Usages ===
v964 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v958 values: j961 j967 j967 j967  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v959 v965 v968 v970 
=== Succesors ===
next: v964 
=== Usages ===
i962 j963 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v959 v965 v968 v970 #next: v964  <|@  <|@
f <@*|@fixed>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
stateBefore: ?7 
actionAndReason: i962 
speculation: j963 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v958 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?7 actionAndReason: i962 speculation: j963  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@11fbf5cf slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = NEG value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0248451913249636 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606958633211231298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|DWORD, int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v5|DWORD, v6|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B21 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B20" 
    xhandlers
    flags 
    probability 4602752168055621283
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B20 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B19" 
    xhandlers
    flags 
    probability 4598323111924218927
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B19 y: -999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B18" 
    xhandlers
    flags 
    probability 4593895269862142147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B18 y: -9999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" 
    xhandlers
    flags 
    probability 4589468661642602652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B17 y: -99999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4585043307360852988
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B16 y: -999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4580619227439431527
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B15 y: -9999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4576196442633492882
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 y: -99999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4571774974036225136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: -999999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4567354843084355297
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = LEA address: [v6|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B12 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602532121406698170
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598172830319288879
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[2|0x2]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593743754731554715
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[3|0x3]] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589314678826940650
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[4|0x4]] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4584886816669611324
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[5|0x5]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4582818360249579440
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD, int[1|0x1]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580460188027533457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[6|0x6]] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576034812990629180
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[7|0x7]] destination: B15 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571610711976019636
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[8|0x8]] destination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567187905733353983
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[9|0x9]] destination: B13 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B13" "B21" "B20" "B19" "B18" "B17" "B16" "B15" "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607162073407212554
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = ADD (x: v8|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B12" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVSXB value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v13|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" "B47" 
    successors "B49" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.023714438988526654 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606968818122833350
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|DWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOV input: [v62|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 49, 50, 51, 52, ...}] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v63|DWORD trueDestinationProbability: 0.20456323728994374 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B71 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605339876961552022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|DWORD, v13|DWORD] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B69" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOVSXD value: v63|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = IMUL x: v68|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = SAR x: v69|QWORD y: 37 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV value: v70|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = IMUL x: v72|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = SUB (x: v73|DWORD, ~y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v74|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B69 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B68" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = DEC value: v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v75|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B67" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = LEA address: [v13|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v76|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = MOVSXB input: [v67|QWORD[.] + v74|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v75|DWORD * 1 + 16], y: v77|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVSXB input: [v66|QWORD[.] + v74|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v76|DWORD * 1 + 16], y: v78|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v76|DWORD, v72|DWORD] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" 
    successors "B58" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596612633779284459
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|DWORD, v80|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v80|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B62 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOVSXD value: v80|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = IMUL x: v81|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = SAR x: v82|QWORD y: 37 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOV value: v83|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = INC value: v84|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = IMUL x: v85|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = SUB (x: v86|DWORD, ~y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v87|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B65 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = DEC value: v79|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v88|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = LEA address: [v79|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v89|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = MOVSXB input: [v67|QWORD[.] + v87|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v88|DWORD * 1 + 16], y: v90|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVSXB input: [v66|QWORD[.] + v87|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v89|DWORD * 1 + 16], y: v91|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:518) [bci: 69]
locals: v85|DWORD - v62|QWORD[.] v85|DWORD v87|DWORD v89|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction SAFEPOINT temp: v92|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:69, 30] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v89|DWORD, v85|DWORD] destination: B61 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 4596538187644396969
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v80|DWORD, v79|DWORD] destination: B62 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B62" "B71" 
    successors "B73" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v95|DWORD, v96|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = NEG value: v95|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v97|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B86 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = DEC value: v96|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v98|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B85 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVSXB input: [v67|QWORD[.] + v97|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v98|DWORD * 1 + 16], y: v99|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v95|DWORD trueDestinationProbability: 0.6223590908157148 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B78 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = LEA address: [v96|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v100|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = MOVSXB input: [v66|QWORD[.] + v97|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v100|DWORD * 1 + 16], y: v101|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v100|DWORD] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600474593749434728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v98|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.023714554158984935 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606968817085470084
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B89" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SHL (x: v13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SUB (x: v18|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = ADD (x: v20|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = CMOVE (falseValue: v19|DWORD, ~trueValue: v22|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = ADD (x: v23|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v25|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B89 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B31" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SAR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SHL (x: v26|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v27|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B38" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD + 12], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v46|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v47|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD + v47|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA address: [v47|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|QWORD] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B32" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B30" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v57|QWORD, temp2: v58|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = COMPRESSPOINTER (input: v56|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v59|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v56|QWORD[.]) {temp: v60|QWORD, temp2: v61|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v56|QWORD[.]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = DEC value: v102|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v103|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v62|QWORD[.] + v103|DWORD * 1 + 16] y: 45 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582492443078313792
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction NULLCHECK address: [v45|QWORD[.]] state [bci:10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v40|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -204315 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:527) [bci: 104]
locals: - - v62|QWORD[.] - - v102|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:104, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-237081|0xfffffffffffc61e7], long[0|0x0]] destination: B41 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-189723|0xfffffffffffd1ae5]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-195611|0xfffffffffffd03e5]] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -233747 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
locals: v0|QWORD[.] v1|DWORD v11|DWORD v13|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-236051|0xfffffffffffc65ed], long[1300|0x514]] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-187419|0xfffffffffffd23e5]] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-238105|0xfffffffffffc5de7], long[0|0x0]] destination: B43 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-198171|0xfffffffffffcf9e5]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-180507|0xfffffffffffd3ee5]] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -207643 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:523) [bci: 85]
locals: v95|DWORD - v62|QWORD[.] - - v98|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:85, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-192283|0xfffffffffffd10e5]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: v80|DWORD - v62|QWORD[.] - - v79|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-201499|0xfffffffffffcece5]] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:522) [bci: 72]
locals: v95|DWORD - v62|QWORD[.] - - v96|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:72, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-239129|0xfffffffffffc59e7], long[0|0x0]] destination: B45 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B41" "B43" "B45" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v105|DWORD, v106|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v106|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-184091|0xfffffffffffd30e5]] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: v63|DWORD - v62|QWORD[.] - - v13|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #18         // count:int
     4: istore_2      
     5: iload_2       
     6: iload_1       
     7: invokestatic  #61         // java.lang.Integer.stringSize:(int)int
    10: iadd          
    11: istore_3      
    12: aload_0       
    13: iload_3       
    14: invokevirtual #24         // ensureCapacityInternal:(int)void
    17: aload_0       
    18: invokevirtual #19         // isLatin1:()boolean
    21: ifeq          37
    24: iload_1       
    25: iload_3       
    26: aload_0       
    27: getfield      #2          // value:byte[]
    30: invokestatic  #62         // java.lang.Integer.getChars:(int, int, byte[])int
    33: pop           
    34: goto          48
    37: iload_1       
    38: iload_2       
    39: iload_3       
    40: aload_0       
    41: getfield      #2          // value:byte[]
    44: invokestatic  #63         // java.lang.StringUTF16.getChars:(int, int, int, byte[])int
    47: pop           
    48: aload_0       
    49: iload_3       
    50: putfield      #18         // count:int
    53: aload_0       
    54: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1150 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a1150  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.lang.AbstractStringBuilder
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v1169 ?7 v1171 ?136 v1170 v24 ?634 ?215 v1002 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1170 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1150 v701 v1000 v1002 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1150 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1170 
lastLocationAccess: - 
=== Succesors ===
next: i1151 
=== Usages ===
a649 v1172 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1170 lastLocationAccess: - #next: i1151  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i30 ?7 ?136 i34 i151 v26 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
localsSize: 4
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 831
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
i1151 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v1172 <|@
result [v2|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1150 
=== Succesors ===
=== Usages ===
i1151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1151 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-166667|0xfffffffffffd74f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 134]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v1172 
lastLocationAccess: - 
=== Succesors ===
next: v29 
=== Usages ===
v838 v1050 j1068 i73 i93 i96 i102 v111 v128 i129 a1020 
=== Predecessor ===
a1150 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v1172 lastLocationAccess: - #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:545) [bci: 0]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i35 i238 i143 v75 i956 i949 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:548) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: i32
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
i34 i151 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@jdk.graal.compiler.nodes.calc.NegateNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:834) [bci: 21]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v679 v26 i35 i143 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:546) [bci: 3]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i15 
=== Succesors ===
=== Usages ===
v29 i143 v146 v200 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:546) [bci: 3]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.0248451913249636
stamp: void
=== Inputs ===
condition: v26 
=== Succesors ===
trueSuccessor: v28 
falseSuccessor: v27 
=== Usages ===
=== Predecessor ===
i1151 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v26 #trueSuccessor: v28 #falseSuccessor: v27  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@11fbf5cf slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = NEG value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0248451913249636 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4582818360249579440
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:550) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:550) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
v28 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD, int[1|0x1]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606958633211231298
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:547) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v33  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:550) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
v27 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|DWORD, int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i34 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:550) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v32 
values: i2 i30 
=== Succesors ===
=== Usages ===
v480 v558 v519 v249 v286 v324 v363 v402 v441 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v32 values: i2 i30  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:550) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v32 
values: i25 i15 
=== Succesors ===
=== Usages ===
i57 i59 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v32 values: i25 i15  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:550) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v31 v33 
=== Succesors ===
next: v224 
=== Usages ===
i34 i35 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v31 v33 #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid i185 <|@
result int[-9|0xfffffffffffffff7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:523) [bci: 86]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: -9
stableDimension: 0
stamp: i32 [-9]
stampKind: i32
value: int[-9|0xfffffffffffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
v186 v249 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i185 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i34 y: i185  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 22]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i95 i238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i158 <|@
result int[-99|0xffffffffffffff9d] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 25]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: -99
stableDimension: 0
stamp: i32 [-99]
stampKind: i32
value: int[-99|0xffffffffffffff9d]
=== Inputs ===
=== Succesors ===
=== Usages ===
v159 v286 v611 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.5081433618708683
stamp: void
=== Inputs ===
condition: v249 
=== Succesors ===
trueSuccessor: v222 
falseSuccessor: v223 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v249 #trueSuccessor: v222 #falseSuccessor: v223  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v5|DWORD, v6|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B21 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B20" 
    xhandlers
    flags 
    probability 4602752168055621283
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:554) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v262  <|@  <|@
f <@~|@floating>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i158 
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i34 y: i158  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.5081433618708683
stamp: void
=== Inputs ===
condition: v286 
=== Succesors ===
trueSuccessor: v260 
falseSuccessor: v261 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v286 #trueSuccessor: v260 #falseSuccessor: v261  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B20 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B19" 
    xhandlers
    flags 
    probability 4598323111924218927
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:554) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v299  <|@  <|@
f <@~|@floating>@ <|@
tid i323 <|@
result int[-999|0xfffffffffffffc19] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: -999
stableDimension: 0
stamp: i32 [-999]
stampKind: i32
value: int[-999|0xfffffffffffffc19]
=== Inputs ===
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i323 
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i34 y: i323  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.5081433618708683
stamp: void
=== Inputs ===
condition: v324 
=== Succesors ===
trueSuccessor: v297 
falseSuccessor: v298 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v324 #trueSuccessor: v297 #falseSuccessor: v298  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B19 y: -999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B18" 
    xhandlers
    flags 
    probability 4593895269862142147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:554) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v338 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v338  <|@  <|@
f <@~|@floating>@ <|@
tid i362 <|@
result int[-9999|0xffffffffffffd8f1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: -9999
stableDimension: 0
stamp: i32 [-9999]
stampKind: i32
value: int[-9999|0xffffffffffffd8f1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v363 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i362 
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i34 y: i362  <|@  <|@
f <@*|@fixed>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.5081433618708683
stamp: void
=== Inputs ===
condition: v363 
=== Succesors ===
trueSuccessor: v336 
falseSuccessor: v337 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v363 #trueSuccessor: v336 #falseSuccessor: v337  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B18 y: -9999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" 
    xhandlers
    flags 
    probability 4589468661642602652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:554) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v377 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v377  <|@  <|@
f <@~|@floating>@ <|@
tid i401 <|@
result int[-99999|0xfffffffffffe7961] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: -99999
stableDimension: 0
stamp: i32 [-99999]
stampKind: i32
value: int[-99999|0xfffffffffffe7961]
=== Inputs ===
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i401 
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i34 y: i401  <|@  <|@
f <@*|@fixed>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.5081433618708683
stamp: void
=== Inputs ===
condition: v402 
=== Succesors ===
trueSuccessor: v375 
falseSuccessor: v376 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v402 #trueSuccessor: v375 #falseSuccessor: v376  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B17 y: -99999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4585043307360852988
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:554) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v416 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid i440 <|@
result int[-999999|0xfffffffffff0bdc1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: -999999
stableDimension: 0
stamp: i32 [-999999]
stampKind: i32
value: int[-999999|0xfffffffffff0bdc1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i440 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i34 y: i440  <|@  <|@
f <@*|@fixed>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.5081433618708683
stamp: void
=== Inputs ===
condition: v441 
=== Succesors ===
trueSuccessor: v414 
falseSuccessor: v415 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v441 #trueSuccessor: v414 #falseSuccessor: v415  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B16 y: -999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4580619227439431527
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:554) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
f <@~|@floating>@ <|@
tid i479 <|@
result int[-9999999|0xffffffffff676981] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: -9999999
stableDimension: 0
stamp: i32 [-9999999]
stampKind: i32
value: int[-9999999|0xffffffffff676981]
=== Inputs ===
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i479 
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i34 y: i479  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.5081433618708683
stamp: void
=== Inputs ===
condition: v480 
=== Succesors ===
trueSuccessor: v453 
falseSuccessor: v454 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v480 #trueSuccessor: v453 #falseSuccessor: v454  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B15 y: -9999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4576196442633492882
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:554) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v494 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid i518 <|@
result int[-99999999|0xfffffffffa0a1f01] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: -99999999
stableDimension: 0
stamp: i32 [-99999999]
stampKind: i32
value: int[-99999999|0xfffffffffa0a1f01]
=== Inputs ===
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i518 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i34 y: i518  <|@  <|@
f <@*|@fixed>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.5081433618708683
stamp: void
=== Inputs ===
condition: v519 
=== Succesors ===
trueSuccessor: v492 
falseSuccessor: v493 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v519 #trueSuccessor: v492 #falseSuccessor: v493  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 y: -99999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4571774974036225136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:554) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v533  <|@  <|@
f <@~|@floating>@ <|@
tid i557 <|@
result int[-999999999|0xffffffffc4653601] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: -999999999
stableDimension: 0
stamp: i32 [-999999999]
stampKind: i32
value: int[-999999999|0xffffffffc4653601]
=== Inputs ===
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i34 
y: i557 
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i34 y: i557  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:552) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.5081433618708683
stamp: void
=== Inputs ===
condition: v558 
=== Succesors ===
trueSuccessor: v531 
falseSuccessor: v532 
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v558 #trueSuccessor: v531 #falseSuccessor: v532  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: -999999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4567354843084355297
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:554) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
v533 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v69  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:551) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: 10
stableDimension: 0
stamp: i32 [10]
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
i59 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:556) [bci: 45]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: i32 [10 - 11] bits:0...0101x
=== Inputs ===
x: i35 
y: i43 
=== Succesors ===
=== Usages ===
i68 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i35 y: i43  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
v531 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = LEA address: [v6|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B12 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567187905733353983
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
v533 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid i521 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:551) [bci: 36]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: 9
stableDimension: 0
stamp: i32 [9]
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
i238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
v532 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[9|0x9]] destination: B13 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571610711976019636
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v609 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v609  <|@  <|@
f <@~|@floating>@ <|@
tid i482 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:551) [bci: 36]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
v493 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[8|0x8]] destination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576034812990629180
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v608 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v608  <|@  <|@
f <@~|@floating>@ <|@
tid i443 <|@
result int[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:551) [bci: 36]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: 7
stableDimension: 0
stamp: i32 [7]
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
v454 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[7|0x7]] destination: B15 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580460188027533457
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v607  <|@  <|@
f <@~|@floating>@ <|@
tid i404 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:551) [bci: 36]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: 6
stableDimension: 0
stamp: i32 [6]
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
v415 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[6|0x6]] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4584886816669611324
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v606 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v606  <|@  <|@
f <@~|@floating>@ <|@
tid i365 <|@
result int[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:551) [bci: 36]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: 5
stableDimension: 0
stamp: i32 [5]
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
v376 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[5|0x5]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589314678826940650
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v605 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v605  <|@  <|@
f <@~|@floating>@ <|@
tid i326 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:551) [bci: 36]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: 4
stableDimension: 0
stamp: i32 [4]
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
v337 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[4|0x4]] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593743754731554715
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v604 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v604  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:554) [bci: 34]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
v298 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[3|0x3]] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598172830319288879
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v603 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v603  <|@  <|@
f <@*|@fixed>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
v261 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[2|0x2]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602532121406698170
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v233 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v233  <|@  <|@
f <@*|@fixed>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
v223 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B13" "B21" "B20" "B19" "B18" "B17" "B16" "B15" "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607162073407212554
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i238 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: i32 [1 - 9] bits:0...0xxxx
valueDescription: i32
=== Inputs ===
merge: v231 
values: i521 i25 i94 i61 i326 i365 i404 i443 i482 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v231 values: i521 i25 i94 i61 i326 i365 i404 i443 i482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 27]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v232 v233 v603 v604 v605 v606 v607 v608 v609 
=== Succesors ===
next: v67 
=== Usages ===
i238 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v232 v233 v603 v604 v605 v606 v607 v608 v609 #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:553) [bci: 29]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
stamp: i32 [1 - 10] bits:0...0xxxx
=== Inputs ===
x: i35 
y: i238 
=== Succesors ===
=== Usages ===
i68 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i35 y: i238  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
v231 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = ADD (x: v8|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B12" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i68 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 11] bits:0...0xxxx
valueDescription: i32
=== Inputs ===
merge: v66 
values: i57 i59 
=== Succesors ===
=== Usages ===
?7 i8 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v66 values: i57 i59  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v67 v69 
=== Succesors ===
next: i1152 
=== Usages ===
i68 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v67 v69 #next: i1152  <|@  <|@
f <@~|@floating>@ <|@
tid v1169 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1152 v795 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1152 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1169 
lastLocationAccess: - 
=== Succesors ===
next: i1153 
=== Usages ===
?7 ?7 i8 ?136 
=== Predecessor ===
v66 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1169 lastLocationAccess: - #next: i1153  <|@  <|@
f <@~|@floating>@ <|@
tid v1171 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1153 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1153 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1171 
lastLocationAccess: - 
=== Succesors ===
next: v78 
=== Usages ===
i658 v826 
=== Predecessor ===
i1152 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1171 lastLocationAccess: - #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stamp: i32
=== Inputs ===
x: i68 
y: i1152 
=== Succesors ===
=== Usages ===
i92 ?136 i74 i637 ?215 v795 ?634 ?152 i617 i626 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i68 y: i1152  <|@  <|@
f <@~|@floating>@ <|@
tid i658 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1153 
=== Succesors ===
=== Usages ===
i73 i92 i95 i101 i80 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1153  <|@  <|@
f <@~|@floating>@ <|@
tid i73 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i1151 
y: i658 
=== Succesors ===
=== Usages ===
i74 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1151 y: i658  <|@  <|@
f <@~|@floating>@ <|@
tid i74 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 13]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i32
=== Inputs ===
x: i8 
y: i73 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i8 y: i73  <|@  <|@
f <@~|@floating>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i74 
y: i25 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i74 y: i25  <|@  <|@
f <@~|@floating>@ <|@
tid a649 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a1150 
=== Succesors ===
=== Usages ===
j1142 a863 j1062 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1150  <|@  <|@
f <@~|@floating>@ <|@
tid j967 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j963 j963 j963 v987 v997 v977 v1130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 44]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i170 i180 i201 i617 i938 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
profileData: PROFILED designatedSuccessorProbability: 0.9102668972297561
stamp: void
=== Inputs ===
condition: v75 
=== Succesors ===
trueSuccessor: v77 
falseSuccessor: v76 
=== Usages ===
=== Predecessor ===
i1153 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v75 #trueSuccessor: v77 #falseSuccessor: v76  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVSXB value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v13|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v84  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
v77 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B89" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v925 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v925  <|@  <|@
f <@~|@floating>@ <|@
tid i92 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:261) [bci: 11]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i32
=== Inputs ===
x: i8 
y: i658 
=== Succesors ===
=== Usages ===
i93 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i8 y: i658  <|@  <|@
f <@~|@floating>@ <|@
tid i93 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:262) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i32
=== Inputs ===
x: i92 
y: i1151 
=== Succesors ===
=== Usages ===
v108 i109 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i92 y: i1151  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 27]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i32
=== Inputs ===
x: i94 
y: i658 
=== Succesors ===
=== Usages ===
i96 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i94 y: i658  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i32
=== Inputs ===
x: i95 
y: i1151 
=== Succesors ===
=== Usages ===
v108 i109 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i95 y: i1151  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 3]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i93 
y: i96 
=== Succesors ===
=== Usages ===
i109 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i93 y: i96  <|@  <|@
f <@~|@floating>@ <|@
tid i109 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 3]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i32
=== Inputs ===
condition: v108 
trueValue: i96 
falseValue: i93 
=== Succesors ===
=== Usages ===
i102 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v108 trueValue: i96 falseValue: i93  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 6]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i32
=== Inputs ===
x: i109 
y: i1151 
=== Succesors ===
=== Usages ===
i938 i101 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i109 y: i1151  <|@  <|@
f <@~|@floating>@ <|@
tid i938 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i32
=== Inputs ===
x: i102 
y: i169 
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i102 y: i169  <|@  <|@
f <@~|@floating>@ <|@
tid i939 <|@
result int[2147483639|0x7ffffff7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639]
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i938 
y: i939 
=== Succesors ===
=== Usages ===
v925 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i938 y: i939  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: iadd
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 7]
sourceFile: AbstractStringBuilder.java
sourceLine: 832
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i1152 i68 a1 i2 i1152 
=== Succesors ===
=== Usages ===
v1166 v964 v1168 a1020 a1102 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i1152 i68 a1 i2 i1152  <|@  <|@
f <@*|@fixed>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v940 
=== Succesors ===
trueSuccessor: v923 
falseSuccessor: v924 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v940 #trueSuccessor: v923 #falseSuccessor: v924  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SHL (x: v13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SUB (x: v18|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = ADD (x: v20|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = CMOVE (falseValue: v19|DWORD, ~trueValue: v22|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = ADD (x: v23|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v25|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B89 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B31" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:742) [bci: 19]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
v925 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid i101 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:267) [bci: 57]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i32
=== Inputs ===
x: i102 
y: i658 
=== Succesors ===
=== Usages ===
i80 
=== Predecessor ===
- >@ <|@
instruction <@>>|@jdk.graal.compiler.nodes.calc.RightShiftNode>@ x: i102 y: i658  <|@  <|@
f <@~|@floating>@ <|@
tid i80 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i32
=== Inputs ===
x: i101 
y: i658 
=== Succesors ===
=== Usages ===
v111 v1129 v128 i129 v839 j1073 a1102 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i101 y: i658  <|@  <|@
f <@~|@floating>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3538) [bci: 3]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i80 
y: i1151 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i80 y: i1151  <|@  <|@
f <@~|@floating>@ <|@
tid v1149 <|@
result meta{HotSpotType<[B, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1049 v1128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1015 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1045 v1125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1003 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1020 a1102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1029 <|@
result long[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1030 j1109 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1008 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1009 j1074 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3538) [bci: 3]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
profileData: PROFILED designatedSuccessorProbability: 3.433727982038448E-5
stamp: void
=== Inputs ===
condition: v111 
=== Succesors ===
trueSuccessor: v113 
falseSuccessor: v112 
=== Usages ===
=== Predecessor ===
v923 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v111 #trueSuccessor: v113 #falseSuccessor: v112  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SAR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SHL (x: v26|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v27|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1060 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1060  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1004 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1004  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1004 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1042 
=== Usages ===
v1187 v1188 
=== Predecessor ===
v1060 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1042  <|@  <|@
f <@~|@floating>@ <|@
tid v1187 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j1004 
index: - 
=== Succesors ===
=== Usages ===
j1042 v1044 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1004 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1042 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1187 
lastLocationAccess: - 
=== Succesors ===
next: j1043 
=== Usages ===
j1010 v1189 v1190 a1019 v1194 v1191 v1192 v1193 
=== Predecessor ===
j1004 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1187 lastLocationAccess: - #next: j1043  <|@  <|@
f <@~|@floating>@ <|@
tid v1188 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j1004 
index: - 
=== Succesors ===
=== Usages ===
j1043 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1004 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1043 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1188 
lastLocationAccess: - 
=== Succesors ===
next: v1014 
=== Usages ===
v1011 
=== Predecessor ===
j1042 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1188 lastLocationAccess: - #next: v1014  <|@  <|@
f <@~|@floating>@ <|@
tid j1068 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i1151 
=== Succesors ===
=== Usages ===
v1069 j1030 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1151  <|@  <|@
f <@~|@floating>@ <|@
tid j1030 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64 [23 - 2147483670] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j1068 
y: j1029 
=== Succesors ===
=== Usages ===
j1009 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1068 y: j1029  <|@  <|@
f <@~|@floating>@ <|@
tid j1009 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64 [0 - 2147483664] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j1030 
y: j1008 
=== Succesors ===
=== Usages ===
j1010 v1191 v1192 v1193 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j1030 y: j1008  <|@  <|@
f <@~|@floating>@ <|@
tid j1010 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64
=== Inputs ===
x: j1009 
y: j1042 
=== Succesors ===
=== Usages ===
v1011 v1044 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1009 y: j1042  <|@  <|@
f <@~|@floating>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1043 
y: j1010 
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j1043 y: j1010  <|@  <|@
f <@*|@fixed>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v1011 
=== Succesors ===
trueSuccessor: v1013 
falseSuccessor: v1012 
=== Usages ===
=== Predecessor ===
j1043 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1011 #trueSuccessor: v1013 #falseSuccessor: v1012  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1020 
=== Usages ===
=== Predecessor ===
v1014 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1020  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1020 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?7 
arguments: v1003 i1151 
=== Succesors ===
next: v1166 
=== Usages ===
v1166 a1040 
=== Predecessor ===
v1013 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?7 arguments: v1003 i1151 #next: v1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-270449|0xfffffffffffbdf8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?7 
object: a1020 
=== Succesors ===
next: v1024 
=== Usages ===
=== Predecessor ===
a1020 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?7 object: a1020 #next: v1024  <|@  <|@
f <@*|@fixed>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
v1166 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1044 
=== Usages ===
=== Predecessor ===
v1014 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1044  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1187 
lastLocationAccess: - 
value: j1010 
stateAfter: - 
=== Succesors ===
next: v1032 
=== Usages ===
=== Predecessor ===
v1012 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1187 lastLocationAccess: - value: j1010 stateAfter: - #next: v1032  <|@  <|@
f <@~|@floating>@ <|@
tid v1191 <|@
result [v32|QWORD + v29|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j1009 
index: j1042 
=== Succesors ===
=== Usages ===
v1032 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1009 index: j1042  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
address: v1191 
=== Succesors ===
next: v1035 
=== Usages ===
=== Predecessor ===
v1044 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1191 #next: v1035  <|@  <|@
f <@~|@floating>@ <|@
tid v1192 <|@
result [v32|QWORD + v29|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j1009 
index: j1042 
=== Succesors ===
=== Usages ===
v1035 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1009 index: j1042  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
address: v1192 
=== Succesors ===
next: v1038 
=== Usages ===
=== Predecessor ===
v1032 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1192 #next: v1038  <|@  <|@
f <@~|@floating>@ <|@
tid v1193 <|@
result [v32|QWORD + v29|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j1009 
index: j1042 
=== Succesors ===
=== Usages ===
v1038 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1009 index: j1042  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
address: v1193 
=== Succesors ===
next: v1045 
=== Usages ===
=== Predecessor ===
v1035 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1193 #next: v1045  <|@  <|@
f <@~|@floating>@ <|@
tid v1189 <|@
result [v29|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1042 
index: - 
=== Succesors ===
=== Usages ===
v1045 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1042 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1189 
lastLocationAccess: - 
value: j1015 
stateAfter: - 
=== Succesors ===
next: v1049 
=== Usages ===
=== Predecessor ===
v1038 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1189 lastLocationAccess: - value: j1015 stateAfter: - #next: v1049  <|@  <|@
f <@~|@floating>@ <|@
tid v1194 <|@
result [v29|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j1042 
index: - 
=== Succesors ===
=== Usages ===
v1049 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1042 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1194 
lastLocationAccess: - 
value: v1149 
stateAfter: - 
=== Succesors ===
next: v1050 
=== Usages ===
=== Predecessor ===
v1045 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1194 lastLocationAccess: - value: v1149 stateAfter: - #next: v1050  <|@  <|@
f <@~|@floating>@ <|@
tid v1190 <|@
result [v29|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j1042 
index: - 
=== Succesors ===
=== Usages ===
v1050 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1042 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1190 
lastLocationAccess: - 
value: i1151 
stateAfter: - 
=== Succesors ===
next: v1018 
=== Usages ===
=== Predecessor ===
v1049 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1190 lastLocationAccess: - value: i1151 stateAfter: - #next: v1018  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1019 
=== Usages ===
=== Predecessor ===
v1050 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a1019  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1019 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j1042 
=== Succesors ===
next: v1022 
=== Usages ===
a1040 
=== Predecessor ===
v1018 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j1042 #next: v1022  <|@  <|@
f <@*|@fixed>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
a1019 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1040 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v1023 
values: a1019 a1020 
=== Succesors ===
=== Usages ===
j1066 a666 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v1023 values: a1019 a1020  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1022 v1024 
=== Succesors ===
next: j1062 
=== Usages ===
a1040 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1022 v1024 #next: j1062  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1062 <|@
result v38|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64
=== Inputs ===
object: a649 
=== Succesors ===
next: j1066 
=== Usages ===
v1195 
=== Predecessor ===
v1023 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a649 #next: j1066  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1066 <|@
result v39|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64
=== Inputs ===
object: a1040 
=== Succesors ===
next: v1069 
=== Usages ===
v1196 
=== Predecessor ===
j1062 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a1040 #next: v1069  <|@  <|@
f <@~|@floating>@ <|@
tid v1195 <|@
result [v38|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j1062 
index: - 
=== Succesors ===
=== Usages ===
v1069 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1062 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1196 <|@
result [v39|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j1066 
index: - 
=== Succesors ===
=== Usages ===
v1069 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1066 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopyKillInit
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1195 v1196 j1068 
=== Succesors ===
next: v665 
=== Usages ===
=== Predecessor ===
j1066 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1195 v1196 j1068 #next: v665  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:80) [bci: 39] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a666 
=== Usages ===
=== Predecessor ===
v1069 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a666  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a666 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:81) [bci: 43] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: a!# byte[]
=== Inputs ===
object: a1040 
=== Succesors ===
next: v133 
=== Usages ===
a134 
=== Predecessor ===
v665 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1040 #next: v133  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
a666 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 14]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1140 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1140 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1070 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1070  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1070 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1122 
=== Usages ===
v1197 v1198 
=== Predecessor ===
v1140 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1122  <|@  <|@
f <@~|@floating>@ <|@
tid v1197 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j1070 
index: - 
=== Succesors ===
=== Usages ===
j1122 v1124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1070 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1122 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1197 
lastLocationAccess: - 
=== Succesors ===
next: j1123 
=== Usages ===
j1075 v1199 v1200 v1201 a1101 v1202 v1206 v1203 v1204 v1205 
=== Predecessor ===
j1070 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1197 lastLocationAccess: - #next: j1123  <|@  <|@
f <@~|@floating>@ <|@
tid v1198 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j1070 
index: - 
=== Succesors ===
=== Usages ===
j1123 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1070 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1123 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1198 
lastLocationAccess: - 
=== Succesors ===
next: v1079 
=== Usages ===
v1076 
=== Predecessor ===
j1122 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1198 lastLocationAccess: - #next: v1079  <|@  <|@
f <@~|@floating>@ <|@
tid j1073 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i80 
=== Succesors ===
=== Usages ===
j1109 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i80  <|@  <|@
f <@~|@floating>@ <|@
tid j1109 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64 [23 - 4294967318] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j1073 
y: j1029 
=== Succesors ===
=== Usages ===
j1074 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1073 y: j1029  <|@  <|@
f <@~|@floating>@ <|@
tid j1074 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64 [0 - 4294967312] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j1109 
y: j1008 
=== Succesors ===
=== Usages ===
j1075 v1090 j1111 v1203 v1204 v1205 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j1109 y: j1008  <|@  <|@
f <@~|@floating>@ <|@
tid j1075 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64
=== Inputs ===
x: j1074 
y: j1122 
=== Succesors ===
=== Usages ===
v1076 v1124 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1074 y: j1122  <|@  <|@
f <@~|@floating>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1123 
y: j1075 
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j1123 y: j1075  <|@  <|@
f <@*|@fixed>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v1076 
=== Succesors ===
trueSuccessor: v1078 
falseSuccessor: v1077 
=== Usages ===
=== Predecessor ===
j1123 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1076 #trueSuccessor: v1078 #falseSuccessor: v1077  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1102 
=== Usages ===
=== Predecessor ===
v1079 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1102 <|@
result v45|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?7 
arguments: v1003 i80 
=== Succesors ===
next: v1168 
=== Usages ===
v1168 a1120 
=== Predecessor ===
v1078 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?7 arguments: v1003 i80 #next: v1168  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-290929|0xfffffffffffb8f8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?7 
object: a1102 
=== Succesors ===
next: v1106 
=== Usages ===
=== Predecessor ===
a1102 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?7 object: a1102 #next: v1106  <|@  <|@
f <@*|@fixed>@ <|@
tid v1106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1105 
=== Predecessor ===
v1168 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction NULLCHECK address: [v45|QWORD[.]] state [bci:10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B38" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1124 
=== Usages ===
=== Predecessor ===
v1079 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1197 
lastLocationAccess: - 
value: j1075 
stateAfter: - 
=== Succesors ===
next: v1115 
=== Usages ===
=== Predecessor ===
v1077 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1197 lastLocationAccess: - value: j1075 stateAfter: - #next: v1115  <|@  <|@
f <@~|@floating>@ <|@
tid v1203 <|@
result [v43|QWORD + v40|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j1074 
index: j1122 
=== Succesors ===
=== Usages ===
v1115 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1074 index: j1122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
address: v1203 
=== Succesors ===
next: v1117 
=== Usages ===
=== Predecessor ===
v1124 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1203 #next: v1117  <|@  <|@
f <@~|@floating>@ <|@
tid v1204 <|@
result [v43|QWORD + v40|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j1074 
index: j1122 
=== Succesors ===
=== Usages ===
v1117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1074 index: j1122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
address: v1204 
=== Succesors ===
next: v1119 
=== Usages ===
=== Predecessor ===
v1115 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1204 #next: v1119  <|@  <|@
f <@~|@floating>@ <|@
tid v1205 <|@
result [v43|QWORD + v40|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j1074 
index: j1122 
=== Succesors ===
=== Usages ===
v1119 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1074 index: j1122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
address: v1205 
=== Succesors ===
next: v1125 
=== Usages ===
=== Predecessor ===
v1117 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1205 #next: v1125  <|@  <|@
f <@~|@floating>@ <|@
tid v1199 <|@
result [v40|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1122 
index: - 
=== Succesors ===
=== Usages ===
v1125 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1122 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1199 
lastLocationAccess: - 
value: j1015 
stateAfter: - 
=== Succesors ===
next: v1128 
=== Usages ===
=== Predecessor ===
v1119 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1199 lastLocationAccess: - value: j1015 stateAfter: - #next: v1128  <|@  <|@
f <@~|@floating>@ <|@
tid v1206 <|@
result [v40|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j1122 
index: - 
=== Succesors ===
=== Usages ===
v1128 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1122 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1128 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1206 
lastLocationAccess: - 
value: v1149 
stateAfter: - 
=== Succesors ===
next: v1129 
=== Usages ===
=== Predecessor ===
v1125 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1206 lastLocationAccess: - value: v1149 stateAfter: - #next: v1129  <|@  <|@
f <@~|@floating>@ <|@
tid v1200 <|@
result [v40|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j1122 
index: - 
=== Succesors ===
=== Usages ===
v1129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1122 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1200 
lastLocationAccess: - 
value: i80 
stateAfter: - 
=== Succesors ===
next: v1085 
=== Usages ===
=== Predecessor ===
v1128 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1200 lastLocationAccess: - value: i80 stateAfter: - #next: v1085  <|@  <|@
f <@~|@floating>@ <|@
tid j1110 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1111 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1111 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64 [-16 - 4294967296] bits:x...x000
=== Inputs ===
x: j1074 
y: j1110 
=== Succesors ===
=== Usages ===
v1082 v1086 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1074 y: j1110  <|@  <|@
f <@~|@floating>@ <|@
tid j1112 <|@
result long[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1111 
y: j1112 
=== Succesors ===
=== Usages ===
v1085 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j1111 y: j1112  <|@  <|@
f <@*|@fixed>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v1082 
=== Succesors ===
trueSuccessor: v1084 
falseSuccessor: v1083 
=== Usages ===
=== Predecessor ===
v1129 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1082 #trueSuccessor: v1084 #falseSuccessor: v1083  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD + 12], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v46|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1087 
=== Usages ===
=== Predecessor ===
v1085 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1087  <|@  <|@
f <@~|@floating>@ <|@
tid j1047 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1098 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j655 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1089 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1088 
=== Predecessor ===
v1084 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1089 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1088 
values: j655 j1098 
=== Succesors ===
=== Usages ===
v1090 v1201 j1098 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v1088 values: j655 j1098  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 56
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v1087 
=== Succesors ===
next: v1096 
=== Usages ===
j1089 v1095 v1099 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v1087 #next: v1096  <|@  <|@
f <@~|@floating>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1089 
y: j1074 
=== Succesors ===
=== Usages ===
v1096 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j1089 y: j1074  <|@  <|@
f <@*|@fixed>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v1090 
=== Succesors ===
trueSuccessor: v1091 
falseSuccessor: v1095 
=== Usages ===
=== Predecessor ===
v1088 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1090 #trueSuccessor: v1091 #falseSuccessor: v1095  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v47|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1130 
=== Usages ===
=== Predecessor ===
v1096 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1130  <|@  <|@
f <@~|@floating>@ <|@
tid v1201 <|@
result [v40|QWORD + v47|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1122 
index: j1089 
=== Succesors ===
=== Usages ===
v1130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1122 index: j1089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1201 
lastLocationAccess: - 
value: j967 
stateAfter: - 
=== Succesors ===
next: v1099 
=== Usages ===
=== Predecessor ===
v1091 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1201 lastLocationAccess: - value: j967 stateAfter: - #next: v1099  <|@  <|@
f <@~|@floating>@ <|@
tid j1098 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64
=== Inputs ===
x: j1089 
y: j1047 
=== Succesors ===
=== Usages ===
j1089 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1089 y: j1047  <|@  <|@
f <@*|@fixed>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
loopBegin: v1088 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1130 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v1088  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD + v47|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA address: [v47|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|QWORD] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1088 
=== Succesors ===
next: v1094 
=== Usages ===
=== Predecessor ===
v1096 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1088 #next: v1094  <|@  <|@
f <@*|@fixed>@ <|@
tid v1094 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1093 
=== Predecessor ===
v1095 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1086 
=== Usages ===
=== Predecessor ===
v1085 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1086  <|@  <|@
f <@~|@floating>@ <|@
tid v1202 <|@
result [v40|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j1122 
index: - 
=== Succesors ===
=== Usages ===
v1086 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1122 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1202 
lastLocationAccess: - 
length: j1111 
=== Succesors ===
next: v1092 
=== Usages ===
=== Predecessor ===
v1083 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v1202 lastLocationAccess: - length: j1111 #next: v1092  <|@  <|@
f <@*|@fixed>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1093 
=== Predecessor ===
v1086 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v40|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1092 v1094 
=== Succesors ===
next: v1100 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1092 v1094 #next: v1100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1101 
=== Usages ===
=== Predecessor ===
v1093 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a1101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1101 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j1122 
=== Succesors ===
next: v1104 
=== Usages ===
a1120 
=== Predecessor ===
v1100 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j1122 #next: v1104  <|@  <|@
f <@*|@fixed>@ <|@
tid v1104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1105 
=== Predecessor ===
a1101 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B32" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1120 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v1105 
values: a1101 a1102 
=== Succesors ===
=== Usages ===
j1144 a134 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v1105 values: a1101 a1102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1105 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1104 v1106 
=== Succesors ===
next: v929 
=== Usages ===
a1120 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1104 v1106 #next: v929  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3543) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i80 
y: i1151 
=== Succesors ===
=== Usages ===
i129 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i80 y: i1151  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3543) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i32
=== Inputs ===
condition: v128 
trueValue: i80 
falseValue: i1151 
=== Succesors ===
=== Usages ===
j1146 v679 v838 v839 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v128 trueValue: i80 falseValue: i1151  <|@  <|@
f <@~|@floating>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i129 
y: i15 
=== Succesors ===
=== Usages ===
v929 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i129 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v679 
=== Succesors ===
trueSuccessor: v927 
falseSuccessor: v928 
=== Usages ===
=== Predecessor ===
v1105 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v679 #trueSuccessor: v927 #falseSuccessor: v928  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v965 
=== Usages ===
=== Predecessor ===
v929 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v965  <|@  <|@
f <@~|@floating>@ <|@
tid i966 <|@
result int[-237081|0xfffffffffffc61e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: -237081
stableDimension: 0
stamp: i32 [-237081]
stampKind: i32
value: int[-237081|0xfffffffffffc61e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i962 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v958 
=== Predecessor ===
v927 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-237081|0xfffffffffffc61e7], long[0|0x0]] destination: B41 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v933 
=== Usages ===
=== Predecessor ===
v929 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v933  <|@  <|@
f <@~|@floating>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1151 
y: i129 
=== Succesors ===
=== Usages ===
v933 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1151 y: i129  <|@  <|@
f <@*|@fixed>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v838 
=== Succesors ===
trueSuccessor: v931 
falseSuccessor: v932 
=== Usages ===
=== Predecessor ===
v928 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v838 #trueSuccessor: v931 #falseSuccessor: v932  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v968 
=== Usages ===
=== Predecessor ===
v933 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v968  <|@  <|@
f <@~|@floating>@ <|@
tid i969 <|@
result int[-238105|0xfffffffffffc5de7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: -238105
stableDimension: 0
stamp: i32 [-238105]
stampKind: i32
value: int[-238105|0xfffffffffffc5de7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i962 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v958 
=== Predecessor ===
v931 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-238105|0xfffffffffffc5de7], long[0|0x0]] destination: B43 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v937 
=== Usages ===
=== Predecessor ===
v933 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v937  <|@  <|@
f <@~|@floating>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i80 
y: i129 
=== Succesors ===
=== Usages ===
v937 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i80 y: i129  <|@  <|@
f <@*|@fixed>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v839 
=== Succesors ===
trueSuccessor: v935 
falseSuccessor: v936 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v839 #trueSuccessor: v935 #falseSuccessor: v936  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v970 
=== Usages ===
=== Predecessor ===
v937 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v970  <|@  <|@
f <@~|@floating>@ <|@
tid i971 <|@
result int[-239129|0xfffffffffffc59e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: -239129
stableDimension: 0
stamp: i32 [-239129]
stampKind: i32
value: int[-239129|0xfffffffffffc59e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i962 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v958 
=== Predecessor ===
v935 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-239129|0xfffffffffffc59e7], long[0|0x0]] destination: B45 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1142 
=== Usages ===
=== Predecessor ===
v937 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1142 <|@
result v53|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64
=== Inputs ===
object: a649 
=== Succesors ===
next: j1144 
=== Usages ===
v1207 
=== Predecessor ===
v936 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a649 #next: j1144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1144 <|@
result v54|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64
=== Inputs ===
object: a1120 
=== Succesors ===
next: v1147 
=== Usages ===
v1208 
=== Predecessor ===
j1142 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a1120 #next: v1147  <|@  <|@
f <@~|@floating>@ <|@
tid v1207 <|@
result [v53|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j1142 
index: - 
=== Succesors ===
=== Usages ===
v1147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1142 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1208 <|@
result [v54|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j1144 
index: - 
=== Succesors ===
=== Usages ===
v1147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1144 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1146 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i129 
=== Succesors ===
=== Usages ===
v1147 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i129  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1207 v1208 j1146 
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
j1144 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1207 v1208 j1146 #next: v135  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
v1147 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B30" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a134 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v132 
values: a666 a1120 
=== Succesors ===
=== Usages ===
a863 a700 v1002 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v132 values: a666 a1120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v133 v135 
=== Succesors ===
next: v1000 
=== Usages ===
a134 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v133 v135 #next: v1000  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
precise: true
stamp: void
=== Inputs ===
address: v1170 
value: - 
stateBefore: - 
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v1170 value: - stateBefore: - #next: v701  <|@  <|@
f <@~|@floating>@ <|@
tid a700 <|@
result v59|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
op: Compress
stamp: n!# byte[]
=== Inputs ===
value: a134 
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.value
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1170 
lastLocationAccess: - 
value: a700 
stateAfter: - 
=== Succesors ===
next: v1002 
=== Usages ===
=== Predecessor ===
v1000 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1170 lastLocationAccess: - value: a700 stateAfter: - #next: v1002  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
precise: false
stamp: void
=== Inputs ===
address: v1170 
value: a134 
object: a1 
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v1170 value: a134 object: a1 #next: v86  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
v1002 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v57|QWORD, temp2: v58|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = COMPRESSPOINTER (input: v56|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v59|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v56|QWORD[.]) {temp: v60|QWORD, temp2: v61|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v56|QWORD[.]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" "B47" 
    successors "B49" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a863 <|@
result v62|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: a!# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v85 
values: a649 a134 
=== Succesors ===
=== Usages ===
v1183 v1184 ?152 ?157 ?635 v1174 v1175 ?197 ?178 v1186 ?184 v1181 v1177 v1179 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v85 values: a649 a134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v84 v86 
=== Succesors ===
next: v916 
=== Usages ===
a863 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v84 v86 #next: v916  <|@  <|@
f <@~|@floating>@ <|@
tid i825 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.isLatin1(AbstractStringBuilder.java:1693) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:834) [bci: 18]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v826 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.isLatin1(AbstractStringBuilder.java:1693) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:834) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1153 
y: i825 
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1153 y: i825  <|@  <|@
f <@*|@fixed>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:834) [bci: 21]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v826 
=== Succesors ===
trueSuccessor: v914 
falseSuccessor: v915 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v826 #trueSuccessor: v914 #falseSuccessor: v915  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v146  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:508) [bci: 16]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
profileData: PROFILED designatedSuccessorProbability: 0.023714438988526654
stamp: void
=== Inputs ===
condition: v26 
=== Succesors ===
trueSuccessor: v145 
falseSuccessor: v144 
=== Usages ===
=== Predecessor ===
v914 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v26 #trueSuccessor: v145 #falseSuccessor: v144  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.023714438988526654 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582492443078313792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v148  <|@  <|@
f <@*|@fixed>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
v145 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606968818122833350
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:509) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v150  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
v144 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|DWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i151 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v149 
values: i2 i30 
=== Succesors ===
=== Usages ===
?152 i865 v611 i616 j951 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v149 values: i2 i30  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v148 v150 
=== Succesors ===
next: i1154 
=== Usages ===
i151 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v148 v150 #next: i1154  <|@  <|@
f <@~|@floating>@ <|@
tid v1174 <|@
result [v62|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a863 
index: - 
=== Succesors ===
=== Usages ===
i1154 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a863 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1154 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 55]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1174 
lastLocationAccess: - 
=== Succesors ===
next: v614 
=== Usages ===
v718 v731 v750 v763 v786 v810 v797 
=== Predecessor ===
v149 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1174 lastLocationAccess: - #next: v614  <|@  <|@
f <@~|@floating>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 25]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i151 
y: i158 
=== Succesors ===
=== Usages ===
v614 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i151 y: i158  <|@  <|@
tid ?215 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
localsSize: 4
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 835
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - - i8 
=== Succesors ===
=== Usages ===
?152 ?157 ?184 ?197 ?178 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - i8  <|@  <|@
f <@~|@floating>@ <|@
tid i143 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:507) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
condition: v26 
trueValue: i25 
falseValue: i15 
=== Succesors ===
=== Usages ===
?152 ?157 ?635 ?197 ?178 ?184 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v26 trueValue: i25 falseValue: i15  <|@  <|@
f <@~|@floating>@ <|@
tid a175 <|@
result v66|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 62]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: byte[100]{48, 48, 48, 48, 48, ...}
stableDimension: 0
stamp: a!# byte[]
stampKind: a java.lang.Object
value: Object[byte[100]{48, 48, 48, 48, 48, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1180 v1185 v1176 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a171 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 49]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: byte[100]{48, 49, 50, 51, 52, ...}
stableDimension: 0
stamp: a!# byte[]
stampKind: a java.lang.Object
value: Object[byte[100]{48, 49, 50, 51, 52, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1178 v1182 v1173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i212 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2]
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i213 i214 i626 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i166 <|@
result int[100|0x64] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:514) [bci: 29]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: 100
stableDimension: 0
stamp: i32 [100]
stampKind: i32
value: int[100|0x64]
=== Inputs ===
=== Succesors ===
=== Usages ===
i167 v773 i615 v740 v704 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 25]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
profileData: PROFILED designatedSuccessorProbability: 0.20456323728994374
stamp: void
=== Inputs ===
condition: v611 
=== Succesors ===
trueSuccessor: v613 
falseSuccessor: v612 
=== Usages ===
=== Predecessor ===
i1154 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v611 #trueSuccessor: v613 #falseSuccessor: v612  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOV input: [v62|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 49, 50, 51, 52, ...}] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v63|DWORD trueDestinationProbability: 0.20456323728994374 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B71 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B69" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:514) [bci: 28]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v875 
=== Usages ===
=== Predecessor ===
v614 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v875  <|@  <|@
f <@~|@floating>@ <|@
tid j951 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:514) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i151 
=== Succesors ===
=== Usages ===
j952 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i151  <|@  <|@
f <@~|@floating>@ <|@
tid j942 <|@
result long[1374389535|0x51eb851f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:514) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: 1374389535
stableDimension: 0
stamp: i64 [1374389535]
stampKind: i64
value: long[1374389535|0x51eb851f]
=== Inputs ===
=== Succesors ===
=== Usages ===
j943 j952 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j952 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:514) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i64 [-2951479052394823680 - 2951479051020434145]
=== Inputs ===
x: j951 
y: j942 
=== Succesors ===
=== Usages ===
j953 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: j951 y: j942  <|@  <|@
f <@~|@floating>@ <|@
tid i944 <|@
result int[37|0x25] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:514) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: 37
stableDimension: 0
stamp: i32 [37]
stampKind: i32
value: int[37|0x25]
=== Inputs ===
=== Succesors ===
=== Usages ===
j945 j953 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j953 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:514) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i64 [-21474837 - 21474836]
=== Inputs ===
x: j952 
y: i944 
=== Succesors ===
=== Usages ===
i954 
=== Predecessor ===
- >@ <|@
instruction <@>>|@jdk.graal.compiler.nodes.calc.RightShiftNode>@ x: j952 y: i944  <|@  <|@
f <@~|@floating>@ <|@
tid i954 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 64
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:514) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
resultBits: 32
stamp: i32 [-21474837 - 21474836]
=== Inputs ===
value: j953 
=== Succesors ===
=== Usages ===
i956 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: j953  <|@  <|@
f <@~|@floating>@ <|@
tid i956 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:514) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32 [-21474836 - 21474837]
=== Inputs ===
x: i954 
y: i25 
=== Succesors ===
=== Usages ===
i638 i615 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i954 y: i25  <|@  <|@
f <@~|@floating>@ <|@
tid i615 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:515) [bci: 36]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32 [-2147483648 - 2147483644] bits:x...x00
=== Inputs ===
x: i956 
y: i166 
=== Succesors ===
=== Usages ===
i616 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: i956 y: i166  <|@  <|@
f <@~|@floating>@ <|@
tid i616 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:515) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32
=== Inputs ===
x: i615 
y: i151 
=== Succesors ===
=== Usages ===
j827 v704 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i615 y: i151  <|@  <|@
f <@~|@floating>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i616 
y: i166 
=== Succesors ===
=== Usages ===
v875 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i616 y: i166  <|@  <|@
f <@*|@fixed>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v704 
=== Succesors ===
trueSuccessor: v872 
falseSuccessor: v874 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v704 #trueSuccessor: v872 #falseSuccessor: v874  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOVSXD value: v63|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = IMUL x: v68|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = SAR x: v69|QWORD y: 37 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV value: v70|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = IMUL x: v72|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = SUB (x: v73|DWORD, ~y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v74|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B69 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B68" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v879 
=== Usages ===
=== Predecessor ===
v875 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v879  <|@  <|@
f <@~|@floating>@ <|@
tid i617 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 44]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32
=== Inputs ===
x: i8 
y: i169 
=== Succesors ===
=== Usages ===
j828 v718 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i8 y: i169  <|@  <|@
f <@~|@floating>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 55]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i617 
y: i1154 
=== Succesors ===
=== Usages ===
v879 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i617 y: i1154  <|@  <|@
f <@*|@fixed>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 55]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v718 
=== Succesors ===
trueSuccessor: v876 
falseSuccessor: v878 
=== Usages ===
=== Predecessor ===
v872 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v718 #trueSuccessor: v876 #falseSuccessor: v878  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = DEC value: v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v75|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B67" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 55]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v883 
=== Usages ===
v726 
=== Predecessor ===
v879 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v883  <|@  <|@
f <@~|@floating>@ <|@
tid i626 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32
=== Inputs ===
x: i8 
y: i212 
=== Succesors ===
=== Usages ===
j829 v731 i639 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i8 y: i212  <|@  <|@
f <@~|@floating>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i626 
y: i1154 
=== Succesors ===
=== Usages ===
v883 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i626 y: i1154  <|@  <|@
f <@*|@fixed>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v731 
=== Succesors ===
trueSuccessor: v880 
falseSuccessor: v882 
=== Usages ===
=== Predecessor ===
v876 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v731 #trueSuccessor: v880 #falseSuccessor: v882  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = LEA address: [v13|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v76|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1155 
=== Usages ===
v739 
=== Predecessor ===
v883 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1155  <|@  <|@
f <@~|@floating>@ <|@
tid j827 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i616 
=== Succesors ===
=== Usages ===
v1176 v1173 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i616  <|@  <|@
f <@~|@floating>@ <|@
tid v1173 <|@
result [v67|QWORD[.] + v74|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a171 
index: j827 
=== Succesors ===
=== Usages ===
i1155 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a171 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1155 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1173 
lastLocationAccess: - 
=== Succesors ===
next: v726 
=== Usages ===
v726 
=== Predecessor ===
v880 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1173 lastLocationAccess: - #next: v726  <|@  <|@
f <@~|@floating>@ <|@
tid j828 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 55]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i617 
=== Succesors ===
=== Usages ===
v1175 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i617  <|@  <|@
f <@~|@floating>@ <|@
tid v1175 <|@
result [v62|QWORD[.] + v75|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a863 
index: j828 
=== Succesors ===
=== Usages ===
v726 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a863 index: j828  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 55]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v876 
address: v1175 
lastLocationAccess: - 
value: i1155 
stateAfter: - 
=== Succesors ===
next: i1156 
=== Usages ===
=== Predecessor ===
i1155 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v876 address: v1175 lastLocationAccess: - value: i1155 stateAfter: - #next: i1156  <|@  <|@
f <@~|@floating>@ <|@
tid v1176 <|@
result [v66|QWORD[.] + v74|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a175 
index: j827 
=== Succesors ===
=== Usages ===
i1156 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a175 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1156 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 67]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1176 
lastLocationAccess: - 
=== Succesors ===
next: v739 
=== Usages ===
v739 
=== Predecessor ===
v726 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1176 lastLocationAccess: - #next: v739  <|@  <|@
f <@~|@floating>@ <|@
tid j829 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i626 
=== Succesors ===
=== Usages ===
v1177 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i626  <|@  <|@
f <@~|@floating>@ <|@
tid v1177 <|@
result [v62|QWORD[.] + v76|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a863 
index: j829 
=== Succesors ===
=== Usages ===
v739 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a863 index: j829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v880 
address: v1177 
lastLocationAccess: - 
value: i1156 
stateAfter: - 
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
i1156 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v880 address: v1177 lastLocationAccess: - value: i1156 stateAfter: - #next: v153  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
v739 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = MOVSXB input: [v67|QWORD[.] + v74|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v75|DWORD * 1 + 16], y: v77|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVSXB input: [v66|QWORD[.] + v74|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v76|DWORD * 1 + 16], y: v78|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v76|DWORD, v72|DWORD] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" 
    successors "B58" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596612633779284459
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i639 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v154 
values: i626 i213 
=== Succesors ===
=== Usages ===
?157 i637 i170 i213 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v154 values: i626 i213  <|@  <|@
f <@~|@floating>@ <|@
tid i638 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32 [-21474836 - 21474836]
valueDescription: i32
=== Inputs ===
merge: v154 
values: i956 i949 
=== Succesors ===
=== Usages ===
?157 v159 j941 i168 i865 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v154 values: i956 i949  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 19
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v153 
=== Succesors ===
next: v165 
=== Usages ===
i639 i638 v160 v179 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v153 #next: v165  <|@  <|@
f <@~|@floating>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 25]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i638 
y: i158 
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i638 y: i158  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 25]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v159 
=== Succesors ===
trueSuccessor: v164 
falseSuccessor: v160 
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v159 #trueSuccessor: v164 #falseSuccessor: v160  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|DWORD, v80|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v80|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B62 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:514) [bci: 28]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v887 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v887  <|@  <|@
f <@~|@floating>@ <|@
tid j941 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:514) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
resultBits: 64
stamp: i64 [-21474836 - 21474836]
=== Inputs ===
value: i638 
=== Succesors ===
=== Usages ===
j943 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i638  <|@  <|@
f <@~|@floating>@ <|@
tid j943 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:514) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i64 [-29514789864241260 - 29514789864241260]
=== Inputs ===
x: j941 
y: j942 
=== Succesors ===
=== Usages ===
j945 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: j941 y: j942  <|@  <|@
f <@~|@floating>@ <|@
tid j945 <|@
result v83|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:514) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i64 [-214749 - 214748]
=== Inputs ===
x: j943 
y: i944 
=== Succesors ===
=== Usages ===
i946 
=== Predecessor ===
- >@ <|@
instruction <@>>|@jdk.graal.compiler.nodes.calc.RightShiftNode>@ x: j943 y: i944  <|@  <|@
f <@~|@floating>@ <|@
tid i946 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 64
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:514) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
resultBits: 32
stamp: i32 [-214749 - 214748]
=== Inputs ===
value: j945 
=== Succesors ===
=== Usages ===
i949 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: j945  <|@  <|@
f <@~|@floating>@ <|@
tid i949 <|@
result v85|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:514) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32 [-214748 - 214749]
=== Inputs ===
x: i946 
y: i25 
=== Succesors ===
=== Usages ===
?178 i638 i167 ?178 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i946 y: i25  <|@  <|@
f <@~|@floating>@ <|@
tid i167 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:515) [bci: 36]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32 [-21474800 - 21474900] bits:x...x00
=== Inputs ===
x: i949 
y: i166 
=== Succesors ===
=== Usages ===
i168 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: i949 y: i166  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:515) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32 [-42949636 - 42949736]
=== Inputs ===
x: i167 
y: i638 
=== Succesors ===
=== Usages ===
j830 ?178 v740 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i167 y: i638  <|@  <|@
f <@~|@floating>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i168 
y: i166 
=== Succesors ===
=== Usages ===
v887 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i168 y: i166  <|@  <|@
f <@*|@fixed>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v740 
=== Succesors ===
trueSuccessor: v884 
falseSuccessor: v886 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v740 #trueSuccessor: v884 #falseSuccessor: v886  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOVSXD value: v80|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = IMUL x: v81|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = SAR x: v82|QWORD y: 37 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOV value: v83|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = INC value: v84|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = IMUL x: v85|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = SUB (x: v86|DWORD, ~y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v87|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B65 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v891 
=== Usages ===
=== Predecessor ===
v887 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v891  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 44]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32
=== Inputs ===
x: i639 
y: i169 
=== Succesors ===
=== Usages ===
j831 v750 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i639 y: i169  <|@  <|@
f <@~|@floating>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 55]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i170 
y: i1154 
=== Succesors ===
=== Usages ===
v891 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i170 y: i1154  <|@  <|@
f <@*|@fixed>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 55]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v750 
=== Succesors ===
trueSuccessor: v888 
falseSuccessor: v890 
=== Usages ===
=== Predecessor ===
v884 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v750 #trueSuccessor: v888 #falseSuccessor: v890  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = DEC value: v79|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v88|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 55]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v895 
=== Usages ===
v758 
=== Predecessor ===
v891 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v895  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32
=== Inputs ===
x: i639 
y: i212 
=== Succesors ===
=== Usages ===
i639 j832 ?178 v763 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i639 y: i212  <|@  <|@
f <@~|@floating>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i213 
y: i1154 
=== Succesors ===
=== Usages ===
v895 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i213 y: i1154  <|@  <|@
f <@*|@fixed>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v763 
=== Succesors ===
trueSuccessor: v892 
falseSuccessor: v894 
=== Usages ===
=== Predecessor ===
v888 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v763 #trueSuccessor: v892 #falseSuccessor: v894  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = LEA address: [v79|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v89|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1157 
=== Usages ===
v771 
=== Predecessor ===
v895 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1157  <|@  <|@
f <@~|@floating>@ <|@
tid j830 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i168 
=== Succesors ===
=== Usages ===
v1180 v1178 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i168  <|@  <|@
f <@~|@floating>@ <|@
tid v1178 <|@
result [v67|QWORD[.] + v87|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a171 
index: j830 
=== Succesors ===
=== Usages ===
i1157 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a171 index: j830  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1157 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1178 
lastLocationAccess: - 
=== Succesors ===
next: v758 
=== Usages ===
v758 
=== Predecessor ===
v892 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1178 lastLocationAccess: - #next: v758  <|@  <|@
f <@~|@floating>@ <|@
tid j831 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 55]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i170 
=== Succesors ===
=== Usages ===
v1179 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i170  <|@  <|@
f <@~|@floating>@ <|@
tid v1179 <|@
result [v62|QWORD[.] + v88|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a863 
index: j831 
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a863 index: j831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 55]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v888 
address: v1179 
lastLocationAccess: - 
value: i1157 
stateAfter: - 
=== Succesors ===
next: i1158 
=== Usages ===
=== Predecessor ===
i1157 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v888 address: v1179 lastLocationAccess: - value: i1157 stateAfter: - #next: i1158  <|@  <|@
f <@~|@floating>@ <|@
tid v1180 <|@
result [v66|QWORD[.] + v87|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a175 
index: j830 
=== Succesors ===
=== Usages ===
i1158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a175 index: j830  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1158 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 67]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1180 
lastLocationAccess: - 
=== Succesors ===
next: v771 
=== Usages ===
v771 
=== Predecessor ===
v758 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1180 lastLocationAccess: - #next: v771  <|@  <|@
f <@~|@floating>@ <|@
tid j832 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i213 
=== Succesors ===
=== Usages ===
v1181 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i213  <|@  <|@
f <@~|@floating>@ <|@
tid v1181 <|@
result [v62|QWORD[.] + v89|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a863 
index: j832 
=== Succesors ===
=== Usages ===
v771 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a863 index: j832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v892 
address: v1181 
lastLocationAccess: - 
value: i1158 
stateAfter: - 
=== Succesors ===
next: v912 
=== Usages ===
=== Predecessor ===
i1158 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v892 address: v1181 lastLocationAccess: - value: i1158 stateAfter: - #next: v912  <|@  <|@
tid ?178 <|@
d <@d|@=== Debug Properties ===
bci: 69
bytecode: goto
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, byte[])>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
sourceFile: Integer.java
sourceLine: 518
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?215 
values: i949 - a863 i949 i168 i213 i143 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?215 values: i949 - a863 i949 i168 i213 i143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
stateBefore: ?178 
=== Succesors ===
next: v179 
=== Usages ===
=== Predecessor ===
v771 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?178 #next: v179  <|@  <|@
f <@*|@fixed>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:513) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
loopBegin: v154 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v912 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v154  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = MOVSXB input: [v67|QWORD[.] + v87|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v88|DWORD * 1 + 16], y: v90|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVSXB input: [v66|QWORD[.] + v87|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v89|DWORD * 1 + 16], y: v91|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:518) [bci: 69]
locals: v85|DWORD - v62|QWORD[.] v85|DWORD v87|DWORD v89|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction SAFEPOINT temp: v92|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:69, 30] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v89|DWORD, v85|DWORD] destination: B61 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 4596538187644396969
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 72]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v154 
=== Succesors ===
next: v630 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v154 #next: v630  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 72]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
v160 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v80|DWORD, v79|DWORD] destination: B62 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v990 
=== Usages ===
=== Predecessor ===
v895 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v990  <|@  <|@
f <@~|@floating>@ <|@
tid i991 <|@
result int[-195611|0xfffffffffffd03e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: -195611
stableDimension: 0
stamp: i32 [-195611]
stampKind: i32
value: int[-195611|0xfffffffffffd03e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i985 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v982 
=== Predecessor ===
v894 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-195611|0xfffffffffffd03e5]] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 55]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v988 
=== Usages ===
=== Predecessor ===
v891 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v988  <|@  <|@
f <@~|@floating>@ <|@
tid i989 <|@
result int[-192283|0xfffffffffffd10e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: -192283
stableDimension: 0
stamp: i32 [-192283]
stampKind: i32
value: int[-192283|0xfffffffffffd10e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i985 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v982 
=== Predecessor ===
v890 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-192283|0xfffffffffffd10e5]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v983 
=== Usages ===
=== Predecessor ===
v887 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v983  <|@  <|@
f <@~|@floating>@ <|@
tid i984 <|@
result int[-189723|0xfffffffffffd1ae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: -189723
stableDimension: 0
stamp: i32 [-189723]
stampKind: i32
value: int[-189723|0xfffffffffffd1ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i985 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v982 
=== Predecessor ===
v886 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-189723|0xfffffffffffd1ae5]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i985 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32 [-195611 - -189723] bits:1...101000xx0xx11100101
valueDescription: i32
=== Inputs ===
merge: v982 
values: i984 i989 i991 
=== Succesors ===
=== Usages ===
v987 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v982 values: i984 i989 i991  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v983 v988 v990 
=== Succesors ===
next: v987 
=== Usages ===
i985 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v983 v988 v990 #next: v987  <|@  <|@
tid ?157 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: iload_0
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, byte[])>
localsSize: 7
locksSize: 0
sourceFile: Integer.java
sourceLine: 513
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?215 
values: i638 - a863 - - i639 i143 
=== Succesors ===
=== Usages ===
v987 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?215 values: i638 - a863 - - i639 i143  <|@  <|@
f <@*|@fixed>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
stateBefore: ?157 
actionAndReason: i985 
speculation: j967 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v982 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?157 actionAndReason: i985 speculation: j967  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: v80|DWORD - v62|QWORD[.] - - v79|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:518) [bci: 68]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v980 
=== Usages ===
=== Predecessor ===
v883 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v980  <|@  <|@
f <@~|@floating>@ <|@
tid i981 <|@
result int[-187419|0xfffffffffffd23e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: -187419
stableDimension: 0
stamp: i32 [-187419]
stampKind: i32
value: int[-187419|0xfffffffffffd23e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i975 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v972 
=== Predecessor ===
v882 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-187419|0xfffffffffffd23e5]] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 55]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v978 
=== Usages ===
=== Predecessor ===
v879 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v978  <|@  <|@
f <@~|@floating>@ <|@
tid i979 <|@
result int[-184091|0xfffffffffffd30e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: -184091
stableDimension: 0
stamp: i32 [-184091]
stampKind: i32
value: int[-184091|0xfffffffffffd30e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i975 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v972 
=== Predecessor ===
v878 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-184091|0xfffffffffffd30e5]] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v973 
=== Usages ===
=== Predecessor ===
v875 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v973  <|@  <|@
f <@~|@floating>@ <|@
tid i974 <|@
result int[-180507|0xfffffffffffd3ee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: -180507
stableDimension: 0
stamp: i32 [-180507]
stampKind: i32
value: int[-180507|0xfffffffffffd3ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i975 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v972 
=== Predecessor ===
v874 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-180507|0xfffffffffffd3ee5]] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i975 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32 [-187419 - -180507] bits:1...101001xxxxx11100101
valueDescription: i32
=== Inputs ===
merge: v972 
values: i974 i979 i981 
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v972 values: i974 i979 i981  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v973 v978 v980 
=== Succesors ===
next: v977 
=== Usages ===
i975 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v973 v978 v980 #next: v977  <|@  <|@
tid ?152 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: iload_0
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, byte[])>
localsSize: 7
locksSize: 0
sourceFile: Integer.java
sourceLine: 513
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?215 
values: i151 - a863 - - i8 i143 
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?215 values: i151 - a863 - - i8 i143  <|@  <|@
f <@*|@fixed>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:517) [bci: 54]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
stateBefore: ?152 
actionAndReason: i975 
speculation: j967 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v972 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?152 actionAndReason: i975 speculation: j967  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: v63|DWORD - v62|QWORD[.] - - v13|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605339876961552022
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 72]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v631 
=== Usages ===
=== Predecessor ===
v614 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v631  <|@  <|@
f <@*|@fixed>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 72]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
v612 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|DWORD, v13|DWORD] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B62" "B71" 
    successors "B73" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i865 <|@
result v95|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 72]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32 [-21474836 - 2147483647]
valueDescription: i32
=== Inputs ===
merge: v629 
values: i638 i151 
=== Succesors ===
=== Usages ===
?635 i181 ?184 v186 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v629 values: i638 i151  <|@  <|@
f <@~|@floating>@ <|@
tid i637 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 72]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v629 
values: i639 i8 
=== Succesors ===
=== Usages ===
?635 i180 i214 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v629 values: i639 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 72]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v630 v631 
=== Succesors ===
next: v899 
=== Usages ===
i865 i637 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v630 v631 #next: v899  <|@  <|@
f <@~|@floating>@ <|@
tid i181 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 82]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32 [-2147483647 - 21474836]
=== Inputs ===
value: i865 
=== Succesors ===
=== Usages ===
j833 v773 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@jdk.graal.compiler.nodes.calc.NegateNode>@ value: i865  <|@  <|@
f <@~|@floating>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 83]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i181 
y: i166 
=== Succesors ===
=== Usages ===
v899 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i181 y: i166  <|@  <|@
f <@*|@fixed>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 83]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v773 
=== Succesors ===
trueSuccessor: v896 
falseSuccessor: v898 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v773 #trueSuccessor: v896 #falseSuccessor: v898  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v95|DWORD, v96|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = NEG value: v95|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v97|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B86 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 83]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v903 
=== Usages ===
=== Predecessor ===
v899 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v903  <|@  <|@
f <@~|@floating>@ <|@
tid i180 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 73]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32
=== Inputs ===
x: i637 
y: i169 
=== Succesors ===
=== Usages ===
j834 ?184 i196 v786 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i637 y: i169  <|@  <|@
f <@~|@floating>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 84]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i180 
y: i1154 
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i180 y: i1154  <|@  <|@
f <@*|@fixed>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 84]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v786 
=== Succesors ===
trueSuccessor: v900 
falseSuccessor: v902 
=== Usages ===
=== Predecessor ===
v896 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v786 #trueSuccessor: v900 #falseSuccessor: v902  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = DEC value: v96|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v98|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B85 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 84]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1159 
=== Usages ===
v794 
=== Predecessor ===
v903 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1159  <|@  <|@
f <@~|@floating>@ <|@
tid j833 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 83]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i181 
=== Succesors ===
=== Usages ===
v1185 v1182 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i181  <|@  <|@
f <@~|@floating>@ <|@
tid v1182 <|@
result [v67|QWORD[.] + v97|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a171 
index: j833 
=== Succesors ===
=== Usages ===
i1159 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a171 index: j833  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1159 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 83]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1182 
lastLocationAccess: - 
=== Succesors ===
next: v794 
=== Usages ===
v794 
=== Predecessor ===
v900 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1182 lastLocationAccess: - #next: v794  <|@  <|@
f <@~|@floating>@ <|@
tid j834 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 84]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i180 
=== Succesors ===
=== Usages ===
v1183 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i180  <|@  <|@
f <@~|@floating>@ <|@
tid v1183 <|@
result [v62|QWORD[.] + v98|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a863 
index: j834 
=== Succesors ===
=== Usages ===
v794 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a863 index: j834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 84]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v900 
address: v1183 
lastLocationAccess: - 
value: i1159 
stateAfter: - 
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
i1159 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v900 address: v1183 lastLocationAccess: - value: i1159 stateAfter: - #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:523) [bci: 88]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i865 
y: i185 
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i865 y: i185  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:523) [bci: 88]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
profileData: PROFILED designatedSuccessorProbability: 0.6223590908157148
stamp: void
=== Inputs ===
condition: v186 
=== Succesors ===
trueSuccessor: v188 
falseSuccessor: v187 
=== Usages ===
=== Predecessor ===
v794 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v186 #trueSuccessor: v188 #falseSuccessor: v187  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVSXB input: [v67|QWORD[.] + v97|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v98|DWORD * 1 + 16], y: v99|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v95|DWORD trueDestinationProbability: 0.6223590908157148 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B78 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:524) [bci: 91]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v907 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v907  <|@  <|@
f <@~|@floating>@ <|@
tid i214 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:524) [bci: 92]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32
=== Inputs ===
x: i637 
y: i212 
=== Succesors ===
=== Usages ===
j837 v810 i196 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i637 y: i212  <|@  <|@
f <@~|@floating>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:524) [bci: 103]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i214 
y: i1154 
=== Succesors ===
=== Usages ===
v907 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i214 y: i1154  <|@  <|@
f <@*|@fixed>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:524) [bci: 103]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v810 
=== Succesors ===
trueSuccessor: v904 
falseSuccessor: v906 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v810 #trueSuccessor: v904 #falseSuccessor: v906  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = LEA address: [v96|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v100|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:524) [bci: 103]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1160 
=== Usages ===
v818 
=== Predecessor ===
v907 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1160  <|@  <|@
f <@~|@floating>@ <|@
tid v1185 <|@
result [v66|QWORD[.] + v97|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a175 
index: j833 
=== Succesors ===
=== Usages ===
i1160 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a175 index: j833  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1160 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:524) [bci: 102]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1185 
lastLocationAccess: - 
=== Succesors ===
next: v818 
=== Usages ===
v818 
=== Predecessor ===
v904 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1185 lastLocationAccess: - #next: v818  <|@  <|@
f <@~|@floating>@ <|@
tid j837 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:524) [bci: 103]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i214 
=== Succesors ===
=== Usages ===
v1186 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i214  <|@  <|@
f <@~|@floating>@ <|@
tid v1186 <|@
result [v62|QWORD[.] + v100|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a863 
index: j837 
=== Succesors ===
=== Usages ===
v818 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a863 index: j837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:524) [bci: 103]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v904 
address: v1186 
lastLocationAccess: - 
value: i1160 
stateAfter: - 
=== Succesors ===
next: v195 
=== Usages ===
=== Predecessor ===
i1160 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v904 address: v1186 lastLocationAccess: - value: i1160 stateAfter: - #next: v195  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:527) [bci: 104]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
v818 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = MOVSXB input: [v66|QWORD[.] + v97|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v100|DWORD * 1 + 16], y: v101|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v100|DWORD] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:524) [bci: 103]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v905 
=== Usages ===
=== Predecessor ===
v907 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v905  <|@  <|@
tid ?184 <|@
d <@d|@=== Debug Properties ===
bci: 85
bytecode: iload_0
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, byte[])>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 84]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
sourceFile: Integer.java
sourceLine: 523
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?215 
values: i865 - a863 - - i180 i143 
=== Succesors ===
=== Usages ===
v905 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?215 values: i865 - a863 - - i180 i143  <|@  <|@
f <@*|@fixed>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 811
mayConvertToGuard: true
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:524) [bci: 103]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?184 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v906 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?184  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -207643 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:523) [bci: 85]
locals: v95|DWORD - v62|QWORD[.] - - v98|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:85, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600474593749434728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:527) [bci: 104]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v193  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:527) [bci: 104]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
v187 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v98|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i196 <|@
result v102|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:527) [bci: 104]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v194 
values: i180 i214 
=== Succesors ===
=== Usages ===
?197 i201 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v194 values: i180 i214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:527) [bci: 104]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v193 v195 
=== Succesors ===
next: v200 
=== Usages ===
i196 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v193 v195 #next: v200  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:527) [bci: 106]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
profileData: PROFILED designatedSuccessorProbability: 0.023714554158984935
stamp: void
=== Inputs ===
condition: v26 
=== Succesors ===
trueSuccessor: v199 
falseSuccessor: v198 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v26 #trueSuccessor: v199 #falseSuccessor: v198  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.023714554158984935 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:528) [bci: 109]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v911 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v911  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:528) [bci: 110]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32
=== Inputs ===
x: i196 
y: i169 
=== Succesors ===
=== Usages ===
j835 v797 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i196 y: i169  <|@  <|@
f <@~|@floating>@ <|@
tid v797 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:528) [bci: 117]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i201 
y: i1154 
=== Succesors ===
=== Usages ===
v911 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i201 y: i1154  <|@  <|@
f <@*|@fixed>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:528) [bci: 117]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v797 
=== Succesors ===
trueSuccessor: v908 
falseSuccessor: v910 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v797 #trueSuccessor: v908 #falseSuccessor: v910  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = DEC value: v102|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v103|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:528) [bci: 117]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v805 
=== Usages ===
v805 
=== Predecessor ===
v911 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v805  <|@  <|@
f <@~|@floating>@ <|@
tid j835 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:528) [bci: 117]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i201 
=== Succesors ===
=== Usages ===
v1184 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i201  <|@  <|@
f <@~|@floating>@ <|@
tid v1184 <|@
result [v62|QWORD[.] + v103|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a863 
index: j835 
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a863 index: j835  <|@  <|@
f <@~|@floating>@ <|@
tid i836 <|@
result byte[45|0x2d] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:528) [bci: 117]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: 45
stableDimension: 0
stamp: i8 [45]
stampKind: i8
value: byte[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:528) [bci: 117]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v908 
address: v1184 
lastLocationAccess: - 
value: i836 
stateAfter: - 
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v908 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v908 address: v1184 lastLocationAccess: - value: i836 stateAfter: - #next: v207  <|@  <|@
f <@*|@fixed>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:530) [bci: 118]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
v805 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v62|QWORD[.] + v103|DWORD * 1 + 16] y: 45 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:528) [bci: 117]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v909 
=== Usages ===
=== Predecessor ===
v911 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v909  <|@  <|@
tid ?197 <|@
d <@d|@=== Debug Properties ===
bci: 104
bytecode: iload
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, byte[])>
localsSize: 7
locksSize: 0
sourceFile: Integer.java
sourceLine: 527
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?215 
values: - - a863 - - i196 i143 
=== Succesors ===
=== Usages ===
v909 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?215 values: - - a863 - - i196 i143  <|@  <|@
f <@*|@fixed>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 798
mayConvertToGuard: true
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:528) [bci: 117]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?197 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v910 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?197  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -204315 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:527) [bci: 104]
locals: - - v62|QWORD[.] - - v102|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:104, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606968817085470084
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:530) [bci: 118]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v205  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:530) [bci: 118]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
v198 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:530) [bci: 118]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v205 v207 
=== Succesors ===
next: v795 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v205 v207 #next: v795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.count
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:839) [bci: 50]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1169 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1169 lastLocationAccess: - value: i8 stateAfter: - #next: v24  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:840) [bci: 54]
stamp: void
=== Inputs ===
memoryMap: - 
result: a1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v795 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a1  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 84]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v998 
=== Usages ===
=== Predecessor ===
v903 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v998  <|@  <|@
f <@~|@floating>@ <|@
tid i999 <|@
result int[-201499|0xfffffffffffcece5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 83]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: -201499
stableDimension: 0
stamp: i32 [-201499]
stampKind: i32
value: int[-201499|0xfffffffffffcece5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i995 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 83]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v992 
=== Predecessor ===
v902 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-201499|0xfffffffffffcece5]] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 83]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v993 
=== Usages ===
=== Predecessor ===
v899 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v993  <|@  <|@
f <@~|@floating>@ <|@
tid i994 <|@
result int[-198171|0xfffffffffffcf9e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 83]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
rawvalue: -198171
stableDimension: 0
stamp: i32 [-198171]
stampKind: i32
value: int[-198171|0xfffffffffffcf9e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i995 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 83]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v992 
=== Predecessor ===
v898 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-198171|0xfffffffffffcf9e5]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i995 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 83]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: i32 [-201499 - -198171] bits:1...100111x1x0x11100101
valueDescription: i32
=== Inputs ===
merge: v992 
values: i994 i999 
=== Succesors ===
=== Usages ===
v997 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v992 values: i994 i999  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 83]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v993 v998 
=== Succesors ===
next: v997 
=== Usages ===
i995 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v993 v998 #next: v997  <|@  <|@
tid ?634 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
localsSize: 4
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 835
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - - i8 
=== Succesors ===
=== Usages ===
?635 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - i8  <|@  <|@
tid ?635 <|@
d <@d|@=== Debug Properties ===
bci: 72
bytecode: aload_2
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, byte[])>
localsSize: 7
locksSize: 0
sourceFile: Integer.java
sourceLine: 522
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?634 
values: i865 - a863 - - i637 i143 
=== Succesors ===
=== Usages ===
v997 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?634 values: i865 - a863 - - i637 i143  <|@  <|@
f <@*|@fixed>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:522) [bci: 83]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
stamp: void
=== Inputs ===
stateBefore: ?635 
actionAndReason: i995 
speculation: j967 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v992 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?635 actionAndReason: i995 speculation: j967  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:522) [bci: 72]
locals: v95|DWORD - v62|QWORD[.] - - v96|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:72, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:834) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v913 
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v913  <|@  <|@
tid ?136 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
localsSize: 4
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 833
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 i1152 i8 
=== Succesors ===
=== Usages ===
?87 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i1152 i8  <|@  <|@
tid ?87 <|@
d <@d|@=== Debug Properties ===
bci: 38
bytecode: return
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 245
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?136 
=== Succesors ===
=== Usages ===
v913 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?136  <|@  <|@
f <@*|@fixed>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:834) [bci: 21]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x81281491]: UnreachedCode@6[HotSpotMethod<AbstractStringBuilder.append(int)>, 37]}
stamp: void
=== Inputs ===
stateBefore: ?87 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v915 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?87  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -233747 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
locals: v0|QWORD[.] v1|DWORD v11|DWORD v13|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v959 
=== Usages ===
=== Predecessor ===
v925 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v959  <|@  <|@
f <@~|@floating>@ <|@
tid j961 <|@
result long[1300|0x514] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i960 <|@
result int[-236051|0xfffffffffffc65ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
rawvalue: -236051
stableDimension: 0
stamp: i32 [-236051]
stampKind: i32
value: int[-236051|0xfffffffffffc65ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i962 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v958 
=== Predecessor ===
v924 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-236051|0xfffffffffffc65ed], long[1300|0x514]] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B41" "B43" "B45" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i962 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i32 [-239129 - -236051] bits:1...10001xxxx011110x1x1
valueDescription: i32
=== Inputs ===
merge: v958 
values: i960 i966 i969 i971 
=== Succesors ===
=== Usages ===
v964 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v958 values: i960 i966 i969 i971  <|@  <|@
f <@~|@floating>@ <|@
tid j963 <|@
result v106|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: i64 [0 - 1300] bits:0...0x0x000x0x00
valueDescription: i64
=== Inputs ===
merge: v958 
values: j961 j967 j967 j967 
=== Succesors ===
=== Usages ===
v964 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v958 values: j961 j967 j967 j967  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v959 v965 v968 v970 
=== Succesors ===
next: v964 
=== Usages ===
i962 j963 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v959 v965 v968 v970 #next: v964  <|@  <|@
f <@*|@fixed>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
stamp: void
=== Inputs ===
stateBefore: ?7 
actionAndReason: i962 
speculation: j963 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v958 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?7 actionAndReason: i962 speculation: j963  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v105|DWORD, v106|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v106|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@11fbf5cf slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = NEG value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0248451913249636 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606958633211231298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|DWORD, int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v5|DWORD, v6|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B21 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B20" 
    xhandlers
    flags 
    probability 4602752168055621283
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B20 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B19" 
    xhandlers
    flags 
    probability 4598323111924218927
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B19 y: -999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B18" 
    xhandlers
    flags 
    probability 4593895269862142147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B18 y: -9999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" 
    xhandlers
    flags 
    probability 4589468661642602652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B17 y: -99999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4585043307360852988
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B16 y: -999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4580619227439431527
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B15 y: -9999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4576196442633492882
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 y: -99999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4571774974036225136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: -999999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4567354843084355297
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = LEA address: [v6|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B12 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602532121406698170
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598172830319288879
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[2|0x2]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593743754731554715
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[3|0x3]] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589314678826940650
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[4|0x4]] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4584886816669611324
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[5|0x5]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4582818360249579440
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD, int[1|0x1]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580460188027533457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[6|0x6]] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576034812990629180
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[7|0x7]] destination: B15 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571610711976019636
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[8|0x8]] destination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567187905733353983
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[9|0x9]] destination: B13 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B13" "B21" "B20" "B19" "B18" "B17" "B16" "B15" "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607162073407212554
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = ADD (x: v8|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B12" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVSXB value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v13|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" "B47" 
    successors "B49" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.023714438988526654 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606968818122833350
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|DWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOV input: [v62|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 49, 50, 51, 52, ...}] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v63|DWORD trueDestinationProbability: 0.20456323728994374 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B71 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605339876961552022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|DWORD, v13|DWORD] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B69" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOVSXD value: v63|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = IMUL x: v68|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = SAR x: v69|QWORD y: 37 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV value: v70|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = IMUL x: v72|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = SUB (x: v73|DWORD, ~y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v74|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B69 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B68" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = DEC value: v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v75|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B67" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = LEA address: [v13|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v76|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = MOVSXB input: [v67|QWORD[.] + v74|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v75|DWORD * 1 + 16], y: v77|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVSXB input: [v66|QWORD[.] + v74|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v76|DWORD * 1 + 16], y: v78|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v76|DWORD, v72|DWORD] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" 
    successors "B58" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596612633779284459
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|DWORD, v80|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v80|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B62 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOVSXD value: v80|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = IMUL x: v81|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = SAR x: v82|QWORD y: 37 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOV value: v83|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = INC value: v84|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = IMUL x: v85|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = SUB (x: v86|DWORD, ~y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v87|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B65 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = DEC value: v79|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v88|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = LEA address: [v79|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v89|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = MOVSXB input: [v67|QWORD[.] + v87|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v88|DWORD * 1 + 16], y: v90|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVSXB input: [v66|QWORD[.] + v87|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v89|DWORD * 1 + 16], y: v91|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:518) [bci: 69]
locals: v85|DWORD - v62|QWORD[.] v85|DWORD v87|DWORD v89|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction SAFEPOINT temp: v92|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:69, 30] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v89|DWORD, v85|DWORD] destination: B61 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 4596538187644396969
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v80|DWORD, v79|DWORD] destination: B62 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B62" "B71" 
    successors "B73" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v95|DWORD, v96|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = NEG value: v95|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v97|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B86 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = DEC value: v96|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v98|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B85 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVSXB input: [v67|QWORD[.] + v97|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v98|DWORD * 1 + 16], y: v99|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v95|DWORD trueDestinationProbability: 0.6223590908157148 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B78 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = LEA address: [v96|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v100|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = MOVSXB input: [v66|QWORD[.] + v97|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v100|DWORD * 1 + 16], y: v101|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v100|DWORD] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600474593749434728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v98|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.023714554158984935 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606968817085470084
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B89" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SHL (x: v13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SUB (x: v18|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = ADD (x: v20|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = CMOVE (falseValue: v19|DWORD, ~trueValue: v22|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = ADD (x: v23|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v25|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B89 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B31" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SAR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SHL (x: v26|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v27|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B38" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD + 12], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v46|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v47|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD + v47|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA address: [v47|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|QWORD] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B32" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B30" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v57|QWORD, temp2: v58|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = COMPRESSPOINTER (input: v56|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v59|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v56|QWORD[.]) {temp: v60|QWORD, temp2: v61|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v56|QWORD[.]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = DEC value: v102|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v103|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v62|QWORD[.] + v103|DWORD * 1 + 16] y: 45 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582492443078313792
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction NULLCHECK address: [v45|QWORD[.]] state [bci:10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v40|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -204315 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:527) [bci: 104]
locals: - - v62|QWORD[.] - - v102|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:104, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-237081|0xfffffffffffc61e7], long[0|0x0]] destination: B41 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-189723|0xfffffffffffd1ae5]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-195611|0xfffffffffffd03e5]] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -233747 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
locals: v0|QWORD[.] v1|DWORD v11|DWORD v13|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-236051|0xfffffffffffc65ed], long[1300|0x514]] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-187419|0xfffffffffffd23e5]] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-238105|0xfffffffffffc5de7], long[0|0x0]] destination: B43 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-198171|0xfffffffffffcf9e5]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-180507|0xfffffffffffd3ee5]] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -207643 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:523) [bci: 85]
locals: v95|DWORD - v62|QWORD[.] - - v98|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:85, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-192283|0xfffffffffffd10e5]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: v80|DWORD - v62|QWORD[.] - - v79|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-201499|0xfffffffffffcece5]] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:522) [bci: 72]
locals: v95|DWORD - v62|QWORD[.] - - v96|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:72, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-239129|0xfffffffffffc59e7], long[0|0x0]] destination: B45 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B41" "B43" "B45" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v105|DWORD, v106|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v106|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-184091|0xfffffffffffd30e5]] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: v63|DWORD - v62|QWORD[.] - - v13|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #18         // count:int
     4: istore_2      
     5: iload_2       
     6: iload_1       
     7: invokestatic  #61         // java.lang.Integer.stringSize:(int)int
    10: iadd          
    11: istore_3      
    12: aload_0       
    13: iload_3       
    14: invokevirtual #24         // ensureCapacityInternal:(int)void
    17: aload_0       
    18: invokevirtual #19         // isLatin1:()boolean
    21: ifeq          37
    24: iload_1       
    25: iload_3       
    26: aload_0       
    27: getfield      #2          // value:byte[]
    30: invokestatic  #62         // java.lang.Integer.getChars:(int, int, byte[])int
    33: pop           
    34: goto          48
    37: iload_1       
    38: iload_2       
    39: iload_3       
    40: aload_0       
    41: getfield      #2          // value:byte[]
    44: invokestatic  #63         // java.lang.StringUTF16.getChars:(int, int, int, byte[])int
    47: pop           
    48: aload_0       
    49: iload_3       
    50: putfield      #18         // count:int
    53: aload_0       
    54: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@11fbf5cf slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = NEG value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0248451913249636 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606958633211231298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|DWORD, int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v5|DWORD, v6|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B21 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B20" 
    xhandlers
    flags 
    probability 4602752168055621283
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B20 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B19" 
    xhandlers
    flags 
    probability 4598323111924218927
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B19 y: -999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B18" 
    xhandlers
    flags 
    probability 4593895269862142147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B18 y: -9999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" 
    xhandlers
    flags 
    probability 4589468661642602652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B17 y: -99999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4585043307360852988
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B16 y: -999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4580619227439431527
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B15 y: -9999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4576196442633492882
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 y: -99999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4571774974036225136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: -999999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4567354843084355297
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = LEA address: [v6|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B12 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602532121406698170
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598172830319288879
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[2|0x2]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593743754731554715
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[3|0x3]] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589314678826940650
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[4|0x4]] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4584886816669611324
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[5|0x5]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4582818360249579440
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD, int[1|0x1]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580460188027533457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[6|0x6]] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576034812990629180
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[7|0x7]] destination: B15 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571610711976019636
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[8|0x8]] destination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567187905733353983
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[9|0x9]] destination: B13 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B13" "B21" "B20" "B19" "B18" "B17" "B16" "B15" "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607162073407212554
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = ADD (x: v8|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B12" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVSXB value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v13|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" "B47" 
    successors "B49" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.023714438988526654 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606968818122833350
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|DWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOV input: [v62|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 49, 50, 51, 52, ...}] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v63|DWORD trueDestinationProbability: 0.20456323728994374 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B71 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605339876961552022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|DWORD, v13|DWORD] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B69" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOVSXD value: v63|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = IMUL x: v68|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = SAR x: v69|QWORD y: 37 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV value: v70|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = IMUL x: v72|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = SUB (x: v73|DWORD, ~y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v74|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B69 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B68" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = DEC value: v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v75|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B67" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = LEA address: [v13|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v76|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = MOVSXB input: [v67|QWORD[.] + v74|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v75|DWORD * 1 + 16], y: v77|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVSXB input: [v110|QWORD[.] + v74|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v76|DWORD * 1 + 16], y: v78|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v76|DWORD, v72|DWORD] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" 
    successors "B58" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596612633779284459
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|DWORD, v80|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v80|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B62 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOVSXD value: v80|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = IMUL x: v81|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = SAR x: v82|QWORD y: 37 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOV value: v83|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = INC value: v84|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = IMUL x: v85|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = SUB (x: v86|DWORD, ~y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v87|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B65 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = DEC value: v79|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v88|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = LEA address: [v79|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v89|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = MOVSXB input: [v67|QWORD[.] + v87|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v88|DWORD * 1 + 16], y: v90|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVSXB input: [v110|QWORD[.] + v87|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v89|DWORD * 1 + 16], y: v91|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:518) [bci: 69]
locals: v85|DWORD - v62|QWORD[.] v85|DWORD v87|DWORD v89|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction SAFEPOINT temp: v92|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:69, 30] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v89|DWORD, v85|DWORD] destination: B61 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 4596538187644396969
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v80|DWORD, v79|DWORD] destination: B62 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B62" "B71" 
    successors "B73" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v95|DWORD, v96|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = NEG value: v95|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v97|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B86 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = DEC value: v96|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v98|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B85 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVSXB input: [v67|QWORD[.] + v97|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v98|DWORD * 1 + 16], y: v99|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v95|DWORD trueDestinationProbability: 0.6223590908157148 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B78 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = LEA address: [v96|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v100|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = MOVSXB input: [v109|QWORD[.] + v97|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v100|DWORD * 1 + 16], y: v101|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v100|DWORD] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600474593749434728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v98|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.023714554158984935 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606968817085470084
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B89" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SHL (x: v13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SUB (x: v18|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = ADD (x: v20|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = CMOVE (falseValue: v19|DWORD, ~trueValue: v22|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = ADD (x: v23|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v25|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B89 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B31" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SAR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SHL (x: v26|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v27|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B38" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD + 12], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v46|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v47|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD + v47|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA address: [v47|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|QWORD] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B32" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B30" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v57|QWORD, temp2: v58|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = COMPRESSPOINTER (input: v56|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v59|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v56|QWORD[.]) {temp: v60|QWORD, temp2: v61|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v56|QWORD[.]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = DEC value: v102|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v103|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v62|QWORD[.] + v103|DWORD * 1 + 16] y: 45 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582492443078313792
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v107|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction NULLCHECK address: [v45|QWORD[.]] state [bci:10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v40|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v108|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -204315 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:527) [bci: 104]
locals: - - v62|QWORD[.] - - v102|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:104, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-237081|0xfffffffffffc61e7], long[0|0x0]] destination: B41 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-189723|0xfffffffffffd1ae5]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-195611|0xfffffffffffd03e5]] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -233747 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
locals: v0|QWORD[.] v1|DWORD v11|DWORD v13|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-236051|0xfffffffffffc65ed], long[1300|0x514]] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-187419|0xfffffffffffd23e5]] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-238105|0xfffffffffffc5de7], long[0|0x0]] destination: B43 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-198171|0xfffffffffffcf9e5]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-180507|0xfffffffffffd3ee5]] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -207643 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:523) [bci: 85]
locals: v95|DWORD - v62|QWORD[.] - - v98|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:85, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-192283|0xfffffffffffd10e5]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: v80|DWORD - v62|QWORD[.] - - v79|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-201499|0xfffffffffffcece5]] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:522) [bci: 72]
locals: v95|DWORD - v62|QWORD[.] - - v96|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:72, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-239129|0xfffffffffffc59e7], long[0|0x0]] destination: B45 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B41" "B43" "B45" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v105|DWORD, v106|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v106|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-184091|0xfffffffffffd30e5]] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: v63|DWORD - v62|QWORD[.] - - v13|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #18         // count:int
     4: istore_2      
     5: iload_2       
     6: iload_1       
     7: invokestatic  #61         // java.lang.Integer.stringSize:(int)int
    10: iadd          
    11: istore_3      
    12: aload_0       
    13: iload_3       
    14: invokevirtual #24         // ensureCapacityInternal:(int)void
    17: aload_0       
    18: invokevirtual #19         // isLatin1:()boolean
    21: ifeq          37
    24: iload_1       
    25: iload_3       
    26: aload_0       
    27: getfield      #2          // value:byte[]
    30: invokestatic  #62         // java.lang.Integer.getChars:(int, int, byte[])int
    33: pop           
    34: goto          48
    37: iload_1       
    38: iload_2       
    39: iload_3       
    40: aload_0       
    41: getfield      #2          // value:byte[]
    44: invokestatic  #63         // java.lang.StringUTF16.getChars:(int, int, int, byte[])int
    47: pop           
    48: aload_0       
    49: iload_3       
    50: putfield      #18         // count:int
    53: aload_0       
    54: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@11fbf5cf slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = NEG value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0248451913249636 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606958633211231298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|DWORD, int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v5|DWORD, v6|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B21 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B20" 
    xhandlers
    flags 
    probability 4602752168055621283
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B20 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B19" 
    xhandlers
    flags 
    probability 4598323111924218927
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B19 y: -999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B18" 
    xhandlers
    flags 
    probability 4593895269862142147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B18 y: -9999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" 
    xhandlers
    flags 
    probability 4589468661642602652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B17 y: -99999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4585043307360852988
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B16 y: -999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4580619227439431527
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B15 y: -9999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4576196442633492882
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 y: -99999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4571774974036225136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: -999999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4567354843084355297
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = LEA address: [v6|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B12 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602532121406698170
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598172830319288879
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[2|0x2]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593743754731554715
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[3|0x3]] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589314678826940650
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[4|0x4]] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4584886816669611324
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[5|0x5]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4582818360249579440
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD, int[1|0x1]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580460188027533457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[6|0x6]] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576034812990629180
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[7|0x7]] destination: B15 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571610711976019636
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[8|0x8]] destination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567187905733353983
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[9|0x9]] destination: B13 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B13" "B21" "B20" "B19" "B18" "B17" "B16" "B15" "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607162073407212554
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = ADD (x: v8|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B12" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVSXB value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v13|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" "B47" 
    successors "B49" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.023714438988526654 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606968818122833350
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|DWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOV input: [v62|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 49, 50, 51, 52, ...}] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v63|DWORD trueDestinationProbability: 0.20456323728994374 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B71 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605339876961552022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|DWORD, v13|DWORD] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B69" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOVSXD value: v63|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = IMUL x: v68|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = SAR x: v69|QWORD y: 37 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV value: v70|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = IMUL x: v72|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = SUB (x: v73|DWORD, ~y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v74|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B69 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B68" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = DEC value: v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v75|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B67" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = LEA address: [v13|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v76|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = MOVSXB input: [v67|QWORD[.] + v74|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v75|DWORD * 1 + 16], y: v77|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVSXB input: [v110|QWORD[.] + v74|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v76|DWORD * 1 + 16], y: v78|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v76|DWORD, v72|DWORD] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" 
    successors "B58" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596612633779284459
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|DWORD, v80|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v80|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B62 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOVSXD value: v80|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = IMUL x: v81|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = SAR x: v82|QWORD y: 37 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOV value: v83|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = INC value: v84|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = IMUL x: v85|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = SUB (x: v86|DWORD, ~y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v87|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B65 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = DEC value: v79|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v88|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = LEA address: [v79|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v89|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = MOVSXB input: [v67|QWORD[.] + v87|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v88|DWORD * 1 + 16], y: v90|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVSXB input: [v110|QWORD[.] + v87|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v89|DWORD * 1 + 16], y: v91|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:518) [bci: 69]
locals: v85|DWORD - v62|QWORD[.] v85|DWORD v87|DWORD v89|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction SAFEPOINT temp: v92|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:69, 30] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v89|DWORD, v85|DWORD] destination: B61 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 4596538187644396969
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v80|DWORD, v79|DWORD] destination: B62 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B62" "B71" 
    successors "B73" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v95|DWORD, v96|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = NEG value: v95|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v97|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B86 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = DEC value: v96|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v98|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B85 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVSXB input: [v67|QWORD[.] + v97|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v98|DWORD * 1 + 16], y: v99|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v95|DWORD trueDestinationProbability: 0.6223590908157148 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B78 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = LEA address: [v96|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v100|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = MOVSXB input: [v109|QWORD[.] + v97|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v100|DWORD * 1 + 16], y: v101|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v100|DWORD] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600474593749434728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v98|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.023714554158984935 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606968817085470084
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B89" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SHL (x: v13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SUB (x: v18|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = ADD (x: v20|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = CMOVE (falseValue: v19|DWORD, ~trueValue: v22|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = ADD (x: v23|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v25|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B89 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B31" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SAR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SHL (x: v26|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v27|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B38" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD + 12], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v46|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v47|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD + v47|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA address: [v47|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|QWORD] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B32" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B30" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v57|QWORD, temp2: v58|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = COMPRESSPOINTER (input: v56|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v59|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v56|QWORD[.]) {temp: v60|QWORD, temp2: v61|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v56|QWORD[.]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = DEC value: v102|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v103|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v62|QWORD[.] + v103|DWORD * 1 + 16] y: 45 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582492443078313792
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v107|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction NULLCHECK address: [v45|QWORD[.]] state [bci:10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v40|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v108|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -204315 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:527) [bci: 104]
locals: - - v62|QWORD[.] - - v102|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:104, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-237081|0xfffffffffffc61e7], long[0|0x0]] destination: B41 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-189723|0xfffffffffffd1ae5]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-195611|0xfffffffffffd03e5]] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -233747 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
locals: v0|QWORD[.] v1|DWORD v11|DWORD v13|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-236051|0xfffffffffffc65ed], long[1300|0x514]] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-187419|0xfffffffffffd23e5]] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-238105|0xfffffffffffc5de7], long[0|0x0]] destination: B43 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-198171|0xfffffffffffcf9e5]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-180507|0xfffffffffffd3ee5]] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -207643 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:523) [bci: 85]
locals: v95|DWORD - v62|QWORD[.] - - v98|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:85, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-192283|0xfffffffffffd10e5]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: v80|DWORD - v62|QWORD[.] - - v79|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-201499|0xfffffffffffcece5]] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:522) [bci: 72]
locals: v95|DWORD - v62|QWORD[.] - - v96|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:72, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-239129|0xfffffffffffc59e7], long[0|0x0]] destination: B45 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B41" "B43" "B45" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v105|DWORD, v106|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v106|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-184091|0xfffffffffffd30e5]] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: v63|DWORD - v62|QWORD[.] - - v13|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #18         // count:int
     4: istore_2      
     5: iload_2       
     6: iload_1       
     7: invokestatic  #61         // java.lang.Integer.stringSize:(int)int
    10: iadd          
    11: istore_3      
    12: aload_0       
    13: iload_3       
    14: invokevirtual #24         // ensureCapacityInternal:(int)void
    17: aload_0       
    18: invokevirtual #19         // isLatin1:()boolean
    21: ifeq          37
    24: iload_1       
    25: iload_3       
    26: aload_0       
    27: getfield      #2          // value:byte[]
    30: invokestatic  #62         // java.lang.Integer.getChars:(int, int, byte[])int
    33: pop           
    34: goto          48
    37: iload_1       
    38: iload_2       
    39: iload_3       
    40: aload_0       
    41: getfield      #2          // value:byte[]
    44: invokestatic  #63         // java.lang.StringUTF16.getChars:(int, int, int, byte[])int
    47: pop           
    48: aload_0       
    49: iload_3       
    50: putfield      #18         // count:int
    53: aload_0       
    54: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@11fbf5cf slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = NEG value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0248451913249636 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606958633211231298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|DWORD, int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v5|DWORD, v6|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B21 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B20" 
    xhandlers
    flags 
    probability 4602752168055621283
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B20 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B19" 
    xhandlers
    flags 
    probability 4598323111924218927
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B19 y: -999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B18" 
    xhandlers
    flags 
    probability 4593895269862142147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B18 y: -9999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" 
    xhandlers
    flags 
    probability 4589468661642602652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B17 y: -99999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4585043307360852988
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B16 y: -999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4580619227439431527
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B15 y: -9999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4576196442633492882
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 y: -99999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4571774974036225136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: -999999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4567354843084355297
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = LEA address: [v6|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B12 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602532121406698170
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598172830319288879
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[2|0x2]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593743754731554715
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[3|0x3]] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589314678826940650
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[4|0x4]] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4584886816669611324
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[5|0x5]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4582818360249579440
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD, int[1|0x1]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580460188027533457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[6|0x6]] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576034812990629180
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[7|0x7]] destination: B15 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571610711976019636
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[8|0x8]] destination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567187905733353983
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[9|0x9]] destination: B13 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B13" "B21" "B20" "B19" "B18" "B17" "B16" "B15" "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607162073407212554
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = ADD (x: v8|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B12" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVSXB value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v13|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" "B47" 
    successors "B49" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.023714438988526654 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606968818122833350
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|DWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOV input: [v62|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 49, 50, 51, 52, ...}] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v63|DWORD trueDestinationProbability: 0.20456323728994374 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B71 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605339876961552022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|DWORD, v13|DWORD] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B69" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOVSXD value: v63|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = IMUL x: v68|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = SAR x: v69|QWORD y: 37 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV value: v70|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = IMUL x: v72|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = SUB (x: v73|DWORD, ~y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v74|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B69 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B68" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = DEC value: v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v75|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B67" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = LEA address: [v13|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v76|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = MOVSXB input: [v67|QWORD[.] + v74|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v75|DWORD * 1 + 16], y: v77|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVSXB input: [v110|QWORD[.] + v74|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v76|DWORD * 1 + 16], y: v78|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v76|DWORD, v72|DWORD] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" 
    successors "B58" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596612633779284459
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|DWORD, v80|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v80|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B62 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOVSXD value: v80|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = IMUL x: v81|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = SAR x: v82|QWORD y: 37 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOV value: v83|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = INC value: v84|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = IMUL x: v85|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = SUB (x: v86|DWORD, ~y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v87|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B65 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = DEC value: v79|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v88|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = LEA address: [v79|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v89|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = MOVSXB input: [v67|QWORD[.] + v87|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v88|DWORD * 1 + 16], y: v90|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVSXB input: [v110|QWORD[.] + v87|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v89|DWORD * 1 + 16], y: v91|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:518) [bci: 69]
locals: v85|DWORD - v62|QWORD[.] v85|DWORD v87|DWORD v89|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction SAFEPOINT temp: v92|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:69, 30] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v89|DWORD, v85|DWORD] destination: B61 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 4596538187644396969
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v80|DWORD, v79|DWORD] destination: B62 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B62" "B71" 
    successors "B73" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v95|DWORD, v96|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = NEG value: v95|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v97|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B86 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = DEC value: v96|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v98|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B85 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVSXB input: [v67|QWORD[.] + v97|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v98|DWORD * 1 + 16], y: v99|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v95|DWORD trueDestinationProbability: 0.6223590908157148 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B78 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = LEA address: [v96|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v100|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = MOVSXB input: [v109|QWORD[.] + v97|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v100|DWORD * 1 + 16], y: v101|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v100|DWORD] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600474593749434728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v98|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.023714554158984935 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606968817085470084
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B89" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SHL (x: v13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SUB (x: v18|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = ADD (x: v20|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = CMOVE (falseValue: v19|DWORD, ~trueValue: v22|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = ADD (x: v23|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v25|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B89 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B31" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SAR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SHL (x: v26|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v27|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B38" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD + 12], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v46|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v47|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD + v47|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA address: [v47|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|QWORD] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B32" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B30" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v57|QWORD, temp2: v58|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = COMPRESSPOINTER (input: v56|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v59|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v56|QWORD[.]) {temp: v60|QWORD, temp2: v61|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v56|QWORD[.]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = DEC value: v102|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v103|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v62|QWORD[.] + v103|DWORD * 1 + 16] y: 45 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582492443078313792
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v107|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction NULLCHECK address: [v45|QWORD[.]] state [bci:10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v40|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v108|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -204315 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:527) [bci: 104]
locals: - - v62|QWORD[.] - - v102|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:104, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-237081|0xfffffffffffc61e7], long[0|0x0]] destination: B41 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-189723|0xfffffffffffd1ae5]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-195611|0xfffffffffffd03e5]] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -233747 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
locals: v0|QWORD[.] v1|DWORD v11|DWORD v13|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-236051|0xfffffffffffc65ed], long[1300|0x514]] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-187419|0xfffffffffffd23e5]] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-238105|0xfffffffffffc5de7], long[0|0x0]] destination: B43 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-198171|0xfffffffffffcf9e5]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-180507|0xfffffffffffd3ee5]] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -207643 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:523) [bci: 85]
locals: v95|DWORD - v62|QWORD[.] - - v98|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:85, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-192283|0xfffffffffffd10e5]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: v80|DWORD - v62|QWORD[.] - - v79|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-201499|0xfffffffffffcece5]] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:522) [bci: 72]
locals: v95|DWORD - v62|QWORD[.] - - v96|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:72, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-239129|0xfffffffffffc59e7], long[0|0x0]] destination: B45 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B41" "B43" "B45" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v105|DWORD, v106|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v106|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-184091|0xfffffffffffd30e5]] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: v63|DWORD - v62|QWORD[.] - - v13|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #18         // count:int
     4: istore_2      
     5: iload_2       
     6: iload_1       
     7: invokestatic  #61         // java.lang.Integer.stringSize:(int)int
    10: iadd          
    11: istore_3      
    12: aload_0       
    13: iload_3       
    14: invokevirtual #24         // ensureCapacityInternal:(int)void
    17: aload_0       
    18: invokevirtual #19         // isLatin1:()boolean
    21: ifeq          37
    24: iload_1       
    25: iload_3       
    26: aload_0       
    27: getfield      #2          // value:byte[]
    30: invokestatic  #62         // java.lang.Integer.getChars:(int, int, byte[])int
    33: pop           
    34: goto          48
    37: iload_1       
    38: iload_2       
    39: iload_3       
    40: aload_0       
    41: getfield      #2          // value:byte[]
    44: invokestatic  #63         // java.lang.StringUTF16.getChars:(int, int, int, byte[])int
    47: pop           
    48: aload_0       
    49: iload_3       
    50: putfield      #18         // count:int
    53: aload_0       
    54: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@11fbf5cf slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = NEG value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0248451913249636 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606958633211231298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|DWORD, int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v5|DWORD, v6|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B21 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B20" 
    xhandlers
    flags 
    probability 4602752168055621283
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B20 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B19" 
    xhandlers
    flags 
    probability 4598323111924218927
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B19 y: -999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B18" 
    xhandlers
    flags 
    probability 4593895269862142147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B18 y: -9999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" 
    xhandlers
    flags 
    probability 4589468661642602652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B17 y: -99999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4585043307360852988
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B16 y: -999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4580619227439431527
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B15 y: -9999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4576196442633492882
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 y: -99999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4571774974036225136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: -999999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4567354843084355297
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = LEA address: [v6|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B12 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602532121406698170
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598172830319288879
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[2|0x2]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593743754731554715
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[3|0x3]] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589314678826940650
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[4|0x4]] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4584886816669611324
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[5|0x5]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4582818360249579440
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD, int[1|0x1]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580460188027533457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[6|0x6]] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576034812990629180
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[7|0x7]] destination: B15 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571610711976019636
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[8|0x8]] destination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567187905733353983
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[9|0x9]] destination: B13 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B13" "B21" "B20" "B19" "B18" "B17" "B16" "B15" "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607162073407212554
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = ADD (x: v8|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B12" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVSXB value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v13|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" "B47" 
    successors "B49" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.023714438988526654 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606968818122833350
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|DWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOV input: [v62|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 49, 50, 51, 52, ...}] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v63|DWORD trueDestinationProbability: 0.20456323728994374 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B71 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605339876961552022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|DWORD, v13|DWORD] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B69" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOVSXD value: v63|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = IMUL x: v68|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = SAR x: v69|QWORD y: 37 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV value: v70|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = IMUL x: v72|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = SUB (x: v73|DWORD, ~y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v74|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B69 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B68" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = DEC value: v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v75|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B67" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = LEA address: [v13|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v76|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = MOVSXB input: [v67|QWORD[.] + v74|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v75|DWORD * 1 + 16], y: v77|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVSXB input: [v110|QWORD[.] + v74|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v76|DWORD * 1 + 16], y: v78|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v76|DWORD, v72|DWORD] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" 
    successors "B58" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596612633779284459
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|DWORD, v80|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v80|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B62 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOVSXD value: v80|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = IMUL x: v81|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = SAR x: v82|QWORD y: 37 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOV value: v83|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = INC value: v84|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = IMUL x: v85|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = SUB (x: v86|DWORD, ~y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v87|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B65 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = DEC value: v79|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v88|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = LEA address: [v79|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v89|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = MOVSXB input: [v67|QWORD[.] + v87|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v88|DWORD * 1 + 16], y: v90|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVSXB input: [v110|QWORD[.] + v87|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v89|DWORD * 1 + 16], y: v91|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:518) [bci: 69]
locals: v85|DWORD - v62|QWORD[.] v85|DWORD v87|DWORD v89|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction SAFEPOINT temp: v92|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:69, 30] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v89|DWORD, v85|DWORD] destination: B61 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 4596538187644396969
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v80|DWORD, v79|DWORD] destination: B62 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B62" "B71" 
    successors "B73" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v95|DWORD, v96|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = NEG value: v95|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v97|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B86 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = DEC value: v96|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v98|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B85 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVSXB input: [v67|QWORD[.] + v97|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v98|DWORD * 1 + 16], y: v99|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v95|DWORD trueDestinationProbability: 0.6223590908157148 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B78 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = LEA address: [v96|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v100|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = MOVSXB input: [v109|QWORD[.] + v97|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[.] + v100|DWORD * 1 + 16], y: v101|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v100|DWORD] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600474593749434728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v98|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.023714554158984935 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606968817085470084
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B89" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SHL (x: v13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SUB (x: v18|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = ADD (x: v20|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = CMOVE (falseValue: v19|DWORD, ~trueValue: v22|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = ADD (x: v23|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v25|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B89 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B31" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SAR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SHL (x: v26|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v27|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B38" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD + 12], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v46|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v47|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v40|QWORD + v47|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA address: [v47|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|QWORD] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B32" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B30" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v57|QWORD, temp2: v58|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = COMPRESSPOINTER (input: v56|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v59|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v56|QWORD[.]) {temp: v60|QWORD, temp2: v61|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v56|QWORD[.]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = DEC value: v102|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v103|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v62|QWORD[.] + v103|DWORD * 1 + 16] y: 45 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582492443078313792
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v107|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction NULLCHECK address: [v45|QWORD[.]] state [bci:10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v40|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v108|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -204315 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:527) [bci: 104]
locals: - - v62|QWORD[.] - - v102|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:104, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-237081|0xfffffffffffc61e7], long[0|0x0]] destination: B41 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-189723|0xfffffffffffd1ae5]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-195611|0xfffffffffffd03e5]] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -233747 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
locals: v0|QWORD[.] v1|DWORD v11|DWORD v13|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-236051|0xfffffffffffc65ed], long[1300|0x514]] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-187419|0xfffffffffffd23e5]] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-238105|0xfffffffffffc5de7], long[0|0x0]] destination: B43 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-198171|0xfffffffffffcf9e5]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-180507|0xfffffffffffd3ee5]] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -207643 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:523) [bci: 85]
locals: v95|DWORD - v62|QWORD[.] - - v98|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:85, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-192283|0xfffffffffffd10e5]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: v80|DWORD - v62|QWORD[.] - - v79|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-201499|0xfffffffffffcece5]] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:522) [bci: 72]
locals: v95|DWORD - v62|QWORD[.] - - v96|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:72, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-239129|0xfffffffffffc59e7], long[0|0x0]] destination: B45 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B41" "B43" "B45" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v105|DWORD, v106|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v106|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-184091|0xfffffffffffd30e5]] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: v63|DWORD - v62|QWORD[.] - - v13|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #18         // count:int
     4: istore_2      
     5: iload_2       
     6: iload_1       
     7: invokestatic  #61         // java.lang.Integer.stringSize:(int)int
    10: iadd          
    11: istore_3      
    12: aload_0       
    13: iload_3       
    14: invokevirtual #24         // ensureCapacityInternal:(int)void
    17: aload_0       
    18: invokevirtual #19         // isLatin1:()boolean
    21: ifeq          37
    24: iload_1       
    25: iload_3       
    26: aload_0       
    27: getfield      #2          // value:byte[]
    30: invokestatic  #62         // java.lang.Integer.getChars:(int, int, byte[])int
    33: pop           
    34: goto          48
    37: iload_1       
    38: iload_2       
    39: iload_3       
    40: aload_0       
    41: getfield      #2          // value:byte[]
    44: invokestatic  #63         // java.lang.StringUTF16.getChars:(int, int, int, byte[])int
    47: pop           
    48: aload_0       
    49: iload_3       
    50: putfield      #18         // count:int
    53: aload_0       
    54: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@11fbf5cf slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v4|DWORD = NEG value: v1|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0248451913249636 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606958633211231298
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [v4|DWORD, int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [v5|DWORD, v6|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B21 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B20" 
    xhandlers
    flags 
    probability 4602752168055621283
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B20 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B19" 
    xhandlers
    flags 
    probability 4598323111924218927
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B19 y: -999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B18" 
    xhandlers
    flags 
    probability 4593895269862142147
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B18 y: -9999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" 
    xhandlers
    flags 
    probability 4589468661642602652
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B17 y: -99999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4585043307360852988
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B16 y: -999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4580619227439431527
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B15 y: -9999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4576196442633492882
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 y: -99999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4571774974036225136
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: -999999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4567354843084355297
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction v7|DWORD = LEA address: [v6|DWORD + 10] size: DWORD <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B12 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602532121406698170
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598172830319288879
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [int[2|0x2]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593743754731554715
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [int[3|0x3]] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589314678826940650
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [int[4|0x4]] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4584886816669611324
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [int[5|0x5]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4582818360249579440
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [v1|DWORD, int[1|0x1]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580460188027533457
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [int[6|0x6]] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576034812990629180
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [int[7|0x7]] destination: B15 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571610711976019636
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [int[8|0x8]] destination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567187905733353983
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [int[9|0x9]] destination: B13 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B13" "B21" "B20" "B19" "B18" "B17" "B16" "B15" "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607162073407212554
    begin_IR
      LIR
      nr  276  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction v9|DWORD = ADD (x: v8|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B12" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  290  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction v11|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  320  <|@ instruction v12|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  322  <|@ instruction v13|DWORD = ADD (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  324  <|@ instruction v14|DWORD = MOVSXB value: v12|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction v15|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction v16|DWORD = SUB (x: v13|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr  332  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" "B47" 
    successors "B49" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  346  <|@ instruction [v62|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction TESTBYTEBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.023714438988526654 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606968818122833350
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [v4|DWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  380  <|@ instruction [v63|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction v64|DWORD = MOV input: [v62|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  404  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction v65|DWORD = SETCC condition: < <|@ <|@
      nr  408  <|@ instruction v67|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 49, 50, 51, 52, ...}] <|@ <|@
      nr  410  <|@ instruction CMPCONSTBRANCH x: v63|DWORD trueDestinationProbability: 0.20456323728994374 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B71 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605339876961552022
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [v63|DWORD, v13|DWORD] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B69" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction v68|QWORD = MOVSXD value: v63|DWORD size: QWORD <|@ <|@
      nr  456  <|@ instruction v69|QWORD = IMUL x: v68|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr  458  <|@ instruction v70|QWORD = SAR x: v69|QWORD y: 37 size: QWORD <|@ <|@
      nr  460  <|@ instruction v71|DWORD = MOV value: v70|QWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction v72|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr  464  <|@ instruction v73|DWORD = IMUL x: v72|DWORD y: 100 size: DWORD <|@ <|@
      nr  466  <|@ instruction v74|DWORD = SUB (x: v73|DWORD, ~y: v63|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction CMPCONSTBRANCH x: v74|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B69 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B68" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction v75|DWORD = DEC value: v13|DWORD size: DWORD <|@ <|@
      nr  484  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v75|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B67" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction v76|DWORD = LEA address: [v13|DWORD - 2] size: DWORD <|@ <|@
      nr  504  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v76|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction v110|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction v77|DWORD = MOVSXB input: [v67|QWORD[.] + v74|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOVB (x: [v62|QWORD[.] + v75|DWORD * 1 + 16], y: v77|DWORD) size: BYTE <|@ <|@
      nr  528  <|@ instruction v78|DWORD = MOVSXB input: [v110|QWORD[.] + v74|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  530  <|@ instruction MOVB (x: [v62|QWORD[.] + v76|DWORD * 1 + 16], y: v78|DWORD) size: BYTE <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [v76|DWORD, v72|DWORD] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" 
    successors "B58" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596612633779284459
    begin_IR
      LIR
      nr  534  <|@ instruction [v79|DWORD, v80|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction CMPCONSTBRANCH x: v80|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B62 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction v81|QWORD = MOVSXD value: v80|DWORD size: QWORD <|@ <|@
      nr  580  <|@ instruction v82|QWORD = IMUL x: v81|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr  582  <|@ instruction v83|QWORD = SAR x: v82|QWORD y: 37 size: QWORD <|@ <|@
      nr  584  <|@ instruction v84|DWORD = MOV value: v83|QWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction v85|DWORD = INC value: v84|DWORD size: DWORD <|@ <|@
      nr  588  <|@ instruction v86|DWORD = IMUL x: v85|DWORD y: 100 size: DWORD <|@ <|@
      nr  590  <|@ instruction v87|DWORD = SUB (x: v86|DWORD, ~y: v80|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction CMPCONSTBRANCH x: v87|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B65 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction v88|DWORD = DEC value: v79|DWORD size: DWORD <|@ <|@
      nr  608  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v88|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction v89|DWORD = LEA address: [v79|DWORD - 2] size: DWORD <|@ <|@
      nr  628  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v89|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction v90|DWORD = MOVSXB input: [v67|QWORD[.] + v87|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction MOVB (x: [v62|QWORD[.] + v88|DWORD * 1 + 16], y: v90|DWORD) size: BYTE <|@ <|@
      nr  654  <|@ instruction v91|DWORD = MOVSXB input: [v110|QWORD[.] + v87|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction MOVB (x: [v62|QWORD[.] + v89|DWORD * 1 + 16], y: v91|DWORD) size: BYTE <|@ <|@
      nr  658  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:518) [bci: 69]
locals: v85|DWORD - v62|QWORD[.] v85|DWORD v87|DWORD v89|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction SAFEPOINT temp: v92|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:69, 30] <|@ <|@
      nr  660  <|@ instruction JUMP ~outgoingValues: [v89|DWORD, v85|DWORD] destination: B61 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 4596538187644396969
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [v80|DWORD, v79|DWORD] destination: B62 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B62" "B71" 
    successors "B73" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  672  <|@ instruction [v95|DWORD, v96|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction v97|DWORD = NEG value: v95|DWORD size: DWORD <|@ <|@
      nr  686  <|@ instruction CMPCONSTBRANCH x: v97|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B86 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction v98|DWORD = DEC value: v96|DWORD size: DWORD <|@ <|@
      nr  702  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v98|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B85 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction v99|DWORD = MOVSXB input: [v67|QWORD[.] + v97|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  720  <|@ instruction MOVB (x: [v62|QWORD[.] + v98|DWORD * 1 + 16], y: v99|DWORD) size: BYTE <|@ <|@
      nr  722  <|@ instruction CMPCONSTBRANCH x: v95|DWORD trueDestinationProbability: 0.6223590908157148 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B78 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction v100|DWORD = LEA address: [v96|DWORD - 2] size: DWORD <|@ <|@
      nr  742  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v100|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction v109|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction v101|DWORD = MOVSXB input: [v109|QWORD[.] + v97|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  760  <|@ instruction MOVB (x: [v62|QWORD[.] + v100|DWORD * 1 + 16], y: v101|DWORD) size: BYTE <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [v100|DWORD] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600474593749434728
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [v98|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  774  <|@ instruction [v102|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.023714554158984935 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606968817085470084
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v13|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B89" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction v18|DWORD = SHL (x: v13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  858  <|@ instruction v19|DWORD = SUB (x: v18|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction v21|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  862  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ instruction v20|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  866  <|@ instruction v22|DWORD = ADD (x: v20|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction CMP (x: v22|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr  870  <|@ instruction v23|DWORD = CMOVE (falseValue: v19|DWORD, ~trueValue: v22|DWORD) condition: > <|@ <|@
      nr  872  <|@ instruction v24|DWORD = ADD (x: v23|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction v25|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr  876  <|@ instruction CMPCONSTBRANCH x: v25|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B89 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B31" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction v26|DWORD = SAR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  902  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction v27|DWORD = SHL (x: v26|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  906  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v27|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction v40|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  934  <|@ instruction v41|QWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr  938  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr  940  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: v44|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B38" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr  976  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  978  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  980  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  982  <|@ instruction MOV x: [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr  984  <|@ instruction MOV x: [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  986  <|@ instruction MOV (x: [v40|QWORD + 12], y: v27|DWORD) size: DWORD <|@ <|@
      nr  988  <|@ instruction v46|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr  990  <|@ instruction CMPCONSTBRANCH x: v46|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr 1002  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v47|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction MOV x: [v40|QWORD + v47|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1032  <|@ instruction v48|QWORD = LEA address: [v47|QWORD + 8] size: QWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [v48|QWORD] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction v50|QWORD[.] = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B32" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1060  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction CMP (x: v3|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr 1076  <|@ instruction v52|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr 1078  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction v53|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1138  <|@ instruction v54|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1140  <|@ instruction v55|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr 1142  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1144  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1146  <|@ instruction rdx|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr 1148  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B30" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr 1152  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v57|QWORD, temp2: v58|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1268  <|@ instruction v59|DWORD[_] = COMPRESSPOINTER (input: v56|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1270  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v59|DWORD[_]) size: DWORD <|@ <|@
      nr 1272  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v56|QWORD[.]) {temp: v60|QWORD, temp2: v61|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [v56|QWORD[.]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction v103|DWORD = DEC value: v102|DWORD size: DWORD <|@ <|@
      nr 1290  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v103|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction MOVB x: [v62|QWORD[.] + v103|DWORD * 1 + 16] y: 45 size: BYTE <|@ <|@
      nr 1304  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582492443078313792
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1318  <|@ instruction v107|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction rsi|QWORD = MOVE input: v107|QWORD moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr 1344  <|@ instruction v45|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1346  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction NULLCHECK address: [v45|QWORD[.]] state [bci:10] <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rcx|QWORD = MOVE input: v46|QWORD moveKind: QWORD <|@ <|@
      nr 1372  <|@ instruction ZERO_MEMORY (pointer: [v40|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1374  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1402  <|@ instruction v30|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr 1404  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 23] size: QWORD <|@ <|@
      nr 1406  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr 1408  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr 1410  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr 1412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr 1438  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1440  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1442  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1444  <|@ instruction MOV x: [v29|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1446  <|@ instruction MOV x: [v29|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1448  <|@ instruction MOV (x: [v29|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr 1450  <|@ instruction v36|QWORD[.] = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr 1454  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction v38|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ instruction v39|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1488  <|@ instruction rdi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1490  <|@ instruction rsi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1492  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr 1494  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1500  <|@ instruction v108|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction rsi|QWORD = MOVE input: v108|QWORD moveKind: QWORD <|@ <|@
      nr 1522  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr 1524  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr 1526  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:10] <|@ <|@
      nr 1530  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction MOV x: [r15|QWORD + 1156] y: -204315 size: DWORD <|@ <|@
      nr 1550  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1552  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:527) [bci: 104]
locals: - - v62|QWORD[.] - - v102|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:104, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction JUMP ~outgoingValues: [int[-237081|0xfffffffffffc61e7], long[0|0x0]] destination: B41 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction JUMP ~outgoingValues: [int[-189723|0xfffffffffffd1ae5]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction JUMP ~outgoingValues: [int[-195611|0xfffffffffffd03e5]] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction MOV x: [r15|QWORD + 1156] y: -233747 size: DWORD <|@ <|@
      nr 1602  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1604  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
locals: v0|QWORD[.] v1|DWORD v11|DWORD v13|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction JUMP ~outgoingValues: [int[-236051|0xfffffffffffc65ed], long[1300|0x514]] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction JUMP ~outgoingValues: [int[-187419|0xfffffffffffd23e5]] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction JUMP ~outgoingValues: [int[-238105|0xfffffffffffc5de7], long[0|0x0]] destination: B43 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction JUMP ~outgoingValues: [int[-198171|0xfffffffffffcf9e5]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction JUMP ~outgoingValues: [int[-180507|0xfffffffffffd3ee5]] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction MOV x: [r15|QWORD + 1156] y: -207643 size: DWORD <|@ <|@
      nr 1674  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1676  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:523) [bci: 85]
locals: v95|DWORD - v62|QWORD[.] - - v98|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:85, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction JUMP ~outgoingValues: [int[-192283|0xfffffffffffd10e5]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1688  <|@ instruction [v93|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v93|DWORD) size: DWORD <|@ <|@
      nr 1706  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1708  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: v80|DWORD - v62|QWORD[.] - - v79|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction JUMP ~outgoingValues: [int[-201499|0xfffffffffffcece5]] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1720  <|@ instruction [v104|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v104|DWORD) size: DWORD <|@ <|@
      nr 1738  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1740  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:522) [bci: 72]
locals: v95|DWORD - v62|QWORD[.] - - v96|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:72, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction JUMP ~outgoingValues: [int[-239129|0xfffffffffffc59e7], long[0|0x0]] destination: B45 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B41" "B43" "B45" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1752  <|@ instruction [v105|DWORD, v106|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v105|DWORD) size: DWORD <|@ <|@
      nr 1770  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v106|QWORD) size: QWORD <|@ <|@
      nr 1772  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction JUMP ~outgoingValues: [int[-184091|0xfffffffffffd30e5]] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1784  <|@ instruction [v94|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction NOP <|@ <|@
      nr 1800  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v94|DWORD) size: DWORD <|@ <|@
      nr 1802  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1804  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: v63|DWORD - v62|QWORD[.] - - v13|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #18         // count:int
     4: istore_2      
     5: iload_2       
     6: iload_1       
     7: invokestatic  #61         // java.lang.Integer.stringSize:(int)int
    10: iadd          
    11: istore_3      
    12: aload_0       
    13: iload_3       
    14: invokevirtual #24         // ensureCapacityInternal:(int)void
    17: aload_0       
    18: invokevirtual #19         // isLatin1:()boolean
    21: ifeq          37
    24: iload_1       
    25: iload_3       
    26: aload_0       
    27: getfield      #2          // value:byte[]
    30: invokestatic  #62         // java.lang.Integer.getChars:(int, int, byte[])int
    33: pop           
    34: goto          48
    37: iload_1       
    38: iload_2       
    39: iload_3       
    40: aload_0       
    41: getfield      #2          // value:byte[]
    44: invokestatic  #63         // java.lang.StringUTF16.getChars:(int, int, int, byte[])int
    47: pop           
    48: aload_0       
    49: iload_3       
    50: putfield      #18         // count:int
    53: aload_0       
    54: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@11fbf5cf slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v4|DWORD = NEG value: v1|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0248451913249636 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606958633211231298
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [v4|DWORD, int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [v5|DWORD, v6|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B21 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B20" 
    xhandlers
    flags 
    probability 4602752168055621283
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B20 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B19" 
    xhandlers
    flags 
    probability 4598323111924218927
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B19 y: -999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B18" 
    xhandlers
    flags 
    probability 4593895269862142147
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B18 y: -9999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" 
    xhandlers
    flags 
    probability 4589468661642602652
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B17 y: -99999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4585043307360852988
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B16 y: -999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4580619227439431527
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B15 y: -9999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4576196442633492882
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 y: -99999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4571774974036225136
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: -999999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4567354843084355297
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction v7|DWORD = LEA address: [v6|DWORD + 10] size: DWORD <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B12 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602532121406698170
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598172830319288879
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [int[2|0x2]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593743754731554715
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [int[3|0x3]] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589314678826940650
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [int[4|0x4]] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4584886816669611324
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [int[5|0x5]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4582818360249579440
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [v1|DWORD, int[1|0x1]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580460188027533457
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [int[6|0x6]] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576034812990629180
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [int[7|0x7]] destination: B15 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571610711976019636
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [int[8|0x8]] destination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567187905733353983
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [int[9|0x9]] destination: B13 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B13" "B21" "B20" "B19" "B18" "B17" "B16" "B15" "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607162073407212554
    begin_IR
      LIR
      nr  276  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction v9|DWORD = ADD (x: v8|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B12" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  290  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction v11|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  320  <|@ instruction v12|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  322  <|@ instruction v13|DWORD = ADD (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  324  <|@ instruction v14|DWORD = MOVSXB value: v12|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction v15|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction v16|DWORD = SUB (x: v13|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr  332  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" "B47" 
    successors "B49" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  346  <|@ instruction [v62|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction TESTBYTEBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.023714438988526654 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606968818122833350
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [v4|DWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  380  <|@ instruction [v63|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction v64|DWORD = MOV input: [v62|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  404  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction v65|DWORD = SETCC condition: < <|@ <|@
      nr  408  <|@ instruction v67|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 49, 50, 51, 52, ...}] <|@ <|@
      nr  410  <|@ instruction CMPCONSTBRANCH x: v63|DWORD trueDestinationProbability: 0.20456323728994374 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B71 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605339876961552022
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [v63|DWORD, v13|DWORD] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B69" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction v68|QWORD = MOVSXD value: v63|DWORD size: QWORD <|@ <|@
      nr  456  <|@ instruction v69|QWORD = IMUL x: v68|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr  458  <|@ instruction v70|QWORD = SAR x: v69|QWORD y: 37 size: QWORD <|@ <|@
      nr  460  <|@ instruction v71|DWORD = MOV value: v70|QWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction v72|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr  464  <|@ instruction v73|DWORD = IMUL x: v72|DWORD y: 100 size: DWORD <|@ <|@
      nr  466  <|@ instruction v74|DWORD = SUB (x: v73|DWORD, ~y: v63|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction CMPCONSTBRANCH x: v74|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B69 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B68" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction v75|DWORD = DEC value: v13|DWORD size: DWORD <|@ <|@
      nr  484  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v75|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B67" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction v76|DWORD = LEA address: [v13|DWORD - 2] size: DWORD <|@ <|@
      nr  504  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v76|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction v110|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction v77|DWORD = MOVSXB input: [v67|QWORD[.] + v74|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOVB (x: [v62|QWORD[.] + v75|DWORD * 1 + 16], y: v77|DWORD) size: BYTE <|@ <|@
      nr  528  <|@ instruction v78|DWORD = MOVSXB input: [v110|QWORD[.] + v74|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  530  <|@ instruction MOVB (x: [v62|QWORD[.] + v76|DWORD * 1 + 16], y: v78|DWORD) size: BYTE <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [v76|DWORD, v72|DWORD] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" 
    successors "B58" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596612633779284459
    begin_IR
      LIR
      nr  534  <|@ instruction [v79|DWORD, v80|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction CMPCONSTBRANCH x: v80|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B62 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction v81|QWORD = MOVSXD value: v80|DWORD size: QWORD <|@ <|@
      nr  580  <|@ instruction v82|QWORD = IMUL x: v81|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr  582  <|@ instruction v83|QWORD = SAR x: v82|QWORD y: 37 size: QWORD <|@ <|@
      nr  584  <|@ instruction v84|DWORD = MOV value: v83|QWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction v85|DWORD = INC value: v84|DWORD size: DWORD <|@ <|@
      nr  588  <|@ instruction v86|DWORD = IMUL x: v85|DWORD y: 100 size: DWORD <|@ <|@
      nr  590  <|@ instruction v87|DWORD = SUB (x: v86|DWORD, ~y: v80|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction CMPCONSTBRANCH x: v87|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B65 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction v88|DWORD = DEC value: v79|DWORD size: DWORD <|@ <|@
      nr  608  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v88|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction v89|DWORD = LEA address: [v79|DWORD - 2] size: DWORD <|@ <|@
      nr  628  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v89|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction v90|DWORD = MOVSXB input: [v67|QWORD[.] + v87|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction MOVB (x: [v62|QWORD[.] + v88|DWORD * 1 + 16], y: v90|DWORD) size: BYTE <|@ <|@
      nr  654  <|@ instruction v91|DWORD = MOVSXB input: [v110|QWORD[.] + v87|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction MOVB (x: [v62|QWORD[.] + v89|DWORD * 1 + 16], y: v91|DWORD) size: BYTE <|@ <|@
      nr  658  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:518) [bci: 69]
locals: v85|DWORD - v62|QWORD[.] v85|DWORD v87|DWORD v89|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction SAFEPOINT temp: v92|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:69, 30] <|@ <|@
      nr  660  <|@ instruction JUMP ~outgoingValues: [v89|DWORD, v85|DWORD] destination: B61 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 4596538187644396969
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [v80|DWORD, v79|DWORD] destination: B62 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B62" "B71" 
    successors "B73" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  672  <|@ instruction [v95|DWORD, v96|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction v97|DWORD = NEG value: v95|DWORD size: DWORD <|@ <|@
      nr  686  <|@ instruction CMPCONSTBRANCH x: v97|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B86 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction v98|DWORD = DEC value: v96|DWORD size: DWORD <|@ <|@
      nr  702  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v98|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B85 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction v99|DWORD = MOVSXB input: [v67|QWORD[.] + v97|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  720  <|@ instruction MOVB (x: [v62|QWORD[.] + v98|DWORD * 1 + 16], y: v99|DWORD) size: BYTE <|@ <|@
      nr  722  <|@ instruction CMPCONSTBRANCH x: v95|DWORD trueDestinationProbability: 0.6223590908157148 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B78 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction v100|DWORD = LEA address: [v96|DWORD - 2] size: DWORD <|@ <|@
      nr  742  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v100|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction v109|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction v101|DWORD = MOVSXB input: [v109|QWORD[.] + v97|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  760  <|@ instruction MOVB (x: [v62|QWORD[.] + v100|DWORD * 1 + 16], y: v101|DWORD) size: BYTE <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [v100|DWORD] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600474593749434728
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [v98|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  774  <|@ instruction [v102|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.023714554158984935 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606968817085470084
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v13|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B89" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction v18|DWORD = SHL (x: v13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  858  <|@ instruction v19|DWORD = SUB (x: v18|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction v21|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  862  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ instruction v20|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  866  <|@ instruction v22|DWORD = ADD (x: v20|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction CMP (x: v22|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr  870  <|@ instruction v23|DWORD = CMOVE (falseValue: v19|DWORD, ~trueValue: v22|DWORD) condition: > <|@ <|@
      nr  872  <|@ instruction v24|DWORD = ADD (x: v23|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction v25|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr  876  <|@ instruction CMPCONSTBRANCH x: v25|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B89 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B31" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction v26|DWORD = SAR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  902  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction v27|DWORD = SHL (x: v26|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  906  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v27|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction v40|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  934  <|@ instruction v41|QWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr  938  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr  940  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: v44|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B38" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr  976  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  978  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  980  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  982  <|@ instruction MOV x: [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr  984  <|@ instruction MOV x: [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  986  <|@ instruction MOV (x: [v40|QWORD + 12], y: v27|DWORD) size: DWORD <|@ <|@
      nr  988  <|@ instruction v46|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr  990  <|@ instruction CMPCONSTBRANCH x: v46|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr 1002  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v47|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction MOV x: [v40|QWORD + v47|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1032  <|@ instruction v48|QWORD = LEA address: [v47|QWORD + 8] size: QWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [v48|QWORD] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction v50|QWORD[.] = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B32" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1060  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction CMP (x: v3|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr 1076  <|@ instruction v52|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr 1078  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction v53|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1138  <|@ instruction v54|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1140  <|@ instruction v55|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr 1142  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1144  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1146  <|@ instruction rdx|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr 1148  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B30" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr 1152  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v57|QWORD, temp2: v58|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1268  <|@ instruction v59|DWORD[_] = COMPRESSPOINTER (input: v56|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1270  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v59|DWORD[_]) size: DWORD <|@ <|@
      nr 1272  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v56|QWORD[.]) {temp: v60|QWORD, temp2: v61|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [v56|QWORD[.]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction v103|DWORD = DEC value: v102|DWORD size: DWORD <|@ <|@
      nr 1290  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v103|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction MOVB x: [v62|QWORD[.] + v103|DWORD * 1 + 16] y: 45 size: BYTE <|@ <|@
      nr 1304  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582492443078313792
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1318  <|@ instruction v107|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction rsi|QWORD = MOVE input: v107|QWORD moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr 1344  <|@ instruction v45|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1346  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction NULLCHECK address: [v45|QWORD[.]] state [bci:10] <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rcx|QWORD = MOVE input: v46|QWORD moveKind: QWORD <|@ <|@
      nr 1372  <|@ instruction ZERO_MEMORY (pointer: [v40|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1374  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1402  <|@ instruction v30|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr 1404  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 23] size: QWORD <|@ <|@
      nr 1406  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr 1408  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr 1410  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr 1412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr 1438  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1440  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1442  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1444  <|@ instruction MOV x: [v29|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1446  <|@ instruction MOV x: [v29|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1448  <|@ instruction MOV (x: [v29|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr 1450  <|@ instruction v36|QWORD[.] = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr 1454  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction v38|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ instruction v39|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1488  <|@ instruction rdi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1490  <|@ instruction rsi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1492  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr 1494  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1500  <|@ instruction v108|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction rsi|QWORD = MOVE input: v108|QWORD moveKind: QWORD <|@ <|@
      nr 1522  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr 1524  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr 1526  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:10] <|@ <|@
      nr 1530  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction MOV x: [r15|QWORD + 1156] y: -204315 size: DWORD <|@ <|@
      nr 1550  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1552  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:527) [bci: 104]
locals: - - v62|QWORD[.] - - v102|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:104, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction JUMP ~outgoingValues: [int[-237081|0xfffffffffffc61e7], long[0|0x0]] destination: B41 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction JUMP ~outgoingValues: [int[-189723|0xfffffffffffd1ae5]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction JUMP ~outgoingValues: [int[-195611|0xfffffffffffd03e5]] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction MOV x: [r15|QWORD + 1156] y: -233747 size: DWORD <|@ <|@
      nr 1602  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1604  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
locals: v0|QWORD[.] v1|DWORD v11|DWORD v13|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction JUMP ~outgoingValues: [int[-236051|0xfffffffffffc65ed], long[1300|0x514]] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction JUMP ~outgoingValues: [int[-187419|0xfffffffffffd23e5]] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction JUMP ~outgoingValues: [int[-238105|0xfffffffffffc5de7], long[0|0x0]] destination: B43 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction JUMP ~outgoingValues: [int[-198171|0xfffffffffffcf9e5]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction JUMP ~outgoingValues: [int[-180507|0xfffffffffffd3ee5]] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction MOV x: [r15|QWORD + 1156] y: -207643 size: DWORD <|@ <|@
      nr 1674  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1676  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:523) [bci: 85]
locals: v95|DWORD - v62|QWORD[.] - - v98|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:85, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction JUMP ~outgoingValues: [int[-192283|0xfffffffffffd10e5]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1688  <|@ instruction [v93|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v93|DWORD) size: DWORD <|@ <|@
      nr 1706  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1708  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: v80|DWORD - v62|QWORD[.] - - v79|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction JUMP ~outgoingValues: [int[-201499|0xfffffffffffcece5]] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1720  <|@ instruction [v104|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v104|DWORD) size: DWORD <|@ <|@
      nr 1738  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1740  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:522) [bci: 72]
locals: v95|DWORD - v62|QWORD[.] - - v96|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:72, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction JUMP ~outgoingValues: [int[-239129|0xfffffffffffc59e7], long[0|0x0]] destination: B45 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B41" "B43" "B45" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1752  <|@ instruction [v105|DWORD, v106|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v105|DWORD) size: DWORD <|@ <|@
      nr 1770  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v106|QWORD) size: QWORD <|@ <|@
      nr 1772  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction JUMP ~outgoingValues: [int[-184091|0xfffffffffffd30e5]] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1784  <|@ instruction [v94|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction NOP <|@ <|@
      nr 1800  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v94|DWORD) size: DWORD <|@ <|@
      nr 1802  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1804  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: v63|DWORD - v62|QWORD[.] - - v13|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #18         // count:int
     4: istore_2      
     5: iload_2       
     6: iload_1       
     7: invokestatic  #61         // java.lang.Integer.stringSize:(int)int
    10: iadd          
    11: istore_3      
    12: aload_0       
    13: iload_3       
    14: invokevirtual #24         // ensureCapacityInternal:(int)void
    17: aload_0       
    18: invokevirtual #19         // isLatin1:()boolean
    21: ifeq          37
    24: iload_1       
    25: iload_3       
    26: aload_0       
    27: getfield      #2          // value:byte[]
    30: invokestatic  #62         // java.lang.Integer.getChars:(int, int, byte[])int
    33: pop           
    34: goto          48
    37: iload_1       
    38: iload_2       
    39: iload_3       
    40: aload_0       
    41: getfield      #2          // value:byte[]
    44: invokestatic  #63         // java.lang.StringUTF16.getChars:(int, int, int, byte[])int
    47: pop           
    48: aload_0       
    49: iload_3       
    50: putfield      #18         // count:int
    53: aload_0       
    54: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[818, 820[[1148, 1149[[1342, 1344[[1372, 1373[[1494, 1495[[1524, 1526[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v14|d [0, 1[[326, 329[[854, 857[[862, 865[[898, 901[[902, 905[[1148, 1149[[1370, 1373[[1494, 1495[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v55|q [0, 30[[1146, 1149[[1340, 1342[[1492, 1495[[1522, 1524[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[1148, 1149[[1494, 1495[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v107|q [0, 28[[1144, 1149[[1338, 1342[[1490, 1495[[1520, 1524[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[1142, 1149[[1372, 1373[[1488, 1495[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|q [28, 818[[822, 1553[[1554, 1605[[1606, 1677[[1678, 1709[[1710, 1741[[1742, 1773[[1774, 1805[28 MustHaveRegister 32 MustHaveRegister 318 MustHaveRegister 320 MustHaveRegister 816 MustHaveRegister 818 ShouldHaveRegister 1266 MustHaveRegister 1270 MustHaveRegister 1272 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|d [30, 784[[822, 1276[[1306, 1532[[1554, 1564[[1584, 1605[[1606, 1616[[1626, 1636[[1742, 1773[30 MustHaveRegister 36 ShouldHaveRegister 38 MustHaveRegister 234 ShouldHaveRegister 368 MustHaveRegister 404 MustHaveRegister 784 MustHaveRegister 1314 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [32, 332[32 MustHaveRegister 34 MustHaveRegister 332 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [34, 336[[822, 1090[[1316, 1448[[1498, 1522[34 MustHaveRegister 328 ShouldHaveRegister 858 ShouldHaveRegister 866 ShouldHaveRegister 872 ShouldHaveRegister 906 MustHaveRegister 1074 MustHaveRegister 1076 ShouldHaveRegister 1090 ShouldHaveRegister 1402 ShouldHaveRegister 1448 MustHaveRegister 1522 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d v1|d [36, 379[[822, 1276[[1316, 1532[36 MustHaveRegister 48 ShouldHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [50, 156[60 ShouldHaveRegister 72 ShouldHaveRegister 84 ShouldHaveRegister 96 ShouldHaveRegister 108 ShouldHaveRegister 120 ShouldHaveRegister 132 ShouldHaveRegister 144 ShouldHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [50, 172[[176, 226[[236, 286[172 MustHaveRegister 286 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [172, 175[172 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [276, 286[286 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d v8|d [286, 289[286 MustHaveRegister 288 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d v9|d [290, 336[[822, 1104[[1316, 1412[[1498, 1529[[1554, 1564[[1606, 1616[[1626, 1636[[1742, 1773[322 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [318, 358[[822, 1276[[1316, 1532[[1554, 1564[[1584, 1605[[1606, 1616[[1626, 1636[[1742, 1773[318 MustHaveRegister 322 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [320, 356[[822, 1276[[1316, 1532[320 MustHaveRegister 324 ShouldHaveRegister 356 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d v10|d [322, 816[[822, 1553[[1564, 1605[[1616, 1626[[1636, 1677[[1678, 1709[[1710, 1741[[1774, 1805[322 MustHaveRegister 330 MustHaveRegister 420 ShouldHaveRegister 482 ShouldHaveRegister 502 MustHaveRegister 816 MustHaveRegister 856 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [324, 336[[822, 902[324 MustHaveRegister 326 ShouldHaveRegister 854 ShouldHaveRegister 862 ShouldHaveRegister 898 ShouldHaveRegister 902 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d v3|d [328, 331[328 MustHaveRegister 330 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d v13|d [330, 334[330 MustHaveRegister 334 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q v2|d [332, 345[[822, 1136[[1316, 1484[[1498, 1532[332 MustHaveRegister 344 ShouldHaveRegister 1136 ShouldHaveRegister 1484 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d v13|d [856, 858[856 MustHaveRegister 858 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d v18|d [858, 870[858 MustHaveRegister 868 ShouldHaveRegister 870 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d v21|d [864, 866[864 MustHaveRegister 866 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d -1 [860, 864[860 MustHaveRegister 864 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d v20|d [866, 871[866 MustHaveRegister 868 MustHaveRegister 870 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d v19|d [870, 872[870 MustHaveRegister 872 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d v23|d [872, 900[872 MustHaveRegister 874 ShouldHaveRegister 900 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d v24|d [874, 876[874 MustHaveRegister 876 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d v24|d [900, 904[900 MustHaveRegister 904 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d v26|d [904, 1102[[1316, 1376[904 MustHaveRegister 906 ShouldHaveRegister 934 ShouldHaveRegister 986 MustHaveRegister 1074 ShouldHaveRegister 1076 MustHaveRegister 1102 ShouldHaveRegister 1340 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q -1 [1400, 1450[1400 MustHaveRegister 1408 ShouldHaveRegister 1438 MustHaveRegister 1440 MustHaveRegister 1442 MustHaveRegister 1444 MustHaveRegister 1446 MustHaveRegister 1448 MustHaveRegister 1450 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q v3|d [1402, 1492[[1498, 1532[1402 MustHaveRegister 1404 MustHaveRegister 1492 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q -1 [1404, 1406[1404 MustHaveRegister 1406 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q v31|q [1406, 1443[1406 MustHaveRegister 1408 ShouldHaveRegister 1438 MustHaveRegister 1440 MustHaveRegister 1442 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q v32|q [1408, 1436[1408 MustHaveRegister 1410 MustHaveRegister 1436 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q rax|q [1526, 1531[1526 MustHaveRegister 1528 MustHaveRegister 1530 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q v29|q [1450, 1453[1450 MustHaveRegister 1452 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q v36|q [1454, 1497[1486 ShouldHaveRegister 1496 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q v17|q [1484, 1488[1484 MustHaveRegister 1488 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q v37|q [1486, 1490[1486 MustHaveRegister 1490 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q -1 [932, 1056[[1350, 1376[932 MustHaveRegister 940 ShouldHaveRegister 976 MustHaveRegister 978 MustHaveRegister 980 MustHaveRegister 982 MustHaveRegister 984 MustHaveRegister 986 MustHaveRegister 1030 MustHaveRegister 1035 LiveAtLoopEnd 1056 ShouldHaveRegister 1372 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q v27|d [934, 936[934 MustHaveRegister 936 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q -1 [936, 938[936 MustHaveRegister 938 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q v42|q [938, 1036[938 MustHaveRegister 940 ShouldHaveRegister 976 MustHaveRegister 978 MustHaveRegister 980 MustHaveRegister 988 MustHaveRegister 1012 MustHaveRegister 1035 LiveAtLoopEnd  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q v43|q [940, 974[940 MustHaveRegister 942 MustHaveRegister 974 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q rax|q [1344, 1349[1344 MustHaveRegister 1346 MustHaveRegister 1348 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q -1 [988, 992[[1350, 1370[988 MustHaveRegister 990 ShouldHaveRegister 1370 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q v48|q [1002, 1032[1012 ShouldHaveRegister 1030 MustHaveRegister 1032 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q v47|q [1032, 1035[1032 MustHaveRegister 1034 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[v50|q]" v50|q v40|q [1056, 1059[1056 MustHaveRegister 1058 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q v50|q [1060, 1151[1138 ShouldHaveRegister 1150 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[v52|d]" v52|d v3|d [1076, 1140[1076 MustHaveRegister 1078 MustHaveRegister 1090 MustHaveRegister 1102 MustHaveRegister 1140 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q v17|q [1136, 1142[1136 MustHaveRegister 1142 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q v51|q [1138, 1144[1138 MustHaveRegister 1144 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q v52|d [1140, 1146[1140 MustHaveRegister 1146 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[v56|q]" v56|q v51|q [1152, 1275[1268 MustHaveRegister 1272 MustHaveRegister 1274 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q -1 [1266, 1267[1266 MustHaveRegister  "NoDefinitionFound"
  v58|q QWORD "[v58|q]" v58|q -1 [1266, 1267[1266 MustHaveRegister  "NoDefinitionFound"
  v59|d DWORD "[v59|d]" v59|d v56|q [1268, 1270[1268 MustHaveRegister 1270 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q -1 [1272, 1273[1272 MustHaveRegister  "NoDefinitionFound"
  v61|q QWORD "[v61|q]" v61|q -1 [1272, 1273[1272 MustHaveRegister  "NoDefinitionFound"
  v62|q QWORD "[v62|q]" v62|q v17|q [346, 786[[1276, 1302[[1306, 1316[[1532, 1553[[1564, 1584[[1616, 1626[[1636, 1677[[1678, 1709[[1710, 1741[[1774, 1805[402 MustHaveRegister 526 MustHaveRegister 530 MustHaveRegister 652 MustHaveRegister 656 MustHaveRegister 661 LiveAtLoopEnd 720 MustHaveRegister 760 MustHaveRegister 1302 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[v63|d]" v63|d v4|d [380, 421[[422, 506[[1616, 1626[[1646, 1656[[1774, 1805[410 ShouldHaveRegister 420 ShouldHaveRegister 454 ShouldHaveRegister 466 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[v64|d]" v64|d -1 [402, 786[[1276, 1290[402 MustHaveRegister 484 MustHaveRegister 504 MustHaveRegister 608 MustHaveRegister 628 MustHaveRegister 661 LiveAtLoopEnd 702 MustHaveRegister 742 MustHaveRegister 1290 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[v65|d]" v65|d -1 [406, 786[[1276, 1292[[1532, 1553[[1564, 1584[[1616, 1626[[1636, 1677[[1678, 1709[[1710, 1741[[1774, 1805[406 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[v67|q]" v67|q -1 [408, 718[408 MustHaveRegister 524 MustHaveRegister 650 MustHaveRegister 661 LiveAtLoopEnd 718 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[v68|q]" v68|q -1 [454, 456[454 MustHaveRegister 456 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[v69|q]" v69|q -1 [456, 458[456 MustHaveRegister 458 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[v70|q]" v70|q v69|q [458, 460[458 MustHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v71|d DWORD "[v71|d]" v71|d -1 [460, 462[460 MustHaveRegister 462 ShouldHaveRegister  "NoSpillStore"
  v72|d DWORD "[v72|d]" v72|d v71|d [462, 533[462 MustHaveRegister 464 ShouldHaveRegister 532 ShouldHaveRegister  "NoSpillStore"
  v73|d DWORD "[v73|d]" v73|d -1 [464, 466[464 MustHaveRegister 466 MustHaveRegister  "NoSpillStore"
  v74|d DWORD "[v74|d]" v74|d v73|d [466, 528[466 MustHaveRegister 468 ShouldHaveRegister 524 MustHaveRegister 528 MustHaveRegister  "NoSpillStore"
  v75|d DWORD "[v75|d]" v75|d v13|d [482, 526[482 MustHaveRegister 484 ShouldHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v76|d DWORD "[v76|d]" v76|d v79|d [502, 533[502 MustHaveRegister 504 ShouldHaveRegister 530 MustHaveRegister 532 ShouldHaveRegister  "NoSpillStore"
  v77|d DWORD "[v77|d]" v77|d -1 [524, 526[524 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v78|d DWORD "[v78|d]" v78|d -1 [528, 530[528 MustHaveRegister 530 MustHaveRegister  "NoSpillStore"
  v79|d DWORD "[v79|d]" v79|d v76|d [534, 630[[662, 671[[1564, 1584[[1678, 1709[606 ShouldHaveRegister 626 MustHaveRegister 670 ShouldHaveRegister  "NoSpillStore"
  v80|d DWORD "[v80|d]" v80|d v72|d [534, 630[[662, 671[[1564, 1584[[1678, 1709[544 ShouldHaveRegister 578 ShouldHaveRegister 590 ShouldHaveRegister 670 ShouldHaveRegister  "NoSpillStore"
  v81|q QWORD "[v81|q]" v81|q -1 [578, 580[578 MustHaveRegister 580 ShouldHaveRegister  "NoSpillStore"
  v82|q QWORD "[v82|q]" v82|q -1 [580, 582[580 MustHaveRegister 582 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[v83|q]" v83|q v82|q [582, 584[582 MustHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v84|d DWORD "[v84|d]" v84|d -1 [584, 586[584 MustHaveRegister 586 ShouldHaveRegister  "NoSpillStore"
  v85|d DWORD "[v85|d]" v85|d v84|d [586, 661[586 MustHaveRegister 588 ShouldHaveRegister 660 ShouldHaveRegister  "NoSpillStore"
  v86|d DWORD "[v86|d]" v86|d -1 [588, 590[588 MustHaveRegister 590 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[v87|d]" v87|d v86|d [590, 659[590 MustHaveRegister 592 ShouldHaveRegister 650 MustHaveRegister 654 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[v88|d]" v88|d v79|d [606, 652[606 MustHaveRegister 608 ShouldHaveRegister 652 MustHaveRegister  "NoSpillStore"
  v89|d DWORD "[v89|d]" v89|d -1 [626, 661[626 MustHaveRegister 628 ShouldHaveRegister 656 MustHaveRegister 660 ShouldHaveRegister  "NoSpillStore"
  v90|d DWORD "[v90|d]" v90|d -1 [650, 652[650 MustHaveRegister 652 MustHaveRegister  "NoSpillStore"
  v91|d DWORD "[v91|d]" v91|d -1 [654, 656[654 MustHaveRegister 656 MustHaveRegister  "NoSpillStore"
  v92|q QWORD "[v92|q]" v92|q -1 [658, 659[658 MustHaveRegister  "NoDefinitionFound"
  v93|d DWORD "[v93|d]" v93|d -1 [1688, 1704[1704 MustHaveRegister  "NoSpillStore"
  v94|d DWORD "[v94|d]" v94|d -1 [1784, 1800[1800 MustHaveRegister  "NoSpillStore"
  v95|d DWORD "[v95|d]" v95|d v63|d [672, 744[[1636, 1646[[1656, 1677[[1710, 1741[684 ShouldHaveRegister 722 ShouldHaveRegister  "NoSpillStore"
  v96|d DWORD "[v96|d]" v96|d v79|d [672, 740[[1636, 1646[[1710, 1741[700 ShouldHaveRegister 740 MustHaveRegister  "NoSpillStore"
  v97|d DWORD "[v97|d]" v97|d v95|d [684, 758[684 MustHaveRegister 686 ShouldHaveRegister 718 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v98|d DWORD "[v98|d]" v98|d v96|d [700, 744[[764, 773[[1656, 1677[700 MustHaveRegister 702 ShouldHaveRegister 720 MustHaveRegister 772 ShouldHaveRegister  "NoSpillStore"
  v99|d DWORD "[v99|d]" v99|d -1 [718, 720[718 MustHaveRegister 720 MustHaveRegister  "NoSpillStore"
  v100|d DWORD "[v100|d]" v100|d v102|d [740, 763[740 MustHaveRegister 742 ShouldHaveRegister 760 MustHaveRegister 762 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[v101|d]" v101|d -1 [758, 760[758 MustHaveRegister 760 MustHaveRegister  "NoSpillStore"
  v102|d DWORD "[v102|d]" v102|d v100|d [774, 786[[1276, 1292[[1532, 1553[1288 ShouldHaveRegister  "NoSpillStore"
  v103|d DWORD "[v103|d]" v103|d v102|d [1288, 1302[1288 MustHaveRegister 1290 ShouldHaveRegister 1302 MustHaveRegister  "NoSpillStore"
  v104|d DWORD "[v104|d]" v104|d -1 [1720, 1736[1736 MustHaveRegister  "NoSpillStore"
  v105|d DWORD "[v105|d]" v105|d -1 [1752, 1768[1768 MustHaveRegister  "NoSpillStore"
  v106|q QWORD "[v106|q]" v106|q -1 [1752, 1770[1770 MustHaveRegister  "NoSpillStore"
  v107|q QWORD "[v107|q]" v107|q -1 [1318, 1338[1318 MustHaveRegister 1338 ShouldHaveRegister  "NoSpillStore"
  v108|q QWORD "[v108|q]" v108|q -1 [1500, 1520[1500 MustHaveRegister 1520 ShouldHaveRegister  "NoSpillStore"
  v109|q QWORD "[v109|q]" v109|q -1 [746, 758[746 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v110|q QWORD "[v110|q]" v110|q -1 [508, 662[508 MustHaveRegister 528 MustHaveRegister 654 MustHaveRegister 661 LiveAtLoopEnd  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[818, 820[[1148, 1149[[1342, 1344[[1372, 1373[[1494, 1495[[1524, 1526[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v14|d [0, 1[[326, 329[[854, 857[[862, 865[[898, 901[[902, 905[[1148, 1149[[1370, 1373[[1494, 1495[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v55|q [0, 30[[1146, 1149[[1340, 1342[[1492, 1495[[1522, 1524[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[1148, 1149[[1494, 1495[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v107|q [0, 28[[1144, 1149[[1338, 1342[[1490, 1495[[1520, 1524[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[1142, 1149[[1372, 1373[[1488, 1495[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [28, 818[[822, 1104[28 MustHaveRegister 32 MustHaveRegister 318 MustHaveRegister 320 MustHaveRegister 816 MustHaveRegister 818 ShouldHaveRegister  "SpillInDominator"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [30, 784[[822, 1104[30 MustHaveRegister 36 ShouldHaveRegister 38 MustHaveRegister 234 ShouldHaveRegister 368 MustHaveRegister 404 MustHaveRegister 784 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [32, 332[32 MustHaveRegister 34 MustHaveRegister 332 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [34, 336[[822, 1090[[1316, 1448[[1498, 1522[34 MustHaveRegister 328 ShouldHaveRegister 858 ShouldHaveRegister 866 ShouldHaveRegister 872 ShouldHaveRegister 906 MustHaveRegister 1074 MustHaveRegister 1076 ShouldHaveRegister 1090 ShouldHaveRegister 1402 ShouldHaveRegister 1448 MustHaveRegister 1522 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d v1|d [36, 379[[822, 1104[36 MustHaveRegister 48 ShouldHaveRegister 378 ShouldHaveRegister  "OneSpillStore"
  v5|d DWORD "[rcx|d]" v5|d -1 [50, 156[60 ShouldHaveRegister 72 ShouldHaveRegister 84 ShouldHaveRegister 96 ShouldHaveRegister 108 ShouldHaveRegister 120 ShouldHaveRegister 132 ShouldHaveRegister 144 ShouldHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[rdi|d]" v6|d -1 [50, 172[[176, 226[[236, 286[172 MustHaveRegister 286 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rcx|d]" v7|d -1 [172, 175[172 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rcx|d]" v8|d -1 [276, 286[286 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rcx|d]" v9|d v8|d [286, 289[286 MustHaveRegister 288 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[r8|d]" v10|d v9|d [290, 336[[822, 1104[[1316, 1412[[1498, 1529[[1554, 1564[[1606, 1616[[1626, 1636[[1742, 1773[322 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r9|d]" v11|d -1 [318, 358[[822, 1104[318 MustHaveRegister 322 ShouldHaveRegister  "OneSpillStore"
  v12|d DWORD "[rbx|d]" v12|d -1 [320, 356[[822, 1104[320 MustHaveRegister 324 ShouldHaveRegister 356 MustHaveRegister  "OneSpillStore"
  v13|d DWORD "[rbp|d]" v13|d v10|d [322, 816[[822, 1104[322 MustHaveRegister 330 MustHaveRegister 420 ShouldHaveRegister 482 ShouldHaveRegister 502 MustHaveRegister 816 MustHaveRegister 856 ShouldHaveRegister  "OneSpillStore"
  v14|d DWORD "[rdi|d]" v14|d -1 [324, 336[[822, 902[324 MustHaveRegister 326 ShouldHaveRegister 854 ShouldHaveRegister 862 ShouldHaveRegister 898 ShouldHaveRegister 902 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r13|d]" v15|d v3|d [328, 331[328 MustHaveRegister 330 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rcx|d]" v16|d v13|d [330, 334[330 MustHaveRegister 334 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[r13|q]" v17|q v2|d [332, 345[[822, 1136[[1316, 1484[[1498, 1532[332 MustHaveRegister 344 ShouldHaveRegister 1136 ShouldHaveRegister 1484 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d v13|d [856, 858[856 MustHaveRegister 858 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[rax|d]" v19|d v18|d [858, 870[858 MustHaveRegister 868 ShouldHaveRegister 870 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[r14|d]" v20|d v21|d [864, 866[864 MustHaveRegister 866 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[r14|d]" v21|d -1 [860, 864[860 MustHaveRegister 864 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[r14|d]" v22|d v20|d [866, 871[866 MustHaveRegister 868 MustHaveRegister 870 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d v19|d [870, 872[870 MustHaveRegister 872 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rax|d]" v24|d v23|d [872, 900[872 MustHaveRegister 874 ShouldHaveRegister 900 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rcx|d]" v25|d v24|d [874, 876[874 MustHaveRegister 876 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d v24|d [900, 904[900 MustHaveRegister 904 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[r14|d]" v27|d v26|d [904, 1102[[1316, 1376[904 MustHaveRegister 906 ShouldHaveRegister 934 ShouldHaveRegister 986 MustHaveRegister 1074 ShouldHaveRegister 1076 MustHaveRegister 1102 ShouldHaveRegister 1340 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rdi|q]" v29|q -1 [1400, 1450[1400 MustHaveRegister 1408 ShouldHaveRegister 1438 MustHaveRegister 1440 MustHaveRegister 1442 MustHaveRegister 1444 MustHaveRegister 1446 MustHaveRegister 1448 MustHaveRegister 1450 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[r9|q]" v30|q v3|d [1402, 1492[[1498, 1532[1402 MustHaveRegister 1404 MustHaveRegister 1492 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rsi|q]" v31|q -1 [1404, 1406[1404 MustHaveRegister 1406 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q v31|q [1406, 1443[1406 MustHaveRegister 1408 ShouldHaveRegister 1438 MustHaveRegister 1440 MustHaveRegister 1442 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rdx|q]" v33|q v32|q [1408, 1436[1408 MustHaveRegister 1410 MustHaveRegister 1436 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q rax|q [1526, 1531[1526 MustHaveRegister 1528 MustHaveRegister 1530 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rdi|q]" v36|q v29|q [1450, 1453[1450 MustHaveRegister 1452 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rdi|q]" v37|q v36|q [1454, 1487[1486 ShouldHaveRegister  "OneSpillStore"
  v38|q QWORD "[r13|q]" v38|q v17|q [1484, 1488[1484 MustHaveRegister 1488 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rdx|q]" v39|q v37|q [1486, 1490[1486 MustHaveRegister 1490 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rdi|q]" v40|q -1 [932, 1056[[1350, 1371[932 MustHaveRegister 940 ShouldHaveRegister 976 MustHaveRegister 978 MustHaveRegister 980 MustHaveRegister 982 MustHaveRegister 984 MustHaveRegister 986 MustHaveRegister 1030 MustHaveRegister 1035 LiveAtLoopEnd 1056 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rcx|q]" v41|q v27|d [934, 936[934 MustHaveRegister 936 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rcx|q]" v42|q -1 [936, 938[936 MustHaveRegister 938 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rcx|q]" v43|q v42|q [938, 1036[938 MustHaveRegister 940 ShouldHaveRegister 976 MustHaveRegister 978 MustHaveRegister 980 MustHaveRegister 988 MustHaveRegister 1012 MustHaveRegister 1035 LiveAtLoopEnd  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q v43|q [940, 974[940 MustHaveRegister 942 MustHaveRegister 974 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q rax|q [1344, 1349[1344 MustHaveRegister 1346 MustHaveRegister 1348 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q -1 [988, 992[[1350, 1370[988 MustHaveRegister 990 ShouldHaveRegister 1370 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q v48|q [1002, 1032[1012 ShouldHaveRegister 1030 MustHaveRegister 1032 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rax|q]" v48|q v47|q [1032, 1035[1032 MustHaveRegister 1034 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rdi|q]" v50|q v40|q [1056, 1059[1056 MustHaveRegister 1058 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[rdi|q]" v51|q v50|q [1060, 1141[1138 ShouldHaveRegister  "OneSpillStore"
  v52|d DWORD "[rcx|d]" v52|d v3|d [1076, 1140[1076 MustHaveRegister 1078 MustHaveRegister 1090 MustHaveRegister 1102 MustHaveRegister 1140 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[r13|q]" v53|q v17|q [1136, 1142[1136 MustHaveRegister 1142 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[r10|q]" v54|q v51|q [1138, 1144[1138 MustHaveRegister 1144 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rcx|q]" v55|q v52|d [1140, 1146[1140 MustHaveRegister 1146 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[rdi|q]" v56|q v51|q [1152, 1275[1268 MustHaveRegister 1272 MustHaveRegister 1274 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[rdx|q]" v57|q -1 [1266, 1267[1266 MustHaveRegister  "NoDefinitionFound"
  v58|q QWORD "[rax|q]" v58|q -1 [1266, 1267[1266 MustHaveRegister  "NoDefinitionFound"
  v59|d DWORD "[rdx|d]" v59|d v56|q [1268, 1270[1268 MustHaveRegister 1270 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rdx|q]" v60|q -1 [1272, 1273[1272 MustHaveRegister  "NoDefinitionFound"
  v61|q QWORD "[rax|q]" v61|q -1 [1272, 1273[1272 MustHaveRegister  "NoDefinitionFound"
  v62|q QWORD "[r13|q]" v62|q v17|q [346, 786[[1276, 1302[[1306, 1316[[1532, 1553[[1564, 1584[[1616, 1626[[1636, 1677[[1678, 1709[[1710, 1741[[1774, 1805[402 MustHaveRegister 526 MustHaveRegister 530 MustHaveRegister 652 MustHaveRegister 656 MustHaveRegister 661 LiveAtLoopEnd 720 MustHaveRegister 760 MustHaveRegister 1302 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[r11|d]" v63|d v4|d [380, 421[[422, 506[[1616, 1626[[1646, 1656[[1774, 1805[410 ShouldHaveRegister 420 ShouldHaveRegister 454 ShouldHaveRegister 466 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[r10|d]" v64|d -1 [402, 786[[1276, 1290[402 MustHaveRegister 484 MustHaveRegister 504 MustHaveRegister 608 MustHaveRegister 628 MustHaveRegister 661 LiveAtLoopEnd 702 MustHaveRegister 742 MustHaveRegister 1290 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[r8|d]" v65|d -1 [406, 534[406 MustHaveRegister  "SpillInDominator"
  v67|q QWORD "[rax|q]" v67|q -1 [408, 718[408 MustHaveRegister 524 MustHaveRegister 650 MustHaveRegister 661 LiveAtLoopEnd 718 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[rcx|q]" v68|q -1 [454, 456[454 MustHaveRegister 456 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[rcx|q]" v69|q -1 [456, 458[456 MustHaveRegister 458 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rcx|q]" v70|q v69|q [458, 460[458 MustHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v71|d DWORD "[rcx|d]" v71|d -1 [460, 462[460 MustHaveRegister 462 ShouldHaveRegister  "NoSpillStore"
  v72|d DWORD "[rcx|d]" v72|d v71|d [462, 533[462 MustHaveRegister 464 ShouldHaveRegister 532 ShouldHaveRegister  "NoSpillStore"
  v73|d DWORD "[rdi|d]" v73|d -1 [464, 466[464 MustHaveRegister 466 MustHaveRegister  "NoSpillStore"
  v74|d DWORD "[rdi|d]" v74|d v73|d [466, 528[466 MustHaveRegister 468 ShouldHaveRegister 524 MustHaveRegister 528 MustHaveRegister  "NoSpillStore"
  v75|d DWORD "[r9|d]" v75|d v13|d [482, 526[482 MustHaveRegister 484 ShouldHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v76|d DWORD "[rbx|d]" v76|d v79|d [502, 533[502 MustHaveRegister 504 ShouldHaveRegister 530 MustHaveRegister 532 ShouldHaveRegister  "NoSpillStore"
  v77|d DWORD "[r14|d]" v77|d -1 [524, 526[524 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v78|d DWORD "[rdi|d]" v78|d -1 [528, 530[528 MustHaveRegister 530 MustHaveRegister  "NoSpillStore"
  v79|d DWORD "[rbx|d]" v79|d v76|d [534, 630[[662, 671[[1564, 1584[[1678, 1709[606 ShouldHaveRegister 626 MustHaveRegister 670 ShouldHaveRegister  "NoSpillStore"
  v80|d DWORD "[rcx|d]" v80|d v72|d [534, 630[[662, 671[[1564, 1584[[1678, 1709[544 ShouldHaveRegister 578 ShouldHaveRegister 590 ShouldHaveRegister 670 ShouldHaveRegister  "NoSpillStore"
  v81|q QWORD "[rdi|q]" v81|q -1 [578, 580[578 MustHaveRegister 580 ShouldHaveRegister  "NoSpillStore"
  v82|q QWORD "[rdi|q]" v82|q -1 [580, 582[580 MustHaveRegister 582 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rdi|q]" v83|q v82|q [582, 584[582 MustHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v84|d DWORD "[rdi|d]" v84|d -1 [584, 586[584 MustHaveRegister 586 ShouldHaveRegister  "NoSpillStore"
  v85|d DWORD "[rdi|d]" v85|d v84|d [586, 661[586 MustHaveRegister 588 ShouldHaveRegister 660 ShouldHaveRegister  "NoSpillStore"
  v86|d DWORD "[r9|d]" v86|d -1 [588, 590[588 MustHaveRegister 590 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[r9|d]" v87|d v86|d [590, 659[590 MustHaveRegister 592 ShouldHaveRegister 650 MustHaveRegister 654 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[r14|d]" v88|d v79|d [606, 652[606 MustHaveRegister 608 ShouldHaveRegister 652 MustHaveRegister  "NoSpillStore"
  v89|d DWORD "[r8|d]" v89|d -1 [626, 661[626 MustHaveRegister 628 ShouldHaveRegister 656 MustHaveRegister 660 ShouldHaveRegister  "NoSpillStore"
  v90|d DWORD "[rcx|d]" v90|d -1 [650, 652[650 MustHaveRegister 652 MustHaveRegister  "NoSpillStore"
  v91|d DWORD "[rcx|d]" v91|d -1 [654, 656[654 MustHaveRegister 656 MustHaveRegister  "NoSpillStore"
  v92|q QWORD "[rcx|q]" v92|q -1 [658, 659[658 MustHaveRegister  "NoDefinitionFound"
  v93|d DWORD "[r10|d]" v93|d -1 [1688, 1704[1704 MustHaveRegister  "NoSpillStore"
  v94|d DWORD "[r10|d]" v94|d -1 [1784, 1800[1800 MustHaveRegister  "NoSpillStore"
  v95|d DWORD "[r11|d]" v95|d v63|d [672, 744[[1636, 1646[[1656, 1677[[1710, 1741[684 ShouldHaveRegister 722 ShouldHaveRegister  "NoSpillStore"
  v96|d DWORD "[rbx|d]" v96|d v79|d [672, 740[[1636, 1646[[1710, 1741[700 ShouldHaveRegister 740 MustHaveRegister  "NoSpillStore"
  v97|d DWORD "[rcx|d]" v97|d v95|d [684, 758[684 MustHaveRegister 686 ShouldHaveRegister 718 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v98|d DWORD "[r8|d]" v98|d v96|d [700, 744[[764, 773[[1656, 1677[700 MustHaveRegister 702 ShouldHaveRegister 720 MustHaveRegister 772 ShouldHaveRegister  "NoSpillStore"
  v99|d DWORD "[rax|d]" v99|d -1 [718, 720[718 MustHaveRegister 720 MustHaveRegister  "NoSpillStore"
  v100|d DWORD "[rax|d]" v100|d v102|d [740, 763[740 MustHaveRegister 742 ShouldHaveRegister 760 MustHaveRegister 762 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[rcx|d]" v101|d -1 [758, 760[758 MustHaveRegister 760 MustHaveRegister  "NoSpillStore"
  v102|d DWORD "[rax|d]" v102|d v100|d [774, 786[[1276, 1292[[1532, 1553[1288 ShouldHaveRegister  "NoSpillStore"
  v103|d DWORD "[rdx|d]" v103|d v102|d [1288, 1302[1288 MustHaveRegister 1290 ShouldHaveRegister 1302 MustHaveRegister  "NoSpillStore"
  v104|d DWORD "[r10|d]" v104|d -1 [1720, 1736[1736 MustHaveRegister  "NoSpillStore"
  v105|d DWORD "[r10|d]" v105|d -1 [1752, 1768[1768 MustHaveRegister  "NoSpillStore"
  v106|q QWORD "[r11|q]" v106|q -1 [1752, 1770[1770 MustHaveRegister  "NoSpillStore"
  v107|q QWORD "[rdx|q]" v107|q -1 [1318, 1338[1318 MustHaveRegister 1338 ShouldHaveRegister  "NoSpillStore"
  v108|q QWORD "[rsi|q]" v108|q -1 [1500, 1520[1500 MustHaveRegister 1520 ShouldHaveRegister  "NoSpillStore"
  v109|q QWORD "[rdi|q]" v109|q -1 [746, 758[746 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v110|q QWORD "[r11|q]" v110|q -1 [508, 662[508 MustHaveRegister 528 MustHaveRegister 654 MustHaveRegister 661 LiveAtLoopEnd  "NoSpillStore"
  v111|q QWORD "[vstack:4|q]" v0|q v0|q [1104, 1143[ "SpillInDominator"
  v112|d DWORD "[vstack:1|d]" v1|d v1|d [1104, 1145[ "OneSpillStore"
  v113|d DWORD "[vstack:5|d]" v4|d v4|d [1104, 1147[ "OneSpillStore"
  v114|d DWORD "[vstack:6|d]" v11|d v11|d [1104, 1147[ "OneSpillStore"
  v115|d DWORD "[vstack:7|d]" v12|d v12|d [1104, 1147[ "OneSpillStore"
  v116|d DWORD "[vstack:8|d]" v13|d v13|d [1104, 1147[ "OneSpillStore"
  v117|d DWORD "[r8|d]" v65|d v65|d [1784, 1805[ "SpillInDominator"
  v118|d DWORD "[vstack:0|d]" v65|d v65|d [534, 786[[1276, 1292[[1532, 1553[[1564, 1584[[1616, 1626[[1636, 1677[[1678, 1709[[1710, 1741[[1774, 1784[ "SpillInDominator"
  v119|q QWORD "[rsi|q]" v40|q v40|q [1371, 1376[1372 MustHaveRegister  "NoSpillStore"
  v120|q QWORD "[vstack:2|q]" v51|q v51|q [1141, 1147[ "OneSpillStore"
  v121|q QWORD "[vstack:4|q]" v0|q v0|q [1143, 1147[ "SpillInDominator"
  v122|d DWORD "[vstack:1|d]" v1|d v1|d [1145, 1276[[1306, 1532[[1554, 1564[[1584, 1605[[1606, 1616[[1626, 1636[[1742, 1752[1314 ShouldHaveRegister  "OneSpillStore"
  v123|d DWORD "[vstack:8|d]" v13|d v13|d [1147, 1553[[1564, 1605[[1616, 1626[[1636, 1677[[1678, 1709[[1710, 1741[[1774, 1784[ "OneSpillStore"
  v124|d DWORD "[vstack:7|d]" v12|d v12|d [1147, 1276[[1316, 1532[ "OneSpillStore"
  v125|d DWORD "[vstack:6|d]" v11|d v11|d [1147, 1276[[1316, 1532[[1554, 1564[[1584, 1605[[1606, 1616[[1626, 1636[[1742, 1752[ "OneSpillStore"
  v126|d DWORD "[vstack:5|d]" v4|d v4|d [1147, 1276[[1316, 1532[ "OneSpillStore"
  v127|q QWORD "[vstack:2|q]" v51|q v51|q [1147, 1151[1150 ShouldHaveRegister  "OneSpillStore"
  v128|q QWORD "[vstack:4|q]" v0|q v0|q [1147, 1152[ "SpillInDominator"
  v129|d DWORD "[rdx|d]" v1|d v1|d [1752, 1773[ "OneSpillStore"
  v130|q QWORD "[rsi|q]" v0|q v0|q [1152, 1316[1266 MustHaveRegister 1270 MustHaveRegister 1272 MustHaveRegister  "SpillInDominator"
  v131|d DWORD "[r9|d]" v11|d v11|d [1752, 1773[ "OneSpillStore"
  v132|d DWORD "[rbp|d]" v13|d v13|d [1784, 1805[ "OneSpillStore"
  v133|q QWORD "[vstack:4|q]" v0|q v0|q [1316, 1337[ "SpillInDominator"
  v134|q QWORD "[vstack:4|q]" v0|q v0|q [1337, 1454[ "SpillInDominator"
  v135|q QWORD "[vstack:4|q]" v0|q v0|q [1454, 1489[ "SpillInDominator"
  v136|q QWORD "[vstack:10|q]" v37|q v37|q [1487, 1493[ "OneSpillStore"
  v137|q QWORD "[vstack:4|q]" v0|q v0|q [1489, 1493[ "SpillInDominator"
  v138|q QWORD "[vstack:10|q]" v37|q v37|q [1493, 1497[1496 ShouldHaveRegister  "OneSpillStore"
  v139|q QWORD "[vstack:4|q]" v0|q v0|q [1493, 1553[[1554, 1605[[1606, 1677[[1678, 1709[[1710, 1741[[1742, 1773[[1774, 1784[ "SpillInDominator"
  v140|q QWORD "[rsi|q]" v0|q v0|q [1784, 1805[ "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@11fbf5cf slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v4|DWORD = NEG value: v1|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0248451913249636 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606958633211231298
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [v4|DWORD, int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [v5|DWORD, v6|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B21 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B20" 
    xhandlers
    flags 
    probability 4602752168055621283
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B20 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B19" 
    xhandlers
    flags 
    probability 4598323111924218927
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B19 y: -999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B18" 
    xhandlers
    flags 
    probability 4593895269862142147
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B18 y: -9999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" 
    xhandlers
    flags 
    probability 4589468661642602652
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B17 y: -99999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4585043307360852988
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B16 y: -999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4580619227439431527
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B15 y: -9999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4576196442633492882
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 y: -99999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4571774974036225136
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: -999999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4567354843084355297
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction v7|DWORD = LEA address: [v6|DWORD + 10] size: DWORD <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B12 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602532121406698170
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598172830319288879
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [int[2|0x2]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593743754731554715
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [int[3|0x3]] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589314678826940650
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [int[4|0x4]] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4584886816669611324
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [int[5|0x5]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4582818360249579440
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [v1|DWORD, int[1|0x1]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580460188027533457
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [int[6|0x6]] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576034812990629180
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [int[7|0x7]] destination: B15 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571610711976019636
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [int[8|0x8]] destination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567187905733353983
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [int[9|0x9]] destination: B13 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B13" "B21" "B20" "B19" "B18" "B17" "B16" "B15" "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607162073407212554
    begin_IR
      LIR
      nr  276  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction v9|DWORD = ADD (x: v8|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B12" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  290  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction v11|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  320  <|@ instruction v12|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  322  <|@ instruction v13|DWORD = ADD (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  324  <|@ instruction v14|DWORD = MOVSXB value: v12|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction v15|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction v16|DWORD = SUB (x: v13|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr  332  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" "B47" 
    successors "B49" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  346  <|@ instruction [v62|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction TESTBYTEBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.023714438988526654 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606968818122833350
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [v4|DWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  380  <|@ instruction [v63|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction v64|DWORD = MOV input: [v62|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  404  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction v65|DWORD = SETCC condition: < <|@ <|@
      nr  408  <|@ instruction v67|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 49, 50, 51, 52, ...}] <|@ <|@
      nr  410  <|@ instruction CMPCONSTBRANCH x: v63|DWORD trueDestinationProbability: 0.20456323728994374 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B71 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605339876961552022
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [v63|DWORD, v13|DWORD] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B69" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction v68|QWORD = MOVSXD value: v63|DWORD size: QWORD <|@ <|@
      nr  456  <|@ instruction v69|QWORD = IMUL x: v68|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr  458  <|@ instruction v70|QWORD = SAR x: v69|QWORD y: 37 size: QWORD <|@ <|@
      nr  460  <|@ instruction v71|DWORD = MOV value: v70|QWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction v72|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr  464  <|@ instruction v73|DWORD = IMUL x: v72|DWORD y: 100 size: DWORD <|@ <|@
      nr  466  <|@ instruction v74|DWORD = SUB (x: v73|DWORD, ~y: v63|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction CMPCONSTBRANCH x: v74|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B69 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B68" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction v75|DWORD = DEC value: v13|DWORD size: DWORD <|@ <|@
      nr  484  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v75|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B67" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction v76|DWORD = LEA address: [v13|DWORD - 2] size: DWORD <|@ <|@
      nr  504  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v76|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction v110|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction v77|DWORD = MOVSXB input: [v67|QWORD[.] + v74|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOVB (x: [v62|QWORD[.] + v75|DWORD * 1 + 16], y: v77|DWORD) size: BYTE <|@ <|@
      nr  528  <|@ instruction v78|DWORD = MOVSXB input: [v110|QWORD[.] + v74|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  530  <|@ instruction MOVB (x: [v62|QWORD[.] + v76|DWORD * 1 + 16], y: v78|DWORD) size: BYTE <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [v76|DWORD, v72|DWORD] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" 
    successors "B58" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596612633779284459
    begin_IR
      LIR
      nr  534  <|@ instruction [v79|DWORD, v80|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction CMPCONSTBRANCH x: v80|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B62 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction v81|QWORD = MOVSXD value: v80|DWORD size: QWORD <|@ <|@
      nr  580  <|@ instruction v82|QWORD = IMUL x: v81|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr  582  <|@ instruction v83|QWORD = SAR x: v82|QWORD y: 37 size: QWORD <|@ <|@
      nr  584  <|@ instruction v84|DWORD = MOV value: v83|QWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction v85|DWORD = INC value: v84|DWORD size: DWORD <|@ <|@
      nr  588  <|@ instruction v86|DWORD = IMUL x: v85|DWORD y: 100 size: DWORD <|@ <|@
      nr  590  <|@ instruction v87|DWORD = SUB (x: v86|DWORD, ~y: v80|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction CMPCONSTBRANCH x: v87|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B65 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction v88|DWORD = DEC value: v79|DWORD size: DWORD <|@ <|@
      nr  608  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v88|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction v89|DWORD = LEA address: [v79|DWORD - 2] size: DWORD <|@ <|@
      nr  628  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v89|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction v90|DWORD = MOVSXB input: [v67|QWORD[.] + v87|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction MOVB (x: [v62|QWORD[.] + v88|DWORD * 1 + 16], y: v90|DWORD) size: BYTE <|@ <|@
      nr  654  <|@ instruction v91|DWORD = MOVSXB input: [v110|QWORD[.] + v87|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction MOVB (x: [v62|QWORD[.] + v89|DWORD * 1 + 16], y: v91|DWORD) size: BYTE <|@ <|@
      nr  658  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:518) [bci: 69]
locals: v85|DWORD - v62|QWORD[.] v85|DWORD v87|DWORD v89|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction SAFEPOINT temp: v92|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:69, 30] <|@ <|@
      nr  660  <|@ instruction JUMP ~outgoingValues: [v89|DWORD, v85|DWORD] destination: B61 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 4596538187644396969
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [v80|DWORD, v79|DWORD] destination: B62 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B62" "B71" 
    successors "B73" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  672  <|@ instruction [v95|DWORD, v96|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction v97|DWORD = NEG value: v95|DWORD size: DWORD <|@ <|@
      nr  686  <|@ instruction CMPCONSTBRANCH x: v97|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B86 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction v98|DWORD = DEC value: v96|DWORD size: DWORD <|@ <|@
      nr  702  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v98|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B85 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction v99|DWORD = MOVSXB input: [v67|QWORD[.] + v97|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  720  <|@ instruction MOVB (x: [v62|QWORD[.] + v98|DWORD * 1 + 16], y: v99|DWORD) size: BYTE <|@ <|@
      nr  722  <|@ instruction CMPCONSTBRANCH x: v95|DWORD trueDestinationProbability: 0.6223590908157148 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B78 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction v100|DWORD = LEA address: [v96|DWORD - 2] size: DWORD <|@ <|@
      nr  742  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v100|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction v109|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction v101|DWORD = MOVSXB input: [v109|QWORD[.] + v97|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  760  <|@ instruction MOVB (x: [v62|QWORD[.] + v100|DWORD * 1 + 16], y: v101|DWORD) size: BYTE <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [v100|DWORD] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600474593749434728
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [v98|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  774  <|@ instruction [v102|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.023714554158984935 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606968817085470084
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v13|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B89" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction v18|DWORD = SHL (x: v13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  858  <|@ instruction v19|DWORD = SUB (x: v18|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction v21|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  862  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ instruction v20|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  866  <|@ instruction v22|DWORD = ADD (x: v20|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction CMP (x: v22|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr  870  <|@ instruction v23|DWORD = CMOVE (falseValue: v19|DWORD, ~trueValue: v22|DWORD) condition: > <|@ <|@
      nr  872  <|@ instruction v24|DWORD = ADD (x: v23|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction v25|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr  876  <|@ instruction CMPCONSTBRANCH x: v25|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B89 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B31" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction v26|DWORD = SAR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  902  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction v27|DWORD = SHL (x: v26|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  906  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v27|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction v40|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  934  <|@ instruction v41|QWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr  938  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr  940  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: v44|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B38" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr  976  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  978  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  980  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  982  <|@ instruction MOV x: [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr  984  <|@ instruction MOV x: [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  986  <|@ instruction MOV (x: [v40|QWORD + 12], y: v27|DWORD) size: DWORD <|@ <|@
      nr  988  <|@ instruction v46|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr  990  <|@ instruction CMPCONSTBRANCH x: v46|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr 1002  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v47|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction MOV x: [v40|QWORD + v47|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1032  <|@ instruction v48|QWORD = LEA address: [v47|QWORD + 8] size: QWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [v48|QWORD] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction v50|QWORD[.] = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B32" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1060  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction CMP (x: v3|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr 1076  <|@ instruction v52|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr 1078  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction v53|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1138  <|@ instruction v54|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1140  <|@ instruction v55|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1142  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[.] = MOVE input: v111|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1144  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = STACKMOVE (input: v112|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1146  <|@ instruction rdx|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = STACKMOVE (input: v116|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = STACKMOVE (input: v115|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = STACKMOVE (input: v114|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = STACKMOVE (input: v113|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = STACKMOVE (input: v121|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = STACKMOVE (input: v120|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1148  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B30" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr 1152  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v57|QWORD, temp2: v58|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1268  <|@ instruction v59|DWORD[_] = COMPRESSPOINTER (input: v56|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1270  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v59|DWORD[_]) size: DWORD <|@ <|@
      nr 1272  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v56|QWORD[.]) {temp: v60|QWORD, temp2: v61|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [v56|QWORD[.]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction v103|DWORD = DEC value: v102|DWORD size: DWORD <|@ <|@
      nr 1290  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v103|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction MOVB x: [v62|QWORD[.] + v103|DWORD * 1 + 16] y: 45 size: BYTE <|@ <|@
      nr 1304  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582492443078313792
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1318  <|@ instruction v107|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE input: v133|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1338  <|@ instruction rsi|QWORD = MOVE input: v107|QWORD moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr 1344  <|@ instruction v45|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1346  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction NULLCHECK address: [v45|QWORD[.]] state [bci:10] <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rcx|QWORD = MOVE input: v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOVE input: v40|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1372  <|@ instruction ZERO_MEMORY (pointer: [v40|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1374  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1402  <|@ instruction v30|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr 1404  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 23] size: QWORD <|@ <|@
      nr 1406  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr 1408  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr 1410  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr 1412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr 1438  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1440  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1442  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1444  <|@ instruction MOV x: [v29|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1446  <|@ instruction MOV x: [v29|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1448  <|@ instruction MOV (x: [v29|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr 1450  <|@ instruction v36|QWORD[.] = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr 1454  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction v38|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ instruction v39|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1488  <|@ instruction rdi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v135|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1490  <|@ instruction rsi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1492  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = STACKMOVE (input: v137|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = STACKMOVE (input: v136|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1494  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1500  <|@ instruction v108|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction rsi|QWORD = MOVE input: v108|QWORD moveKind: QWORD <|@ <|@
      nr 1522  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr 1524  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr 1526  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:10] <|@ <|@
      nr 1530  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction MOV x: [r15|QWORD + 1156] y: -204315 size: DWORD <|@ <|@
      nr 1550  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1552  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:527) [bci: 104]
locals: - - v62|QWORD[.] - - v102|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:104, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction JUMP ~outgoingValues: [int[-237081|0xfffffffffffc61e7], long[0|0x0]] destination: B41 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction JUMP ~outgoingValues: [int[-189723|0xfffffffffffd1ae5]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction JUMP ~outgoingValues: [int[-195611|0xfffffffffffd03e5]] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction MOV x: [r15|QWORD + 1156] y: -233747 size: DWORD <|@ <|@
      nr 1602  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1604  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
locals: v0|QWORD[.] v1|DWORD v11|DWORD v13|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction JUMP ~outgoingValues: [int[-236051|0xfffffffffffc65ed], long[1300|0x514]] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction JUMP ~outgoingValues: [int[-187419|0xfffffffffffd23e5]] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction JUMP ~outgoingValues: [int[-238105|0xfffffffffffc5de7], long[0|0x0]] destination: B43 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction JUMP ~outgoingValues: [int[-198171|0xfffffffffffcf9e5]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction JUMP ~outgoingValues: [int[-180507|0xfffffffffffd3ee5]] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction MOV x: [r15|QWORD + 1156] y: -207643 size: DWORD <|@ <|@
      nr 1674  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1676  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:523) [bci: 85]
locals: v95|DWORD - v62|QWORD[.] - - v98|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:85, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction JUMP ~outgoingValues: [int[-192283|0xfffffffffffd10e5]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1688  <|@ instruction [v93|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v93|DWORD) size: DWORD <|@ <|@
      nr 1706  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1708  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: v80|DWORD - v62|QWORD[.] - - v79|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction JUMP ~outgoingValues: [int[-201499|0xfffffffffffcece5]] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1720  <|@ instruction [v104|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v104|DWORD) size: DWORD <|@ <|@
      nr 1738  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1740  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:522) [bci: 72]
locals: v95|DWORD - v62|QWORD[.] - - v96|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:72, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction JUMP ~outgoingValues: [int[-239129|0xfffffffffffc59e7], long[0|0x0]] destination: B45 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B41" "B43" "B45" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1752  <|@ instruction [v105|DWORD, v106|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v105|DWORD) size: DWORD <|@ <|@
      nr 1770  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v106|QWORD) size: QWORD <|@ <|@
      nr 1772  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction JUMP ~outgoingValues: [int[-184091|0xfffffffffffd30e5]] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1784  <|@ instruction [v94|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction NOP <|@ <|@
      nr 1800  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v94|DWORD) size: DWORD <|@ <|@
      nr 1802  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1804  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: v63|DWORD - v62|QWORD[.] - - v13|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #18         // count:int
     4: istore_2      
     5: iload_2       
     6: iload_1       
     7: invokestatic  #61         // java.lang.Integer.stringSize:(int)int
    10: iadd          
    11: istore_3      
    12: aload_0       
    13: iload_3       
    14: invokevirtual #24         // ensureCapacityInternal:(int)void
    17: aload_0       
    18: invokevirtual #19         // isLatin1:()boolean
    21: ifeq          37
    24: iload_1       
    25: iload_3       
    26: aload_0       
    27: getfield      #2          // value:byte[]
    30: invokestatic  #62         // java.lang.Integer.getChars:(int, int, byte[])int
    33: pop           
    34: goto          48
    37: iload_1       
    38: iload_2       
    39: iload_3       
    40: aload_0       
    41: getfield      #2          // value:byte[]
    44: invokestatic  #63         // java.lang.StringUTF16.getChars:(int, int, int, byte[])int
    47: pop           
    48: aload_0       
    49: iload_3       
    50: putfield      #18         // count:int
    53: aload_0       
    54: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[818, 820[[1148, 1149[[1342, 1344[[1372, 1373[[1494, 1495[[1524, 1526[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v14|d [0, 1[[326, 329[[854, 857[[862, 865[[898, 901[[902, 905[[1148, 1149[[1370, 1373[[1494, 1495[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v55|q [0, 30[[1146, 1149[[1340, 1342[[1492, 1495[[1522, 1524[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[1148, 1149[[1494, 1495[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v107|q [0, 28[[1144, 1149[[1338, 1342[[1490, 1495[[1520, 1524[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[1142, 1149[[1372, 1373[[1488, 1495[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [28, 818[[822, 1104[28 MustHaveRegister 32 MustHaveRegister 318 MustHaveRegister 320 MustHaveRegister 816 MustHaveRegister 818 ShouldHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [30, 784[[822, 1104[30 MustHaveRegister 36 ShouldHaveRegister 38 MustHaveRegister 234 ShouldHaveRegister 368 MustHaveRegister 404 MustHaveRegister 784 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [32, 332[32 MustHaveRegister 34 MustHaveRegister 332 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [34, 336[[822, 1090[[1316, 1448[[1498, 1522[34 MustHaveRegister 328 ShouldHaveRegister 858 ShouldHaveRegister 866 ShouldHaveRegister 872 ShouldHaveRegister 906 MustHaveRegister 1074 MustHaveRegister 1076 ShouldHaveRegister 1090 ShouldHaveRegister 1402 ShouldHaveRegister 1448 MustHaveRegister 1522 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d v1|d [36, 379[[822, 1104[36 MustHaveRegister 48 ShouldHaveRegister 378 ShouldHaveRegister  "OneSpillStore"
  v5|d DWORD "[rcx|d]" v5|d -1 [50, 156[60 ShouldHaveRegister 72 ShouldHaveRegister 84 ShouldHaveRegister 96 ShouldHaveRegister 108 ShouldHaveRegister 120 ShouldHaveRegister 132 ShouldHaveRegister 144 ShouldHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[rdi|d]" v6|d -1 [50, 172[[176, 226[[236, 286[172 MustHaveRegister 286 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rcx|d]" v7|d -1 [172, 175[172 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rcx|d]" v8|d -1 [276, 286[286 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rcx|d]" v9|d v8|d [286, 289[286 MustHaveRegister 288 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[r8|d]" v10|d v9|d [290, 336[[822, 1104[[1316, 1412[[1498, 1529[[1554, 1564[[1606, 1616[[1626, 1636[[1742, 1773[322 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r9|d]" v11|d -1 [318, 358[[822, 1104[318 MustHaveRegister 322 ShouldHaveRegister  "OneSpillStore"
  v12|d DWORD "[rbx|d]" v12|d -1 [320, 356[[822, 1104[320 MustHaveRegister 324 ShouldHaveRegister 356 MustHaveRegister  "OneSpillStore"
  v13|d DWORD "[rbp|d]" v13|d v10|d [322, 816[[822, 1104[322 MustHaveRegister 330 MustHaveRegister 420 ShouldHaveRegister 482 ShouldHaveRegister 502 MustHaveRegister 816 MustHaveRegister 856 ShouldHaveRegister  "OneSpillStore"
  v14|d DWORD "[rdi|d]" v14|d -1 [324, 336[[822, 902[324 MustHaveRegister 326 ShouldHaveRegister 854 ShouldHaveRegister 862 ShouldHaveRegister 898 ShouldHaveRegister 902 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r13|d]" v15|d v3|d [328, 331[328 MustHaveRegister 330 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rcx|d]" v16|d v13|d [330, 334[330 MustHaveRegister 334 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[r13|q]" v17|q v2|d [332, 345[[822, 1136[[1316, 1484[[1498, 1532[332 MustHaveRegister 344 ShouldHaveRegister 1136 ShouldHaveRegister 1484 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d v13|d [856, 858[856 MustHaveRegister 858 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[rax|d]" v19|d v18|d [858, 870[858 MustHaveRegister 868 ShouldHaveRegister 870 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[r14|d]" v20|d v21|d [864, 866[864 MustHaveRegister 866 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[r14|d]" v21|d -1 [860, 864[860 MustHaveRegister 864 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[r14|d]" v22|d v20|d [866, 871[866 MustHaveRegister 868 MustHaveRegister 870 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d v19|d [870, 872[870 MustHaveRegister 872 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rax|d]" v24|d v23|d [872, 900[872 MustHaveRegister 874 ShouldHaveRegister 900 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rcx|d]" v25|d v24|d [874, 876[874 MustHaveRegister 876 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d v24|d [900, 904[900 MustHaveRegister 904 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[r14|d]" v27|d v26|d [904, 1102[[1316, 1376[904 MustHaveRegister 906 ShouldHaveRegister 934 ShouldHaveRegister 986 MustHaveRegister 1074 ShouldHaveRegister 1076 MustHaveRegister 1102 ShouldHaveRegister 1340 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rdi|q]" v29|q -1 [1400, 1450[1400 MustHaveRegister 1408 ShouldHaveRegister 1438 MustHaveRegister 1440 MustHaveRegister 1442 MustHaveRegister 1444 MustHaveRegister 1446 MustHaveRegister 1448 MustHaveRegister 1450 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[r9|q]" v30|q v3|d [1402, 1492[[1498, 1532[1402 MustHaveRegister 1404 MustHaveRegister 1492 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rsi|q]" v31|q -1 [1404, 1406[1404 MustHaveRegister 1406 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q v31|q [1406, 1443[1406 MustHaveRegister 1408 ShouldHaveRegister 1438 MustHaveRegister 1440 MustHaveRegister 1442 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rdx|q]" v33|q v32|q [1408, 1436[1408 MustHaveRegister 1410 MustHaveRegister 1436 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q rax|q [1526, 1531[1526 MustHaveRegister 1528 MustHaveRegister 1530 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rdi|q]" v36|q v29|q [1450, 1453[1450 MustHaveRegister 1452 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rdi|q]" v37|q v36|q [1454, 1487[1486 ShouldHaveRegister  "OneSpillStore"
  v38|q QWORD "[r13|q]" v38|q v17|q [1484, 1488[1484 MustHaveRegister 1488 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rdx|q]" v39|q v37|q [1486, 1490[1486 MustHaveRegister 1490 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rdi|q]" v40|q -1 [932, 1056[[1350, 1371[932 MustHaveRegister 940 ShouldHaveRegister 976 MustHaveRegister 978 MustHaveRegister 980 MustHaveRegister 982 MustHaveRegister 984 MustHaveRegister 986 MustHaveRegister 1030 MustHaveRegister 1035 LiveAtLoopEnd 1056 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rcx|q]" v41|q v27|d [934, 936[934 MustHaveRegister 936 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rcx|q]" v42|q -1 [936, 938[936 MustHaveRegister 938 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rcx|q]" v43|q v42|q [938, 1036[938 MustHaveRegister 940 ShouldHaveRegister 976 MustHaveRegister 978 MustHaveRegister 980 MustHaveRegister 988 MustHaveRegister 1012 MustHaveRegister 1035 LiveAtLoopEnd  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q v43|q [940, 974[940 MustHaveRegister 942 MustHaveRegister 974 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q rax|q [1344, 1349[1344 MustHaveRegister 1346 MustHaveRegister 1348 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q -1 [988, 992[[1350, 1370[988 MustHaveRegister 990 ShouldHaveRegister 1370 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q v48|q [1002, 1032[1012 ShouldHaveRegister 1030 MustHaveRegister 1032 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rax|q]" v48|q v47|q [1032, 1035[1032 MustHaveRegister 1034 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rdi|q]" v50|q v40|q [1056, 1059[1056 MustHaveRegister 1058 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[rdi|q]" v51|q v50|q [1060, 1141[1138 ShouldHaveRegister  "OneSpillStore"
  v52|d DWORD "[rcx|d]" v52|d v3|d [1076, 1140[1076 MustHaveRegister 1078 MustHaveRegister 1090 MustHaveRegister 1102 MustHaveRegister 1140 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[r13|q]" v53|q v17|q [1136, 1142[1136 MustHaveRegister 1142 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[r10|q]" v54|q v51|q [1138, 1144[1138 MustHaveRegister 1144 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rcx|q]" v55|q v52|d [1140, 1146[1140 MustHaveRegister 1146 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[rdi|q]" v56|q v51|q [1152, 1275[1268 MustHaveRegister 1272 MustHaveRegister 1274 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[rdx|q]" v57|q -1 [1266, 1267[1266 MustHaveRegister  "NoDefinitionFound"
  v58|q QWORD "[rax|q]" v58|q -1 [1266, 1267[1266 MustHaveRegister  "NoDefinitionFound"
  v59|d DWORD "[rdx|d]" v59|d v56|q [1268, 1270[1268 MustHaveRegister 1270 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rdx|q]" v60|q -1 [1272, 1273[1272 MustHaveRegister  "NoDefinitionFound"
  v61|q QWORD "[rax|q]" v61|q -1 [1272, 1273[1272 MustHaveRegister  "NoDefinitionFound"
  v62|q QWORD "[r13|q]" v62|q v17|q [346, 786[[1276, 1302[[1306, 1316[[1532, 1553[[1564, 1584[[1616, 1626[[1636, 1677[[1678, 1709[[1710, 1741[[1774, 1805[402 MustHaveRegister 526 MustHaveRegister 530 MustHaveRegister 652 MustHaveRegister 656 MustHaveRegister 661 LiveAtLoopEnd 720 MustHaveRegister 760 MustHaveRegister 1302 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[r11|d]" v63|d v4|d [380, 421[[422, 506[[1616, 1626[[1646, 1656[[1774, 1805[410 ShouldHaveRegister 420 ShouldHaveRegister 454 ShouldHaveRegister 466 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[r10|d]" v64|d -1 [402, 786[[1276, 1290[402 MustHaveRegister 484 MustHaveRegister 504 MustHaveRegister 608 MustHaveRegister 628 MustHaveRegister 661 LiveAtLoopEnd 702 MustHaveRegister 742 MustHaveRegister 1290 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[r8|d]" v65|d -1 [406, 534[406 MustHaveRegister  "StoreAtDefinition"
  v67|q QWORD "[rax|q]" v67|q -1 [408, 718[408 MustHaveRegister 524 MustHaveRegister 650 MustHaveRegister 661 LiveAtLoopEnd 718 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[rcx|q]" v68|q -1 [454, 456[454 MustHaveRegister 456 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[rcx|q]" v69|q -1 [456, 458[456 MustHaveRegister 458 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rcx|q]" v70|q v69|q [458, 460[458 MustHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v71|d DWORD "[rcx|d]" v71|d -1 [460, 462[460 MustHaveRegister 462 ShouldHaveRegister  "NoSpillStore"
  v72|d DWORD "[rcx|d]" v72|d v71|d [462, 533[462 MustHaveRegister 464 ShouldHaveRegister 532 ShouldHaveRegister  "NoSpillStore"
  v73|d DWORD "[rdi|d]" v73|d -1 [464, 466[464 MustHaveRegister 466 MustHaveRegister  "NoSpillStore"
  v74|d DWORD "[rdi|d]" v74|d v73|d [466, 528[466 MustHaveRegister 468 ShouldHaveRegister 524 MustHaveRegister 528 MustHaveRegister  "NoSpillStore"
  v75|d DWORD "[r9|d]" v75|d v13|d [482, 526[482 MustHaveRegister 484 ShouldHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v76|d DWORD "[rbx|d]" v76|d v79|d [502, 533[502 MustHaveRegister 504 ShouldHaveRegister 530 MustHaveRegister 532 ShouldHaveRegister  "NoSpillStore"
  v77|d DWORD "[r14|d]" v77|d -1 [524, 526[524 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v78|d DWORD "[rdi|d]" v78|d -1 [528, 530[528 MustHaveRegister 530 MustHaveRegister  "NoSpillStore"
  v79|d DWORD "[rbx|d]" v79|d v76|d [534, 630[[662, 671[[1564, 1584[[1678, 1709[606 ShouldHaveRegister 626 MustHaveRegister 670 ShouldHaveRegister  "NoSpillStore"
  v80|d DWORD "[rcx|d]" v80|d v72|d [534, 630[[662, 671[[1564, 1584[[1678, 1709[544 ShouldHaveRegister 578 ShouldHaveRegister 590 ShouldHaveRegister 670 ShouldHaveRegister  "NoSpillStore"
  v81|q QWORD "[rdi|q]" v81|q -1 [578, 580[578 MustHaveRegister 580 ShouldHaveRegister  "NoSpillStore"
  v82|q QWORD "[rdi|q]" v82|q -1 [580, 582[580 MustHaveRegister 582 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rdi|q]" v83|q v82|q [582, 584[582 MustHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v84|d DWORD "[rdi|d]" v84|d -1 [584, 586[584 MustHaveRegister 586 ShouldHaveRegister  "NoSpillStore"
  v85|d DWORD "[rdi|d]" v85|d v84|d [586, 661[586 MustHaveRegister 588 ShouldHaveRegister 660 ShouldHaveRegister  "NoSpillStore"
  v86|d DWORD "[r9|d]" v86|d -1 [588, 590[588 MustHaveRegister 590 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[r9|d]" v87|d v86|d [590, 659[590 MustHaveRegister 592 ShouldHaveRegister 650 MustHaveRegister 654 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[r14|d]" v88|d v79|d [606, 652[606 MustHaveRegister 608 ShouldHaveRegister 652 MustHaveRegister  "NoSpillStore"
  v89|d DWORD "[r8|d]" v89|d -1 [626, 661[626 MustHaveRegister 628 ShouldHaveRegister 656 MustHaveRegister 660 ShouldHaveRegister  "NoSpillStore"
  v90|d DWORD "[rcx|d]" v90|d -1 [650, 652[650 MustHaveRegister 652 MustHaveRegister  "NoSpillStore"
  v91|d DWORD "[rcx|d]" v91|d -1 [654, 656[654 MustHaveRegister 656 MustHaveRegister  "NoSpillStore"
  v92|q QWORD "[rcx|q]" v92|q -1 [658, 659[658 MustHaveRegister  "NoDefinitionFound"
  v93|d DWORD "[r10|d]" v93|d -1 [1688, 1704[1704 MustHaveRegister  "NoSpillStore"
  v94|d DWORD "[r10|d]" v94|d -1 [1784, 1800[1800 MustHaveRegister  "NoSpillStore"
  v95|d DWORD "[r11|d]" v95|d v63|d [672, 744[[1636, 1646[[1656, 1677[[1710, 1741[684 ShouldHaveRegister 722 ShouldHaveRegister  "NoSpillStore"
  v96|d DWORD "[rbx|d]" v96|d v79|d [672, 740[[1636, 1646[[1710, 1741[700 ShouldHaveRegister 740 MustHaveRegister  "NoSpillStore"
  v97|d DWORD "[rcx|d]" v97|d v95|d [684, 758[684 MustHaveRegister 686 ShouldHaveRegister 718 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v98|d DWORD "[r8|d]" v98|d v96|d [700, 744[[764, 773[[1656, 1677[700 MustHaveRegister 702 ShouldHaveRegister 720 MustHaveRegister 772 ShouldHaveRegister  "NoSpillStore"
  v99|d DWORD "[rax|d]" v99|d -1 [718, 720[718 MustHaveRegister 720 MustHaveRegister  "NoSpillStore"
  v100|d DWORD "[rax|d]" v100|d v102|d [740, 763[740 MustHaveRegister 742 ShouldHaveRegister 760 MustHaveRegister 762 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[rcx|d]" v101|d -1 [758, 760[758 MustHaveRegister 760 MustHaveRegister  "NoSpillStore"
  v102|d DWORD "[rax|d]" v102|d v100|d [774, 786[[1276, 1292[[1532, 1553[1288 ShouldHaveRegister  "NoSpillStore"
  v103|d DWORD "[rdx|d]" v103|d v102|d [1288, 1302[1288 MustHaveRegister 1290 ShouldHaveRegister 1302 MustHaveRegister  "NoSpillStore"
  v104|d DWORD "[r10|d]" v104|d -1 [1720, 1736[1736 MustHaveRegister  "NoSpillStore"
  v105|d DWORD "[r10|d]" v105|d -1 [1752, 1768[1768 MustHaveRegister  "NoSpillStore"
  v106|q QWORD "[r11|q]" v106|q -1 [1752, 1770[1770 MustHaveRegister  "NoSpillStore"
  v107|q QWORD "[rdx|q]" v107|q -1 [1318, 1338[1318 MustHaveRegister 1338 ShouldHaveRegister  "NoSpillStore"
  v108|q QWORD "[rsi|q]" v108|q -1 [1500, 1520[1500 MustHaveRegister 1520 ShouldHaveRegister  "NoSpillStore"
  v109|q QWORD "[rdi|q]" v109|q -1 [746, 758[746 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v110|q QWORD "[r11|q]" v110|q -1 [508, 662[508 MustHaveRegister 528 MustHaveRegister 654 MustHaveRegister 661 LiveAtLoopEnd  "NoSpillStore"
  v111|q QWORD "[vstack:4|q]" v0|q v0|q [1104, 1143[ "StoreAtDefinition"
  v112|d DWORD "[vstack:1|d]" v1|d v1|d [1104, 1145[ "OneSpillStore"
  v113|d DWORD "[vstack:5|d]" v4|d v4|d [1104, 1147[ "OneSpillStore"
  v114|d DWORD "[vstack:6|d]" v11|d v11|d [1104, 1147[ "OneSpillStore"
  v115|d DWORD "[vstack:7|d]" v12|d v12|d [1104, 1147[ "OneSpillStore"
  v116|d DWORD "[vstack:8|d]" v13|d v13|d [1104, 1147[ "OneSpillStore"
  v117|d DWORD "[r8|d]" v65|d v65|d [1784, 1805[ "StoreAtDefinition"
  v118|d DWORD "[vstack:0|d]" v65|d v65|d [534, 786[[1276, 1292[[1532, 1553[[1564, 1584[[1616, 1626[[1636, 1677[[1678, 1709[[1710, 1741[[1774, 1784[ "StoreAtDefinition"
  v119|q QWORD "[rsi|q]" v40|q v40|q [1371, 1376[1372 MustHaveRegister  "NoSpillStore"
  v120|q QWORD "[vstack:2|q]" v51|q v51|q [1141, 1147[ "OneSpillStore"
  v121|q QWORD "[vstack:4|q]" v0|q v0|q [1143, 1147[ "StoreAtDefinition"
  v122|d DWORD "[vstack:1|d]" v1|d v1|d [1145, 1276[[1306, 1532[[1554, 1564[[1584, 1605[[1606, 1616[[1626, 1636[[1742, 1752[1314 ShouldHaveRegister  "OneSpillStore"
  v123|d DWORD "[vstack:8|d]" v13|d v13|d [1147, 1553[[1564, 1605[[1616, 1626[[1636, 1677[[1678, 1709[[1710, 1741[[1774, 1784[ "OneSpillStore"
  v124|d DWORD "[vstack:7|d]" v12|d v12|d [1147, 1276[[1316, 1532[ "OneSpillStore"
  v125|d DWORD "[vstack:6|d]" v11|d v11|d [1147, 1276[[1316, 1532[[1554, 1564[[1584, 1605[[1606, 1616[[1626, 1636[[1742, 1752[ "OneSpillStore"
  v126|d DWORD "[vstack:5|d]" v4|d v4|d [1147, 1276[[1316, 1532[ "OneSpillStore"
  v127|q QWORD "[vstack:2|q]" v51|q v51|q [1147, 1151[1150 ShouldHaveRegister  "OneSpillStore"
  v128|q QWORD "[vstack:4|q]" v0|q v0|q [1147, 1152[ "StoreAtDefinition"
  v129|d DWORD "[rdx|d]" v1|d v1|d [1752, 1773[ "OneSpillStore"
  v130|q QWORD "[rsi|q]" v0|q v0|q [1152, 1316[1266 MustHaveRegister 1270 MustHaveRegister 1272 MustHaveRegister  "StoreAtDefinition"
  v131|d DWORD "[r9|d]" v11|d v11|d [1752, 1773[ "OneSpillStore"
  v132|d DWORD "[rbp|d]" v13|d v13|d [1784, 1805[ "OneSpillStore"
  v133|q QWORD "[vstack:4|q]" v0|q v0|q [1316, 1337[ "StoreAtDefinition"
  v134|q QWORD "[vstack:4|q]" v0|q v0|q [1337, 1454[ "StoreAtDefinition"
  v135|q QWORD "[vstack:4|q]" v0|q v0|q [1454, 1489[ "StoreAtDefinition"
  v136|q QWORD "[vstack:10|q]" v37|q v37|q [1487, 1493[ "OneSpillStore"
  v137|q QWORD "[vstack:4|q]" v0|q v0|q [1489, 1493[ "StoreAtDefinition"
  v138|q QWORD "[vstack:10|q]" v37|q v37|q [1493, 1497[1496 ShouldHaveRegister  "OneSpillStore"
  v139|q QWORD "[vstack:4|q]" v0|q v0|q [1493, 1553[[1554, 1605[[1606, 1677[[1678, 1709[[1710, 1741[[1742, 1773[[1774, 1784[ "StoreAtDefinition"
  v140|q QWORD "[rsi|q]" v0|q v0|q [1784, 1805[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@11fbf5cf slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v4|DWORD = NEG value: v1|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0248451913249636 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606958633211231298
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [v4|DWORD, int[0|0x0]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [v5|DWORD, v6|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B21 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B20" 
    xhandlers
    flags 
    probability 4602752168055621283
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B20 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B19" 
    xhandlers
    flags 
    probability 4598323111924218927
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B19 y: -999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B18" 
    xhandlers
    flags 
    probability 4593895269862142147
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B18 y: -9999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" 
    xhandlers
    flags 
    probability 4589468661642602652
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B17 y: -99999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4585043307360852988
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B16 y: -999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4580619227439431527
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B15 y: -9999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4576196442633492882
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 y: -99999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4571774974036225136
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: -999999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4567354843084355297
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction v7|DWORD = LEA address: [v6|DWORD + 10] size: DWORD <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B12 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602532121406698170
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598172830319288879
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [int[2|0x2]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593743754731554715
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [int[3|0x3]] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589314678826940650
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [int[4|0x4]] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4584886816669611324
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [int[5|0x5]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4582818360249579440
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [v1|DWORD, int[1|0x1]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580460188027533457
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [int[6|0x6]] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576034812990629180
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [int[7|0x7]] destination: B15 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571610711976019636
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [int[8|0x8]] destination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567187905733353983
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [int[9|0x9]] destination: B13 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B13" "B21" "B20" "B19" "B18" "B17" "B16" "B15" "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607162073407212554
    begin_IR
      LIR
      nr  276  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction v9|DWORD = ADD (x: v8|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B12" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  290  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction v11|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  320  <|@ instruction v12|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  322  <|@ instruction v13|DWORD = ADD (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  324  <|@ instruction v14|DWORD = MOVSXB value: v12|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction v15|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction v16|DWORD = SUB (x: v13|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr  332  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" "B47" 
    successors "B49" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  346  <|@ instruction [v62|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction TESTBYTEBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.023714438988526654 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606968818122833350
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [v4|DWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  380  <|@ instruction [v63|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction v64|DWORD = MOV input: [v62|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  404  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction v65|DWORD = SETCC condition: < <|@ <|@
      nr  408  <|@ instruction v67|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 49, 50, 51, 52, ...}] <|@ <|@
      nr  410  <|@ instruction CMPCONSTBRANCH x: v63|DWORD trueDestinationProbability: 0.20456323728994374 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B71 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605339876961552022
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [v63|DWORD, v13|DWORD] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B69" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction v68|QWORD = MOVSXD value: v63|DWORD size: QWORD <|@ <|@
      nr  456  <|@ instruction v69|QWORD = IMUL x: v68|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr  458  <|@ instruction v70|QWORD = SAR x: v69|QWORD y: 37 size: QWORD <|@ <|@
      nr  460  <|@ instruction v71|DWORD = MOV value: v70|QWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction v72|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr  464  <|@ instruction v73|DWORD = IMUL x: v72|DWORD y: 100 size: DWORD <|@ <|@
      nr  466  <|@ instruction v74|DWORD = SUB (x: v73|DWORD, ~y: v63|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction CMPCONSTBRANCH x: v74|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B69 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B68" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction v75|DWORD = DEC value: v13|DWORD size: DWORD <|@ <|@
      nr  484  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v75|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B67" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction v76|DWORD = LEA address: [v13|DWORD - 2] size: DWORD <|@ <|@
      nr  504  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v76|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction v110|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction v77|DWORD = MOVSXB input: [v67|QWORD[.] + v74|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOVB (x: [v62|QWORD[.] + v75|DWORD * 1 + 16], y: v77|DWORD) size: BYTE <|@ <|@
      nr  528  <|@ instruction v78|DWORD = MOVSXB input: [v110|QWORD[.] + v74|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  530  <|@ instruction MOVB (x: [v62|QWORD[.] + v76|DWORD * 1 + 16], y: v78|DWORD) size: BYTE <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [v76|DWORD, v72|DWORD] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" 
    successors "B58" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596612633779284459
    begin_IR
      LIR
      nr  534  <|@ instruction [v79|DWORD, v80|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction CMPCONSTBRANCH x: v80|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B62 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction v81|QWORD = MOVSXD value: v80|DWORD size: QWORD <|@ <|@
      nr  580  <|@ instruction v82|QWORD = IMUL x: v81|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr  582  <|@ instruction v83|QWORD = SAR x: v82|QWORD y: 37 size: QWORD <|@ <|@
      nr  584  <|@ instruction v84|DWORD = MOV value: v83|QWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction v85|DWORD = INC value: v84|DWORD size: DWORD <|@ <|@
      nr  588  <|@ instruction v86|DWORD = IMUL x: v85|DWORD y: 100 size: DWORD <|@ <|@
      nr  590  <|@ instruction v87|DWORD = SUB (x: v86|DWORD, ~y: v80|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction CMPCONSTBRANCH x: v87|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B65 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction v88|DWORD = DEC value: v79|DWORD size: DWORD <|@ <|@
      nr  608  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v88|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction v89|DWORD = LEA address: [v79|DWORD - 2] size: DWORD <|@ <|@
      nr  628  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v89|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction v90|DWORD = MOVSXB input: [v67|QWORD[.] + v87|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction MOVB (x: [v62|QWORD[.] + v88|DWORD * 1 + 16], y: v90|DWORD) size: BYTE <|@ <|@
      nr  654  <|@ instruction v91|DWORD = MOVSXB input: [v110|QWORD[.] + v87|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction MOVB (x: [v62|QWORD[.] + v89|DWORD * 1 + 16], y: v91|DWORD) size: BYTE <|@ <|@
      nr  658  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:518) [bci: 69]
locals: v85|DWORD - v62|QWORD[.] v85|DWORD v87|DWORD v89|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction SAFEPOINT temp: v92|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:69, 30] <|@ <|@
      nr  660  <|@ instruction JUMP ~outgoingValues: [v89|DWORD, v85|DWORD] destination: B61 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 4596538187644396969
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [v80|DWORD, v79|DWORD] destination: B62 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B62" "B71" 
    successors "B73" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  672  <|@ instruction [v95|DWORD, v96|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction v97|DWORD = NEG value: v95|DWORD size: DWORD <|@ <|@
      nr  686  <|@ instruction CMPCONSTBRANCH x: v97|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B86 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction v98|DWORD = DEC value: v96|DWORD size: DWORD <|@ <|@
      nr  702  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v98|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B85 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction v99|DWORD = MOVSXB input: [v67|QWORD[.] + v97|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  720  <|@ instruction MOVB (x: [v62|QWORD[.] + v98|DWORD * 1 + 16], y: v99|DWORD) size: BYTE <|@ <|@
      nr  722  <|@ instruction CMPCONSTBRANCH x: v95|DWORD trueDestinationProbability: 0.6223590908157148 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B78 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction v100|DWORD = LEA address: [v96|DWORD - 2] size: DWORD <|@ <|@
      nr  742  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v100|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction v109|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction v101|DWORD = MOVSXB input: [v109|QWORD[.] + v97|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  760  <|@ instruction MOVB (x: [v62|QWORD[.] + v100|DWORD * 1 + 16], y: v101|DWORD) size: BYTE <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [v100|DWORD] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600474593749434728
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [v98|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  774  <|@ instruction [v102|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.023714554158984935 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606968817085470084
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v13|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B89" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction v18|DWORD = SHL (x: v13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  858  <|@ instruction v19|DWORD = SUB (x: v18|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction v21|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  862  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ instruction v20|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  866  <|@ instruction v22|DWORD = ADD (x: v20|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction CMP (x: v22|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr  870  <|@ instruction v23|DWORD = CMOVE (falseValue: v19|DWORD, ~trueValue: v22|DWORD) condition: > <|@ <|@
      nr  872  <|@ instruction v24|DWORD = ADD (x: v23|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction v25|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr  876  <|@ instruction CMPCONSTBRANCH x: v25|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B89 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B31" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction v26|DWORD = SAR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  902  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction v27|DWORD = SHL (x: v26|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  906  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v27|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction v40|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  934  <|@ instruction v41|QWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr  938  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr  940  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: v44|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B38" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr  976  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  978  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  980  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  982  <|@ instruction MOV x: [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr  984  <|@ instruction MOV x: [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  986  <|@ instruction MOV (x: [v40|QWORD + 12], y: v27|DWORD) size: DWORD <|@ <|@
      nr  988  <|@ instruction v46|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr  990  <|@ instruction CMPCONSTBRANCH x: v46|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr 1002  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v47|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction MOV x: [v40|QWORD + v47|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1032  <|@ instruction v48|QWORD = LEA address: [v47|QWORD + 8] size: QWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [v48|QWORD] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction v50|QWORD[.] = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B32" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1060  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction CMP (x: v3|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr 1076  <|@ instruction v52|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr 1078  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction v53|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1138  <|@ instruction v54|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1140  <|@ instruction v55|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1142  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[.] = MOVE input: v111|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1144  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = STACKMOVE (input: v112|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1146  <|@ instruction rdx|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = STACKMOVE (input: v116|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = STACKMOVE (input: v115|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = STACKMOVE (input: v114|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = STACKMOVE (input: v113|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = STACKMOVE (input: v121|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = STACKMOVE (input: v120|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1148  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B30" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr 1152  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v57|QWORD, temp2: v58|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1268  <|@ instruction v59|DWORD[_] = COMPRESSPOINTER (input: v56|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1270  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v59|DWORD[_]) size: DWORD <|@ <|@
      nr 1272  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v56|QWORD[.]) {temp: v60|QWORD, temp2: v61|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [v56|QWORD[.]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction v103|DWORD = DEC value: v102|DWORD size: DWORD <|@ <|@
      nr 1290  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v103|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction MOVB x: [v62|QWORD[.] + v103|DWORD * 1 + 16] y: 45 size: BYTE <|@ <|@
      nr 1304  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582492443078313792
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction JUMP ~outgoingValues: [v1|DWORD] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1318  <|@ instruction v107|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE input: v133|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1338  <|@ instruction rsi|QWORD = MOVE input: v107|QWORD moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr 1344  <|@ instruction v45|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1346  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction NULLCHECK address: [v45|QWORD[.]] state [bci:10] <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rcx|QWORD = MOVE input: v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOVE input: v40|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1372  <|@ instruction ZERO_MEMORY (pointer: [v40|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1374  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1402  <|@ instruction v30|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr 1404  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 23] size: QWORD <|@ <|@
      nr 1406  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr 1408  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr 1410  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr 1412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr 1438  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1440  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1442  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1444  <|@ instruction MOV x: [v29|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1446  <|@ instruction MOV x: [v29|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1448  <|@ instruction MOV (x: [v29|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr 1450  <|@ instruction v36|QWORD[.] = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [v36|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr 1454  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction v38|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ instruction v39|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1488  <|@ instruction rdi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v135|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1490  <|@ instruction rsi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1492  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = STACKMOVE (input: v137|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = STACKMOVE (input: v136|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1494  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1500  <|@ instruction v108|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction rsi|QWORD = MOVE input: v108|QWORD moveKind: QWORD <|@ <|@
      nr 1522  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr 1524  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr 1526  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:10] <|@ <|@
      nr 1530  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction MOV x: [r15|QWORD + 1156] y: -204315 size: DWORD <|@ <|@
      nr 1550  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1552  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:527) [bci: 104]
locals: - - v62|QWORD[.] - - v102|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:104, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction JUMP ~outgoingValues: [int[-237081|0xfffffffffffc61e7], long[0|0x0]] destination: B41 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction JUMP ~outgoingValues: [int[-189723|0xfffffffffffd1ae5]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction JUMP ~outgoingValues: [int[-195611|0xfffffffffffd03e5]] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction MOV x: [r15|QWORD + 1156] y: -233747 size: DWORD <|@ <|@
      nr 1602  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1604  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
locals: v0|QWORD[.] v1|DWORD v11|DWORD v13|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction JUMP ~outgoingValues: [int[-236051|0xfffffffffffc65ed], long[1300|0x514]] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction JUMP ~outgoingValues: [int[-187419|0xfffffffffffd23e5]] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction JUMP ~outgoingValues: [int[-238105|0xfffffffffffc5de7], long[0|0x0]] destination: B43 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction JUMP ~outgoingValues: [int[-198171|0xfffffffffffcf9e5]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction JUMP ~outgoingValues: [int[-180507|0xfffffffffffd3ee5]] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction MOV x: [r15|QWORD + 1156] y: -207643 size: DWORD <|@ <|@
      nr 1674  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1676  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:523) [bci: 85]
locals: v95|DWORD - v62|QWORD[.] - - v98|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:85, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction JUMP ~outgoingValues: [int[-192283|0xfffffffffffd10e5]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1688  <|@ instruction [v93|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v93|DWORD) size: DWORD <|@ <|@
      nr 1706  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1708  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: v80|DWORD - v62|QWORD[.] - - v79|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction JUMP ~outgoingValues: [int[-201499|0xfffffffffffcece5]] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1720  <|@ instruction [v104|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v104|DWORD) size: DWORD <|@ <|@
      nr 1738  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1740  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:522) [bci: 72]
locals: v95|DWORD - v62|QWORD[.] - - v96|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:72, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction JUMP ~outgoingValues: [int[-239129|0xfffffffffffc59e7], long[0|0x0]] destination: B45 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B41" "B43" "B45" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1752  <|@ instruction [v105|DWORD, v106|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v105|DWORD) size: DWORD <|@ <|@
      nr 1770  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v106|QWORD) size: QWORD <|@ <|@
      nr 1772  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction JUMP ~outgoingValues: [int[-184091|0xfffffffffffd30e5]] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1784  <|@ instruction [v94|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction NOP <|@ <|@
      nr 1800  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v94|DWORD) size: DWORD <|@ <|@
      nr 1802  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1804  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: v63|DWORD - v62|QWORD[.] - - v13|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #18         // count:int
     4: istore_2      
     5: iload_2       
     6: iload_1       
     7: invokestatic  #61         // java.lang.Integer.stringSize:(int)int
    10: iadd          
    11: istore_3      
    12: aload_0       
    13: iload_3       
    14: invokevirtual #24         // ensureCapacityInternal:(int)void
    17: aload_0       
    18: invokevirtual #19         // isLatin1:()boolean
    21: ifeq          37
    24: iload_1       
    25: iload_3       
    26: aload_0       
    27: getfield      #2          // value:byte[]
    30: invokestatic  #62         // java.lang.Integer.getChars:(int, int, byte[])int
    33: pop           
    34: goto          48
    37: iload_1       
    38: iload_2       
    39: iload_3       
    40: aload_0       
    41: getfield      #2          // value:byte[]
    44: invokestatic  #63         // java.lang.StringUTF16.getChars:(int, int, int, byte[])int
    47: pop           
    48: aload_0       
    49: iload_3       
    50: putfield      #18         // count:int
    53: aload_0       
    54: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[818, 820[[1148, 1149[[1342, 1344[[1372, 1373[[1494, 1495[[1524, 1526[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v14|d [0, 1[[326, 329[[854, 857[[862, 865[[898, 901[[902, 905[[1148, 1149[[1370, 1373[[1494, 1495[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v55|q [0, 30[[1146, 1149[[1340, 1342[[1492, 1495[[1522, 1524[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[1148, 1149[[1494, 1495[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v107|q [0, 28[[1144, 1149[[1338, 1342[[1490, 1495[[1520, 1524[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[1142, 1149[[1372, 1373[[1488, 1495[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[1148, 1149[[1494, 1495[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [28, 818[[822, 1104[28 MustHaveRegister 32 MustHaveRegister 318 MustHaveRegister 320 MustHaveRegister 816 MustHaveRegister 818 ShouldHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [30, 784[[822, 1104[30 MustHaveRegister 36 ShouldHaveRegister 38 MustHaveRegister 234 ShouldHaveRegister 368 MustHaveRegister 404 MustHaveRegister 784 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [32, 332[32 MustHaveRegister 34 MustHaveRegister 332 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [34, 336[[822, 1090[[1316, 1448[[1498, 1522[34 MustHaveRegister 328 ShouldHaveRegister 858 ShouldHaveRegister 866 ShouldHaveRegister 872 ShouldHaveRegister 906 MustHaveRegister 1074 MustHaveRegister 1076 ShouldHaveRegister 1090 ShouldHaveRegister 1402 ShouldHaveRegister 1448 MustHaveRegister 1522 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d v1|d [36, 379[[822, 1104[36 MustHaveRegister 48 ShouldHaveRegister 378 ShouldHaveRegister  "OneSpillStore"
  v5|d DWORD "[rcx|d]" v5|d -1 [50, 156[60 ShouldHaveRegister 72 ShouldHaveRegister 84 ShouldHaveRegister 96 ShouldHaveRegister 108 ShouldHaveRegister 120 ShouldHaveRegister 132 ShouldHaveRegister 144 ShouldHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[rdi|d]" v6|d -1 [50, 172[[176, 226[[236, 286[172 MustHaveRegister 286 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rcx|d]" v7|d -1 [172, 175[172 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rcx|d]" v8|d -1 [276, 286[286 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rcx|d]" v9|d v8|d [286, 289[286 MustHaveRegister 288 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[r8|d]" v10|d v9|d [290, 336[[822, 1104[[1316, 1412[[1498, 1529[[1554, 1564[[1606, 1616[[1626, 1636[[1742, 1773[322 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r9|d]" v11|d -1 [318, 358[[822, 1104[318 MustHaveRegister 322 ShouldHaveRegister  "OneSpillStore"
  v12|d DWORD "[rbx|d]" v12|d -1 [320, 356[[822, 1104[320 MustHaveRegister 324 ShouldHaveRegister 356 MustHaveRegister  "OneSpillStore"
  v13|d DWORD "[rbp|d]" v13|d v10|d [322, 816[[822, 1104[322 MustHaveRegister 330 MustHaveRegister 420 ShouldHaveRegister 482 ShouldHaveRegister 502 MustHaveRegister 816 MustHaveRegister 856 ShouldHaveRegister  "OneSpillStore"
  v14|d DWORD "[rdi|d]" v14|d -1 [324, 336[[822, 902[324 MustHaveRegister 326 ShouldHaveRegister 854 ShouldHaveRegister 862 ShouldHaveRegister 898 ShouldHaveRegister 902 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r13|d]" v15|d v3|d [328, 331[328 MustHaveRegister 330 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rcx|d]" v16|d v13|d [330, 334[330 MustHaveRegister 334 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[r13|q]" v17|q v2|d [332, 345[[822, 1136[[1316, 1484[[1498, 1532[332 MustHaveRegister 344 ShouldHaveRegister 1136 ShouldHaveRegister 1484 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d v13|d [856, 858[856 MustHaveRegister 858 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[rax|d]" v19|d v18|d [858, 870[858 MustHaveRegister 868 ShouldHaveRegister 870 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[r14|d]" v20|d v21|d [864, 866[864 MustHaveRegister 866 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[r14|d]" v21|d -1 [860, 864[860 MustHaveRegister 864 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[r14|d]" v22|d v20|d [866, 871[866 MustHaveRegister 868 MustHaveRegister 870 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d v19|d [870, 872[870 MustHaveRegister 872 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rax|d]" v24|d v23|d [872, 900[872 MustHaveRegister 874 ShouldHaveRegister 900 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rcx|d]" v25|d v24|d [874, 876[874 MustHaveRegister 876 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d v24|d [900, 904[900 MustHaveRegister 904 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[r14|d]" v27|d v26|d [904, 1102[[1316, 1376[904 MustHaveRegister 906 ShouldHaveRegister 934 ShouldHaveRegister 986 MustHaveRegister 1074 ShouldHaveRegister 1076 MustHaveRegister 1102 ShouldHaveRegister 1340 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rdi|q]" v29|q -1 [1400, 1450[1400 MustHaveRegister 1408 ShouldHaveRegister 1438 MustHaveRegister 1440 MustHaveRegister 1442 MustHaveRegister 1444 MustHaveRegister 1446 MustHaveRegister 1448 MustHaveRegister 1450 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[r9|q]" v30|q v3|d [1402, 1492[[1498, 1532[1402 MustHaveRegister 1404 MustHaveRegister 1492 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rsi|q]" v31|q -1 [1404, 1406[1404 MustHaveRegister 1406 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q v31|q [1406, 1443[1406 MustHaveRegister 1408 ShouldHaveRegister 1438 MustHaveRegister 1440 MustHaveRegister 1442 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rdx|q]" v33|q v32|q [1408, 1436[1408 MustHaveRegister 1410 MustHaveRegister 1436 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q rax|q [1526, 1531[1526 MustHaveRegister 1528 MustHaveRegister 1530 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rdi|q]" v36|q v29|q [1450, 1453[1450 MustHaveRegister 1452 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rdi|q]" v37|q v36|q [1454, 1487[1486 ShouldHaveRegister  "OneSpillStore"
  v38|q QWORD "[r13|q]" v38|q v17|q [1484, 1488[1484 MustHaveRegister 1488 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rdx|q]" v39|q v37|q [1486, 1490[1486 MustHaveRegister 1490 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rdi|q]" v40|q -1 [932, 1056[[1350, 1371[932 MustHaveRegister 940 ShouldHaveRegister 976 MustHaveRegister 978 MustHaveRegister 980 MustHaveRegister 982 MustHaveRegister 984 MustHaveRegister 986 MustHaveRegister 1030 MustHaveRegister 1035 LiveAtLoopEnd 1056 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rcx|q]" v41|q v27|d [934, 936[934 MustHaveRegister 936 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rcx|q]" v42|q -1 [936, 938[936 MustHaveRegister 938 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rcx|q]" v43|q v42|q [938, 1036[938 MustHaveRegister 940 ShouldHaveRegister 976 MustHaveRegister 978 MustHaveRegister 980 MustHaveRegister 988 MustHaveRegister 1012 MustHaveRegister 1035 LiveAtLoopEnd  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q v43|q [940, 974[940 MustHaveRegister 942 MustHaveRegister 974 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q rax|q [1344, 1349[1344 MustHaveRegister 1346 MustHaveRegister 1348 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q -1 [988, 992[[1350, 1370[988 MustHaveRegister 990 ShouldHaveRegister 1370 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q v48|q [1002, 1032[1012 ShouldHaveRegister 1030 MustHaveRegister 1032 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rax|q]" v48|q v47|q [1032, 1035[1032 MustHaveRegister 1034 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rdi|q]" v50|q v40|q [1056, 1059[1056 MustHaveRegister 1058 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[rdi|q]" v51|q v50|q [1060, 1141[1138 ShouldHaveRegister  "OneSpillStore"
  v52|d DWORD "[rcx|d]" v52|d v3|d [1076, 1140[1076 MustHaveRegister 1078 MustHaveRegister 1090 MustHaveRegister 1102 MustHaveRegister 1140 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[r13|q]" v53|q v17|q [1136, 1142[1136 MustHaveRegister 1142 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[r10|q]" v54|q v51|q [1138, 1144[1138 MustHaveRegister 1144 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rcx|q]" v55|q v52|d [1140, 1146[1140 MustHaveRegister 1146 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[rdi|q]" v56|q v51|q [1152, 1275[1268 MustHaveRegister 1272 MustHaveRegister 1274 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[rdx|q]" v57|q -1 [1266, 1267[1266 MustHaveRegister  "NoDefinitionFound"
  v58|q QWORD "[rax|q]" v58|q -1 [1266, 1267[1266 MustHaveRegister  "NoDefinitionFound"
  v59|d DWORD "[rdx|d]" v59|d v56|q [1268, 1270[1268 MustHaveRegister 1270 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rdx|q]" v60|q -1 [1272, 1273[1272 MustHaveRegister  "NoDefinitionFound"
  v61|q QWORD "[rax|q]" v61|q -1 [1272, 1273[1272 MustHaveRegister  "NoDefinitionFound"
  v62|q QWORD "[r13|q]" v62|q v17|q [346, 786[[1276, 1302[[1306, 1316[[1532, 1553[[1564, 1584[[1616, 1626[[1636, 1677[[1678, 1709[[1710, 1741[[1774, 1805[402 MustHaveRegister 526 MustHaveRegister 530 MustHaveRegister 652 MustHaveRegister 656 MustHaveRegister 661 LiveAtLoopEnd 720 MustHaveRegister 760 MustHaveRegister 1302 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[r11|d]" v63|d v4|d [380, 421[[422, 506[[1616, 1626[[1646, 1656[[1774, 1805[410 ShouldHaveRegister 420 ShouldHaveRegister 454 ShouldHaveRegister 466 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[r10|d]" v64|d -1 [402, 786[[1276, 1290[402 MustHaveRegister 484 MustHaveRegister 504 MustHaveRegister 608 MustHaveRegister 628 MustHaveRegister 661 LiveAtLoopEnd 702 MustHaveRegister 742 MustHaveRegister 1290 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[r8|d]" v65|d -1 [406, 534[406 MustHaveRegister  "StoreAtDefinition"
  v67|q QWORD "[rax|q]" v67|q -1 [408, 718[408 MustHaveRegister 524 MustHaveRegister 650 MustHaveRegister 661 LiveAtLoopEnd 718 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[rcx|q]" v68|q -1 [454, 456[454 MustHaveRegister 456 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[rcx|q]" v69|q -1 [456, 458[456 MustHaveRegister 458 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rcx|q]" v70|q v69|q [458, 460[458 MustHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v71|d DWORD "[rcx|d]" v71|d -1 [460, 462[460 MustHaveRegister 462 ShouldHaveRegister  "NoSpillStore"
  v72|d DWORD "[rcx|d]" v72|d v71|d [462, 533[462 MustHaveRegister 464 ShouldHaveRegister 532 ShouldHaveRegister  "NoSpillStore"
  v73|d DWORD "[rdi|d]" v73|d -1 [464, 466[464 MustHaveRegister 466 MustHaveRegister  "NoSpillStore"
  v74|d DWORD "[rdi|d]" v74|d v73|d [466, 528[466 MustHaveRegister 468 ShouldHaveRegister 524 MustHaveRegister 528 MustHaveRegister  "NoSpillStore"
  v75|d DWORD "[r9|d]" v75|d v13|d [482, 526[482 MustHaveRegister 484 ShouldHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v76|d DWORD "[rbx|d]" v76|d v79|d [502, 533[502 MustHaveRegister 504 ShouldHaveRegister 530 MustHaveRegister 532 ShouldHaveRegister  "NoSpillStore"
  v77|d DWORD "[r14|d]" v77|d -1 [524, 526[524 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v78|d DWORD "[rdi|d]" v78|d -1 [528, 530[528 MustHaveRegister 530 MustHaveRegister  "NoSpillStore"
  v79|d DWORD "[rbx|d]" v79|d v76|d [534, 630[[662, 671[[1564, 1584[[1678, 1709[606 ShouldHaveRegister 626 MustHaveRegister 670 ShouldHaveRegister  "NoSpillStore"
  v80|d DWORD "[rcx|d]" v80|d v72|d [534, 630[[662, 671[[1564, 1584[[1678, 1709[544 ShouldHaveRegister 578 ShouldHaveRegister 590 ShouldHaveRegister 670 ShouldHaveRegister  "NoSpillStore"
  v81|q QWORD "[rdi|q]" v81|q -1 [578, 580[578 MustHaveRegister 580 ShouldHaveRegister  "NoSpillStore"
  v82|q QWORD "[rdi|q]" v82|q -1 [580, 582[580 MustHaveRegister 582 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rdi|q]" v83|q v82|q [582, 584[582 MustHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v84|d DWORD "[rdi|d]" v84|d -1 [584, 586[584 MustHaveRegister 586 ShouldHaveRegister  "NoSpillStore"
  v85|d DWORD "[rdi|d]" v85|d v84|d [586, 661[586 MustHaveRegister 588 ShouldHaveRegister 660 ShouldHaveRegister  "NoSpillStore"
  v86|d DWORD "[r9|d]" v86|d -1 [588, 590[588 MustHaveRegister 590 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[r9|d]" v87|d v86|d [590, 659[590 MustHaveRegister 592 ShouldHaveRegister 650 MustHaveRegister 654 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[r14|d]" v88|d v79|d [606, 652[606 MustHaveRegister 608 ShouldHaveRegister 652 MustHaveRegister  "NoSpillStore"
  v89|d DWORD "[r8|d]" v89|d -1 [626, 661[626 MustHaveRegister 628 ShouldHaveRegister 656 MustHaveRegister 660 ShouldHaveRegister  "NoSpillStore"
  v90|d DWORD "[rcx|d]" v90|d -1 [650, 652[650 MustHaveRegister 652 MustHaveRegister  "NoSpillStore"
  v91|d DWORD "[rcx|d]" v91|d -1 [654, 656[654 MustHaveRegister 656 MustHaveRegister  "NoSpillStore"
  v92|q QWORD "[rcx|q]" v92|q -1 [658, 659[658 MustHaveRegister  "NoDefinitionFound"
  v93|d DWORD "[r10|d]" v93|d -1 [1688, 1704[1704 MustHaveRegister  "NoSpillStore"
  v94|d DWORD "[r10|d]" v94|d -1 [1784, 1800[1800 MustHaveRegister  "NoSpillStore"
  v95|d DWORD "[r11|d]" v95|d v63|d [672, 744[[1636, 1646[[1656, 1677[[1710, 1741[684 ShouldHaveRegister 722 ShouldHaveRegister  "NoSpillStore"
  v96|d DWORD "[rbx|d]" v96|d v79|d [672, 740[[1636, 1646[[1710, 1741[700 ShouldHaveRegister 740 MustHaveRegister  "NoSpillStore"
  v97|d DWORD "[rcx|d]" v97|d v95|d [684, 758[684 MustHaveRegister 686 ShouldHaveRegister 718 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v98|d DWORD "[r8|d]" v98|d v96|d [700, 744[[764, 773[[1656, 1677[700 MustHaveRegister 702 ShouldHaveRegister 720 MustHaveRegister 772 ShouldHaveRegister  "NoSpillStore"
  v99|d DWORD "[rax|d]" v99|d -1 [718, 720[718 MustHaveRegister 720 MustHaveRegister  "NoSpillStore"
  v100|d DWORD "[rax|d]" v100|d v102|d [740, 763[740 MustHaveRegister 742 ShouldHaveRegister 760 MustHaveRegister 762 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[rcx|d]" v101|d -1 [758, 760[758 MustHaveRegister 760 MustHaveRegister  "NoSpillStore"
  v102|d DWORD "[rax|d]" v102|d v100|d [774, 786[[1276, 1292[[1532, 1553[1288 ShouldHaveRegister  "NoSpillStore"
  v103|d DWORD "[rdx|d]" v103|d v102|d [1288, 1302[1288 MustHaveRegister 1290 ShouldHaveRegister 1302 MustHaveRegister  "NoSpillStore"
  v104|d DWORD "[r10|d]" v104|d -1 [1720, 1736[1736 MustHaveRegister  "NoSpillStore"
  v105|d DWORD "[r10|d]" v105|d -1 [1752, 1768[1768 MustHaveRegister  "NoSpillStore"
  v106|q QWORD "[r11|q]" v106|q -1 [1752, 1770[1770 MustHaveRegister  "NoSpillStore"
  v107|q QWORD "[rdx|q]" v107|q -1 [1318, 1338[1318 MustHaveRegister 1338 ShouldHaveRegister  "NoSpillStore"
  v108|q QWORD "[rsi|q]" v108|q -1 [1500, 1520[1500 MustHaveRegister 1520 ShouldHaveRegister  "NoSpillStore"
  v109|q QWORD "[rdi|q]" v109|q -1 [746, 758[746 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v110|q QWORD "[r11|q]" v110|q -1 [508, 662[508 MustHaveRegister 528 MustHaveRegister 654 MustHaveRegister 661 LiveAtLoopEnd  "NoSpillStore"
  v111|q QWORD "[vstack:4|q]" v0|q v0|q [1104, 1143[ "StoreAtDefinition"
  v112|d DWORD "[vstack:1|d]" v1|d v1|d [1104, 1145[ "OneSpillStore"
  v113|d DWORD "[vstack:5|d]" v4|d v4|d [1104, 1147[ "OneSpillStore"
  v114|d DWORD "[vstack:6|d]" v11|d v11|d [1104, 1147[ "OneSpillStore"
  v115|d DWORD "[vstack:7|d]" v12|d v12|d [1104, 1147[ "OneSpillStore"
  v116|d DWORD "[vstack:8|d]" v13|d v13|d [1104, 1147[ "OneSpillStore"
  v117|d DWORD "[r8|d]" v65|d v65|d [1784, 1805[ "StoreAtDefinition"
  v118|d DWORD "[vstack:0|d]" v65|d v65|d [534, 786[[1276, 1292[[1532, 1553[[1564, 1584[[1616, 1626[[1636, 1677[[1678, 1709[[1710, 1741[[1774, 1784[ "StoreAtDefinition"
  v119|q QWORD "[rsi|q]" v40|q v40|q [1371, 1376[1372 MustHaveRegister  "NoSpillStore"
  v120|q QWORD "[vstack:2|q]" v51|q v51|q [1141, 1147[ "OneSpillStore"
  v121|q QWORD "[vstack:4|q]" v0|q v0|q [1143, 1147[ "StoreAtDefinition"
  v122|d DWORD "[vstack:1|d]" v1|d v1|d [1145, 1276[[1306, 1532[[1554, 1564[[1584, 1605[[1606, 1616[[1626, 1636[[1742, 1752[1314 ShouldHaveRegister  "OneSpillStore"
  v123|d DWORD "[vstack:8|d]" v13|d v13|d [1147, 1553[[1564, 1605[[1616, 1626[[1636, 1677[[1678, 1709[[1710, 1741[[1774, 1784[ "OneSpillStore"
  v124|d DWORD "[vstack:7|d]" v12|d v12|d [1147, 1276[[1316, 1532[ "OneSpillStore"
  v125|d DWORD "[vstack:6|d]" v11|d v11|d [1147, 1276[[1316, 1532[[1554, 1564[[1584, 1605[[1606, 1616[[1626, 1636[[1742, 1752[ "OneSpillStore"
  v126|d DWORD "[vstack:5|d]" v4|d v4|d [1147, 1276[[1316, 1532[ "OneSpillStore"
  v127|q QWORD "[vstack:2|q]" v51|q v51|q [1147, 1151[1150 ShouldHaveRegister  "OneSpillStore"
  v128|q QWORD "[vstack:4|q]" v0|q v0|q [1147, 1152[ "StoreAtDefinition"
  v129|d DWORD "[rdx|d]" v1|d v1|d [1752, 1773[ "OneSpillStore"
  v130|q QWORD "[rsi|q]" v0|q v0|q [1152, 1316[1266 MustHaveRegister 1270 MustHaveRegister 1272 MustHaveRegister  "StoreAtDefinition"
  v131|d DWORD "[r9|d]" v11|d v11|d [1752, 1773[ "OneSpillStore"
  v132|d DWORD "[rbp|d]" v13|d v13|d [1784, 1805[ "OneSpillStore"
  v133|q QWORD "[vstack:4|q]" v0|q v0|q [1316, 1337[ "StoreAtDefinition"
  v134|q QWORD "[vstack:4|q]" v0|q v0|q [1337, 1454[ "StoreAtDefinition"
  v135|q QWORD "[vstack:4|q]" v0|q v0|q [1454, 1489[ "StoreAtDefinition"
  v136|q QWORD "[vstack:10|q]" v37|q v37|q [1487, 1493[ "OneSpillStore"
  v137|q QWORD "[vstack:4|q]" v0|q v0|q [1489, 1493[ "StoreAtDefinition"
  v138|q QWORD "[vstack:10|q]" v37|q v37|q [1493, 1497[1496 ShouldHaveRegister  "OneSpillStore"
  v139|q QWORD "[vstack:4|q]" v0|q v0|q [1493, 1553[[1554, 1605[[1606, 1677[[1678, 1709[[1710, 1741[[1742, 1773[[1774, 1784[ "StoreAtDefinition"
  v140|q QWORD "[rsi|q]" v0|q v0|q [1784, 1805[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@11fbf5cf slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v4|DWORD = NEG value: v1|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0248451913249636 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606958633211231298
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [v5|DWORD, v6|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B21 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B20" 
    xhandlers
    flags 
    probability 4602752168055621283
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B20 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B19" 
    xhandlers
    flags 
    probability 4598323111924218927
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B19 y: -999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B18" 
    xhandlers
    flags 
    probability 4593895269862142147
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B18 y: -9999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" 
    xhandlers
    flags 
    probability 4589468661642602652
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B17 y: -99999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4585043307360852988
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B16 y: -999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4580619227439431527
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B15 y: -9999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4576196442633492882
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 y: -99999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4571774974036225136
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: -999999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4567354843084355297
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction v7|DWORD = LEA address: [v6|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602532121406698170
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598172830319288879
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[2|0x2] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593743754731554715
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[3|0x3] // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589314678826940650
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[4|0x4] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4584886816669611324
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[5|0x5] // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4582818360249579440
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580460188027533457
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[6|0x6] // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576034812990629180
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[7|0x7] // MoveResolver resolve mapping <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571610711976019636
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[8|0x8] // MoveResolver resolve mapping <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567187905733353983
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[9|0x9] // MoveResolver resolve mapping <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B13" "B21" "B20" "B19" "B18" "B17" "B16" "B15" "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607162073407212554
    begin_IR
      LIR
      nr  276  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction v9|DWORD = ADD (x: v8|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B12" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  290  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction v11|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  320  <|@ instruction v12|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  322  <|@ instruction v13|DWORD = ADD (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  324  <|@ instruction v14|DWORD = MOVSXB value: v12|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction v15|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction v16|DWORD = SUB (x: v13|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr  332  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" "B47" 
    successors "B49" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  346  <|@ instruction [v62|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction TESTBYTEBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.023714438988526654 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606968818122833350
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  380  <|@ instruction [v63|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction v64|DWORD = MOV input: [v62|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  404  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction v65|DWORD = SETCC condition: < <|@ <|@
      nr  408  <|@ instruction v67|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 49, 50, 51, 52, ...}] <|@ <|@
      nr  410  <|@ instruction CMPCONSTBRANCH x: v63|DWORD trueDestinationProbability: 0.20456323728994374 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B71 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605339876961552022
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOVE input: v65|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B69" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction v68|QWORD = MOVSXD value: v63|DWORD size: QWORD <|@ <|@
      nr  456  <|@ instruction v69|QWORD = IMUL x: v68|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr  458  <|@ instruction v70|QWORD = SAR x: v69|QWORD y: 37 size: QWORD <|@ <|@
      nr  460  <|@ instruction v71|DWORD = MOV value: v70|QWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction v72|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr  464  <|@ instruction v73|DWORD = IMUL x: v72|DWORD y: 100 size: DWORD <|@ <|@
      nr  466  <|@ instruction v74|DWORD = SUB (x: v73|DWORD, ~y: v63|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction CMPCONSTBRANCH x: v74|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B69 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B68" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction v75|DWORD = DEC value: v13|DWORD size: DWORD <|@ <|@
      nr  484  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v75|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B67" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction v76|DWORD = LEA address: [v13|DWORD - 2] size: DWORD <|@ <|@
      nr  504  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v76|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction v110|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction v77|DWORD = MOVSXB input: [v67|QWORD[.] + v74|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOVB (x: [v62|QWORD[.] + v75|DWORD * 1 + 16], y: v77|DWORD) size: BYTE <|@ <|@
      nr  528  <|@ instruction v78|DWORD = MOVSXB input: [v110|QWORD[.] + v74|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  530  <|@ instruction MOVB (x: [v62|QWORD[.] + v76|DWORD * 1 + 16], y: v78|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOVE input: v65|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" 
    successors "B58" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596612633779284459
    begin_IR
      LIR
      nr  534  <|@ instruction [v79|DWORD, v80|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction CMPCONSTBRANCH x: v80|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B62 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction v81|QWORD = MOVSXD value: v80|DWORD size: QWORD <|@ <|@
      nr  580  <|@ instruction v82|QWORD = IMUL x: v81|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr  582  <|@ instruction v83|QWORD = SAR x: v82|QWORD y: 37 size: QWORD <|@ <|@
      nr  584  <|@ instruction v84|DWORD = MOV value: v83|QWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction v85|DWORD = INC value: v84|DWORD size: DWORD <|@ <|@
      nr  588  <|@ instruction v86|DWORD = IMUL x: v85|DWORD y: 100 size: DWORD <|@ <|@
      nr  590  <|@ instruction v87|DWORD = SUB (x: v86|DWORD, ~y: v80|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction CMPCONSTBRANCH x: v87|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B65 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction v88|DWORD = DEC value: v79|DWORD size: DWORD <|@ <|@
      nr  608  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v88|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction v89|DWORD = LEA address: [v79|DWORD - 2] size: DWORD <|@ <|@
      nr  628  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v89|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction v90|DWORD = MOVSXB input: [v67|QWORD[.] + v87|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction MOVB (x: [v62|QWORD[.] + v88|DWORD * 1 + 16], y: v90|DWORD) size: BYTE <|@ <|@
      nr  654  <|@ instruction v91|DWORD = MOVSXB input: [v110|QWORD[.] + v87|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction MOVB (x: [v62|QWORD[.] + v89|DWORD * 1 + 16], y: v91|DWORD) size: BYTE <|@ <|@
      nr  658  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:518) [bci: 69]
locals: v85|DWORD - v62|QWORD[.] v85|DWORD v87|DWORD v89|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction SAFEPOINT temp: v92|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:69, 30] <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOVE input: v85|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE input: v89|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  660  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 4596538187644396969
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = MOVE input: v80|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B62" "B71" 
    successors "B73" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  672  <|@ instruction [v95|DWORD, v96|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction v97|DWORD = NEG value: v95|DWORD size: DWORD <|@ <|@
      nr  686  <|@ instruction CMPCONSTBRANCH x: v97|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B86 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction v98|DWORD = DEC value: v96|DWORD size: DWORD <|@ <|@
      nr  702  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v98|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B85 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction v99|DWORD = MOVSXB input: [v67|QWORD[.] + v97|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  720  <|@ instruction MOVB (x: [v62|QWORD[.] + v98|DWORD * 1 + 16], y: v99|DWORD) size: BYTE <|@ <|@
      nr  722  <|@ instruction CMPCONSTBRANCH x: v95|DWORD trueDestinationProbability: 0.6223590908157148 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B78 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction v100|DWORD = LEA address: [v96|DWORD - 2] size: DWORD <|@ <|@
      nr  742  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v100|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction v109|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction v101|DWORD = MOVSXB input: [v109|QWORD[.] + v97|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  760  <|@ instruction MOVB (x: [v62|QWORD[.] + v100|DWORD * 1 + 16], y: v101|DWORD) size: BYTE <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600474593749434728
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: v98|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  774  <|@ instruction [v102|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.023714554158984935 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606968817085470084
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v13|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B89" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction v18|DWORD = SHL (x: v13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  858  <|@ instruction v19|DWORD = SUB (x: v18|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction v21|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  862  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ instruction v20|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  866  <|@ instruction v22|DWORD = ADD (x: v20|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction CMP (x: v22|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr  870  <|@ instruction v23|DWORD = CMOVE (falseValue: v19|DWORD, ~trueValue: v22|DWORD) condition: > <|@ <|@
      nr  872  <|@ instruction v24|DWORD = ADD (x: v23|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction v25|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr  876  <|@ instruction CMPCONSTBRANCH x: v25|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B89 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B31" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction v26|DWORD = SAR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  902  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction v27|DWORD = SHL (x: v26|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  906  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v27|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction v40|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  934  <|@ instruction v41|QWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr  938  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr  940  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: v44|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B38" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr  976  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  978  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  980  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  982  <|@ instruction MOV x: [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr  984  <|@ instruction MOV x: [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  986  <|@ instruction MOV (x: [v40|QWORD + 12], y: v27|DWORD) size: DWORD <|@ <|@
      nr  988  <|@ instruction v46|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr  990  <|@ instruction CMPCONSTBRANCH x: v46|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr 1002  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v47|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction MOV x: [v40|QWORD + v47|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1032  <|@ instruction v48|QWORD = LEA address: [v47|QWORD + 8] size: QWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction v50|QWORD[.] = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B32" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1060  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction CMP (x: v3|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr 1076  <|@ instruction v52|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr 1078  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction v53|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1138  <|@ instruction v54|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1140  <|@ instruction v55|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1142  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[.] = MOVE input: v111|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1144  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = STACKMOVE (input: v112|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1146  <|@ instruction rdx|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = STACKMOVE (input: v116|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = STACKMOVE (input: v115|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = STACKMOVE (input: v114|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = STACKMOVE (input: v113|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = STACKMOVE (input: v121|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = STACKMOVE (input: v120|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1148  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B30" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr 1152  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v57|QWORD, temp2: v58|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1268  <|@ instruction v59|DWORD[_] = COMPRESSPOINTER (input: v56|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1270  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v59|DWORD[_]) size: DWORD <|@ <|@
      nr 1272  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v56|QWORD[.]) {temp: v60|QWORD, temp2: v61|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: v124|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: v122|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction v103|DWORD = DEC value: v102|DWORD size: DWORD <|@ <|@
      nr 1290  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v103|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction MOVB x: [v62|QWORD[.] + v103|DWORD * 1 + 16] y: 45 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1304  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582492443078313792
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: v122|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: v122|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1314  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v133|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1318  <|@ instruction v107|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE input: v133|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1338  <|@ instruction rsi|QWORD = MOVE input: v107|QWORD moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr 1344  <|@ instruction v45|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1346  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction NULLCHECK address: [v45|QWORD[.]] state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: v124|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: v122|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v134|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rcx|QWORD = MOVE input: v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOVE input: v40|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1372  <|@ instruction ZERO_MEMORY (pointer: [v40|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: v119|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: v124|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: v122|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v134|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1374  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1402  <|@ instruction v30|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr 1404  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 23] size: QWORD <|@ <|@
      nr 1406  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr 1408  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr 1410  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr 1412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr 1438  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1440  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1442  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1444  <|@ instruction MOV x: [v29|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1446  <|@ instruction MOV x: [v29|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1448  <|@ instruction MOV (x: [v29|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr 1450  <|@ instruction v36|QWORD[.] = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr 1454  <|@ instruction [v37|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction v38|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ instruction v39|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1488  <|@ instruction rdi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v135|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1490  <|@ instruction rsi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1492  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = STACKMOVE (input: v137|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = STACKMOVE (input: v136|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1494  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v138|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = MOVE input: v139|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1500  <|@ instruction v108|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction rsi|QWORD = MOVE input: v108|QWORD moveKind: QWORD <|@ <|@
      nr 1522  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr 1524  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr 1526  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1530  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = MOVE input: v130|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction MOV x: [r15|QWORD + 1156] y: -204315 size: DWORD <|@ <|@
      nr 1550  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1552  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:527) [bci: 104]
locals: - - v62|QWORD[.] - - v102|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:104, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v106|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVE input: int[-237081|0xfffffffffffc61e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE input: v122|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1562  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVE input: int[-189723|0xfffffffffffd1ae5] // MoveResolver resolve mapping <|@ <|@
      nr 1572  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVE input: int[-195611|0xfffffffffffd03e5] // MoveResolver resolve mapping <|@ <|@
      nr 1582  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction MOV x: [r15|QWORD + 1156] y: -233747 size: DWORD <|@ <|@
      nr 1602  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1604  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
locals: v0|QWORD[.] v1|DWORD v11|DWORD v13|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v106|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVE input: int[-236051|0xfffffffffffc65ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE input: v122|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1614  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOVE input: v65|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-187419|0xfffffffffffd23e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: v118|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE input: v139|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1624  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v106|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVE input: int[-238105|0xfffffffffffc5de7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE input: v122|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1634  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = MOVE input: int[-198171|0xfffffffffffcf9e5] // MoveResolver resolve mapping <|@ <|@
      nr 1644  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOVE input: v65|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-180507|0xfffffffffffd3ee5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: v118|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE input: v139|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1654  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction MOV x: [r15|QWORD + 1156] y: -207643 size: DWORD <|@ <|@
      nr 1674  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1676  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:523) [bci: 85]
locals: v95|DWORD - v62|QWORD[.] - - v98|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:85, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVE input: int[-192283|0xfffffffffffd10e5] // MoveResolver resolve mapping <|@ <|@
      nr 1686  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1688  <|@ instruction [v93|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v93|DWORD) size: DWORD <|@ <|@
      nr 1706  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1708  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: v80|DWORD - v62|QWORD[.] - - v79|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = MOVE input: int[-201499|0xfffffffffffcece5] // MoveResolver resolve mapping <|@ <|@
      nr 1718  <|@ instruction JUMP ~outgoingValues: [] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1720  <|@ instruction [v104|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v104|DWORD) size: DWORD <|@ <|@
      nr 1738  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1740  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:522) [bci: 72]
locals: v95|DWORD - v62|QWORD[.] - - v96|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:72, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v106|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVE input: int[-239129|0xfffffffffffc59e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE input: v122|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1750  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B41" "B43" "B45" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1752  <|@ instruction [v105|DWORD, v106|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v105|DWORD) size: DWORD <|@ <|@
      nr 1770  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v106|QWORD) size: QWORD <|@ <|@
      nr 1772  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOVE input: v65|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-184091|0xfffffffffffd30e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: v118|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE input: v139|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1782  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1784  <|@ instruction [v94|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction NOP <|@ <|@
      nr 1800  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v94|DWORD) size: DWORD <|@ <|@
      nr 1802  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1804  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: v63|DWORD - v62|QWORD[.] - - v13|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #18         // count:int
     4: istore_2      
     5: iload_2       
     6: iload_1       
     7: invokestatic  #61         // java.lang.Integer.stringSize:(int)int
    10: iadd          
    11: istore_3      
    12: aload_0       
    13: iload_3       
    14: invokevirtual #24         // ensureCapacityInternal:(int)void
    17: aload_0       
    18: invokevirtual #19         // isLatin1:()boolean
    21: ifeq          37
    24: iload_1       
    25: iload_3       
    26: aload_0       
    27: getfield      #2          // value:byte[]
    30: invokestatic  #62         // java.lang.Integer.getChars:(int, int, byte[])int
    33: pop           
    34: goto          48
    37: iload_1       
    38: iload_2       
    39: iload_3       
    40: aload_0       
    41: getfield      #2          // value:byte[]
    44: invokestatic  #63         // java.lang.StringUTF16.getChars:(int, int, int, byte[])int
    47: pop           
    48: aload_0       
    49: iload_3       
    50: putfield      #18         // count:int
    53: aload_0       
    54: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@11fbf5cf slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v4|DWORD = NEG value: v1|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0248451913249636 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606958633211231298
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B21 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B20" 
    xhandlers
    flags 
    probability 4602752168055621283
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B20 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B19" 
    xhandlers
    flags 
    probability 4598323111924218927
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B19 y: -999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B18" 
    xhandlers
    flags 
    probability 4593895269862142147
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B18 y: -9999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" 
    xhandlers
    flags 
    probability 4589468661642602652
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B17 y: -99999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4585043307360852988
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B16 y: -999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4580619227439431527
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B15 y: -9999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4576196442633492882
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 y: -99999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4571774974036225136
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: -999999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4567354843084355297
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction v7|DWORD = LEA address: [v6|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602532121406698170
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598172830319288879
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[2|0x2] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593743754731554715
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[3|0x3] // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589314678826940650
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[4|0x4] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4584886816669611324
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[5|0x5] // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4582818360249579440
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580460188027533457
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[6|0x6] // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576034812990629180
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[7|0x7] // MoveResolver resolve mapping <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571610711976019636
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[8|0x8] // MoveResolver resolve mapping <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567187905733353983
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[9|0x9] // MoveResolver resolve mapping <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B13" "B21" "B20" "B19" "B18" "B17" "B16" "B15" "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607162073407212554
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction v9|DWORD = ADD (x: v8|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B12" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction v11|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  320  <|@ instruction v12|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  322  <|@ instruction v13|DWORD = ADD (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  324  <|@ instruction v14|DWORD = MOVSXB value: v12|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction v15|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction v16|DWORD = SUB (x: v13|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr  332  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction CMPCONSTBRANCH x: v16|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" "B47" 
    successors "B49" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction TESTBYTEBRANCH (x: v12|DWORD, y: v12|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.023714438988526654 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606968818122833350
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction v64|DWORD = MOV input: [v62|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  404  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction v65|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  408  <|@ instruction v67|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 49, 50, 51, 52, ...}] <|@ <|@
      nr  410  <|@ instruction CMPCONSTBRANCH x: v63|DWORD trueDestinationProbability: 0.20456323728994374 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B71 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605339876961552022
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B69" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction v68|QWORD = MOVSXD value: v63|DWORD size: QWORD <|@ <|@
      nr  456  <|@ instruction v69|QWORD = IMUL x: v68|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr  458  <|@ instruction v70|QWORD = SAR x: v69|QWORD y: 37 size: QWORD <|@ <|@
      nr  460  <|@ instruction v71|DWORD = MOV value: v70|QWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction v72|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr  464  <|@ instruction v73|DWORD = IMUL x: v72|DWORD y: 100 size: DWORD <|@ <|@
      nr  466  <|@ instruction v74|DWORD = SUB (x: v73|DWORD, ~y: v63|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction CMPCONSTBRANCH x: v74|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B69 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B68" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction v75|DWORD = DEC value: v13|DWORD size: DWORD <|@ <|@
      nr  484  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v75|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B67" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction v76|DWORD = LEA address: [v13|DWORD - 2] size: DWORD <|@ <|@
      nr  504  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v76|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction v110|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction v77|DWORD = MOVSXB input: [v67|QWORD[.] + v74|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOVB (x: [v62|QWORD[.] + v75|DWORD * 1 + 16], y: v77|DWORD) size: BYTE <|@ <|@
      nr  528  <|@ instruction v78|DWORD = MOVSXB input: [v110|QWORD[.] + v74|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  530  <|@ instruction MOVB (x: [v62|QWORD[.] + v76|DWORD * 1 + 16], y: v78|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" 
    successors "B58" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596612633779284459
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction CMPCONSTBRANCH x: v80|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B62 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction v81|QWORD = MOVSXD value: v80|DWORD size: QWORD <|@ <|@
      nr  580  <|@ instruction v82|QWORD = IMUL x: v81|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr  582  <|@ instruction v83|QWORD = SAR x: v82|QWORD y: 37 size: QWORD <|@ <|@
      nr  584  <|@ instruction v84|DWORD = MOV value: v83|QWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction v85|DWORD = INC value: v84|DWORD size: DWORD <|@ <|@
      nr  588  <|@ instruction v86|DWORD = IMUL x: v85|DWORD y: 100 size: DWORD <|@ <|@
      nr  590  <|@ instruction v87|DWORD = SUB (x: v86|DWORD, ~y: v80|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction CMPCONSTBRANCH x: v87|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B65 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction v88|DWORD = DEC value: v79|DWORD size: DWORD <|@ <|@
      nr  608  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v88|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction v89|DWORD = LEA address: [v79|DWORD - 2] size: DWORD <|@ <|@
      nr  628  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v89|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction v90|DWORD = MOVSXB input: [v67|QWORD[.] + v87|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction MOVB (x: [v62|QWORD[.] + v88|DWORD * 1 + 16], y: v90|DWORD) size: BYTE <|@ <|@
      nr  654  <|@ instruction v91|DWORD = MOVSXB input: [v110|QWORD[.] + v87|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction MOVB (x: [v62|QWORD[.] + v89|DWORD * 1 + 16], y: v91|DWORD) size: BYTE <|@ <|@
      nr  658  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:518) [bci: 69]
locals: v85|DWORD - v62|QWORD[.] v85|DWORD v87|DWORD v89|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction SAFEPOINT temp: v92|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:69, 30] <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOVE input: v85|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE input: v89|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  660  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 4596538187644396969
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = MOVE input: v80|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B62" "B71" 
    successors "B73" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction v97|DWORD = NEG value: v95|DWORD size: DWORD <|@ <|@
      nr  686  <|@ instruction CMPCONSTBRANCH x: v97|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B86 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction v98|DWORD = DEC value: v96|DWORD size: DWORD <|@ <|@
      nr  702  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v98|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B85 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction v99|DWORD = MOVSXB input: [v67|QWORD[.] + v97|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  720  <|@ instruction MOVB (x: [v62|QWORD[.] + v98|DWORD * 1 + 16], y: v99|DWORD) size: BYTE <|@ <|@
      nr  722  <|@ instruction CMPCONSTBRANCH x: v95|DWORD trueDestinationProbability: 0.6223590908157148 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B78 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction v100|DWORD = LEA address: [v96|DWORD - 2] size: DWORD <|@ <|@
      nr  742  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v100|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction v109|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction v101|DWORD = MOVSXB input: [v109|QWORD[.] + v97|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  760  <|@ instruction MOVB (x: [v62|QWORD[.] + v100|DWORD * 1 + 16], y: v101|DWORD) size: BYTE <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600474593749434728
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: v98|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.023714554158984935 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606968817085470084
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v13|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B89" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction v18|DWORD = SHL (x: v13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  858  <|@ instruction v19|DWORD = SUB (x: v18|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction v21|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  862  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ instruction v20|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  866  <|@ instruction v22|DWORD = ADD (x: v20|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction CMP (x: v22|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr  870  <|@ instruction v23|DWORD = CMOVE (falseValue: v19|DWORD, ~trueValue: v22|DWORD) condition: > <|@ <|@
      nr  872  <|@ instruction v24|DWORD = ADD (x: v23|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction v25|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr  876  <|@ instruction CMPCONSTBRANCH x: v25|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B89 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B31" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction v26|DWORD = SAR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  902  <|@ instruction rcx|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction v27|DWORD = SHL (x: v26|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  906  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v27|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction v40|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  934  <|@ instruction v41|QWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 23] size: QWORD <|@ <|@
      nr  938  <|@ instruction v43|QWORD = AND x: v42|QWORD y: -8 size: QWORD <|@ <|@
      nr  940  <|@ instruction v44|QWORD = ADD (x: v43|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: v44|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B38" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction MOV (x: [r15|QWORD + 440], y: v44|QWORD) size: QWORD <|@ <|@
      nr  976  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  978  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  980  <|@ instruction AMD64PREFETCH ~address: [v43|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  982  <|@ instruction MOV x: [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr  984  <|@ instruction MOV x: [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  986  <|@ instruction MOV (x: [v40|QWORD + 12], y: v27|DWORD) size: DWORD <|@ <|@
      nr  988  <|@ instruction v46|QWORD = LEA address: [v43|QWORD - 16] size: QWORD <|@ <|@
      nr  990  <|@ instruction CMPCONSTBRANCH x: v46|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction CMPBRANCH (x: v43|QWORD, y: v47|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction MOV x: [v40|QWORD + v47|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1032  <|@ instruction v48|QWORD = LEA address: [v47|QWORD + 8] size: QWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction v50|QWORD[.] = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B32" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction CMP (x: v3|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr 1076  <|@ instruction v52|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr 1078  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction CMPBRANCH (x: v52|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction v53|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1138  <|@ instruction v54|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1140  <|@ instruction v55|QWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1142  <|@ instruction rdi|QWORD = LEA address: [v53|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1144  <|@ instruction rsi|QWORD = LEA address: [v54|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = STACKMOVE (input: v112|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1146  <|@ instruction rdx|QWORD = MOVE input: v55|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = STACKMOVE (input: v116|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = STACKMOVE (input: v115|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = STACKMOVE (input: v114|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = STACKMOVE (input: v113|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = STACKMOVE (input: v120|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1148  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B30" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v57|QWORD, temp2: v58|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1268  <|@ instruction v59|DWORD[_] = COMPRESSPOINTER (input: v56|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1270  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v59|DWORD[_]) size: DWORD <|@ <|@
      nr 1272  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v56|QWORD[.]) {temp: v60|QWORD, temp2: v61|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: v124|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: v122|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction v103|DWORD = DEC value: v102|DWORD size: DWORD <|@ <|@
      nr 1290  <|@ instruction CMPBRANCH (x: v64|DWORD, y: v103|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction MOVB x: [v62|QWORD[.] + v103|DWORD * 1 + 16] y: 45 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1304  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582492443078313792
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: v122|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: v122|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1314  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1318  <|@ instruction v107|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1338  <|@ instruction rsi|QWORD = MOVE input: v107|QWORD moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr 1344  <|@ instruction v45|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1346  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction NULLCHECK address: [v45|QWORD[.]] state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: v124|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: v122|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v134|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rcx|QWORD = MOVE input: v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOVE input: v40|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1372  <|@ instruction ZERO_MEMORY (pointer: [v40|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: v119|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: v124|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: v122|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v134|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1374  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction v29|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1402  <|@ instruction v30|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr 1404  <|@ instruction v31|QWORD = LEA address: [v30|QWORD + 23] size: QWORD <|@ <|@
      nr 1406  <|@ instruction v32|QWORD = AND x: v31|QWORD y: -8 size: QWORD <|@ <|@
      nr 1408  <|@ instruction v33|QWORD = ADD (x: v32|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr 1410  <|@ instruction CMPBRANCH (x: v33|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr 1412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction MOV (x: [r15|QWORD + 440], y: v33|QWORD) size: QWORD <|@ <|@
      nr 1438  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1440  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1442  <|@ instruction AMD64PREFETCH ~address: [v32|QWORD + v29|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1444  <|@ instruction MOV x: [v29|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1446  <|@ instruction MOV x: [v29|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1448  <|@ instruction MOV (x: [v29|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr 1450  <|@ instruction v36|QWORD[.] = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction v38|QWORD[*] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ instruction v39|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1488  <|@ instruction rdi|QWORD = LEA address: [v38|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1490  <|@ instruction rsi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1492  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = STACKMOVE (input: v136|QWORD[.], ~backupSlot: vstack:9|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1494  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v138|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = MOVE input: v139|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1500  <|@ instruction v108|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction rsi|QWORD = MOVE input: v108|QWORD moveKind: QWORD <|@ <|@
      nr 1522  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr 1524  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr 1526  <|@ instruction v34|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction NULLCHECK address: [v34|QWORD[.]] state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1530  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction MOV x: [r15|QWORD + 1156] y: -204315 size: DWORD <|@ <|@
      nr 1550  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1552  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:527) [bci: 104]
locals: - - v62|QWORD[.] - - v102|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:104, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v106|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVE input: int[-237081|0xfffffffffffc61e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE input: v122|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1562  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVE input: int[-189723|0xfffffffffffd1ae5] // MoveResolver resolve mapping <|@ <|@
      nr 1572  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVE input: int[-195611|0xfffffffffffd03e5] // MoveResolver resolve mapping <|@ <|@
      nr 1582  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction MOV x: [r15|QWORD + 1156] y: -233747 size: DWORD <|@ <|@
      nr 1602  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1604  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
locals: v0|QWORD[.] v1|DWORD v11|DWORD v13|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v106|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVE input: int[-236051|0xfffffffffffc65ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE input: v122|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1614  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-187419|0xfffffffffffd23e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: v118|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE input: v139|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1624  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v106|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVE input: int[-238105|0xfffffffffffc5de7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE input: v122|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1634  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = MOVE input: int[-198171|0xfffffffffffcf9e5] // MoveResolver resolve mapping <|@ <|@
      nr 1644  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-180507|0xfffffffffffd3ee5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: v118|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE input: v139|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1654  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction MOV x: [r15|QWORD + 1156] y: -207643 size: DWORD <|@ <|@
      nr 1674  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1676  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:523) [bci: 85]
locals: v95|DWORD - v62|QWORD[.] - - v98|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:85, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVE input: int[-192283|0xfffffffffffd10e5] // MoveResolver resolve mapping <|@ <|@
      nr 1686  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v93|DWORD) size: DWORD <|@ <|@
      nr 1706  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1708  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: v80|DWORD - v62|QWORD[.] - - v79|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = MOVE input: int[-201499|0xfffffffffffcece5] // MoveResolver resolve mapping <|@ <|@
      nr 1718  <|@ instruction JUMP ~outgoingValues: [] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v104|DWORD) size: DWORD <|@ <|@
      nr 1738  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1740  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:522) [bci: 72]
locals: v95|DWORD - v62|QWORD[.] - - v96|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:72, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v106|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVE input: int[-239129|0xfffffffffffc59e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE input: v122|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1750  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B41" "B43" "B45" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v105|DWORD) size: DWORD <|@ <|@
      nr 1770  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v106|QWORD) size: QWORD <|@ <|@
      nr 1772  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: v11|DWORD v10|DWORD 
locals: v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-184091|0xfffffffffffd30e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: v118|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE input: v139|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1782  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction NOP <|@ <|@
      nr 1800  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v94|DWORD) size: DWORD <|@ <|@
      nr 1802  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1804  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: v63|DWORD - v62|QWORD[.] - - v13|DWORD v65|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: v0|QWORD[.] - - v13|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #18         // count:int
     4: istore_2      
     5: iload_2       
     6: iload_1       
     7: invokestatic  #61         // java.lang.Integer.stringSize:(int)int
    10: iadd          
    11: istore_3      
    12: aload_0       
    13: iload_3       
    14: invokevirtual #24         // ensureCapacityInternal:(int)void
    17: aload_0       
    18: invokevirtual #19         // isLatin1:()boolean
    21: ifeq          37
    24: iload_1       
    25: iload_3       
    26: aload_0       
    27: getfield      #2          // value:byte[]
    30: invokestatic  #62         // java.lang.Integer.getChars:(int, int, byte[])int
    33: pop           
    34: goto          48
    37: iload_1       
    38: iload_2       
    39: iload_3       
    40: aload_0       
    41: getfield      #2          // value:byte[]
    44: invokestatic  #63         // java.lang.StringUTF16.getChars:(int, int, int, byte[])int
    47: pop           
    48: aload_0       
    49: iload_3       
    50: putfield      #18         // count:int
    53: aload_0       
    54: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@11fbf5cf slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   32  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r11|DWORD = NEG value: rdx|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0248451913249636 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606958633211231298
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B21 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B20" 
    xhandlers
    flags 
    probability 4602752168055621283
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B20 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B19" 
    xhandlers
    flags 
    probability 4598323111924218927
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B19 y: -999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B18" 
    xhandlers
    flags 
    probability 4593895269862142147
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B18 y: -9999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" 
    xhandlers
    flags 
    probability 4589468661642602652
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B17 y: -99999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4585043307360852988
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B16 y: -999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4580619227439431527
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B15 y: -9999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4576196442633492882
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 y: -99999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4571774974036225136
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: -999999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4567354843084355297
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = LEA address: [rdi|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602532121406698170
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598172830319288879
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[2|0x2] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593743754731554715
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[3|0x3] // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589314678826940650
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[4|0x4] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4584886816669611324
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[5|0x5] // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4582818360249579440
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580460188027533457
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[6|0x6] // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576034812990629180
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] // MoveResolver resolve mapping <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571610711976019636
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[8|0x8] // MoveResolver resolve mapping <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567187905733353983
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[9|0x9] // MoveResolver resolve mapping <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B13" "B21" "B20" "B19" "B18" "B17" "B16" "B15" "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607162073407212554
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B12" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  320  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  322  <|@ instruction rbp|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  324  <|@ instruction rdi|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction r13|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = SUB (x: rbp|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  332  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" "B47" 
    successors "B49" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction TESTBYTEBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714438988526654 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606968818122833350
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction r10|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  404  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction r8|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  408  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 49, 50, 51, 52, ...}] <|@ <|@
      nr  410  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.20456323728994374 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B71 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605339876961552022
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B69" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction rcx|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr  456  <|@ instruction rcx|QWORD = IMUL x: rcx|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr  458  <|@ instruction rcx|QWORD = SAR x: rcx|QWORD y: 37 size: QWORD <|@ <|@
      nr  460  <|@ instruction rcx|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  464  <|@ instruction rdi|DWORD = IMUL x: rcx|DWORD y: 100 size: DWORD <|@ <|@
      nr  466  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B69 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B68" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction r9|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr  484  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B67" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rbx|DWORD = LEA address: [rbp|DWORD - 2] size: DWORD <|@ <|@
      nr  504  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction r14|DWORD = MOVSXB input: [rax|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOVB (x: [r13|QWORD[.] + r9|DWORD * 1 + 16], y: r14|DWORD) size: BYTE <|@ <|@
      nr  528  <|@ instruction rdi|DWORD = MOVSXB input: [r11|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  530  <|@ instruction MOVB (x: [r13|QWORD[.] + rbx|DWORD * 1 + 16], y: rdi|DWORD) size: BYTE <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" 
    successors "B58" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596612633779284459
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B62 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  580  <|@ instruction rdi|QWORD = IMUL x: rdi|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr  582  <|@ instruction rdi|QWORD = SAR x: rdi|QWORD y: 37 size: QWORD <|@ <|@
      nr  584  <|@ instruction rdi|DWORD = MOV value: rdi|QWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  588  <|@ instruction r9|DWORD = IMUL x: rdi|DWORD y: 100 size: DWORD <|@ <|@
      nr  590  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B65 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction r14|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  608  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction r8|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  628  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction rcx|DWORD = MOVSXB input: [rax|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction MOVB (x: [r13|QWORD[.] + r14|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr  654  <|@ instruction rcx|DWORD = MOVSXB input: [r11|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr  658  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:518) [bci: 69]
locals: rdi|DWORD - r13|QWORD[.] rdi|DWORD r9|DWORD r8|DWORD vstack:0|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: rsi|QWORD[.] - - rbp|DWORD 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:69, 30] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  660  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 4596538187644396969
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B62" "B71" 
    successors "B73" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction rcx|DWORD = NEG value: r11|DWORD size: DWORD <|@ <|@
      nr  686  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B86 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction r8|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  702  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B85 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction rax|DWORD = MOVSXB input: [rax|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  720  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  722  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6223590908157148 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B78 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  742  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction rcx|DWORD = MOVSXB input: [rdi|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  760  <|@ instruction MOVB (x: [r13|QWORD[.] + rax|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600474593749434728
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714554158984935 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606968817085470084
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B89" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction rax|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  858  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction r14|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  862  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ instruction r14|DWORD = SHL (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  866  <|@ instruction r14|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  870  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  872  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  876  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B89 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B31" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  902  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction r14|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  906  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  934  <|@ instruction rcx|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  938  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  940  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B38" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  976  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  978  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  980  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  982  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  984  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  986  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  988  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  990  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction MOV x: [rdi|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1032  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B32" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1076  <|@ instruction rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr 1078  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1138  <|@ instruction r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1140  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1142  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1144  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1146  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1148  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B30" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1268  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1270  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1272  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction rdx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr 1290  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction MOVB x: [r13|QWORD[.] + rdx|DWORD * 1 + 16] y: 45 size: BYTE <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1304  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582492443078313792
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1314  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1318  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: vstack:6|DWORD r8|DWORD 
locals: vstack:4|QWORD[.] vstack:1|DWORD vstack:6|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr 1346  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: vstack:6|DWORD r8|DWORD 
locals: vstack:4|QWORD[.] vstack:1|DWORD vstack:6|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10] <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1372  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: rsi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1374  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1402  <|@ instruction r9|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1404  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD <|@ <|@
      nr 1406  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr 1408  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1410  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr 1412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1438  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1440  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1442  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1444  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1446  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1448  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1450  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1488  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1490  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1492  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr 1494  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1500  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1524  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: vstack:6|DWORD r8|DWORD 
locals: vstack:4|QWORD[.] vstack:1|DWORD vstack:6|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr 1528  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: vstack:6|DWORD r8|DWORD 
locals: vstack:4|QWORD[.] vstack:1|DWORD vstack:6|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10] <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1530  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction MOV x: [r15|QWORD + 1156] y: -204315 size: DWORD <|@ <|@
      nr 1550  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1552  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:527) [bci: 104]
locals: - - r13|QWORD[.] - - rax|DWORD vstack:0|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: vstack:4|QWORD[.] - - vstack:8|DWORD 
>@ <|@ instruction DEOPT info [bci:104, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-237081|0xfffffffffffc61e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1562  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-189723|0xfffffffffffd1ae5] // MoveResolver resolve mapping <|@ <|@
      nr 1572  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-195611|0xfffffffffffd03e5] // MoveResolver resolve mapping <|@ <|@
      nr 1582  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction MOV x: [r15|QWORD + 1156] y: -233747 size: DWORD <|@ <|@
      nr 1602  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1604  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
locals: vstack:4|QWORD[.] vstack:1|DWORD vstack:6|DWORD vstack:8|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-236051|0xfffffffffffc65ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1614  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-187419|0xfffffffffffd23e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1624  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-238105|0xfffffffffffc5de7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1634  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-198171|0xfffffffffffcf9e5] // MoveResolver resolve mapping <|@ <|@
      nr 1644  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-180507|0xfffffffffffd3ee5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1654  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction MOV x: [r15|QWORD + 1156] y: -207643 size: DWORD <|@ <|@
      nr 1674  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1676  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:523) [bci: 85]
locals: r11|DWORD - r13|QWORD[.] - - r8|DWORD vstack:0|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: vstack:4|QWORD[.] - - vstack:8|DWORD 
>@ <|@ instruction DEOPT info [bci:85, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-192283|0xfffffffffffd10e5] // MoveResolver resolve mapping <|@ <|@
      nr 1686  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1706  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1708  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: rcx|DWORD - r13|QWORD[.] - - rbx|DWORD vstack:0|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: vstack:4|QWORD[.] - - vstack:8|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-201499|0xfffffffffffcece5] // MoveResolver resolve mapping <|@ <|@
      nr 1718  <|@ instruction JUMP ~outgoingValues: [] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1738  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1740  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:522) [bci: 72]
locals: r11|DWORD - r13|QWORD[.] - - rbx|DWORD vstack:0|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: vstack:4|QWORD[.] - - vstack:8|DWORD 
>@ <|@ instruction DEOPT info [bci:72, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-239129|0xfffffffffffc59e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1750  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B41" "B43" "B45" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1770  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1772  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: r9|DWORD r8|DWORD 
locals: vstack:4|QWORD[.] rdx|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-184091|0xfffffffffffd30e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1782  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction NOP <|@ <|@
      nr 1800  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1802  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1804  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: r11|DWORD - r13|QWORD[.] - - rbp|DWORD r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: rsi|QWORD[.] - - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #18         // count:int
     4: istore_2      
     5: iload_2       
     6: iload_1       
     7: invokestatic  #61         // java.lang.Integer.stringSize:(int)int
    10: iadd          
    11: istore_3      
    12: aload_0       
    13: iload_3       
    14: invokevirtual #24         // ensureCapacityInternal:(int)void
    17: aload_0       
    18: invokevirtual #19         // isLatin1:()boolean
    21: ifeq          37
    24: iload_1       
    25: iload_3       
    26: aload_0       
    27: getfield      #2          // value:byte[]
    30: invokestatic  #62         // java.lang.Integer.getChars:(int, int, byte[])int
    33: pop           
    34: goto          48
    37: iload_1       
    38: iload_2       
    39: iload_3       
    40: aload_0       
    41: getfield      #2          // value:byte[]
    44: invokestatic  #63         // java.lang.StringUTF16.getChars:(int, int, int, byte[])int
    47: pop           
    48: aload_0       
    49: iload_3       
    50: putfield      #18         // count:int
    53: aload_0       
    54: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@11fbf5cf slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   32  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r11|DWORD = NEG value: rdx|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0248451913249636 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606958633211231298
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B21 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B20" 
    xhandlers
    flags 
    probability 4602752168055621283
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B20 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B19" 
    xhandlers
    flags 
    probability 4598323111924218927
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B19 y: -999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B18" 
    xhandlers
    flags 
    probability 4593895269862142147
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B18 y: -9999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" 
    xhandlers
    flags 
    probability 4589468661642602652
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B17 y: -99999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4585043307360852988
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B16 y: -999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4580619227439431527
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B15 y: -9999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4576196442633492882
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 y: -99999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4571774974036225136
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: -999999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4567354843084355297
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = LEA address: [rdi|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602532121406698170
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598172830319288879
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[2|0x2] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593743754731554715
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[3|0x3] // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589314678826940650
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[4|0x4] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4584886816669611324
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[5|0x5] // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4582818360249579440
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580460188027533457
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[6|0x6] // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576034812990629180
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] // MoveResolver resolve mapping <|@ <|@
      nr  254  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571610711976019636
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[8|0x8] // MoveResolver resolve mapping <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567187905733353983
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[9|0x9] // MoveResolver resolve mapping <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B13" "B21" "B20" "B19" "B18" "B17" "B16" "B15" "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607162073407212554
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B12" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  320  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  322  <|@ instruction rbp|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  324  <|@ instruction rdi|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction r13|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = SUB (x: rbp|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  332  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" "B47" 
    successors "B49" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction TESTBYTEBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714438988526654 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606968818122833350
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction r10|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  404  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction r8|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  408  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 49, 50, 51, 52, ...}] <|@ <|@
      nr  410  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.20456323728994374 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B71 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605339876961552022
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B69" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction rcx|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr  456  <|@ instruction rcx|QWORD = IMUL x: rcx|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr  458  <|@ instruction rcx|QWORD = SAR x: rcx|QWORD y: 37 size: QWORD <|@ <|@
      nr  460  <|@ instruction rcx|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr  464  <|@ instruction rdi|DWORD = IMUL x: rcx|DWORD y: 100 size: DWORD <|@ <|@
      nr  466  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B69 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B68" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction r9|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr  484  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B67" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rbx|DWORD = LEA address: [rbp|DWORD - 2] size: DWORD <|@ <|@
      nr  504  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction r14|DWORD = MOVSXB input: [rax|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOVB (x: [r13|QWORD[.] + r9|DWORD * 1 + 16], y: r14|DWORD) size: BYTE <|@ <|@
      nr  528  <|@ instruction rdi|DWORD = MOVSXB input: [r11|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  530  <|@ instruction MOVB (x: [r13|QWORD[.] + rbx|DWORD * 1 + 16], y: rdi|DWORD) size: BYTE <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" 
    successors "B58" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596612633779284459
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B62 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  580  <|@ instruction rdi|QWORD = IMUL x: rdi|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr  582  <|@ instruction rdi|QWORD = SAR x: rdi|QWORD y: 37 size: QWORD <|@ <|@
      nr  584  <|@ instruction rdi|DWORD = MOV value: rdi|QWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr  588  <|@ instruction r9|DWORD = IMUL x: rdi|DWORD y: 100 size: DWORD <|@ <|@
      nr  590  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B65 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction r14|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  608  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction r8|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  628  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction rcx|DWORD = MOVSXB input: [rax|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  652  <|@ instruction MOVB (x: [r13|QWORD[.] + r14|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr  654  <|@ instruction rcx|DWORD = MOVSXB input: [r11|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr  658  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:518) [bci: 69]
locals: rdi|DWORD - r13|QWORD[.] rdi|DWORD r9|DWORD r8|DWORD vstack:0|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: rsi|QWORD[.] - - rbp|DWORD 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:69, 30] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  660  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 4596538187644396969
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  670  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B62" "B71" 
    successors "B73" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction rcx|DWORD = NEG value: r11|DWORD size: DWORD <|@ <|@
      nr  686  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B86 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction r8|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr  702  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B85 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction rax|DWORD = MOVSXB input: [rax|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  720  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  722  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6223590908157148 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B78 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  742  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction rcx|DWORD = MOVSXB input: [rdi|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  760  <|@ instruction MOVB (x: [r13|QWORD[.] + rax|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600474593749434728
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  772  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714554158984935 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606968817085470084
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B89" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction rax|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  858  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction r14|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  862  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ instruction r14|DWORD = SHL (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  866  <|@ instruction r14|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  870  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  872  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  876  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B89 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B31" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  902  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction r14|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  906  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  934  <|@ instruction rcx|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  938  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  940  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  942  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B38" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  976  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  978  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  980  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  982  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  984  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  986  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  988  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  990  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction MOV x: [rdi|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1032  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B32" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1076  <|@ instruction rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr 1078  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1138  <|@ instruction r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1140  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1142  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1144  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1146  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1148  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B30" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1268  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1270  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1272  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction rdx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr 1290  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction MOVB x: [r13|QWORD[.] + rdx|DWORD * 1 + 16] y: 45 size: BYTE <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1304  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582492443078313792
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1314  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1318  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: vstack:6|DWORD r8|DWORD 
locals: vstack:4|QWORD[.] vstack:1|DWORD vstack:6|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr 1346  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: vstack:6|DWORD r8|DWORD 
locals: vstack:4|QWORD[.] vstack:1|DWORD vstack:6|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10] <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1372  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: rsi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1374  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1402  <|@ instruction r9|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1404  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD <|@ <|@
      nr 1406  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr 1408  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1410  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr 1412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1438  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1440  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1442  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1444  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1446  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1448  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1450  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1488  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1490  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1492  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr 1494  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1496  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1500  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1524  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: vstack:6|DWORD r8|DWORD 
locals: vstack:4|QWORD[.] vstack:1|DWORD vstack:6|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr 1528  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: vstack:6|DWORD r8|DWORD 
locals: vstack:4|QWORD[.] vstack:1|DWORD vstack:6|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10] <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1530  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction MOV x: [r15|QWORD + 1156] y: -204315 size: DWORD <|@ <|@
      nr 1550  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1552  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:527) [bci: 104]
locals: - - r13|QWORD[.] - - rax|DWORD vstack:0|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: vstack:4|QWORD[.] - - vstack:8|DWORD 
>@ <|@ instruction DEOPT info [bci:104, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-237081|0xfffffffffffc61e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1562  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-189723|0xfffffffffffd1ae5] // MoveResolver resolve mapping <|@ <|@
      nr 1572  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-195611|0xfffffffffffd03e5] // MoveResolver resolve mapping <|@ <|@
      nr 1582  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction MOV x: [r15|QWORD + 1156] y: -233747 size: DWORD <|@ <|@
      nr 1602  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1604  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
locals: vstack:4|QWORD[.] vstack:1|DWORD vstack:6|DWORD vstack:8|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-236051|0xfffffffffffc65ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1614  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-187419|0xfffffffffffd23e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1624  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-238105|0xfffffffffffc5de7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1634  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-198171|0xfffffffffffcf9e5] // MoveResolver resolve mapping <|@ <|@
      nr 1644  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-180507|0xfffffffffffd3ee5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1654  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction MOV x: [r15|QWORD + 1156] y: -207643 size: DWORD <|@ <|@
      nr 1674  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1676  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:523) [bci: 85]
locals: r11|DWORD - r13|QWORD[.] - - r8|DWORD vstack:0|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: vstack:4|QWORD[.] - - vstack:8|DWORD 
>@ <|@ instruction DEOPT info [bci:85, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-192283|0xfffffffffffd10e5] // MoveResolver resolve mapping <|@ <|@
      nr 1686  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1706  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1708  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: rcx|DWORD - r13|QWORD[.] - - rbx|DWORD vstack:0|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: vstack:4|QWORD[.] - - vstack:8|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-201499|0xfffffffffffcece5] // MoveResolver resolve mapping <|@ <|@
      nr 1718  <|@ instruction JUMP ~outgoingValues: [] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1738  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1740  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:522) [bci: 72]
locals: r11|DWORD - r13|QWORD[.] - - rbx|DWORD vstack:0|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: vstack:4|QWORD[.] - - vstack:8|DWORD 
>@ <|@ instruction DEOPT info [bci:72, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-239129|0xfffffffffffc59e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1750  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B41" "B43" "B45" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1770  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1772  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: r9|DWORD r8|DWORD 
locals: vstack:4|QWORD[.] rdx|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-184091|0xfffffffffffd30e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1782  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction NOP <|@ <|@
      nr 1800  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1802  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1804  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: r11|DWORD - r13|QWORD[.] - - rbp|DWORD r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: rsi|QWORD[.] - - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #18         // count:int
     4: istore_2      
     5: iload_2       
     6: iload_1       
     7: invokestatic  #61         // java.lang.Integer.stringSize:(int)int
    10: iadd          
    11: istore_3      
    12: aload_0       
    13: iload_3       
    14: invokevirtual #24         // ensureCapacityInternal:(int)void
    17: aload_0       
    18: invokevirtual #19         // isLatin1:()boolean
    21: ifeq          37
    24: iload_1       
    25: iload_3       
    26: aload_0       
    27: getfield      #2          // value:byte[]
    30: invokestatic  #62         // java.lang.Integer.getChars:(int, int, byte[])int
    33: pop           
    34: goto          48
    37: iload_1       
    38: iload_2       
    39: iload_3       
    40: aload_0       
    41: getfield      #2          // value:byte[]
    44: invokestatic  #63         // java.lang.StringUTF16.getChars:(int, int, int, byte[])int
    47: pop           
    48: aload_0       
    49: iload_3       
    50: putfield      #18         // count:int
    53: aload_0       
    54: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@11fbf5cf slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction vstack:4|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction r11|DWORD = NEG value: rdx|DWORD size: DWORD <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0248451913249636 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606958633211231298
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B21 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B20" 
    xhandlers
    flags 
    probability 4602752168055621283
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B20 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B19" 
    xhandlers
    flags 
    probability 4598323111924218927
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B19 y: -999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B18" 
    xhandlers
    flags 
    probability 4593895269862142147
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B18 y: -9999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" 
    xhandlers
    flags 
    probability 4589468661642602652
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B17 y: -99999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4585043307360852988
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B16 y: -999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4580619227439431527
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B15 y: -9999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4576196442633492882
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 y: -99999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4571774974036225136
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: -999999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4567354843084355297
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rcx|DWORD = LEA address: [rdi|DWORD + 10] size: DWORD <|@ <|@
      nr  190  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602532121406698170
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598172830319288879
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593743754731554715
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589314678826940650
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4584886816669611324
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rcx|DWORD = MOVE input: int[5|0x5] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4582818360249579440
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580460188027533457
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rcx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576034812990629180
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571610711976019636
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rcx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567187905733353983
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rcx|DWORD = MOVE input: int[9|0x9] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B13" "B21" "B20" "B19" "B18" "B17" "B16" "B15" "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607162073407212554
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B12" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  348  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  350  <|@ instruction rbp|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  352  <|@ instruction rdi|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  354  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction r13|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  358  <|@ instruction rcx|DWORD = SUB (x: rbp|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" "B47" 
    successors "B49" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction TESTBYTEBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714438988526654 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606968818122833350
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction r10|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1280  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1282  <|@ instruction r8|DWORD = SETCC condition: < <|@ <|@
      nr 1284  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1286  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 49, 50, 51, 52, ...}] <|@ <|@
      nr 1288  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.20456323728994374 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B71 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605339876961552022
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction rbx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1702  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B69" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction rcx|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr 1324  <|@ instruction rcx|QWORD = IMUL x: rcx|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr 1326  <|@ instruction rcx|QWORD = SAR x: rcx|QWORD y: 37 size: QWORD <|@ <|@
      nr 1328  <|@ instruction rcx|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr 1330  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1332  <|@ instruction rdi|DWORD = IMUL x: rcx|DWORD y: 100 size: DWORD <|@ <|@
      nr 1334  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1336  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B69 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B68" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction r9|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr 1352  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B67" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rbx|DWORD = LEA address: [rbp|DWORD - 2] size: DWORD <|@ <|@
      nr 1372  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction r14|DWORD = MOVSXB input: [rax|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1394  <|@ instruction MOVB (x: [r13|QWORD[.] + r9|DWORD * 1 + 16], y: r14|DWORD) size: BYTE <|@ <|@
      nr 1396  <|@ instruction rdi|DWORD = MOVSXB input: [r11|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1398  <|@ instruction MOVB (x: [r13|QWORD[.] + rbx|DWORD * 1 + 16], y: rdi|DWORD) size: BYTE <|@ <|@
      nr 1400  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" 
    successors "B58" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596612633779284459
    begin_IR
      LIR
      nr 1402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B62 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1448  <|@ instruction rdi|QWORD = IMUL x: rdi|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr 1450  <|@ instruction rdi|QWORD = SAR x: rdi|QWORD y: 37 size: QWORD <|@ <|@
      nr 1452  <|@ instruction rdi|DWORD = MOV value: rdi|QWORD size: DWORD <|@ <|@
      nr 1454  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1456  <|@ instruction r9|DWORD = IMUL x: rdi|DWORD y: 100 size: DWORD <|@ <|@
      nr 1458  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1460  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B65 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction r14|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1476  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction r8|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr 1496  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction rcx|DWORD = MOVSXB input: [rax|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1520  <|@ instruction MOVB (x: [r13|QWORD[.] + r14|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1522  <|@ instruction rcx|DWORD = MOVSXB input: [r11|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1524  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1526  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:518) [bci: 69]
locals: rdi|DWORD - r13|QWORD[.] rdi|DWORD r9|DWORD r8|DWORD vstack:0|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: rsi|QWORD[.] - - rbp|DWORD 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:69, 30] <|@ <|@
      nr 1528  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1530  <|@ instruction rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1532  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 4596538187644396969
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1544  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B62" "B71" 
    successors "B73" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction rcx|DWORD = NEG value: r11|DWORD size: DWORD <|@ <|@
      nr 1718  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B86 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction r8|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1734  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B85 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction rax|DWORD = MOVSXB input: [rax|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1752  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1754  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6223590908157148 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B78 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr 1756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction rcx|DWORD = MOVSXB input: [rdi|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1792  <|@ instruction MOVB (x: [r13|QWORD[.] + rax|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1794  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600474593749434728
    begin_IR
      LIR
      nr 1820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1830  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714554158984935 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606968817085470084
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1932  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1934  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B89" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  412  <|@ instruction r14|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  414  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction r14|DWORD = SHL (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction r14|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  424  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B89 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B31" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction r14|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  656  <|@ instruction rcx|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  660  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  662  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B38" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  754  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  756  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  758  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  760  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  764  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  768  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  780  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction MOV x: [rdi|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  812  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B32" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  908  <|@ instruction rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  910  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction vstack:7|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction vstack:1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1050  <|@ instruction vstack:2|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1056  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1060  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B30" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1182  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1184  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1186  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1188  <|@ instruction r13|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction rbx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r9|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr 1200  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1846  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction rdx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr 1860  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction MOVB x: [r13|QWORD[.] + rdx|DWORD * 1 + 16] y: 45 size: BYTE <|@ <|@
      nr 1874  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr 1876  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582492443078313792
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1230  <|@ instruction vstack:1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction r11|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr 1240  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction rdx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction vstack:7|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction vstack:1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  702  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: vstack:6|DWORD r8|DWORD 
locals: vstack:4|QWORD[.] vstack:1|DWORD vstack:6|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: vstack:6|DWORD r8|DWORD 
locals: vstack:4|QWORD[.] vstack:1|DWORD vstack:6|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10] <|@ <|@
      nr  706  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction rbx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction r9|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction rdx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction vstack:7|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  832  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction vstack:1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  862  <|@ instruction rdi|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  866  <|@ instruction rbx|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction r9|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction rdx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction vstack:7|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction vstack:1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  496  <|@ instruction r9|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  504  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  566  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  568  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  570  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  574  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  576  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction vstack:10|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  624  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: vstack:6|DWORD r8|DWORD 
locals: vstack:4|QWORD[.] vstack:1|DWORD vstack:6|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: vstack:6|DWORD r8|DWORD 
locals: vstack:4|QWORD[.] vstack:1|DWORD vstack:6|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10] <|@ <|@
      nr  534  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -204315 size: DWORD <|@ <|@
      nr 1896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1898  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:527) [bci: 104]
locals: - - r13|QWORD[.] - - rax|DWORD vstack:0|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: vstack:4|QWORD[.] - - vstack:8|DWORD 
>@ <|@ instruction DEOPT info [bci:104, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  916  <|@ instruction vstack:1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  926  <|@ instruction r10|DWORD = MOVE input: int[-237081|0xfffffffffffc61e7] <|@ <|@
      nr  928  <|@ instruction r9|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  930  <|@ instruction rdx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1576  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction r10|DWORD = MOVE input: int[-189723|0xfffffffffffd1ae5] <|@ <|@
      nr 1586  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1548  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction r10|DWORD = MOVE input: int[-195611|0xfffffffffffd03e5] <|@ <|@
      nr 1558  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1988  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1990  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1992  <|@ instruction vstack:1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1994  <|@ instruction NOP <|@ <|@
      nr 1996  <|@ instruction NOP <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction MOV x: [r15|QWORD + 1156] y: -233747 size: DWORD <|@ <|@
      nr 2010  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 2012  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
locals: vstack:4|QWORD[.] vstack:1|DWORD vstack:6|DWORD vstack:8|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2016  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 2018  <|@ instruction vstack:1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 2020  <|@ instruction NOP <|@ <|@
      nr 2022  <|@ instruction NOP <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 2028  <|@ instruction r10|DWORD = MOVE input: int[-236051|0xfffffffffffc65ed] <|@ <|@
      nr 2030  <|@ instruction r9|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr 2032  <|@ instruction rdx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr 2034  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1612  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction r10|DWORD = MOVE input: int[-187419|0xfffffffffffd23e5] <|@ <|@
      nr 1622  <|@ instruction r8|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr 1624  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr 1626  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1628  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction vstack:1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  960  <|@ instruction r10|DWORD = MOVE input: int[-238105|0xfffffffffffc5de7] <|@ <|@
      nr  962  <|@ instruction r9|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  964  <|@ instruction rdx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1952  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction r10|DWORD = MOVE input: int[-198171|0xfffffffffffcf9e5] <|@ <|@
      nr 1962  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1652  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction r10|DWORD = MOVE input: int[-180507|0xfffffffffffd3ee5] <|@ <|@
      nr 1662  <|@ instruction r8|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr 1664  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr 1666  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1668  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1798  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction MOV x: [r15|QWORD + 1156] y: -207643 size: DWORD <|@ <|@
      nr 1816  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1818  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:523) [bci: 85]
locals: r11|DWORD - r13|QWORD[.] - - r8|DWORD vstack:0|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: vstack:4|QWORD[.] - - vstack:8|DWORD 
>@ <|@ instruction DEOPT info [bci:85, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1562  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction r10|DWORD = MOVE input: int[-192283|0xfffffffffffd10e5] <|@ <|@
      nr 1572  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1606  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1608  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: rcx|DWORD - r13|QWORD[.] - - rbx|DWORD vstack:0|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: vstack:4|QWORD[.] - - vstack:8|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1938  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction r10|DWORD = MOVE input: int[-201499|0xfffffffffffcece5] <|@ <|@
      nr 1948  <|@ instruction JUMP ~outgoingValues: [] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr 1968  <|@ instruction NOP <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1982  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1984  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:522) [bci: 72]
locals: r11|DWORD - r13|QWORD[.] - - rbx|DWORD vstack:0|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: vstack:4|QWORD[.] - - vstack:8|DWORD 
>@ <|@ instruction DEOPT info [bci:72, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction vstack:1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  994  <|@ instruction r10|DWORD = MOVE input: int[-239129|0xfffffffffffc59e7] <|@ <|@
      nr  996  <|@ instruction r9|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  998  <|@ instruction rdx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B41" "B43" "B45" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 2036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction NOP <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction NOP <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2054  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2056  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: r9|DWORD r8|DWORD 
locals: vstack:4|QWORD[.] rdx|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction vstack:8|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction r10|DWORD = MOVE input: int[-184091|0xfffffffffffd30e5] <|@ <|@
      nr 1642  <|@ instruction r8|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr 1644  <|@ instruction rbp|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr 1646  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1648  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1688  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1690  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: r11|DWORD - r13|QWORD[.] - - rbp|DWORD r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: rsi|QWORD[.] - - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #18         // count:int
     4: istore_2      
     5: iload_2       
     6: iload_1       
     7: invokestatic  #61         // java.lang.Integer.stringSize:(int)int
    10: iadd          
    11: istore_3      
    12: aload_0       
    13: iload_3       
    14: invokevirtual #24         // ensureCapacityInternal:(int)void
    17: aload_0       
    18: invokevirtual #19         // isLatin1:()boolean
    21: ifeq          37
    24: iload_1       
    25: iload_3       
    26: aload_0       
    27: getfield      #2          // value:byte[]
    30: invokestatic  #62         // java.lang.Integer.getChars:(int, int, byte[])int
    33: pop           
    34: goto          48
    37: iload_1       
    38: iload_2       
    39: iload_3       
    40: aload_0       
    41: getfield      #2          // value:byte[]
    44: invokestatic  #63         // java.lang.StringUTF16.getChars:(int, int, int, byte[])int
    47: pop           
    48: aload_0       
    49: iload_3       
    50: putfield      #18         // count:int
    53: aload_0       
    54: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|d DWORD "[vstack:0|d]" vstack:0|d -1 [1284, 1984[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[vstack:1|d]" vstack:1|d -1 [470, 2032[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[vstack:2|q]" vstack:2|q -1 [1050, 1060[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[vstack:4|q]" vstack:4|q -1 [28, 2056[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[vstack:5|d]" vstack:5|d -1 [468, 1196[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[vstack:6|d]" vstack:6|d -1 [466, 2030[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[vstack:7|d]" vstack:7|d -1 [464, 1192[ "NOT_SUPPORTED"
  vstack:8|d DWORD "[vstack:8|d]" vstack:8|d -1 [462, 2012[ "NOT_SUPPORTED"
  vstack:10|q QWORD "[vstack:10|q]" vstack:10|q -1 [614, 624[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|d DWORD "[stack:40|d]" vstack:0|d -1 [1284, 1984[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[stack:44|d]" vstack:1|d -1 [470, 2032[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[stack:64|q]" vstack:2|q -1 [1050, 1060[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[stack:56|q]" vstack:4|q -1 [28, 2056[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[stack:40|d]" vstack:5|d -1 [468, 1196[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[stack:36|d]" vstack:6|d -1 [466, 2030[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[stack:32|d]" vstack:7|d -1 [464, 1192[ "NOT_SUPPORTED"
  vstack:8|d DWORD "[stack:28|d]" vstack:8|d -1 [462, 2012[ "NOT_SUPPORTED"
  vstack:10|q QWORD "[stack:64|q]" vstack:10|q -1 [614, 624[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@11fbf5cf slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction r11|DWORD = NEG value: rdx|DWORD size: DWORD <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0248451913249636 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606958633211231298
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B21 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B20" 
    xhandlers
    flags 
    probability 4602752168055621283
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B20 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B19" 
    xhandlers
    flags 
    probability 4598323111924218927
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B19 y: -999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B18" 
    xhandlers
    flags 
    probability 4593895269862142147
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B18 y: -9999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" 
    xhandlers
    flags 
    probability 4589468661642602652
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B17 y: -99999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4585043307360852988
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B16 y: -999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4580619227439431527
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B15 y: -9999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4576196442633492882
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 y: -99999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4571774974036225136
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: -999999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4567354843084355297
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rcx|DWORD = LEA address: [rdi|DWORD + 10] size: DWORD <|@ <|@
      nr  190  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602532121406698170
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598172830319288879
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593743754731554715
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589314678826940650
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4584886816669611324
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rcx|DWORD = MOVE input: int[5|0x5] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4582818360249579440
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580460188027533457
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rcx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576034812990629180
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571610711976019636
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rcx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567187905733353983
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rcx|DWORD = MOVE input: int[9|0x9] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B13" "B21" "B20" "B19" "B18" "B17" "B16" "B15" "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607162073407212554
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B12" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  348  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  350  <|@ instruction rbp|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  352  <|@ instruction rdi|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  354  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction r13|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  358  <|@ instruction rcx|DWORD = SUB (x: rbp|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" "B47" 
    successors "B49" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction TESTBYTEBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714438988526654 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606968818122833350
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction r10|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1280  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1282  <|@ instruction r8|DWORD = SETCC condition: < <|@ <|@
      nr 1284  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1286  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 49, 50, 51, 52, ...}] <|@ <|@
      nr 1288  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.20456323728994374 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B71 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605339876961552022
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction rbx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1702  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B69" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction rcx|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr 1324  <|@ instruction rcx|QWORD = IMUL x: rcx|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr 1326  <|@ instruction rcx|QWORD = SAR x: rcx|QWORD y: 37 size: QWORD <|@ <|@
      nr 1328  <|@ instruction rcx|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr 1330  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1332  <|@ instruction rdi|DWORD = IMUL x: rcx|DWORD y: 100 size: DWORD <|@ <|@
      nr 1334  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1336  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B69 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B68" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction r9|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr 1352  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B67" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rbx|DWORD = LEA address: [rbp|DWORD - 2] size: DWORD <|@ <|@
      nr 1372  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction r14|DWORD = MOVSXB input: [rax|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1394  <|@ instruction MOVB (x: [r13|QWORD[.] + r9|DWORD * 1 + 16], y: r14|DWORD) size: BYTE <|@ <|@
      nr 1396  <|@ instruction rdi|DWORD = MOVSXB input: [r11|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1398  <|@ instruction MOVB (x: [r13|QWORD[.] + rbx|DWORD * 1 + 16], y: rdi|DWORD) size: BYTE <|@ <|@
      nr 1400  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" 
    successors "B58" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596612633779284459
    begin_IR
      LIR
      nr 1402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B62 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1448  <|@ instruction rdi|QWORD = IMUL x: rdi|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr 1450  <|@ instruction rdi|QWORD = SAR x: rdi|QWORD y: 37 size: QWORD <|@ <|@
      nr 1452  <|@ instruction rdi|DWORD = MOV value: rdi|QWORD size: DWORD <|@ <|@
      nr 1454  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1456  <|@ instruction r9|DWORD = IMUL x: rdi|DWORD y: 100 size: DWORD <|@ <|@
      nr 1458  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1460  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B65 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction r14|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1476  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction r8|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr 1496  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction rcx|DWORD = MOVSXB input: [rax|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1520  <|@ instruction MOVB (x: [r13|QWORD[.] + r14|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1522  <|@ instruction rcx|DWORD = MOVSXB input: [r11|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1524  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1526  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:518) [bci: 69]
locals: rdi|DWORD - r13|QWORD[.] rdi|DWORD r9|DWORD r8|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: rsi|QWORD[.] - - rbp|DWORD 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:69, 30] <|@ <|@
      nr 1528  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1530  <|@ instruction rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1532  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 4596538187644396969
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1544  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B62" "B71" 
    successors "B73" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction rcx|DWORD = NEG value: r11|DWORD size: DWORD <|@ <|@
      nr 1718  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B86 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction r8|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1734  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B85 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction rax|DWORD = MOVSXB input: [rax|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1752  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1754  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6223590908157148 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B78 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr 1756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction rcx|DWORD = MOVSXB input: [rdi|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1792  <|@ instruction MOVB (x: [r13|QWORD[.] + rax|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1794  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600474593749434728
    begin_IR
      LIR
      nr 1820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1830  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714554158984935 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606968817085470084
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1932  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1934  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B89" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  412  <|@ instruction r14|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  414  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction r14|DWORD = SHL (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction r14|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  424  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B89 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B31" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction r14|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  656  <|@ instruction rcx|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  660  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  662  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B38" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  754  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  756  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  758  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  760  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  764  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  768  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  780  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction MOV x: [rdi|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  812  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B32" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  908  <|@ instruction rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  910  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1050  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1056  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1060  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B30" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1182  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1184  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1186  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1188  <|@ instruction r13|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1200  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1846  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction rdx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr 1860  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction MOVB x: [r13|QWORD[.] + rdx|DWORD * 1 + 16] y: 45 size: BYTE <|@ <|@
      nr 1874  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1876  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582492443078313792
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1230  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1240  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  702  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10] <|@ <|@
      nr  706  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  832  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  862  <|@ instruction rdi|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  866  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  496  <|@ instruction r9|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  504  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  566  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  568  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  570  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  574  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  576  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  624  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10] <|@ <|@
      nr  534  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -204315 size: DWORD <|@ <|@
      nr 1896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1898  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:527) [bci: 104]
locals: - - r13|QWORD[.] - - rax|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:104, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  916  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  926  <|@ instruction r10|DWORD = MOVE input: int[-237081|0xfffffffffffc61e7] <|@ <|@
      nr  928  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  930  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1576  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction r10|DWORD = MOVE input: int[-189723|0xfffffffffffd1ae5] <|@ <|@
      nr 1586  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1548  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction r10|DWORD = MOVE input: int[-195611|0xfffffffffffd03e5] <|@ <|@
      nr 1558  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1988  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1990  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1992  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1994  <|@ instruction NOP <|@ <|@
      nr 1996  <|@ instruction NOP <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction MOV x: [r15|QWORD + 1156] y: -233747 size: DWORD <|@ <|@
      nr 2010  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 2012  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2016  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 2018  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 2020  <|@ instruction NOP <|@ <|@
      nr 2022  <|@ instruction NOP <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 2028  <|@ instruction r10|DWORD = MOVE input: int[-236051|0xfffffffffffc65ed] <|@ <|@
      nr 2030  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 2032  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 2034  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1612  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction r10|DWORD = MOVE input: int[-187419|0xfffffffffffd23e5] <|@ <|@
      nr 1622  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1624  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1626  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1628  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  960  <|@ instruction r10|DWORD = MOVE input: int[-238105|0xfffffffffffc5de7] <|@ <|@
      nr  962  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  964  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1952  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction r10|DWORD = MOVE input: int[-198171|0xfffffffffffcf9e5] <|@ <|@
      nr 1962  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1652  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction r10|DWORD = MOVE input: int[-180507|0xfffffffffffd3ee5] <|@ <|@
      nr 1662  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1664  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1666  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1668  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1798  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction MOV x: [r15|QWORD + 1156] y: -207643 size: DWORD <|@ <|@
      nr 1816  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1818  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:523) [bci: 85]
locals: r11|DWORD - r13|QWORD[.] - - r8|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:85, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1562  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction r10|DWORD = MOVE input: int[-192283|0xfffffffffffd10e5] <|@ <|@
      nr 1572  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1606  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1608  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: rcx|DWORD - r13|QWORD[.] - - rbx|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1938  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction r10|DWORD = MOVE input: int[-201499|0xfffffffffffcece5] <|@ <|@
      nr 1948  <|@ instruction JUMP ~outgoingValues: [] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr 1968  <|@ instruction NOP <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1982  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1984  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:522) [bci: 72]
locals: r11|DWORD - r13|QWORD[.] - - rbx|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:72, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  994  <|@ instruction r10|DWORD = MOVE input: int[-239129|0xfffffffffffc59e7] <|@ <|@
      nr  996  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  998  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B41" "B43" "B45" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 2036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction NOP <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction NOP <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2054  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2056  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: r9|DWORD r8|DWORD 
locals: stack:56|QWORD[.] rdx|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction r10|DWORD = MOVE input: int[-184091|0xfffffffffffd30e5] <|@ <|@
      nr 1642  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1644  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1646  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1648  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1688  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1690  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: r11|DWORD - r13|QWORD[.] - - rbp|DWORD r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: rsi|QWORD[.] - - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #18         // count:int
     4: istore_2      
     5: iload_2       
     6: iload_1       
     7: invokestatic  #61         // java.lang.Integer.stringSize:(int)int
    10: iadd          
    11: istore_3      
    12: aload_0       
    13: iload_3       
    14: invokevirtual #24         // ensureCapacityInternal:(int)void
    17: aload_0       
    18: invokevirtual #19         // isLatin1:()boolean
    21: ifeq          37
    24: iload_1       
    25: iload_3       
    26: aload_0       
    27: getfield      #2          // value:byte[]
    30: invokestatic  #62         // java.lang.Integer.getChars:(int, int, byte[])int
    33: pop           
    34: goto          48
    37: iload_1       
    38: iload_2       
    39: iload_3       
    40: aload_0       
    41: getfield      #2          // value:byte[]
    44: invokestatic  #63         // java.lang.StringUTF16.getChars:(int, int, int, byte[])int
    47: pop           
    48: aload_0       
    49: iload_3       
    50: putfield      #18         // count:int
    53: aload_0       
    54: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@11fbf5cf slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction r11|DWORD = NEG value: rdx|DWORD size: DWORD <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0248451913249636 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606958633211231298
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B21 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B20" 
    xhandlers
    flags 
    probability 4602752168055621283
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B20 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B19" 
    xhandlers
    flags 
    probability 4598323111924218927
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B19 y: -999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B18" 
    xhandlers
    flags 
    probability 4593895269862142147
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B18 y: -9999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" 
    xhandlers
    flags 
    probability 4589468661642602652
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B17 y: -99999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4585043307360852988
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B16 y: -999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4580619227439431527
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B15 y: -9999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4576196442633492882
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 y: -99999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4571774974036225136
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: -999999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4567354843084355297
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rcx|DWORD = LEA address: [rdi|DWORD + 10] size: DWORD <|@ <|@
      nr  190  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602532121406698170
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598172830319288879
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593743754731554715
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589314678826940650
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4584886816669611324
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rcx|DWORD = MOVE input: int[5|0x5] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4582818360249579440
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580460188027533457
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rcx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576034812990629180
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571610711976019636
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rcx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567187905733353983
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rcx|DWORD = MOVE input: int[9|0x9] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B13" "B21" "B20" "B19" "B18" "B17" "B16" "B15" "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607162073407212554
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B12" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  348  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  350  <|@ instruction rbp|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  352  <|@ instruction rdi|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  354  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction r13|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  358  <|@ instruction rcx|DWORD = SUB (x: rbp|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" "B47" 
    successors "B49" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction TESTBYTEBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714438988526654 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606968818122833350
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction r10|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1280  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1282  <|@ instruction r8|DWORD = SETCC condition: < <|@ <|@
      nr 1284  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1286  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 49, 50, 51, 52, ...}] <|@ <|@
      nr 1288  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.20456323728994374 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B71 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605339876961552022
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction rbx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1702  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B69" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction rcx|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr 1324  <|@ instruction rcx|QWORD = IMUL x: rcx|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr 1326  <|@ instruction rcx|QWORD = SAR x: rcx|QWORD y: 37 size: QWORD <|@ <|@
      nr 1328  <|@ instruction rcx|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr 1330  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1332  <|@ instruction rdi|DWORD = IMUL x: rcx|DWORD y: 100 size: DWORD <|@ <|@
      nr 1334  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1336  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B69 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B68" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction r9|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr 1352  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B67" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rbx|DWORD = LEA address: [rbp|DWORD - 2] size: DWORD <|@ <|@
      nr 1372  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction r14|DWORD = MOVSXB input: [rax|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1394  <|@ instruction MOVB (x: [r13|QWORD[.] + r9|DWORD * 1 + 16], y: r14|DWORD) size: BYTE <|@ <|@
      nr 1396  <|@ instruction rdi|DWORD = MOVSXB input: [r11|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1398  <|@ instruction MOVB (x: [r13|QWORD[.] + rbx|DWORD * 1 + 16], y: rdi|DWORD) size: BYTE <|@ <|@
      nr 1400  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" 
    successors "B58" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596612633779284459
    begin_IR
      LIR
      nr 1402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B62 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1448  <|@ instruction rdi|QWORD = IMUL x: rdi|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr 1450  <|@ instruction rdi|QWORD = SAR x: rdi|QWORD y: 37 size: QWORD <|@ <|@
      nr 1452  <|@ instruction rdi|DWORD = MOV value: rdi|QWORD size: DWORD <|@ <|@
      nr 1454  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1456  <|@ instruction r9|DWORD = IMUL x: rdi|DWORD y: 100 size: DWORD <|@ <|@
      nr 1458  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1460  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B65 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction r14|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1476  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction r8|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr 1496  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction rcx|DWORD = MOVSXB input: [rax|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1520  <|@ instruction MOVB (x: [r13|QWORD[.] + r14|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1522  <|@ instruction rcx|DWORD = MOVSXB input: [r11|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1524  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1526  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:518) [bci: 69]
locals: rdi|DWORD - r13|QWORD[.] rdi|DWORD r9|DWORD r8|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: rsi|QWORD[.] - - rbp|DWORD 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:69, 30] <|@ <|@
      nr 1528  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1530  <|@ instruction rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1532  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 4596538187644396969
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1544  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B62" "B71" 
    successors "B73" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction rcx|DWORD = NEG value: r11|DWORD size: DWORD <|@ <|@
      nr 1718  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B86 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction r8|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1734  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B85 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction rax|DWORD = MOVSXB input: [rax|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1752  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1754  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6223590908157148 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B78 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr 1756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction rcx|DWORD = MOVSXB input: [rdi|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1792  <|@ instruction MOVB (x: [r13|QWORD[.] + rax|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1794  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600474593749434728
    begin_IR
      LIR
      nr 1820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1830  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714554158984935 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606968817085470084
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1932  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1934  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B89" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  412  <|@ instruction r14|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  414  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction r14|DWORD = SHL (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction r14|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  424  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B89 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B31" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction r14|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  656  <|@ instruction rcx|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  660  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  662  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B38" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  754  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  756  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  758  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  760  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  764  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  768  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  780  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction MOV x: [rdi|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  812  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B32" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  908  <|@ instruction rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  910  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1050  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1056  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1060  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B30" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1182  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1184  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1186  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1188  <|@ instruction r13|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1200  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1846  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction rdx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr 1860  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction MOVB x: [r13|QWORD[.] + rdx|DWORD * 1 + 16] y: 45 size: BYTE <|@ <|@
      nr 1874  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1876  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582492443078313792
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1230  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1240  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  702  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10] <|@ <|@
      nr  706  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  832  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  862  <|@ instruction rdi|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  866  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  496  <|@ instruction r9|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  504  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  566  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  568  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  570  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  574  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  576  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  624  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10] <|@ <|@
      nr  534  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -204315 size: DWORD <|@ <|@
      nr 1896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1898  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:527) [bci: 104]
locals: - - r13|QWORD[.] - - rax|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:104, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  916  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  926  <|@ instruction r10|DWORD = MOVE input: int[-237081|0xfffffffffffc61e7] <|@ <|@
      nr  928  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  930  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1576  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction r10|DWORD = MOVE input: int[-189723|0xfffffffffffd1ae5] <|@ <|@
      nr 1586  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1548  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction r10|DWORD = MOVE input: int[-195611|0xfffffffffffd03e5] <|@ <|@
      nr 1558  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1988  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1990  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1992  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1994  <|@ instruction NOP <|@ <|@
      nr 1996  <|@ instruction NOP <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction MOV x: [r15|QWORD + 1156] y: -233747 size: DWORD <|@ <|@
      nr 2010  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 2012  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2016  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 2018  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 2020  <|@ instruction NOP <|@ <|@
      nr 2022  <|@ instruction NOP <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 2028  <|@ instruction r10|DWORD = MOVE input: int[-236051|0xfffffffffffc65ed] <|@ <|@
      nr 2030  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 2032  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 2034  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1612  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction r10|DWORD = MOVE input: int[-187419|0xfffffffffffd23e5] <|@ <|@
      nr 1622  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1624  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1626  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1628  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  960  <|@ instruction r10|DWORD = MOVE input: int[-238105|0xfffffffffffc5de7] <|@ <|@
      nr  962  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  964  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1952  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction r10|DWORD = MOVE input: int[-198171|0xfffffffffffcf9e5] <|@ <|@
      nr 1962  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1652  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction r10|DWORD = MOVE input: int[-180507|0xfffffffffffd3ee5] <|@ <|@
      nr 1662  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1664  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1666  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1668  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1798  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction MOV x: [r15|QWORD + 1156] y: -207643 size: DWORD <|@ <|@
      nr 1816  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1818  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:523) [bci: 85]
locals: r11|DWORD - r13|QWORD[.] - - r8|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:85, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1562  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction r10|DWORD = MOVE input: int[-192283|0xfffffffffffd10e5] <|@ <|@
      nr 1572  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1606  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1608  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: rcx|DWORD - r13|QWORD[.] - - rbx|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1938  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction r10|DWORD = MOVE input: int[-201499|0xfffffffffffcece5] <|@ <|@
      nr 1948  <|@ instruction JUMP ~outgoingValues: [] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr 1968  <|@ instruction NOP <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1982  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1984  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:522) [bci: 72]
locals: r11|DWORD - r13|QWORD[.] - - rbx|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:72, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  994  <|@ instruction r10|DWORD = MOVE input: int[-239129|0xfffffffffffc59e7] <|@ <|@
      nr  996  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  998  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B41" "B43" "B45" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 2036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction NOP <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction NOP <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2054  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2056  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: r9|DWORD r8|DWORD 
locals: stack:56|QWORD[.] rdx|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction r10|DWORD = MOVE input: int[-184091|0xfffffffffffd30e5] <|@ <|@
      nr 1642  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1644  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1646  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1648  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1688  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1690  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: r11|DWORD - r13|QWORD[.] - - rbp|DWORD r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: rsi|QWORD[.] - - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #18         // count:int
     4: istore_2      
     5: iload_2       
     6: iload_1       
     7: invokestatic  #61         // java.lang.Integer.stringSize:(int)int
    10: iadd          
    11: istore_3      
    12: aload_0       
    13: iload_3       
    14: invokevirtual #24         // ensureCapacityInternal:(int)void
    17: aload_0       
    18: invokevirtual #19         // isLatin1:()boolean
    21: ifeq          37
    24: iload_1       
    25: iload_3       
    26: aload_0       
    27: getfield      #2          // value:byte[]
    30: invokestatic  #62         // java.lang.Integer.getChars:(int, int, byte[])int
    33: pop           
    34: goto          48
    37: iload_1       
    38: iload_2       
    39: iload_3       
    40: aload_0       
    41: getfield      #2          // value:byte[]
    44: invokestatic  #63         // java.lang.StringUTF16.getChars:(int, int, int, byte[])int
    47: pop           
    48: aload_0       
    49: iload_3       
    50: putfield      #18         // count:int
    53: aload_0       
    54: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@11fbf5cf slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction r11|DWORD = NEG value: rdx|DWORD size: DWORD <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0248451913249636 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606958633211231298
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B21 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B20" 
    xhandlers
    flags 
    probability 4602752168055621283
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B20 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B19" 
    xhandlers
    flags 
    probability 4598323111924218927
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B19 y: -999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B18" 
    xhandlers
    flags 
    probability 4593895269862142147
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B18 y: -9999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" 
    xhandlers
    flags 
    probability 4589468661642602652
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B17 y: -99999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4585043307360852988
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B16 y: -999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4580619227439431527
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B15 y: -9999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4576196442633492882
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 y: -99999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4571774974036225136
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: -999999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4567354843084355297
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rcx|DWORD = LEA address: [rdi|DWORD + 10] size: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602532121406698170
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598172830319288879
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593743754731554715
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589314678826940650
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4584886816669611324
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rcx|DWORD = MOVE input: int[5|0x5] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4582818360249579440
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580460188027533457
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rcx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576034812990629180
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571610711976019636
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rcx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567187905733353983
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rcx|DWORD = MOVE input: int[9|0x9] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B13" "B21" "B20" "B19" "B18" "B17" "B16" "B15" "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607162073407212554
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B12" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  314  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  348  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  350  <|@ instruction rbp|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  352  <|@ instruction rdi|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  354  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction r13|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  358  <|@ instruction rcx|DWORD = SUB (x: rbp|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" "B47" 
    successors "B49" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction TESTBYTEBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714438988526654 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606968818122833350
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction r10|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1280  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1282  <|@ instruction r8|DWORD = SETCC condition: < <|@ <|@
      nr 1284  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1286  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 49, 50, 51, 52, ...}] <|@ <|@
      nr 1288  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.20456323728994374 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B71 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605339876961552022
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction rbx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1702  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B69" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction rcx|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr 1324  <|@ instruction rcx|QWORD = IMUL x: rcx|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr 1326  <|@ instruction rcx|QWORD = SAR x: rcx|QWORD y: 37 size: QWORD <|@ <|@
      nr 1328  <|@ instruction rcx|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr 1330  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1332  <|@ instruction rdi|DWORD = IMUL x: rcx|DWORD y: 100 size: DWORD <|@ <|@
      nr 1334  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1336  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B69 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B68" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction r9|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr 1352  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B67" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rbx|DWORD = LEA address: [rbp|DWORD - 2] size: DWORD <|@ <|@
      nr 1372  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction r14|DWORD = MOVSXB input: [rax|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1394  <|@ instruction MOVB (x: [r13|QWORD[.] + r9|DWORD * 1 + 16], y: r14|DWORD) size: BYTE <|@ <|@
      nr 1396  <|@ instruction rdi|DWORD = MOVSXB input: [r11|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1398  <|@ instruction MOVB (x: [r13|QWORD[.] + rbx|DWORD * 1 + 16], y: rdi|DWORD) size: BYTE <|@ <|@
      nr 1400  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" 
    successors "B58" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596612633779284459
    begin_IR
      LIR
      nr 1402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B62 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1448  <|@ instruction rdi|QWORD = IMUL x: rdi|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr 1450  <|@ instruction rdi|QWORD = SAR x: rdi|QWORD y: 37 size: QWORD <|@ <|@
      nr 1452  <|@ instruction rdi|DWORD = MOV value: rdi|QWORD size: DWORD <|@ <|@
      nr 1454  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1456  <|@ instruction r9|DWORD = IMUL x: rdi|DWORD y: 100 size: DWORD <|@ <|@
      nr 1458  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1460  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B65 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction r14|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1476  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction r8|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr 1496  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction rcx|DWORD = MOVSXB input: [rax|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1520  <|@ instruction MOVB (x: [r13|QWORD[.] + r14|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1522  <|@ instruction rcx|DWORD = MOVSXB input: [r11|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1524  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1526  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:518) [bci: 69]
locals: rdi|DWORD - r13|QWORD[.] rdi|DWORD r9|DWORD r8|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: rsi|QWORD[.] - - rbp|DWORD 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:69, 30] <|@ <|@
      nr 1528  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1530  <|@ instruction rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1532  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 4596538187644396969
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1544  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B62" "B71" 
    successors "B73" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction rcx|DWORD = NEG value: r11|DWORD size: DWORD <|@ <|@
      nr 1718  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B86 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction r8|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1734  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B85 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction rax|DWORD = MOVSXB input: [rax|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1752  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1754  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6223590908157148 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B78 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr 1756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction rcx|DWORD = MOVSXB input: [rdi|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1792  <|@ instruction MOVB (x: [r13|QWORD[.] + rax|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1794  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600474593749434728
    begin_IR
      LIR
      nr 1820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1830  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714554158984935 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606968817085470084
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1932  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1934  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B89" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  412  <|@ instruction r14|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  414  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction r14|DWORD = SHL (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction r14|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  424  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B89 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B31" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction r14|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  656  <|@ instruction rcx|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  660  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  662  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B38" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  754  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  756  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  758  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  760  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  764  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  768  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  780  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction MOV x: [rdi|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  812  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B32" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  908  <|@ instruction rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  910  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1050  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1056  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B30" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1182  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1184  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1186  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1188  <|@ instruction r13|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1200  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1846  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction rdx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr 1860  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction MOVB x: [r13|QWORD[.] + rdx|DWORD * 1 + 16] y: 45 size: BYTE <|@ <|@
      nr 1874  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1876  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582492443078313792
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1230  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1240  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  702  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10] <|@ <|@
      nr  706  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  832  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  862  <|@ instruction rdi|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  866  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  496  <|@ instruction r9|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  504  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  566  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  568  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  570  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  574  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  576  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10] <|@ <|@
      nr  534  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -204315 size: DWORD <|@ <|@
      nr 1896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1898  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:527) [bci: 104]
locals: - - r13|QWORD[.] - - rax|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:104, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  916  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  926  <|@ instruction r10|DWORD = MOVE input: int[-237081|0xfffffffffffc61e7] <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1576  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction r10|DWORD = MOVE input: int[-189723|0xfffffffffffd1ae5] <|@ <|@
      nr 1586  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1548  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction r10|DWORD = MOVE input: int[-195611|0xfffffffffffd03e5] <|@ <|@
      nr 1558  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1988  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1990  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1992  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1994  <|@ instruction NOP <|@ <|@
      nr 1996  <|@ instruction NOP <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction MOV x: [r15|QWORD + 1156] y: -233747 size: DWORD <|@ <|@
      nr 2010  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 2012  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2016  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 2018  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 2020  <|@ instruction NOP <|@ <|@
      nr 2022  <|@ instruction NOP <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 2028  <|@ instruction r10|DWORD = MOVE input: int[-236051|0xfffffffffffc65ed] <|@ <|@
      nr 2034  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1612  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction r10|DWORD = MOVE input: int[-187419|0xfffffffffffd23e5] <|@ <|@
      nr 1628  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  960  <|@ instruction r10|DWORD = MOVE input: int[-238105|0xfffffffffffc5de7] <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1952  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction r10|DWORD = MOVE input: int[-198171|0xfffffffffffcf9e5] <|@ <|@
      nr 1962  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1652  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction r10|DWORD = MOVE input: int[-180507|0xfffffffffffd3ee5] <|@ <|@
      nr 1668  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1798  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction MOV x: [r15|QWORD + 1156] y: -207643 size: DWORD <|@ <|@
      nr 1816  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1818  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:523) [bci: 85]
locals: r11|DWORD - r13|QWORD[.] - - r8|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:85, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1562  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction r10|DWORD = MOVE input: int[-192283|0xfffffffffffd10e5] <|@ <|@
      nr 1572  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1606  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1608  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: rcx|DWORD - r13|QWORD[.] - - rbx|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1938  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction r10|DWORD = MOVE input: int[-201499|0xfffffffffffcece5] <|@ <|@
      nr 1948  <|@ instruction JUMP ~outgoingValues: [] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr 1968  <|@ instruction NOP <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1982  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1984  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:522) [bci: 72]
locals: r11|DWORD - r13|QWORD[.] - - rbx|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:72, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  994  <|@ instruction r10|DWORD = MOVE input: int[-239129|0xfffffffffffc59e7] <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B41" "B43" "B45" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 2036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2030  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 2032  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction NOP <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction NOP <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2054  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2056  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: r9|DWORD r8|DWORD 
locals: stack:56|QWORD[.] rdx|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction r10|DWORD = MOVE input: int[-184091|0xfffffffffffd30e5] <|@ <|@
      nr 1648  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1662  <|@ instruction r8|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1664  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1666  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1688  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1690  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: r11|DWORD - r13|QWORD[.] - - rbp|DWORD r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: rsi|QWORD[.] - - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #18         // count:int
     4: istore_2      
     5: iload_2       
     6: iload_1       
     7: invokestatic  #61         // java.lang.Integer.stringSize:(int)int
    10: iadd          
    11: istore_3      
    12: aload_0       
    13: iload_3       
    14: invokevirtual #24         // ensureCapacityInternal:(int)void
    17: aload_0       
    18: invokevirtual #19         // isLatin1:()boolean
    21: ifeq          37
    24: iload_1       
    25: iload_3       
    26: aload_0       
    27: getfield      #2          // value:byte[]
    30: invokestatic  #62         // java.lang.Integer.getChars:(int, int, byte[])int
    33: pop           
    34: goto          48
    37: iload_1       
    38: iload_2       
    39: iload_3       
    40: aload_0       
    41: getfield      #2          // value:byte[]
    44: invokestatic  #63         // java.lang.StringUTF16.getChars:(int, int, int, byte[])int
    47: pop           
    48: aload_0       
    49: iload_3       
    50: putfield      #18         // count:int
    53: aload_0       
    54: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@11fbf5cf slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction r11|DWORD = NEG value: rdx|DWORD size: DWORD <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0248451913249636 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606958633211231298
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B21 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B20" 
    xhandlers
    flags 
    probability 4602752168055621283
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B20 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B19" 
    xhandlers
    flags 
    probability 4598323111924218927
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B19 y: -999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B18" 
    xhandlers
    flags 
    probability 4593895269862142147
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B18 y: -9999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" 
    xhandlers
    flags 
    probability 4589468661642602652
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B17 y: -99999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4585043307360852988
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B16 y: -999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4580619227439431527
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B15 y: -9999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4576196442633492882
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 y: -99999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4571774974036225136
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: -999999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4567354843084355297
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rcx|DWORD = LEA address: [rdi|DWORD + 10] size: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602532121406698170
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598172830319288879
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593743754731554715
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589314678826940650
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4584886816669611324
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rcx|DWORD = MOVE input: int[5|0x5] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4582818360249579440
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580460188027533457
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rcx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576034812990629180
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571610711976019636
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rcx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567187905733353983
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rcx|DWORD = MOVE input: int[9|0x9] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B13" "B21" "B20" "B19" "B18" "B17" "B16" "B15" "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607162073407212554
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B12" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  314  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  348  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  350  <|@ instruction rbp|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  352  <|@ instruction rdi|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  354  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction r13|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  358  <|@ instruction rcx|DWORD = SUB (x: rbp|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" "B47" 
    successors "B49" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction TESTBYTEBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714438988526654 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606968818122833350
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction r10|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1280  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1282  <|@ instruction r8|DWORD = SETCC condition: < <|@ <|@
      nr 1284  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1286  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 49, 50, 51, 52, ...}] <|@ <|@
      nr 1288  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.20456323728994374 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B71 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605339876961552022
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction rbx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1702  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B69" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction rcx|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr 1324  <|@ instruction rcx|QWORD = IMUL x: rcx|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr 1326  <|@ instruction rcx|QWORD = SAR x: rcx|QWORD y: 37 size: QWORD <|@ <|@
      nr 1328  <|@ instruction rcx|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr 1330  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1332  <|@ instruction rdi|DWORD = IMUL x: rcx|DWORD y: 100 size: DWORD <|@ <|@
      nr 1334  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1336  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B69 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B68" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction r9|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr 1352  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B67" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rbx|DWORD = LEA address: [rbp|DWORD - 2] size: DWORD <|@ <|@
      nr 1372  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction r14|DWORD = MOVSXB input: [rax|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1394  <|@ instruction MOVB (x: [r13|QWORD[.] + r9|DWORD * 1 + 16], y: r14|DWORD) size: BYTE <|@ <|@
      nr 1396  <|@ instruction rdi|DWORD = MOVSXB input: [r11|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1398  <|@ instruction MOVB (x: [r13|QWORD[.] + rbx|DWORD * 1 + 16], y: rdi|DWORD) size: BYTE <|@ <|@
      nr 1400  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" 
    successors "B58" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596612633779284459
    begin_IR
      LIR
      nr 1402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B62 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1448  <|@ instruction rdi|QWORD = IMUL x: rdi|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr 1450  <|@ instruction rdi|QWORD = SAR x: rdi|QWORD y: 37 size: QWORD <|@ <|@
      nr 1452  <|@ instruction rdi|DWORD = MOV value: rdi|QWORD size: DWORD <|@ <|@
      nr 1454  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1456  <|@ instruction r9|DWORD = IMUL x: rdi|DWORD y: 100 size: DWORD <|@ <|@
      nr 1458  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1460  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B65 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction r14|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1476  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction r8|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr 1496  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction rcx|DWORD = MOVSXB input: [rax|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1520  <|@ instruction MOVB (x: [r13|QWORD[.] + r14|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1522  <|@ instruction rcx|DWORD = MOVSXB input: [r11|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1524  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1526  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:518) [bci: 69]
locals: rdi|DWORD - r13|QWORD[.] rdi|DWORD r9|DWORD r8|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: rsi|QWORD[.] - - rbp|DWORD 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:69, 30] <|@ <|@
      nr 1528  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1530  <|@ instruction rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1532  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 4596538187644396969
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1544  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B62" "B71" 
    successors "B73" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction rcx|DWORD = NEG value: r11|DWORD size: DWORD <|@ <|@
      nr 1718  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B86 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction r8|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1734  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B85 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction rax|DWORD = MOVSXB input: [rax|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1752  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1754  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6223590908157148 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B78 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr 1756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction rcx|DWORD = MOVSXB input: [rdi|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1792  <|@ instruction MOVB (x: [r13|QWORD[.] + rax|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1794  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600474593749434728
    begin_IR
      LIR
      nr 1820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1830  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714554158984935 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606968817085470084
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1932  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1934  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B89" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  412  <|@ instruction r14|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  416  <|@ instruction r14|DWORD = SHL (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction r14|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  424  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B89 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B31" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  456  <|@ instruction r14|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  656  <|@ instruction rcx|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  660  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  662  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B38" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  754  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  756  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  758  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  760  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  764  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  768  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  780  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction MOV x: [rdi|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  812  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B32" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  908  <|@ instruction rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  910  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1050  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1056  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B30" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1182  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1184  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1186  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1188  <|@ instruction r13|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1200  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1846  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction rdx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr 1860  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction MOVB x: [r13|QWORD[.] + rdx|DWORD * 1 + 16] y: 45 size: BYTE <|@ <|@
      nr 1876  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582492443078313792
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1230  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  702  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10] <|@ <|@
      nr  706  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  832  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  862  <|@ instruction rdi|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  496  <|@ instruction r9|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  504  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  566  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  568  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  570  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  574  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  576  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10] <|@ <|@
      nr  534  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -204315 size: DWORD <|@ <|@
      nr 1896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1898  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:527) [bci: 104]
locals: - - r13|QWORD[.] - - rax|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:104, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  916  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  926  <|@ instruction r10|DWORD = MOVE input: int[-237081|0xfffffffffffc61e7] <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1576  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction r10|DWORD = MOVE input: int[-189723|0xfffffffffffd1ae5] <|@ <|@
      nr 1586  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1548  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction r10|DWORD = MOVE input: int[-195611|0xfffffffffffd03e5] <|@ <|@
      nr 1558  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1988  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1990  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1992  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1994  <|@ instruction NOP <|@ <|@
      nr 1996  <|@ instruction NOP <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction MOV x: [r15|QWORD + 1156] y: -233747 size: DWORD <|@ <|@
      nr 2010  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 2012  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2016  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 2018  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 2020  <|@ instruction NOP <|@ <|@
      nr 2022  <|@ instruction NOP <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 2028  <|@ instruction r10|DWORD = MOVE input: int[-236051|0xfffffffffffc65ed] <|@ <|@
      nr 2034  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1612  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction r10|DWORD = MOVE input: int[-187419|0xfffffffffffd23e5] <|@ <|@
      nr 1628  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  960  <|@ instruction r10|DWORD = MOVE input: int[-238105|0xfffffffffffc5de7] <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1952  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction r10|DWORD = MOVE input: int[-198171|0xfffffffffffcf9e5] <|@ <|@
      nr 1962  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1652  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction r10|DWORD = MOVE input: int[-180507|0xfffffffffffd3ee5] <|@ <|@
      nr 1668  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1798  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction MOV x: [r15|QWORD + 1156] y: -207643 size: DWORD <|@ <|@
      nr 1816  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1818  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:523) [bci: 85]
locals: r11|DWORD - r13|QWORD[.] - - r8|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:85, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1562  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction r10|DWORD = MOVE input: int[-192283|0xfffffffffffd10e5] <|@ <|@
      nr 1572  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1606  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1608  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: rcx|DWORD - r13|QWORD[.] - - rbx|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1938  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction r10|DWORD = MOVE input: int[-201499|0xfffffffffffcece5] <|@ <|@
      nr 1948  <|@ instruction JUMP ~outgoingValues: [] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr 1968  <|@ instruction NOP <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1982  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1984  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:522) [bci: 72]
locals: r11|DWORD - r13|QWORD[.] - - rbx|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:72, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  994  <|@ instruction r10|DWORD = MOVE input: int[-239129|0xfffffffffffc59e7] <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B41" "B43" "B45" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 2036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction NOP <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction NOP <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2054  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2056  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: r9|DWORD r8|DWORD 
locals: stack:56|QWORD[.] rdx|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction r10|DWORD = MOVE input: int[-184091|0xfffffffffffd30e5] <|@ <|@
      nr 1648  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1666  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1688  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1690  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: r11|DWORD - r13|QWORD[.] - - rbp|DWORD r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: rsi|QWORD[.] - - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #18         // count:int
     4: istore_2      
     5: iload_2       
     6: iload_1       
     7: invokestatic  #61         // java.lang.Integer.stringSize:(int)int
    10: iadd          
    11: istore_3      
    12: aload_0       
    13: iload_3       
    14: invokevirtual #24         // ensureCapacityInternal:(int)void
    17: aload_0       
    18: invokevirtual #19         // isLatin1:()boolean
    21: ifeq          37
    24: iload_1       
    25: iload_3       
    26: aload_0       
    27: getfield      #2          // value:byte[]
    30: invokestatic  #62         // java.lang.Integer.getChars:(int, int, byte[])int
    33: pop           
    34: goto          48
    37: iload_1       
    38: iload_2       
    39: iload_3       
    40: aload_0       
    41: getfield      #2          // value:byte[]
    44: invokestatic  #63         // java.lang.StringUTF16.getChars:(int, int, int, byte[])int
    47: pop           
    48: aload_0       
    49: iload_3       
    50: putfield      #18         // count:int
    53: aload_0       
    54: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@11fbf5cf slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction r11|DWORD = NEG value: rdx|DWORD size: DWORD <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0248451913249636 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606958633211231298
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B21 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B20" 
    xhandlers
    flags 
    probability 4602752168055621283
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B20 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B19" 
    xhandlers
    flags 
    probability 4598323111924218927
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B19 y: -999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B18" 
    xhandlers
    flags 
    probability 4593895269862142147
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B18 y: -9999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" 
    xhandlers
    flags 
    probability 4589468661642602652
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B17 y: -99999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4585043307360852988
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B16 y: -999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4580619227439431527
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B15 y: -9999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4576196442633492882
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 y: -99999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4571774974036225136
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: -999999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4567354843084355297
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rcx|DWORD = LEA address: [rdi|DWORD + 10] size: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602532121406698170
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598172830319288879
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593743754731554715
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589314678826940650
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4584886816669611324
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rcx|DWORD = MOVE input: int[5|0x5] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4582818360249579440
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580460188027533457
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rcx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576034812990629180
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571610711976019636
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rcx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567187905733353983
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rcx|DWORD = MOVE input: int[9|0x9] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B13" "B21" "B20" "B19" "B18" "B17" "B16" "B15" "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607162073407212554
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B12" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  314  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  348  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  350  <|@ instruction rbp|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  352  <|@ instruction rdi|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  354  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction r13|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  358  <|@ instruction rcx|DWORD = SUB (x: rbp|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" "B47" 
    successors "B49" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction TESTBYTEBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714438988526654 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606968818122833350
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction r10|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1280  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1282  <|@ instruction r8|DWORD = SETCC condition: < <|@ <|@
      nr 1284  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1286  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 49, 50, 51, 52, ...}] <|@ <|@
      nr 1288  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.20456323728994374 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B71 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605339876961552022
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction rbx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1702  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B69" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction rcx|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr 1324  <|@ instruction rcx|QWORD = IMUL x: rcx|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr 1326  <|@ instruction rcx|QWORD = SAR x: rcx|QWORD y: 37 size: QWORD <|@ <|@
      nr 1328  <|@ instruction rcx|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr 1330  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1332  <|@ instruction rdi|DWORD = IMUL x: rcx|DWORD y: 100 size: DWORD <|@ <|@
      nr 1334  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1336  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B69 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B68" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction r9|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr 1352  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B67" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rbx|DWORD = LEA address: [rbp|DWORD - 2] size: DWORD <|@ <|@
      nr 1372  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction r14|DWORD = MOVSXB input: [rax|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1394  <|@ instruction MOVB (x: [r13|QWORD[.] + r9|DWORD * 1 + 16], y: r14|DWORD) size: BYTE <|@ <|@
      nr 1396  <|@ instruction rdi|DWORD = MOVSXB input: [r11|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1398  <|@ instruction MOVB (x: [r13|QWORD[.] + rbx|DWORD * 1 + 16], y: rdi|DWORD) size: BYTE <|@ <|@
      nr 1400  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" 
    successors "B58" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596612633779284459
    begin_IR
      LIR
      nr 1402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B62 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1448  <|@ instruction rdi|QWORD = IMUL x: rdi|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr 1450  <|@ instruction rdi|QWORD = SAR x: rdi|QWORD y: 37 size: QWORD <|@ <|@
      nr 1452  <|@ instruction rdi|DWORD = MOV value: rdi|QWORD size: DWORD <|@ <|@
      nr 1454  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1456  <|@ instruction r9|DWORD = IMUL x: rdi|DWORD y: 100 size: DWORD <|@ <|@
      nr 1458  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1460  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B65 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction r14|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1476  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction r8|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr 1496  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction rcx|DWORD = MOVSXB input: [rax|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1520  <|@ instruction MOVB (x: [r13|QWORD[.] + r14|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1522  <|@ instruction rcx|DWORD = MOVSXB input: [r11|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1524  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1526  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:518) [bci: 69]
locals: rdi|DWORD - r13|QWORD[.] rdi|DWORD r9|DWORD r8|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: rsi|QWORD[.] - - rbp|DWORD 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:69, 30] <|@ <|@
      nr 1528  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1530  <|@ instruction rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1532  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 4596538187644396969
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1544  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B62" "B71" 
    successors "B73" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction rcx|DWORD = NEG value: r11|DWORD size: DWORD <|@ <|@
      nr 1718  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B86 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction r8|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1734  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B85 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction rax|DWORD = MOVSXB input: [rax|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1752  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1754  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6223590908157148 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B78 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr 1756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction rcx|DWORD = MOVSXB input: [rdi|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1792  <|@ instruction MOVB (x: [r13|QWORD[.] + rax|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1794  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600474593749434728
    begin_IR
      LIR
      nr 1820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1830  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714554158984935 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606968817085470084
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1932  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1934  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B89" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  412  <|@ instruction r14|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  416  <|@ instruction r14|DWORD = SHL (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction r14|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  424  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B89 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B31" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  456  <|@ instruction r14|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  656  <|@ instruction rcx|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  660  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  662  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B38" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  754  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  756  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  758  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  760  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  764  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  768  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  780  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction MOV x: [rdi|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  812  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B32" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  908  <|@ instruction rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  910  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1050  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1056  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B30" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1182  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1184  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1186  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1188  <|@ instruction r13|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1200  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1846  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction rdx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr 1860  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction MOVB x: [r13|QWORD[.] + rdx|DWORD * 1 + 16] y: 45 size: BYTE <|@ <|@
      nr 1876  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582492443078313792
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1230  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  702  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10] <|@ <|@
      nr  706  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  832  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  862  <|@ instruction rdi|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  496  <|@ instruction r9|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  504  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  566  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  568  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  570  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  574  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  576  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10] <|@ <|@
      nr  534  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -204315 size: DWORD <|@ <|@
      nr 1896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1898  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:527) [bci: 104]
locals: - - r13|QWORD[.] - - rax|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:104, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  916  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  926  <|@ instruction r10|DWORD = MOVE input: int[-237081|0xfffffffffffc61e7] <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1576  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction r10|DWORD = MOVE input: int[-189723|0xfffffffffffd1ae5] <|@ <|@
      nr 1586  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1548  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction r10|DWORD = MOVE input: int[-195611|0xfffffffffffd03e5] <|@ <|@
      nr 1558  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1988  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1990  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1992  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1994  <|@ instruction NOP <|@ <|@
      nr 1996  <|@ instruction NOP <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction MOV x: [r15|QWORD + 1156] y: -233747 size: DWORD <|@ <|@
      nr 2010  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 2012  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2016  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 2018  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 2020  <|@ instruction NOP <|@ <|@
      nr 2022  <|@ instruction NOP <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 2028  <|@ instruction r10|DWORD = MOVE input: int[-236051|0xfffffffffffc65ed] <|@ <|@
      nr 2034  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1612  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction r10|DWORD = MOVE input: int[-187419|0xfffffffffffd23e5] <|@ <|@
      nr 1628  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  960  <|@ instruction r10|DWORD = MOVE input: int[-238105|0xfffffffffffc5de7] <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1952  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction r10|DWORD = MOVE input: int[-198171|0xfffffffffffcf9e5] <|@ <|@
      nr 1962  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1652  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction r10|DWORD = MOVE input: int[-180507|0xfffffffffffd3ee5] <|@ <|@
      nr 1668  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1798  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction MOV x: [r15|QWORD + 1156] y: -207643 size: DWORD <|@ <|@
      nr 1816  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1818  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:523) [bci: 85]
locals: r11|DWORD - r13|QWORD[.] - - r8|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:85, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1562  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction r10|DWORD = MOVE input: int[-192283|0xfffffffffffd10e5] <|@ <|@
      nr 1572  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1606  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1608  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: rcx|DWORD - r13|QWORD[.] - - rbx|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1938  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction r10|DWORD = MOVE input: int[-201499|0xfffffffffffcece5] <|@ <|@
      nr 1948  <|@ instruction JUMP ~outgoingValues: [] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr 1968  <|@ instruction NOP <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1982  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1984  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:522) [bci: 72]
locals: r11|DWORD - r13|QWORD[.] - - rbx|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:72, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  994  <|@ instruction r10|DWORD = MOVE input: int[-239129|0xfffffffffffc59e7] <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B41" "B43" "B45" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 2036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction NOP <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction NOP <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2054  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2056  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: r9|DWORD r8|DWORD 
locals: stack:56|QWORD[.] rdx|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction r10|DWORD = MOVE input: int[-184091|0xfffffffffffd30e5] <|@ <|@
      nr 1648  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1666  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1688  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1690  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: r11|DWORD - r13|QWORD[.] - - rbp|DWORD r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: rsi|QWORD[.] - - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #18         // count:int
     4: istore_2      
     5: iload_2       
     6: iload_1       
     7: invokestatic  #61         // java.lang.Integer.stringSize:(int)int
    10: iadd          
    11: istore_3      
    12: aload_0       
    13: iload_3       
    14: invokevirtual #24         // ensureCapacityInternal:(int)void
    17: aload_0       
    18: invokevirtual #19         // isLatin1:()boolean
    21: ifeq          37
    24: iload_1       
    25: iload_3       
    26: aload_0       
    27: getfield      #2          // value:byte[]
    30: invokestatic  #62         // java.lang.Integer.getChars:(int, int, byte[])int
    33: pop           
    34: goto          48
    37: iload_1       
    38: iload_2       
    39: iload_3       
    40: aload_0       
    41: getfield      #2          // value:byte[]
    44: invokestatic  #63         // java.lang.StringUTF16.getChars:(int, int, int, byte[])int
    47: pop           
    48: aload_0       
    49: iload_3       
    50: putfield      #18         // count:int
    53: aload_0       
    54: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@11fbf5cf slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction r11|DWORD = NEG value: rdx|DWORD size: DWORD <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0248451913249636 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606958633211231298
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B21 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B20" 
    xhandlers
    flags 
    probability 4602752168055621283
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B20 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B19" 
    xhandlers
    flags 
    probability 4598323111924218927
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B19 y: -999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B18" 
    xhandlers
    flags 
    probability 4593895269862142147
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B18 y: -9999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" 
    xhandlers
    flags 
    probability 4589468661642602652
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B17 y: -99999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4585043307360852988
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B16 y: -999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4580619227439431527
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B15 y: -9999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4576196442633492882
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 y: -99999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4571774974036225136
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: -999999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4567354843084355297
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rcx|DWORD = LEA address: [rdi|DWORD + 10] size: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602532121406698170
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598172830319288879
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593743754731554715
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589314678826940650
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4584886816669611324
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rcx|DWORD = MOVE input: int[5|0x5] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4582818360249579440
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580460188027533457
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rcx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576034812990629180
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571610711976019636
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rcx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567187905733353983
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rcx|DWORD = MOVE input: int[9|0x9] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B13" "B21" "B20" "B19" "B18" "B17" "B16" "B15" "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607162073407212554
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B12" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  314  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  348  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  350  <|@ instruction rbp|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  352  <|@ instruction rdi|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  354  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction r13|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  358  <|@ instruction rcx|DWORD = SUB (x: rbp|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" "B47" 
    successors "B49" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction TESTBYTEBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714438988526654 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606968818122833350
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction r10|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1280  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1282  <|@ instruction r8|DWORD = SETCC condition: < <|@ <|@
      nr 1284  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1286  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 49, 50, 51, 52, ...}] <|@ <|@
      nr 1288  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.20456323728994374 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B71 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605339876961552022
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction rbx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1702  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B69" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction rcx|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr 1324  <|@ instruction rcx|QWORD = IMUL x: rcx|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr 1326  <|@ instruction rcx|QWORD = SAR x: rcx|QWORD y: 37 size: QWORD <|@ <|@
      nr 1328  <|@ instruction rcx|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr 1330  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1332  <|@ instruction rdi|DWORD = IMUL x: rcx|DWORD y: 100 size: DWORD <|@ <|@
      nr 1334  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1336  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B69 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B68" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction r9|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr 1352  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B67" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rbx|DWORD = LEA address: [rbp|DWORD - 2] size: DWORD <|@ <|@
      nr 1372  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction r14|DWORD = MOVSXB input: [rax|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1394  <|@ instruction MOVB (x: [r13|QWORD[.] + r9|DWORD * 1 + 16], y: r14|DWORD) size: BYTE <|@ <|@
      nr 1396  <|@ instruction rdi|DWORD = MOVSXB input: [r11|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1398  <|@ instruction MOVB (x: [r13|QWORD[.] + rbx|DWORD * 1 + 16], y: rdi|DWORD) size: BYTE <|@ <|@
      nr 1400  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" 
    successors "B58" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596612633779284459
    begin_IR
      LIR
      nr 1402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B62 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1448  <|@ instruction rdi|QWORD = IMUL x: rdi|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr 1450  <|@ instruction rdi|QWORD = SAR x: rdi|QWORD y: 37 size: QWORD <|@ <|@
      nr 1452  <|@ instruction rdi|DWORD = MOV value: rdi|QWORD size: DWORD <|@ <|@
      nr 1454  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1456  <|@ instruction r9|DWORD = IMUL x: rdi|DWORD y: 100 size: DWORD <|@ <|@
      nr 1458  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1460  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B65 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction r14|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1476  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction r8|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr 1496  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction rcx|DWORD = MOVSXB input: [rax|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1520  <|@ instruction MOVB (x: [r13|QWORD[.] + r14|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1522  <|@ instruction rcx|DWORD = MOVSXB input: [r11|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1524  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1526  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:518) [bci: 69]
locals: rdi|DWORD - r13|QWORD[.] rdi|DWORD r9|DWORD r8|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: rsi|QWORD[.] - - rbp|DWORD 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:69, 30] <|@ <|@
      nr 1528  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1530  <|@ instruction rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1532  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 4596538187644396969
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1544  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B62" "B71" 
    successors "B73" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction rcx|DWORD = NEG value: r11|DWORD size: DWORD <|@ <|@
      nr 1718  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B86 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction r8|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1734  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B85 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction rax|DWORD = MOVSXB input: [rax|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1752  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1754  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6223590908157148 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B78 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr 1756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction rcx|DWORD = MOVSXB input: [rdi|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1792  <|@ instruction MOVB (x: [r13|QWORD[.] + rax|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1794  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600474593749434728
    begin_IR
      LIR
      nr 1820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1830  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714554158984935 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606968817085470084
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1932  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1934  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B89" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  412  <|@ instruction r14|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  416  <|@ instruction r14|DWORD = SHL (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction r14|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  424  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B89 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B31" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  456  <|@ instruction r14|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  656  <|@ instruction rcx|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  660  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  662  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B38" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  754  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  756  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  758  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  760  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  764  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  768  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  780  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction MOV x: [rdi|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  812  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B32" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  908  <|@ instruction rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  910  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1050  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1056  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B30" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1182  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1184  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1186  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1188  <|@ instruction r13|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1200  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1846  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction rdx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr 1860  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction MOVB x: [r13|QWORD[.] + rdx|DWORD * 1 + 16] y: 45 size: BYTE <|@ <|@
      nr 1876  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582492443078313792
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1230  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  702  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10] <|@ <|@
      nr  706  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  832  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  862  <|@ instruction rdi|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  496  <|@ instruction r9|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  504  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  566  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  568  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  570  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  574  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  576  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10] <|@ <|@
      nr  534  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -204315 size: DWORD <|@ <|@
      nr 1896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1898  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:527) [bci: 104]
locals: - - r13|QWORD[.] - - rax|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:104, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  916  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  926  <|@ instruction r10|DWORD = MOVE input: int[-237081|0xfffffffffffc61e7] <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1576  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction r10|DWORD = MOVE input: int[-189723|0xfffffffffffd1ae5] <|@ <|@
      nr 1586  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1548  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction r10|DWORD = MOVE input: int[-195611|0xfffffffffffd03e5] <|@ <|@
      nr 1558  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1988  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1990  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1992  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1994  <|@ instruction NOP <|@ <|@
      nr 1996  <|@ instruction NOP <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction MOV x: [r15|QWORD + 1156] y: -233747 size: DWORD <|@ <|@
      nr 2010  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 2012  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2016  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 2018  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 2020  <|@ instruction NOP <|@ <|@
      nr 2022  <|@ instruction NOP <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 2028  <|@ instruction r10|DWORD = MOVE input: int[-236051|0xfffffffffffc65ed] <|@ <|@
      nr 2034  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1612  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction r10|DWORD = MOVE input: int[-187419|0xfffffffffffd23e5] <|@ <|@
      nr 1628  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  960  <|@ instruction r10|DWORD = MOVE input: int[-238105|0xfffffffffffc5de7] <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1952  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction r10|DWORD = MOVE input: int[-198171|0xfffffffffffcf9e5] <|@ <|@
      nr 1962  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1652  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction r10|DWORD = MOVE input: int[-180507|0xfffffffffffd3ee5] <|@ <|@
      nr 1668  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1798  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction MOV x: [r15|QWORD + 1156] y: -207643 size: DWORD <|@ <|@
      nr 1816  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1818  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:523) [bci: 85]
locals: r11|DWORD - r13|QWORD[.] - - r8|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:85, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1562  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction r10|DWORD = MOVE input: int[-192283|0xfffffffffffd10e5] <|@ <|@
      nr 1572  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1606  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1608  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: rcx|DWORD - r13|QWORD[.] - - rbx|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1938  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction r10|DWORD = MOVE input: int[-201499|0xfffffffffffcece5] <|@ <|@
      nr 1948  <|@ instruction JUMP ~outgoingValues: [] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr 1968  <|@ instruction NOP <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1982  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1984  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:522) [bci: 72]
locals: r11|DWORD - r13|QWORD[.] - - rbx|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:72, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  994  <|@ instruction r10|DWORD = MOVE input: int[-239129|0xfffffffffffc59e7] <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B41" "B43" "B45" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 2036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction NOP <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction NOP <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2054  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2056  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: r9|DWORD r8|DWORD 
locals: stack:56|QWORD[.] rdx|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction r10|DWORD = MOVE input: int[-184091|0xfffffffffffd30e5] <|@ <|@
      nr 1648  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1666  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1688  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1690  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: r11|DWORD - r13|QWORD[.] - - rbp|DWORD r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: rsi|QWORD[.] - - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #18         // count:int
     4: istore_2      
     5: iload_2       
     6: iload_1       
     7: invokestatic  #61         // java.lang.Integer.stringSize:(int)int
    10: iadd          
    11: istore_3      
    12: aload_0       
    13: iload_3       
    14: invokevirtual #24         // ensureCapacityInternal:(int)void
    17: aload_0       
    18: invokevirtual #19         // isLatin1:()boolean
    21: ifeq          37
    24: iload_1       
    25: iload_3       
    26: aload_0       
    27: getfield      #2          // value:byte[]
    30: invokestatic  #62         // java.lang.Integer.getChars:(int, int, byte[])int
    33: pop           
    34: goto          48
    37: iload_1       
    38: iload_2       
    39: iload_3       
    40: aload_0       
    41: getfield      #2          // value:byte[]
    44: invokestatic  #63         // java.lang.StringUTF16.getChars:(int, int, int, byte[])int
    47: pop           
    48: aload_0       
    49: iload_3       
    50: putfield      #18         // count:int
    53: aload_0       
    54: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@11fbf5cf slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction r11|DWORD = NEG value: rdx|DWORD size: DWORD <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0248451913249636 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606958633211231298
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B21 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B20" 
    xhandlers
    flags 
    probability 4602752168055621283
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B20 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B19" 
    xhandlers
    flags 
    probability 4598323111924218927
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B19 y: -999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B18" 
    xhandlers
    flags 
    probability 4593895269862142147
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B18 y: -9999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" 
    xhandlers
    flags 
    probability 4589468661642602652
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B17 y: -99999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4585043307360852988
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B16 y: -999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4580619227439431527
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B15 y: -9999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4576196442633492882
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 y: -99999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4571774974036225136
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: -999999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4567354843084355297
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rcx|DWORD = LEA address: [rdi|DWORD + 10] size: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B12" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  314  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  348  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  350  <|@ instruction rbp|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  352  <|@ instruction rdi|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  354  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction r13|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  358  <|@ instruction rcx|DWORD = SUB (x: rbp|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" "B47" 
    successors "B49" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction TESTBYTEBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714438988526654 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606968818122833350
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction r10|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1280  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1282  <|@ instruction r8|DWORD = SETCC condition: < <|@ <|@
      nr 1284  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1286  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 49, 50, 51, 52, ...}] <|@ <|@
      nr 1288  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.20456323728994374 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B71 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605339876961552022
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction rbx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1702  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B62" "B71" 
    successors "B73" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction rcx|DWORD = NEG value: r11|DWORD size: DWORD <|@ <|@
      nr 1718  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B86 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction r8|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1734  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B85 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction rax|DWORD = MOVSXB input: [rax|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1752  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1754  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6223590908157148 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B78 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr 1756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction rcx|DWORD = MOVSXB input: [rdi|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1792  <|@ instruction MOVB (x: [r13|QWORD[.] + rax|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1794  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714554158984935 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606968817085470084
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1932  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1934  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602532121406698170
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B13" "B21" "B20" "B19" "B18" "B17" "B16" "B15" "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607162073407212554
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600474593749434728
    begin_IR
      LIR
      nr 1820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1830  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598172830319288879
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B69" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction rcx|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr 1324  <|@ instruction rcx|QWORD = IMUL x: rcx|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr 1326  <|@ instruction rcx|QWORD = SAR x: rcx|QWORD y: 37 size: QWORD <|@ <|@
      nr 1328  <|@ instruction rcx|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr 1330  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1332  <|@ instruction rdi|DWORD = IMUL x: rcx|DWORD y: 100 size: DWORD <|@ <|@
      nr 1334  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1336  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B69 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B68" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction r9|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr 1352  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B67" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rbx|DWORD = LEA address: [rbp|DWORD - 2] size: DWORD <|@ <|@
      nr 1372  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction r14|DWORD = MOVSXB input: [rax|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1394  <|@ instruction MOVB (x: [r13|QWORD[.] + r9|DWORD * 1 + 16], y: r14|DWORD) size: BYTE <|@ <|@
      nr 1396  <|@ instruction rdi|DWORD = MOVSXB input: [r11|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1398  <|@ instruction MOVB (x: [r13|QWORD[.] + rbx|DWORD * 1 + 16], y: rdi|DWORD) size: BYTE <|@ <|@
      nr 1400  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1448  <|@ instruction rdi|QWORD = IMUL x: rdi|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr 1450  <|@ instruction rdi|QWORD = SAR x: rdi|QWORD y: 37 size: QWORD <|@ <|@
      nr 1452  <|@ instruction rdi|DWORD = MOV value: rdi|QWORD size: DWORD <|@ <|@
      nr 1454  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1456  <|@ instruction r9|DWORD = IMUL x: rdi|DWORD y: 100 size: DWORD <|@ <|@
      nr 1458  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1460  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B65 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction r14|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1476  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction r8|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr 1496  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction rcx|DWORD = MOVSXB input: [rax|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1520  <|@ instruction MOVB (x: [r13|QWORD[.] + r14|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1522  <|@ instruction rcx|DWORD = MOVSXB input: [r11|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1524  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1526  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:518) [bci: 69]
locals: rdi|DWORD - r13|QWORD[.] rdi|DWORD r9|DWORD r8|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: rsi|QWORD[.] - - rbp|DWORD 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:69, 30] <|@ <|@
      nr 1528  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1530  <|@ instruction rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1532  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" 
    successors "B58" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596612633779284459
    begin_IR
      LIR
      nr 1402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B62 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 4596538187644396969
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1544  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593743754731554715
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B89" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  412  <|@ instruction r14|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  416  <|@ instruction r14|DWORD = SHL (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction r14|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  424  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B89 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B31" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  456  <|@ instruction r14|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  656  <|@ instruction rcx|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  660  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  662  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B38" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  754  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  756  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  758  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  760  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  764  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  768  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  780  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction MOV x: [rdi|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  812  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B32" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  908  <|@ instruction rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  910  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1050  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1056  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B30" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1182  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1184  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1186  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1188  <|@ instruction r13|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1200  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589314678826940650
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4584886816669611324
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rcx|DWORD = MOVE input: int[5|0x5] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4582818360249579440
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1846  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction rdx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr 1860  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction MOVB x: [r13|QWORD[.] + rdx|DWORD * 1 + 16] y: 45 size: BYTE <|@ <|@
      nr 1876  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582492443078313792
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1230  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580460188027533457
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rcx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576034812990629180
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571610711976019636
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rcx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567187905733353983
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rcx|DWORD = MOVE input: int[9|0x9] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  702  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10] <|@ <|@
      nr  706  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  832  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  862  <|@ instruction rdi|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  496  <|@ instruction r9|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  504  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  566  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  568  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  570  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  574  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  576  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10] <|@ <|@
      nr  534  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1576  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction r10|DWORD = MOVE input: int[-189723|0xfffffffffffd1ae5] <|@ <|@
      nr 1586  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1606  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1608  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: rcx|DWORD - r13|QWORD[.] - - rbx|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1612  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction r10|DWORD = MOVE input: int[-187419|0xfffffffffffd23e5] <|@ <|@
      nr 1628  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1666  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1688  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1690  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: r11|DWORD - r13|QWORD[.] - - rbp|DWORD r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: rsi|QWORD[.] - - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1652  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction r10|DWORD = MOVE input: int[-180507|0xfffffffffffd3ee5] <|@ <|@
      nr 1668  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1798  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction MOV x: [r15|QWORD + 1156] y: -207643 size: DWORD <|@ <|@
      nr 1816  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1818  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:523) [bci: 85]
locals: r11|DWORD - r13|QWORD[.] - - r8|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:85, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction r10|DWORD = MOVE input: int[-184091|0xfffffffffffd30e5] <|@ <|@
      nr 1648  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -204315 size: DWORD <|@ <|@
      nr 1896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1898  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:527) [bci: 104]
locals: - - r13|QWORD[.] - - rax|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:104, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1988  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1990  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1992  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1994  <|@ instruction NOP <|@ <|@
      nr 1996  <|@ instruction NOP <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction MOV x: [r15|QWORD + 1156] y: -233747 size: DWORD <|@ <|@
      nr 2010  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 2012  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  960  <|@ instruction r10|DWORD = MOVE input: int[-238105|0xfffffffffffc5de7] <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B41" "B43" "B45" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 2036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction NOP <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction NOP <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2054  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2056  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: r9|DWORD r8|DWORD 
locals: stack:56|QWORD[.] rdx|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2016  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 2018  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 2020  <|@ instruction NOP <|@ <|@
      nr 2022  <|@ instruction NOP <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 2028  <|@ instruction r10|DWORD = MOVE input: int[-236051|0xfffffffffffc65ed] <|@ <|@
      nr 2034  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1562  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction r10|DWORD = MOVE input: int[-192283|0xfffffffffffd10e5] <|@ <|@
      nr 1572  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  994  <|@ instruction r10|DWORD = MOVE input: int[-239129|0xfffffffffffc59e7] <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1548  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction r10|DWORD = MOVE input: int[-195611|0xfffffffffffd03e5] <|@ <|@
      nr 1558  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  916  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  926  <|@ instruction r10|DWORD = MOVE input: int[-237081|0xfffffffffffc61e7] <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1952  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction r10|DWORD = MOVE input: int[-198171|0xfffffffffffcf9e5] <|@ <|@
      nr 1962  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr 1968  <|@ instruction NOP <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1982  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1984  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:522) [bci: 72]
locals: r11|DWORD - r13|QWORD[.] - - rbx|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:72, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1938  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction r10|DWORD = MOVE input: int[-201499|0xfffffffffffcece5] <|@ <|@
      nr 1948  <|@ instruction JUMP ~outgoingValues: [] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #18         // count:int
     4: istore_2      
     5: iload_2       
     6: iload_1       
     7: invokestatic  #61         // java.lang.Integer.stringSize:(int)int
    10: iadd          
    11: istore_3      
    12: aload_0       
    13: iload_3       
    14: invokevirtual #24         // ensureCapacityInternal:(int)void
    17: aload_0       
    18: invokevirtual #19         // isLatin1:()boolean
    21: ifeq          37
    24: iload_1       
    25: iload_3       
    26: aload_0       
    27: getfield      #2          // value:byte[]
    30: invokestatic  #62         // java.lang.Integer.getChars:(int, int, byte[])int
    33: pop           
    34: goto          48
    37: iload_1       
    38: iload_2       
    39: iload_3       
    40: aload_0       
    41: getfield      #2          // value:byte[]
    44: invokestatic  #63         // java.lang.StringUTF16.getChars:(int, int, int, byte[])int
    47: pop           
    48: aload_0       
    49: iload_3       
    50: putfield      #18         // count:int
    53: aload_0       
    54: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@11fbf5cf slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction r11|DWORD = NEG value: rdx|DWORD size: DWORD <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0248451913249636 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606958633211231298
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B21 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B20" 
    xhandlers
    flags 
    probability 4602752168055621283
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B20 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B19" 
    xhandlers
    flags 
    probability 4598323111924218927
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B19 y: -999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B18" 
    xhandlers
    flags 
    probability 4593895269862142147
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B18 y: -9999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" 
    xhandlers
    flags 
    probability 4589468661642602652
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B17 y: -99999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4585043307360852988
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B16 y: -999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4580619227439431527
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B15 y: -9999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4576196442633492882
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 y: -99999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4571774974036225136
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: -999999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4567354843084355297
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rcx|DWORD = LEA address: [rdi|DWORD + 10] size: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B12" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  314  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  348  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  350  <|@ instruction rbp|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  352  <|@ instruction rdi|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  354  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction r13|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  358  <|@ instruction rcx|DWORD = SUB (x: rbp|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" "B47" 
    successors "B49" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction TESTBYTEBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714438988526654 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606968818122833350
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction r10|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1280  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1282  <|@ instruction r8|DWORD = SETCC condition: < <|@ <|@
      nr 1284  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1286  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 49, 50, 51, 52, ...}] <|@ <|@
      nr 1288  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.20456323728994374 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B71 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605339876961552022
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction rbx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1702  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B62" "B71" 
    successors "B73" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction rcx|DWORD = NEG value: r11|DWORD size: DWORD <|@ <|@
      nr 1718  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B86 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction r8|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1734  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B85 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction rax|DWORD = MOVSXB input: [rax|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1752  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1754  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6223590908157148 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B78 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr 1756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction rcx|DWORD = MOVSXB input: [rdi|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1792  <|@ instruction MOVB (x: [r13|QWORD[.] + rax|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1794  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714554158984935 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606968817085470084
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1932  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1934  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602532121406698170
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B13" "B21" "B20" "B19" "B18" "B17" "B16" "B15" "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607162073407212554
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600474593749434728
    begin_IR
      LIR
      nr 1820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1830  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598172830319288879
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B69" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction rcx|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr 1324  <|@ instruction rcx|QWORD = IMUL x: rcx|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr 1326  <|@ instruction rcx|QWORD = SAR x: rcx|QWORD y: 37 size: QWORD <|@ <|@
      nr 1328  <|@ instruction rcx|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr 1330  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1332  <|@ instruction rdi|DWORD = IMUL x: rcx|DWORD y: 100 size: DWORD <|@ <|@
      nr 1334  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1336  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B69 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B68" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction r9|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr 1352  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B67" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rbx|DWORD = LEA address: [rbp|DWORD - 2] size: DWORD <|@ <|@
      nr 1372  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction r14|DWORD = MOVSXB input: [rax|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1394  <|@ instruction MOVB (x: [r13|QWORD[.] + r9|DWORD * 1 + 16], y: r14|DWORD) size: BYTE <|@ <|@
      nr 1396  <|@ instruction rdi|DWORD = MOVSXB input: [r11|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1398  <|@ instruction MOVB (x: [r13|QWORD[.] + rbx|DWORD * 1 + 16], y: rdi|DWORD) size: BYTE <|@ <|@
      nr 1400  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1448  <|@ instruction rdi|QWORD = IMUL x: rdi|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr 1450  <|@ instruction rdi|QWORD = SAR x: rdi|QWORD y: 37 size: QWORD <|@ <|@
      nr 1452  <|@ instruction rdi|DWORD = MOV value: rdi|QWORD size: DWORD <|@ <|@
      nr 1454  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1456  <|@ instruction r9|DWORD = IMUL x: rdi|DWORD y: 100 size: DWORD <|@ <|@
      nr 1458  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1460  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B65 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction r14|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1476  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction r8|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr 1496  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction rcx|DWORD = MOVSXB input: [rax|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1520  <|@ instruction MOVB (x: [r13|QWORD[.] + r14|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1522  <|@ instruction rcx|DWORD = MOVSXB input: [r11|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1524  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1526  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:518) [bci: 69]
locals: rdi|DWORD - r13|QWORD[.] rdi|DWORD r9|DWORD r8|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: rsi|QWORD[.] - - rbp|DWORD 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:69, 30] <|@ <|@
      nr 1528  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1530  <|@ instruction rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1532  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" 
    successors "B58" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596612633779284459
    begin_IR
      LIR
      nr 1402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B62 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 4596538187644396969
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1544  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593743754731554715
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B89" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  412  <|@ instruction r14|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  416  <|@ instruction r14|DWORD = SHL (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction r14|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  424  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B89 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B31" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  456  <|@ instruction r14|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  656  <|@ instruction rcx|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  660  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  662  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B38" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  754  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  756  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  758  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  760  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  764  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  768  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  780  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction MOV x: [rdi|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  812  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B32" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  908  <|@ instruction rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  910  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1050  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1056  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B30" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1182  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1184  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1186  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1188  <|@ instruction r13|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1200  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589314678826940650
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4584886816669611324
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rcx|DWORD = MOVE input: int[5|0x5] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4582818360249579440
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1846  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction rdx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr 1860  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction MOVB x: [r13|QWORD[.] + rdx|DWORD * 1 + 16] y: 45 size: BYTE <|@ <|@
      nr 1876  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582492443078313792
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1230  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580460188027533457
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rcx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576034812990629180
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571610711976019636
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rcx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567187905733353983
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rcx|DWORD = MOVE input: int[9|0x9] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  702  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10] <|@ <|@
      nr  706  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  832  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  862  <|@ instruction rdi|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  496  <|@ instruction r9|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  504  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  566  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  568  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  570  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  574  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  576  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10] <|@ <|@
      nr  534  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1576  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction r10|DWORD = MOVE input: int[-189723|0xfffffffffffd1ae5] <|@ <|@
      nr 1586  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1606  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1608  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: rcx|DWORD - r13|QWORD[.] - - rbx|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1612  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction r10|DWORD = MOVE input: int[-187419|0xfffffffffffd23e5] <|@ <|@
      nr 1628  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1666  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1688  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1690  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: r11|DWORD - r13|QWORD[.] - - rbp|DWORD r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: rsi|QWORD[.] - - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1652  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction r10|DWORD = MOVE input: int[-180507|0xfffffffffffd3ee5] <|@ <|@
      nr 1668  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1798  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction MOV x: [r15|QWORD + 1156] y: -207643 size: DWORD <|@ <|@
      nr 1816  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1818  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:523) [bci: 85]
locals: r11|DWORD - r13|QWORD[.] - - r8|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:85, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction r10|DWORD = MOVE input: int[-184091|0xfffffffffffd30e5] <|@ <|@
      nr 1648  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -204315 size: DWORD <|@ <|@
      nr 1896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1898  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:527) [bci: 104]
locals: - - r13|QWORD[.] - - rax|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:104, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1988  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1990  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1992  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1994  <|@ instruction NOP <|@ <|@
      nr 1996  <|@ instruction NOP <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction MOV x: [r15|QWORD + 1156] y: -233747 size: DWORD <|@ <|@
      nr 2010  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 2012  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  960  <|@ instruction r10|DWORD = MOVE input: int[-238105|0xfffffffffffc5de7] <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B41" "B43" "B45" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 2036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction NOP <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction NOP <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2054  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2056  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: r9|DWORD r8|DWORD 
locals: stack:56|QWORD[.] rdx|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2016  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 2018  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 2020  <|@ instruction NOP <|@ <|@
      nr 2022  <|@ instruction NOP <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 2028  <|@ instruction r10|DWORD = MOVE input: int[-236051|0xfffffffffffc65ed] <|@ <|@
      nr 2034  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1562  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction r10|DWORD = MOVE input: int[-192283|0xfffffffffffd10e5] <|@ <|@
      nr 1572  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  994  <|@ instruction r10|DWORD = MOVE input: int[-239129|0xfffffffffffc59e7] <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1548  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction r10|DWORD = MOVE input: int[-195611|0xfffffffffffd03e5] <|@ <|@
      nr 1558  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  916  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  926  <|@ instruction r10|DWORD = MOVE input: int[-237081|0xfffffffffffc61e7] <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1952  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction r10|DWORD = MOVE input: int[-198171|0xfffffffffffcf9e5] <|@ <|@
      nr 1962  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr 1968  <|@ instruction NOP <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1982  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1984  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:522) [bci: 72]
locals: r11|DWORD - r13|QWORD[.] - - rbx|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:72, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1938  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction r10|DWORD = MOVE input: int[-201499|0xfffffffffffcece5] <|@ <|@
      nr 1948  <|@ instruction JUMP ~outgoingValues: [] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #18         // count:int
     4: istore_2      
     5: iload_2       
     6: iload_1       
     7: invokestatic  #61         // java.lang.Integer.stringSize:(int)int
    10: iadd          
    11: istore_3      
    12: aload_0       
    13: iload_3       
    14: invokevirtual #24         // ensureCapacityInternal:(int)void
    17: aload_0       
    18: invokevirtual #19         // isLatin1:()boolean
    21: ifeq          37
    24: iload_1       
    25: iload_3       
    26: aload_0       
    27: getfield      #2          // value:byte[]
    30: invokestatic  #62         // java.lang.Integer.getChars:(int, int, byte[])int
    33: pop           
    34: goto          48
    37: iload_1       
    38: iload_2       
    39: iload_3       
    40: aload_0       
    41: getfield      #2          // value:byte[]
    44: invokestatic  #63         // java.lang.StringUTF16.getChars:(int, int, int, byte[])int
    47: pop           
    48: aload_0       
    49: iload_3       
    50: putfield      #18         // count:int
    53: aload_0       
    54: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@11fbf5cf slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction r11|DWORD = NEG value: rdx|DWORD size: DWORD <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0248451913249636 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606958633211231298
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B21 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B20" 
    xhandlers
    flags 
    probability 4602752168055621283
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B20 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B19" 
    xhandlers
    flags 
    probability 4598323111924218927
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B19 y: -999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B18" 
    xhandlers
    flags 
    probability 4593895269862142147
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B18 y: -9999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" 
    xhandlers
    flags 
    probability 4589468661642602652
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B17 y: -99999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4585043307360852988
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B16 y: -999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4580619227439431527
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B15 y: -9999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4576196442633492882
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 y: -99999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4571774974036225136
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: -999999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4567354843084355297
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rcx|DWORD = LEA address: [rdi|DWORD + 10] size: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B12" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  314  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  348  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  350  <|@ instruction rbp|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  352  <|@ instruction rdi|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  354  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction r13|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  358  <|@ instruction rcx|DWORD = SUB (x: rbp|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" "B47" 
    successors "B49" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction TESTBYTEBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714438988526654 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606968818122833350
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction r10|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1280  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1282  <|@ instruction r8|DWORD = SETCC condition: < <|@ <|@
      nr 1284  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1286  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 49, 50, 51, 52, ...}] <|@ <|@
      nr 1288  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.20456323728994374 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B71 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605339876961552022
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction rbx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1702  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B62" "B71" 
    successors "B73" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction rcx|DWORD = NEG value: r11|DWORD size: DWORD <|@ <|@
      nr 1718  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B86 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction r8|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1734  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B85 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction rax|DWORD = MOVSXB input: [rax|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1752  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1754  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6223590908157148 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B78 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr 1756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction rcx|DWORD = MOVSXB input: [rdi|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1792  <|@ instruction MOVB (x: [r13|QWORD[.] + rax|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1794  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714554158984935 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606968817085470084
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1932  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1934  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602532121406698170
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B13" "B21" "B20" "B19" "B18" "B17" "B16" "B15" "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607162073407212554
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600474593749434728
    begin_IR
      LIR
      nr 1820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1830  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598172830319288879
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B69" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction rcx|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr 1324  <|@ instruction rcx|QWORD = IMUL x: rcx|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr 1326  <|@ instruction rcx|QWORD = SAR x: rcx|QWORD y: 37 size: QWORD <|@ <|@
      nr 1328  <|@ instruction rcx|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr 1330  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1332  <|@ instruction rdi|DWORD = IMUL x: rcx|DWORD y: 100 size: DWORD <|@ <|@
      nr 1334  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1336  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B69 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B68" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction r9|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr 1352  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B67" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rbx|DWORD = LEA address: [rbp|DWORD - 2] size: DWORD <|@ <|@
      nr 1372  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction r14|DWORD = MOVSXB input: [rax|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1394  <|@ instruction MOVB (x: [r13|QWORD[.] + r9|DWORD * 1 + 16], y: r14|DWORD) size: BYTE <|@ <|@
      nr 1396  <|@ instruction rdi|DWORD = MOVSXB input: [r11|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1398  <|@ instruction MOVB (x: [r13|QWORD[.] + rbx|DWORD * 1 + 16], y: rdi|DWORD) size: BYTE <|@ <|@
      nr 1400  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1448  <|@ instruction rdi|QWORD = IMUL x: rdi|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr 1450  <|@ instruction rdi|QWORD = SAR x: rdi|QWORD y: 37 size: QWORD <|@ <|@
      nr 1452  <|@ instruction rdi|DWORD = MOV value: rdi|QWORD size: DWORD <|@ <|@
      nr 1454  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1456  <|@ instruction r9|DWORD = IMUL x: rdi|DWORD y: 100 size: DWORD <|@ <|@
      nr 1458  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1460  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B65 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction r14|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1476  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction r8|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr 1496  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction rcx|DWORD = MOVSXB input: [rax|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1520  <|@ instruction MOVB (x: [r13|QWORD[.] + r14|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1522  <|@ instruction rcx|DWORD = MOVSXB input: [r11|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1524  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1526  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:518) [bci: 69]
locals: rdi|DWORD - r13|QWORD[.] rdi|DWORD r9|DWORD r8|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: rsi|QWORD[.] - - rbp|DWORD 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:69, 30] <|@ <|@
      nr 1528  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1530  <|@ instruction rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1532  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" 
    successors "B58" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596612633779284459
    begin_IR
      LIR
      nr 1402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B62 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 4596538187644396969
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1544  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593743754731554715
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B89" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  412  <|@ instruction r14|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  416  <|@ instruction r14|DWORD = SHL (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction r14|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  424  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B89 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B31" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  456  <|@ instruction r14|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  656  <|@ instruction rcx|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  660  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  662  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B38" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  754  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  756  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  758  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  760  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  764  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  768  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  780  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction MOV x: [rdi|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  812  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B32" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  908  <|@ instruction rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  910  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1050  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1056  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B30" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1182  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1184  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1186  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1188  <|@ instruction r13|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1200  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589314678826940650
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4584886816669611324
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rcx|DWORD = MOVE input: int[5|0x5] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4582818360249579440
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1846  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction rdx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr 1860  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction MOVB x: [r13|QWORD[.] + rdx|DWORD * 1 + 16] y: 45 size: BYTE <|@ <|@
      nr 1876  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582492443078313792
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1230  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580460188027533457
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rcx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576034812990629180
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571610711976019636
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rcx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567187905733353983
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rcx|DWORD = MOVE input: int[9|0x9] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  702  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10] <|@ <|@
      nr  706  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  832  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  862  <|@ instruction rdi|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  496  <|@ instruction r9|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  504  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  566  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  568  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  570  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  574  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  576  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10] <|@ <|@
      nr  534  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1576  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction r10|DWORD = MOVE input: int[-189723|0xfffffffffffd1ae5] <|@ <|@
      nr 1586  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1606  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1608  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: rcx|DWORD - r13|QWORD[.] - - rbx|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1612  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction r10|DWORD = MOVE input: int[-187419|0xfffffffffffd23e5] <|@ <|@
      nr 1628  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1666  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1688  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1690  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: r11|DWORD - r13|QWORD[.] - - rbp|DWORD r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: rsi|QWORD[.] - - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1652  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction r10|DWORD = MOVE input: int[-180507|0xfffffffffffd3ee5] <|@ <|@
      nr 1668  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1798  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction MOV x: [r15|QWORD + 1156] y: -207643 size: DWORD <|@ <|@
      nr 1816  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1818  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:523) [bci: 85]
locals: r11|DWORD - r13|QWORD[.] - - r8|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:85, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction r10|DWORD = MOVE input: int[-184091|0xfffffffffffd30e5] <|@ <|@
      nr 1648  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -204315 size: DWORD <|@ <|@
      nr 1896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1898  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:527) [bci: 104]
locals: - - r13|QWORD[.] - - rax|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:104, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1988  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1990  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1992  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1994  <|@ instruction NOP <|@ <|@
      nr 1996  <|@ instruction NOP <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction MOV x: [r15|QWORD + 1156] y: -233747 size: DWORD <|@ <|@
      nr 2010  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 2012  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  960  <|@ instruction r10|DWORD = MOVE input: int[-238105|0xfffffffffffc5de7] <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B41" "B43" "B45" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 2036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction NOP <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction NOP <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2054  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2056  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: r9|DWORD r8|DWORD 
locals: stack:56|QWORD[.] rdx|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2016  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 2018  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 2020  <|@ instruction NOP <|@ <|@
      nr 2022  <|@ instruction NOP <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 2028  <|@ instruction r10|DWORD = MOVE input: int[-236051|0xfffffffffffc65ed] <|@ <|@
      nr 2034  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1562  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction r10|DWORD = MOVE input: int[-192283|0xfffffffffffd10e5] <|@ <|@
      nr 1572  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  994  <|@ instruction r10|DWORD = MOVE input: int[-239129|0xfffffffffffc59e7] <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1548  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction r10|DWORD = MOVE input: int[-195611|0xfffffffffffd03e5] <|@ <|@
      nr 1558  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  916  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  926  <|@ instruction r10|DWORD = MOVE input: int[-237081|0xfffffffffffc61e7] <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1952  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction r10|DWORD = MOVE input: int[-198171|0xfffffffffffcf9e5] <|@ <|@
      nr 1962  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr 1968  <|@ instruction NOP <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1982  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1984  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.getChars(Integer.java:522) [bci: 72]
locals: r11|DWORD - r13|QWORD[.] - - rbx|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:72, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1938  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction r10|DWORD = MOVE input: int[-201499|0xfffffffffffcece5] <|@ <|@
      nr 1948  <|@ instruction JUMP ~outgoingValues: [] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #18         // count:int
     4: istore_2      
     5: iload_2       
     6: iload_1       
     7: invokestatic  #61         // java.lang.Integer.stringSize:(int)int
    10: iadd          
    11: istore_3      
    12: aload_0       
    13: iload_3       
    14: invokevirtual #24         // ensureCapacityInternal:(int)void
    17: aload_0       
    18: invokevirtual #19         // isLatin1:()boolean
    21: ifeq          37
    24: iload_1       
    25: iload_3       
    26: aload_0       
    27: getfield      #2          // value:byte[]
    30: invokestatic  #62         // java.lang.Integer.getChars:(int, int, byte[])int
    33: pop           
    34: goto          48
    37: iload_1       
    38: iload_2       
    39: iload_3       
    40: aload_0       
    41: getfield      #2          // value:byte[]
    44: invokestatic  #63         // java.lang.StringUTF16.getChars:(int, int, int, byte[])int
    47: pop           
    48: aload_0       
    49: iload_3       
    50: putfield      #18         // count:int
    53: aload_0       
    54: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@11fbf5cf slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:24]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction r11|DWORD = NEG value: rdx|DWORD size: DWORD <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0248451913249636 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606958633211231298
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B21 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B20" 
    xhandlers
    flags 
    probability 4602752168055621283
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B20 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B19" 
    xhandlers
    flags 
    probability 4598323111924218927
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B19 y: -999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B18" 
    xhandlers
    flags 
    probability 4593895269862142147
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B18 y: -9999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" 
    xhandlers
    flags 
    probability 4589468661642602652
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B17 y: -99999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4585043307360852988
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B16 y: -999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4580619227439431527
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B15 y: -9999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4576196442633492882
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 y: -99999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4571774974036225136
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: -999999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4567354843084355297
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rcx|DWORD = LEA address: [rdi|DWORD + 10] size: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B12" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  314  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  348  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  350  <|@ instruction rbp|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  352  <|@ instruction rdi|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  354  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction r13|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  358  <|@ instruction rcx|DWORD = SUB (x: rbp|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" "B47" 
    successors "B49" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction TESTBYTEBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714438988526654 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606968818122833350
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction r10|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1280  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1282  <|@ instruction r8|DWORD = SETCC condition: < <|@ <|@
      nr 1284  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1286  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 49, 50, 51, 52, ...}] <|@ <|@
      nr 1288  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.20456323728994374 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B71 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605339876961552022
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction rbx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1702  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B62" "B71" 
    successors "B73" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction rcx|DWORD = NEG value: r11|DWORD size: DWORD <|@ <|@
      nr 1718  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B86 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction r8|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1734  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B85 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction rax|DWORD = MOVSXB input: [rax|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1752  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1754  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6223590908157148 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B78 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr 1756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction rcx|DWORD = MOVSXB input: [rdi|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1792  <|@ instruction MOVB (x: [r13|QWORD[.] + rax|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1794  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714554158984935 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606968817085470084
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1932  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1934  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602532121406698170
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B13" "B21" "B20" "B19" "B18" "B17" "B16" "B15" "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607162073407212554
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600474593749434728
    begin_IR
      LIR
      nr 1820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1830  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598172830319288879
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B69" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction rcx|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr 1324  <|@ instruction rcx|QWORD = IMUL x: rcx|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr 1326  <|@ instruction rcx|QWORD = SAR x: rcx|QWORD y: 37 size: QWORD <|@ <|@
      nr 1328  <|@ instruction rcx|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr 1330  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1332  <|@ instruction rdi|DWORD = IMUL x: rcx|DWORD y: 100 size: DWORD <|@ <|@
      nr 1334  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1336  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B69 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B68" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction r9|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr 1352  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B67" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rbx|DWORD = LEA address: [rbp|DWORD - 2] size: DWORD <|@ <|@
      nr 1372  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction r14|DWORD = MOVSXB input: [rax|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1394  <|@ instruction MOVB (x: [r13|QWORD[.] + r9|DWORD * 1 + 16], y: r14|DWORD) size: BYTE <|@ <|@
      nr 1396  <|@ instruction rdi|DWORD = MOVSXB input: [r11|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1398  <|@ instruction MOVB (x: [r13|QWORD[.] + rbx|DWORD * 1 + 16], y: rdi|DWORD) size: BYTE <|@ <|@
      nr 1400  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1448  <|@ instruction rdi|QWORD = IMUL x: rdi|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr 1450  <|@ instruction rdi|QWORD = SAR x: rdi|QWORD y: 37 size: QWORD <|@ <|@
      nr 1452  <|@ instruction rdi|DWORD = MOV value: rdi|QWORD size: DWORD <|@ <|@
      nr 1454  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1456  <|@ instruction r9|DWORD = IMUL x: rdi|DWORD y: 100 size: DWORD <|@ <|@
      nr 1458  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1460  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B65 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction r14|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1476  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction r8|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr 1496  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction rcx|DWORD = MOVSXB input: [rax|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1520  <|@ instruction MOVB (x: [r13|QWORD[.] + r14|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1522  <|@ instruction rcx|DWORD = MOVSXB input: [r11|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1524  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1526  <|@ st <@st|@reference-map: [rax:0, rsi:0, r11:0, r13:0, stack:24]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:518) [bci: 69]
locals: rdi|DWORD - r13|QWORD[.] rdi|DWORD r9|DWORD r8|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: rsi|QWORD[.] - - rbp|DWORD 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:69, 30] <|@ <|@
      nr 1528  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1530  <|@ instruction rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1532  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" 
    successors "B58" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596612633779284459
    begin_IR
      LIR
      nr 1402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B62 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 4596538187644396969
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1544  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593743754731554715
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B89" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  412  <|@ instruction r14|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  416  <|@ instruction r14|DWORD = SHL (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction r14|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  424  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B89 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B31" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  456  <|@ instruction r14|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  656  <|@ instruction rcx|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  660  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  662  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B38" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  754  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  756  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  758  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  760  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  764  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  768  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  780  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction MOV x: [rdi|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  812  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B32" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  908  <|@ instruction rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  910  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1050  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1056  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B30" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1182  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1184  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1186  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1188  <|@ instruction r13|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1200  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589314678826940650
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4584886816669611324
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rcx|DWORD = MOVE input: int[5|0x5] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4582818360249579440
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1846  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction rdx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr 1860  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction MOVB x: [r13|QWORD[.] + rdx|DWORD * 1 + 16] y: 45 size: BYTE <|@ <|@
      nr 1876  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582492443078313792
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1230  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580460188027533457
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rcx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576034812990629180
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571610711976019636
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rcx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567187905733353983
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rcx|DWORD = MOVE input: int[9|0x9] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  702  <|@ st <@st|@reference-map: [r13:0, stack:24]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr  704  <|@ st <@st|@reference-map: [rax:0, r13:0, stack:24]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10] <|@ <|@
      nr  706  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  832  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  862  <|@ instruction rdi|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  496  <|@ instruction r9|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  504  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  566  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  568  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  570  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  574  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  576  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ st <@st|@reference-map: [r13:0, stack:24]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr  532  <|@ st <@st|@reference-map: [rax:0, r13:0, stack:24]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10] <|@ <|@
      nr  534  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1576  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction r10|DWORD = MOVE input: int[-189723|0xfffffffffffd1ae5] <|@ <|@
      nr 1586  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1606  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1608  <|@ st <@st|@reference-map: [r13:0, stack:24]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: rcx|DWORD - r13|QWORD[.] - - rbx|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1612  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction r10|DWORD = MOVE input: int[-187419|0xfffffffffffd23e5] <|@ <|@
      nr 1628  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1666  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1688  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1690  <|@ st <@st|@reference-map: [rsi:0, r13:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: r11|DWORD - r13|QWORD[.] - - rbp|DWORD r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: rsi|QWORD[.] - - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1652  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction r10|DWORD = MOVE input: int[-180507|0xfffffffffffd3ee5] <|@ <|@
      nr 1668  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1798  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction MOV x: [r15|QWORD + 1156] y: -207643 size: DWORD <|@ <|@
      nr 1816  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1818  <|@ st <@st|@reference-map: [r13:0, stack:24]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:523) [bci: 85]
locals: r11|DWORD - r13|QWORD[.] - - r8|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:85, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction r10|DWORD = MOVE input: int[-184091|0xfffffffffffd30e5] <|@ <|@
      nr 1648  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -204315 size: DWORD <|@ <|@
      nr 1896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1898  <|@ st <@st|@reference-map: [r13:0, stack:24]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:527) [bci: 104]
locals: - - r13|QWORD[.] - - rax|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:104, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1988  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1990  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1992  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1994  <|@ instruction NOP <|@ <|@
      nr 1996  <|@ instruction NOP <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction MOV x: [r15|QWORD + 1156] y: -233747 size: DWORD <|@ <|@
      nr 2010  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 2012  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  960  <|@ instruction r10|DWORD = MOVE input: int[-238105|0xfffffffffffc5de7] <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B41" "B43" "B45" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 2036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction NOP <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction NOP <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2054  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2056  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: r9|DWORD r8|DWORD 
locals: stack:56|QWORD[.] rdx|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2016  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 2018  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 2020  <|@ instruction NOP <|@ <|@
      nr 2022  <|@ instruction NOP <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 2028  <|@ instruction r10|DWORD = MOVE input: int[-236051|0xfffffffffffc65ed] <|@ <|@
      nr 2034  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1562  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction r10|DWORD = MOVE input: int[-192283|0xfffffffffffd10e5] <|@ <|@
      nr 1572  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  994  <|@ instruction r10|DWORD = MOVE input: int[-239129|0xfffffffffffc59e7] <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1548  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction r10|DWORD = MOVE input: int[-195611|0xfffffffffffd03e5] <|@ <|@
      nr 1558  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  916  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  926  <|@ instruction r10|DWORD = MOVE input: int[-237081|0xfffffffffffc61e7] <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1952  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction r10|DWORD = MOVE input: int[-198171|0xfffffffffffcf9e5] <|@ <|@
      nr 1962  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr 1968  <|@ instruction NOP <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1982  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1984  <|@ st <@st|@reference-map: [r13:0, stack:24]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:522) [bci: 72]
locals: r11|DWORD - r13|QWORD[.] - - rbx|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:72, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1938  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction r10|DWORD = MOVE input: int[-201499|0xfffffffffffcece5] <|@ <|@
      nr 1948  <|@ instruction JUMP ~outgoingValues: [] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #18         // count:int
     4: istore_2      
     5: iload_2       
     6: iload_1       
     7: invokestatic  #61         // java.lang.Integer.stringSize:(int)int
    10: iadd          
    11: istore_3      
    12: aload_0       
    13: iload_3       
    14: invokevirtual #24         // ensureCapacityInternal:(int)void
    17: aload_0       
    18: invokevirtual #19         // isLatin1:()boolean
    21: ifeq          37
    24: iload_1       
    25: iload_3       
    26: aload_0       
    27: getfield      #2          // value:byte[]
    30: invokestatic  #62         // java.lang.Integer.getChars:(int, int, byte[])int
    33: pop           
    34: goto          48
    37: iload_1       
    38: iload_2       
    39: iload_3       
    40: aload_0       
    41: getfield      #2          // value:byte[]
    44: invokestatic  #63         // java.lang.StringUTF16.getChars:(int, int, int, byte[])int
    47: pop           
    48: aload_0       
    49: iload_3       
    50: putfield      #18         // count:int
    53: aload_0       
    54: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@11fbf5cf slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:24]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction r11|DWORD = NEG value: rdx|DWORD size: DWORD <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0248451913249636 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4606958633211231298
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B4" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B21 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B20" 
    xhandlers
    flags 
    probability 4602752168055621283
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B20 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B19" 
    xhandlers
    flags 
    probability 4598323111924218927
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B19 y: -999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B18" 
    xhandlers
    flags 
    probability 4593895269862142147
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B18 y: -9999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" 
    xhandlers
    flags 
    probability 4589468661642602652
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B17 y: -99999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4585043307360852988
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B16 y: -999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4580619227439431527
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B15 y: -9999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4576196442633492882
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 y: -99999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4571774974036225136
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: -999999999 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4567354843084355297
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rcx|DWORD = LEA address: [rdi|DWORD + 10] size: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B12" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  314  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  348  <|@ instruction rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  350  <|@ instruction rbp|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  352  <|@ instruction rdi|DWORD = MOVSXB value: rbx|DWORD size: DWORD <|@ <|@
      nr  354  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction r13|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  358  <|@ instruction rcx|DWORD = SUB (x: rbp|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" "B47" 
    successors "B49" "B88" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction TESTBYTEBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714438988526654 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4606968818122833350
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" "B71" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction r10|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1280  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1282  <|@ instruction r8|DWORD = SETCC condition: < <|@ <|@
      nr 1284  <|@ instruction stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1286  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 49, 50, 51, 52, ...}] <|@ <|@
      nr 1288  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.20456323728994374 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B71 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605339876961552022
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction rbx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1702  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B62" "B71" 
    successors "B73" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction rcx|DWORD = NEG value: r11|DWORD size: DWORD <|@ <|@
      nr 1718  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B86 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction r8|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1734  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B85 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction rax|DWORD = MOVSXB input: [rax|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1752  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1754  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6223590908157148 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B78 y: -9 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr 1756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B79" 
    xhandlers
    flags 
    probability 4603780931884253004
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction rcx|DWORD = MOVSXB input: [rdi|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1792  <|@ instruction MOVB (x: [r13|QWORD[.] + rax|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1794  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714554158984935 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B83 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606968817085470084
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1932  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1934  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4602532121406698170
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B13" "B21" "B20" "B19" "B18" "B17" "B16" "B15" "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607162073407212554
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    probability 4600474593749434728
    begin_IR
      LIR
      nr 1820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1830  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598172830319288879
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B69" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction rcx|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr 1324  <|@ instruction rcx|QWORD = IMUL x: rcx|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr 1326  <|@ instruction rcx|QWORD = SAR x: rcx|QWORD y: 37 size: QWORD <|@ <|@
      nr 1328  <|@ instruction rcx|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr 1330  <|@ instruction rcx|DWORD = INC value: rcx|DWORD size: DWORD <|@ <|@
      nr 1332  <|@ instruction rdi|DWORD = IMUL x: rcx|DWORD y: 100 size: DWORD <|@ <|@
      nr 1334  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1336  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B69 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B68" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction r9|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr 1352  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B67" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rbx|DWORD = LEA address: [rbp|DWORD - 2] size: DWORD <|@ <|@
      nr 1372  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4596538187644396968
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}] <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction r14|DWORD = MOVSXB input: [rax|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1394  <|@ instruction MOVB (x: [r13|QWORD[.] + r9|DWORD * 1 + 16], y: r14|DWORD) size: BYTE <|@ <|@
      nr 1396  <|@ instruction rdi|DWORD = MOVSXB input: [r11|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1398  <|@ instruction MOVB (x: [r13|QWORD[.] + rbx|DWORD * 1 + 16], y: rdi|DWORD) size: BYTE <|@ <|@
      nr 1400  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1448  <|@ instruction rdi|QWORD = IMUL x: rdi|QWORD y: 1374389535 size: QWORD <|@ <|@
      nr 1450  <|@ instruction rdi|QWORD = SAR x: rdi|QWORD y: 37 size: QWORD <|@ <|@
      nr 1452  <|@ instruction rdi|DWORD = MOV value: rdi|QWORD size: DWORD <|@ <|@
      nr 1454  <|@ instruction rdi|DWORD = INC value: rdi|DWORD size: DWORD <|@ <|@
      nr 1456  <|@ instruction r9|DWORD = IMUL x: rdi|DWORD y: 100 size: DWORD <|@ <|@
      nr 1458  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1460  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B65 y: 100 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction r14|DWORD = DEC value: rbx|DWORD size: DWORD <|@ <|@
      nr 1476  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction r8|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr 1496  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566910975159111830
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction rcx|DWORD = MOVSXB input: [rax|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1520  <|@ instruction MOVB (x: [r13|QWORD[.] + r14|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1522  <|@ instruction rcx|DWORD = MOVSXB input: [r11|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr 1524  <|@ instruction MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1526  <|@ st <@st|@reference-map: [rax:0, rsi:0, r11:0, r13:0, stack:24]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:518) [bci: 69]
locals: rdi|DWORD - r13|QWORD[.] rdi|DWORD r9|DWORD r8|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: rsi|QWORD[.] - - rbp|DWORD 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:69, 30] <|@ <|@
      nr 1528  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1530  <|@ instruction rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1532  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" 
    successors "B58" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596612633779284459
    begin_IR
      LIR
      nr 1402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B62 y: -99 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 4596538187644396969
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1544  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593743754731554715
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B89" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  412  <|@ instruction r14|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  416  <|@ instruction r14|DWORD = SHL (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction r14|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  424  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B89 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B31" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  456  <|@ instruction r14|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  656  <|@ instruction rcx|QWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  660  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  662  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B38" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  754  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  756  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  758  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  760  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  764  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  768  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  780  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction MOV x: [rdi|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  812  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B36" "B37" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B32" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  908  <|@ instruction rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  910  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1050  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1056  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B30" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  624  <|@ instruction rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1182  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3 <|@ <|@
      nr 1184  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1186  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b <|@ <|@
      nr 1188  <|@ instruction r13|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1200  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589314678826940650
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B22" 
    xhandlers
    flags 
    probability 4584886816669611324
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rcx|DWORD = MOVE input: int[5|0x5] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4582818360249579440
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1846  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction rdx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr 1860  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4582492476273938304
    begin_IR
      LIR
      nr 1862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction MOVB x: [r13|QWORD[.] + rdx|DWORD * 1 + 16] y: 45 size: BYTE <|@ <|@
      nr 1876  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582492443078313792
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1230  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580460188027533457
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rcx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576034812990629180
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rcx|DWORD = MOVE input: int[7|0x7] <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571610711976019636
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rcx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B22" 
    xhandlers
    flags 
    probability 4567187905733353983
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rcx|DWORD = MOVE input: int[9|0x9] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B40" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  702  <|@ st <@st|@reference-map: [r13:0, stack:24]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr  704  <|@ st <@st|@reference-map: [rax:0, r13:0, stack:24]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10] <|@ <|@
      nr  706  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  832  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  862  <|@ instruction rdi|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  496  <|@ instruction r9|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  504  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  566  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  568  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  570  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  572  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  574  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  576  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B47" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  618  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  628  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ st <@st|@reference-map: [r13:0, stack:24]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10] <|@ <|@
      nr  532  <|@ st <@st|@reference-map: [rax:0, r13:0, stack:24]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: stack:36|DWORD r8|DWORD 
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10] <|@ <|@
      nr  534  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1576  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction r10|DWORD = MOVE input: int[-189723|0xfffffffffffd1ae5] <|@ <|@
      nr 1586  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1606  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1608  <|@ st <@st|@reference-map: [r13:0, stack:24]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: rcx|DWORD - r13|QWORD[.] - - rbx|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1612  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction r10|DWORD = MOVE input: int[-187419|0xfffffffffffd23e5] <|@ <|@
      nr 1628  <|@ instruction JUMP ~outgoingValues: [] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1666  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1688  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1690  <|@ st <@st|@reference-map: [rsi:0, r13:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:513) [bci: 22]
locals: r11|DWORD - r13|QWORD[.] - - rbp|DWORD r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: rsi|QWORD[.] - - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:22, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1652  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction r10|DWORD = MOVE input: int[-180507|0xfffffffffffd3ee5] <|@ <|@
      nr 1668  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1798  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction MOV x: [r15|QWORD + 1156] y: -207643 size: DWORD <|@ <|@
      nr 1816  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1818  <|@ st <@st|@reference-map: [r13:0, stack:24]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:523) [bci: 85]
locals: r11|DWORD - r13|QWORD[.] - - r8|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:85, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B70" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction r10|DWORD = MOVE input: int[-184091|0xfffffffffffd30e5] <|@ <|@
      nr 1648  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction MOV x: [r15|QWORD + 1156] y: -204315 size: DWORD <|@ <|@
      nr 1896  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1898  <|@ st <@st|@reference-map: [r13:0, stack:24]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:527) [bci: 104]
locals: - - r13|QWORD[.] - - rax|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:104, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1988  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1990  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1992  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1994  <|@ instruction NOP <|@ <|@
      nr 1996  <|@ instruction NOP <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction MOV x: [r15|QWORD + 1156] y: -233747 size: DWORD <|@ <|@
      nr 2010  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 2012  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14]
locals: stack:56|QWORD[.] stack:44|DWORD stack:36|DWORD stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  960  <|@ instruction r10|DWORD = MOVE input: int[-238105|0xfffffffffffc5de7] <|@ <|@
      nr  966  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B41" "B43" "B45" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 2036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction NOP <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction NOP <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2054  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2056  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10]
stack: r9|DWORD r8|DWORD 
locals: stack:56|QWORD[.] rdx|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2016  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 2018  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 2020  <|@ instruction NOP <|@ <|@
      nr 2022  <|@ instruction NOP <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr 2028  <|@ instruction r10|DWORD = MOVE input: int[-236051|0xfffffffffffc65ed] <|@ <|@
      nr 2034  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1562  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction r10|DWORD = MOVE input: int[-192283|0xfffffffffffd10e5] <|@ <|@
      nr 1572  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  994  <|@ instruction r10|DWORD = MOVE input: int[-239129|0xfffffffffffc59e7] <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1548  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction r10|DWORD = MOVE input: int[-195611|0xfffffffffffd03e5] <|@ <|@
      nr 1558  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  914  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  916  <|@ instruction stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  926  <|@ instruction r10|DWORD = MOVE input: int[-237081|0xfffffffffffc61e7] <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1952  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction r10|DWORD = MOVE input: int[-198171|0xfffffffffffcf9e5] <|@ <|@
      nr 1962  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr 1968  <|@ instruction NOP <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1982  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1984  <|@ st <@st|@reference-map: [r13:0, stack:24]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:522) [bci: 72]
locals: r11|DWORD - r13|QWORD[.] - - rbx|DWORD stack:40|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30]
locals: stack:56|QWORD[.] - - stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:72, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1938  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction r10|DWORD = MOVE input: int[-201499|0xfffffffffffcece5] <|@ <|@
      nr 1948  <|@ instruction JUMP ~outgoingValues: [] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #18         // count:int
     4: istore_2      
     5: iload_2       
     6: iload_1       
     7: invokestatic  #61         // java.lang.Integer.stringSize:(int)int
    10: iadd          
    11: istore_3      
    12: aload_0       
    13: iload_3       
    14: invokevirtual #24         // ensureCapacityInternal:(int)void
    17: aload_0       
    18: invokevirtual #19         // isLatin1:()boolean
    21: ifeq          37
    24: iload_1       
    25: iload_3       
    26: aload_0       
    27: getfield      #2          // value:byte[]
    30: invokestatic  #62         // java.lang.Integer.getChars:(int, int, byte[])int
    33: pop           
    34: goto          48
    37: iload_1       
    38: iload_2       
    39: iload_3       
    40: aload_0       
    41: getfield      #2          // value:byte[]
    44: invokestatic  #63         // java.lang.StringUTF16.getChars:(int, int, int, byte[])int
    47: pop           
    48: aload_0       
    49: iload_3       
    50: putfield      #18         // count:int
    53: aload_0       
    54: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec489041817f20000000000f85f2090000909090909090909090909048896c244048897424188b4614448b14c50c000000448bda41f7db85d20f8cd8050000909090bf00000000418bcb9090909083f9f70f8dbd0100009090909083f99d0f8dcb0100009090909081f919fcffff0f8d020300009090909081f9f1d8ffff0f8d790500009090909081f96179feff0f8d760500009090909081f9c1bdf0ff0f8dbc0500009090909081f9816967ff0f8db90500009090909081f9011f0afa0f8db60500009090909081f9013665c40f8db30500009090909090908d4f0a448bc190909090909090909090909090448b4e0c0fbe5e10418be84103e90fbefb8bcf458bea41d3ed8bcd412bcd448be849c1e50383f9010f8d680200009090909090909084db0f85ad0700009090909085d20f8c1505000090909090909090909090909090458b550c85d2410f9cc0450fb6c0448944242848b8addeaddeaddeadde4183fb9d0f8ccf0000009090908bdd9090909090418bcbf7d983f9640f833f0800009090909090448bc341ffc8453bd00f865e0800009090909090900fbe44081043884405104183fbf70f8d77000000909090909090908d43fe443bd00f86ad06000048bfaddeaddeaddeadde90909090900fbe4c0f1041884c05109090909085d20f8c3e040000909090909090909090909090896e0c488bc6488b6c24404883c448493ba7500400000f8703080000c5f877c3909090b9010000009090909003cfe9b6feffff909090418bc0ebad909090b902000000ebe39090909090909090909090909090904963cb4869c91f85eb5148c1f9258bc9ffc16bf964412bfb83ff640f83f80500009090909090448bcd41ffc9453bd10f8621060000909090909090908d5dfe443bd30f869905000049bbaddeaddeaddeadde90909090909090440fbe7438104788740d10410fbe7c3b1041887c1d10e9a20000006666660f1f840000000000666666900f1f840000000000666666909090909090909090909090909090904863f94869ff1f85eb5148c1ff258bffffc7446bcf64442bc94183f9640f83ed0400009090909090448bf341ffce453bd60f864706000090909090909090448d43fe453bd00f8660060000909090909090909090420fbe4c081043884c3510430fbe4c0b1043884c0510498b8f5804000085018bcf418bd89090909083f99d0f8c6cffffff909090448bd9e9f9fdffff909090b903000000e999feffff9090909090909090909090909090908bcf8bc5d3e0412bc241be0200000041d3e64503f2443bf0410f4fc64103c28bc8ffc981f9f7ffff7f0f83880500009090909090909090908bcfd3f8448bf041d3e6453bd60f84420300009090909090909090909090498bbfb8010000418bce488d49174883e1f8488bc14803c7493b87c80100000f87870200009090909090909090909090909090498987b80100000f188439000100000f188439400100000f1884398001000048c70701000000c74708addeadde4489770c488d41f04881f8000800000f838602000090909048c7c010000000e91e0000006666660f1f8400000000009090909090909048c7040700000000488d400890909090483bc877e490909090909090909090909090453bd6418bca410f4fce85c90f8cf104000090909090413bca0f874f04000090909090413bce0f87aa040000896c2434895c243044894c242c44895c2428895424249090909090909090909090909090904c8bd748897c2410498d7d10498d7210488bd1e800000000488b7c2410488b742418909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f842d0000008b461448c1e0034885c00f841d000000498b57284883fa000f84b30400004883ea084989572849035738488902488bd748c1ea03895614488bd64833d748c1ea160f8442000000488bd648c1ea0948b800e0368d787f00004803d0803a027429f083042400803a00741fc60200498b47484885c00f84660400004883e80849894748490347584889104c8bef8b6c24348b5c2430448b4c242c448b5c24288b542424e921fbffff909090b904000000e912fcffff909090b905000000e905fcffff909090bf010000008bcae924faffff896c243490909090908bd0ffca443bd20f86710200009090909041c64415102de9a0fbffff896c243489542424909090448b5c2424e9d9faffff909090b906000000e9affbffff909090b907000000e9a2fbffff909090b908000000e995fbffff909090b909000000e988fbffff896c2434895c243044894c242c44895c24288954242448baaddeaddeaddeadde909090909090909090488bf2418bd6e8000000000f1f8400000000008500488bf88b542424488b742418e9b7fdffff896c2434895c243044894c242c44895c242889542424909090909090909090488bc8488bf7488d7e104833c0f348aa488bfe488b742418e977fdffff896c2434895c243044894c242c44895c2428895424249090909090909090909090498bbfb8010000458bca498d71174883e6f8488bd64803d7493b97c80100000f87670000009090909090909090909090498997b80100000f18843e000100000f18843e400100000f18843e8001000048c70701000000c74708addeadde4489570c9090909090909090909090909090488bd748897c2410498d7d10488d7210498bd1e800000000e93dfdffff48beaddeaddeaddeadde909090909090909090418bd2e8000000000f1f8400000000008500488bf8ebab896c243490909041bae51afdff909090909090904589978404000049c7879004000000000000e8000000000f1f840000000000896c243490909041bae523fdff488b742418909090909090904589978404000049c7879004000000000000e8000000000f1f840000000000896c243490909041bae53efdffebc6896c24349090909090909041c78784040000e5d4fcff49c7879004000000000000e8000000000f1f840000000000896c243490909041bae530fdffeb899090909090909041c78784040000e5e1fcff49c7879004000000000000e8000000000f1f840000000000896c243444894c242c895424249090909090909041c78784040000ed6efcff49c7879004000014000000e8000000000f1f84000000000044894c242c8954242490909049c7c30000000041bae75dfcff90909090909090458997840400004d899f90040000e8000000000f1f84000000000044894c242c8954242490909049c7c31405000041baed65fcffebc3896c243490909041bae510fdffe98dfeffff44894c242c8954242490909049c7c30000000041bae759fcffeb96896c243490909041bae503fdffe960feffff44894c242c8954242490909049c7c30000000041bae761fcffe966ffffff896c243490909041bae5f9fcff909090909090904589978404000049c7879004000000000000e8000000000f1f840000000000896c243490909041bae5ecfcffebcb48896c2440e800000000e9fff5fffff4488d0de9f7ffff49898f68040000e9b1f5fffff448890424e800000000e94efbfffff448891424e800000000e99bfbfffff441c78784040000f574fdff49c7879004000000000000e8000000000f1f84000000000041c787840400008f8ffbff49c7879004000000000000e8000000000f1f84000000000041c787840400008fdffbff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 74 26 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@11fbf5cf slotKind: QWORD  <||@
  Comment 74 28 stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 79 30 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 82 32 r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 82 [rax:0, rsi:0, stack:24]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-   <||@
  Comment 82 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 90 34 r11|DWORD = NEG value: rdx|DWORD size: DWORD  <||@
  Comment 96 36 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0248451913249636 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 104 block B2 null  <||@
  Comment 104 52 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 104 54 NOP  <||@
  Comment 105 56 NOP  <||@
  Comment 106 58 NOP  <||@
  Comment 107 60 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 112 62 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 115 64 JUMP ~outgoingValues: [] destination: B2 -> B3  <||@
  Comment 115 block B3 null  <||@
  Comment 115 66 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 115 68 NOP  <||@
  Comment 116 70 NOP  <||@
  Comment 117 72 NOP  <||@
  Comment 118 74 NOP  <||@
  Comment 119 76 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B21 y: -9 size: DWORD inlinedY: null  <||@
  Comment 128 block B4 null  <||@
  Comment 128 78 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 128 80 NOP  <||@
  Comment 129 82 NOP  <||@
  Comment 130 84 NOP  <||@
  Comment 131 86 NOP  <||@
  Comment 132 88 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B20 y: -99 size: DWORD inlinedY: null  <||@
  Comment 141 block B5 null  <||@
  Comment 141 90 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 141 92 NOP  <||@
  Comment 142 94 NOP  <||@
  Comment 143 96 NOP  <||@
  Comment 144 98 NOP  <||@
  Comment 145 100 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B19 y: -999 size: DWORD inlinedY: null  <||@
  Comment 157 block B6 null  <||@
  Comment 157 102 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 157 104 NOP  <||@
  Comment 158 106 NOP  <||@
  Comment 159 108 NOP  <||@
  Comment 160 110 NOP  <||@
  Comment 161 112 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B18 y: -9999 size: DWORD inlinedY: null  <||@
  Comment 173 block B7 null  <||@
  Comment 173 114 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 173 116 NOP  <||@
  Comment 174 118 NOP  <||@
  Comment 175 120 NOP  <||@
  Comment 176 122 NOP  <||@
  Comment 177 124 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B17 y: -99999 size: DWORD inlinedY: null  <||@
  Comment 189 block B8 null  <||@
  Comment 189 126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 189 128 NOP  <||@
  Comment 190 130 NOP  <||@
  Comment 191 132 NOP  <||@
  Comment 192 134 NOP  <||@
  Comment 193 136 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B16 y: -999999 size: DWORD inlinedY: null  <||@
  Comment 205 block B9 null  <||@
  Comment 205 138 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 205 140 NOP  <||@
  Comment 206 142 NOP  <||@
  Comment 207 144 NOP  <||@
  Comment 208 146 NOP  <||@
  Comment 209 148 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B15 y: -9999999 size: DWORD inlinedY: null  <||@
  Comment 221 block B10 null  <||@
  Comment 221 150 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 221 152 NOP  <||@
  Comment 222 154 NOP  <||@
  Comment 223 156 NOP  <||@
  Comment 224 158 NOP  <||@
  Comment 225 160 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 y: -99999999 size: DWORD inlinedY: null  <||@
  Comment 237 block B11 null  <||@
  Comment 237 162 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 237 164 NOP  <||@
  Comment 238 166 NOP  <||@
  Comment 239 168 NOP  <||@
  Comment 240 170 NOP  <||@
  Comment 241 172 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: -999999999 size: DWORD inlinedY: null  <||@
  Comment 253 block B12 null  <||@
  Comment 253 174 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 253 176 NOP  <||@
  Comment 254 178 NOP  <||@
  Comment 255 180 NOP  <||@
  Comment 256 182 NOP  <||@
  Comment 257 184 NOP  <||@
  Comment 258 186 NOP  <||@
  Comment 259 188 rcx|DWORD = LEA address: [rdi|DWORD + 10] size: DWORD  <||@
  Comment 262 192 JUMP ~outgoingValues: [] destination: B12 -> B23  <||@
  Comment 262 block B23 null  <||@
  Comment 262 318 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 262 314 r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 265 320 NOP  <||@
  Comment 266 322 NOP  <||@
  Comment 267 324 NOP  <||@
  Comment 268 326 NOP  <||@
  Comment 269 328 NOP  <||@
  Comment 270 330 NOP  <||@
  Comment 271 332 NOP  <||@
  Comment 272 334 NOP  <||@
  Comment 273 336 NOP  <||@
  Comment 274 338 NOP  <||@
  Comment 275 340 NOP  <||@
  Comment 276 342 NOP  <||@
  Comment 277 344 NOP  <||@
  Comment 278 346 r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 282 348 rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 286 350 rbp|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 292 352 rdi|DWORD = MOVSXB value: rbx|DWORD size: DWORD  <||@
  Comment 295 354 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 297 356 r13|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 303 358 rcx|DWORD = SUB (x: rbp|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 308 360 r13|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3  <||@
  Comment 315 362 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: DWORD inlinedY: null  <||@
  Comment 324 block B24 null  <||@
  Comment 324 364 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 324 366 NOP  <||@
  Comment 325 368 NOP  <||@
  Comment 326 370 NOP  <||@
  Comment 327 372 JUMP ~outgoingValues: [] destination: B24 -> B48  <||@
  Comment 327 block B48 null  <||@
  Comment 327 1202 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 327 1204 NOP  <||@
  Comment 328 1206 NOP  <||@
  Comment 329 1208 NOP  <||@
  Comment 330 1210 NOP  <||@
  Comment 331 1212 TESTBYTEBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B88  <||@
  Comment 339 block B49 null  <||@
  Comment 339 1214 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 339 1216 NOP  <||@
  Comment 340 1218 NOP  <||@
  Comment 341 1220 NOP  <||@
  Comment 342 1222 NOP  <||@
  Comment 343 1224 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714438988526654 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD  <||@
  Comment 351 block B51 null  <||@
  Comment 351 1246 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 351 1248 NOP  <||@
  Comment 352 1250 NOP  <||@
  Comment 353 1252 NOP  <||@
  Comment 354 1254 JUMP ~outgoingValues: [] destination: B51 -> B52  <||@
  Comment 354 block B52 null  <||@
  Comment 354 1256 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 354 1258 NOP  <||@
  Comment 355 1260 NOP  <||@
  Comment 356 1262 NOP  <||@
  Comment 357 1264 NOP  <||@
  Comment 358 1266 NOP  <||@
  Comment 359 1268 NOP  <||@
  Comment 360 1270 NOP  <||@
  Comment 361 1272 NOP  <||@
  Comment 362 1274 NOP  <||@
  Comment 363 1276 NOP  <||@
  Comment 364 1278 r10|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 368 1280 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 370 1282 r8|DWORD = SETCC condition: <  <||@
  Comment 378 1284 stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 383 1286 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 49, 50, 51, 52, ...}]  <||@
  Comment 383 {Object[byte[100]{48, 49, 50, 51, 52, ...}]}  <||@
  Comment 393 1288 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.20456323728994374 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B71 y: -99 size: DWORD inlinedY: null  <||@
  Comment 403 block B71 null  <||@
  Comment 403 1692 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 403 1694 NOP  <||@
  Comment 404 1696 NOP  <||@
  Comment 405 1698 NOP  <||@
  Comment 406 1700 rbx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 408 1702 JUMP ~outgoingValues: [] destination: B71 -> B72  <||@
  Comment 408 block B72 null  <||@
  Comment 408 1704 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 408 1706 NOP  <||@
  Comment 409 1708 NOP  <||@
  Comment 410 1710 NOP  <||@
  Comment 411 1712 NOP  <||@
  Comment 412 1714 NOP  <||@
  Comment 413 1716 rcx|DWORD = NEG value: r11|DWORD size: DWORD  <||@
  Comment 418 1718 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B86 y: 100 size: DWORD inlinedY: null  <||@
  Comment 427 block B73 null  <||@
  Comment 427 1720 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 427 1722 NOP  <||@
  Comment 428 1724 NOP  <||@
  Comment 429 1726 NOP  <||@
  Comment 430 1728 NOP  <||@
  Comment 431 1730 NOP  <||@
  Comment 432 1732 r8|DWORD = DEC value: rbx|DWORD size: DWORD  <||@
  Comment 438 1734 CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B85 size: DWORD  <||@
  Comment 447 block B74 null  <||@
  Comment 447 1736 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 447 1738 NOP  <||@
  Comment 448 1740 NOP  <||@
  Comment 449 1742 NOP  <||@
  Comment 450 1744 NOP  <||@
  Comment 451 1746 NOP  <||@
  Comment 452 1748 NOP  <||@
  Comment 453 1750 rax|DWORD = MOVSXB input: [rax|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD  <||@
  Comment 458 1752 MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 463 1754 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6223590908157148 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B78 y: -9 size: DWORD inlinedY: null  <||@
  Comment 473 block B75 null  <||@
  Comment 473 1756 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 473 1758 NOP  <||@
  Comment 474 1760 NOP  <||@
  Comment 475 1762 NOP  <||@
  Comment 476 1764 NOP  <||@
  Comment 477 1766 NOP  <||@
  Comment 478 1768 NOP  <||@
  Comment 479 1770 NOP  <||@
  Comment 480 1772 rax|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD  <||@
  Comment 483 1774 CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 size: DWORD  <||@
  Comment 492 block B76 null  <||@
  Comment 492 1776 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 492 1778 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}]  <||@
  Comment 492 {Object[byte[100]{48, 48, 48, 48, 48, ...}]}  <||@
  Comment 502 1780 NOP  <||@
  Comment 503 1782 NOP  <||@
  Comment 504 1784 NOP  <||@
  Comment 505 1786 NOP  <||@
  Comment 506 1788 NOP  <||@
  Comment 507 1790 rcx|DWORD = MOVSXB input: [rdi|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD  <||@
  Comment 512 1792 MOVB (x: [r13|QWORD[.] + rax|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 517 1794 JUMP ~outgoingValues: [] destination: B76 -> B79  <||@
  Comment 517 block B79 null  <||@
  Comment 517 1832 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 517 1834 NOP  <||@
  Comment 518 1836 NOP  <||@
  Comment 519 1838 NOP  <||@
  Comment 520 1840 NOP  <||@
  Comment 521 1842 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714554158984935 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B83 size: DWORD  <||@
  Comment 529 block B83 null  <||@
  Comment 529 1900 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 529 1902 NOP  <||@
  Comment 530 1904 NOP  <||@
  Comment 531 1906 NOP  <||@
  Comment 532 1908 JUMP ~outgoingValues: [] destination: B83 -> B84  <||@
  Comment 532 block B84 null  <||@
  Comment 532 1910 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 532 1912 NOP  <||@
  Comment 533 1914 NOP  <||@
  Comment 534 1916 NOP  <||@
  Comment 535 1918 NOP  <||@
  Comment 536 1920 NOP  <||@
  Comment 537 1922 NOP  <||@
  Comment 538 1924 NOP  <||@
  Comment 539 1926 NOP  <||@
  Comment 540 1928 NOP  <||@
  Comment 541 1930 MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 544 1932 rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 547 1934 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 556 POLL_RETURN_FAR  <||@
  Comment 573 block B21 null  <||@
  Comment 573 290 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 573 292 NOP  <||@
  Comment 574 294 NOP  <||@
  Comment 575 296 NOP  <||@
  Comment 576 298 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 581 300 JUMP ~outgoingValues: [] destination: B21 -> B22  <||@
  Comment 581 block B22 null  <||@
  Comment 581 302 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 581 304 NOP  <||@
  Comment 582 306 NOP  <||@
  Comment 583 308 NOP  <||@
  Comment 584 310 NOP  <||@
  Comment 585 312 rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 587 316 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 592 block B78 null  <||@
  Comment 592 1820 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 592 1822 NOP  <||@
  Comment 593 1824 NOP  <||@
  Comment 594 1826 NOP  <||@
  Comment 595 1828 rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 598 1830 JUMP ~outgoingValues: [] destination: B78 -> B79  <||@
  Comment 600 block B20 null  <||@
  Comment 600 278 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 600 280 NOP  <||@
  Comment 601 282 NOP  <||@
  Comment 602 284 NOP  <||@
  Comment 603 286 rcx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 608 288 JUMP ~outgoingValues: [] destination: B20 -> B22  <||@
  Comment 610 block B53 null  <||@
  Comment 610 1290 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 610 1292 NOP  <||@
  Comment 611 1294 NOP  <||@
  Comment 612 1296 NOP  <||@
  Comment 613 1298 NOP  <||@
  Comment 614 1300 NOP  <||@
  Comment 615 1302 NOP  <||@
  Comment 616 1304 NOP  <||@
  Comment 617 1306 NOP  <||@
  Comment 618 1308 NOP  <||@
  Comment 619 1310 NOP  <||@
  Comment 620 1312 NOP  <||@
  Comment 621 1314 NOP  <||@
  Comment 622 1316 NOP  <||@
  Comment 623 1318 NOP  <||@
  Comment 624 1320 NOP  <||@
  Comment 625 1322 rcx|QWORD = MOVSXD value: r11|DWORD size: QWORD  <||@
  Comment 628 1324 rcx|QWORD = IMUL x: rcx|QWORD y: 1374389535 size: QWORD  <||@
  Comment 635 1326 rcx|QWORD = SAR x: rcx|QWORD y: 37 size: QWORD  <||@
  Comment 639 1328 rcx|DWORD = MOV value: rcx|QWORD size: DWORD  <||@
  Comment 641 1330 rcx|DWORD = INC value: rcx|DWORD size: DWORD  <||@
  Comment 643 1332 rdi|DWORD = IMUL x: rcx|DWORD y: 100 size: DWORD  <||@
  Comment 646 1334 rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 649 1336 CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B69 y: 100 size: DWORD inlinedY: null  <||@
  Comment 658 block B54 null  <||@
  Comment 658 1338 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 658 1340 NOP  <||@
  Comment 659 1342 NOP  <||@
  Comment 660 1344 NOP  <||@
  Comment 661 1346 NOP  <||@
  Comment 662 1348 NOP  <||@
  Comment 663 1350 r9|DWORD = DEC value: rbp|DWORD size: DWORD  <||@
  Comment 669 1352 CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B68 size: DWORD  <||@
  Comment 678 block B55 null  <||@
  Comment 678 1354 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 678 1356 NOP  <||@
  Comment 679 1358 NOP  <||@
  Comment 680 1360 NOP  <||@
  Comment 681 1362 NOP  <||@
  Comment 682 1364 NOP  <||@
  Comment 683 1366 NOP  <||@
  Comment 684 1368 NOP  <||@
  Comment 685 1370 rbx|DWORD = LEA address: [rbp|DWORD - 2] size: DWORD  <||@
  Comment 688 1372 CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B67 size: DWORD  <||@
  Comment 697 block B56 null  <||@
  Comment 697 1374 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 697 1376 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}]  <||@
  Comment 697 {Object[byte[100]{48, 48, 48, 48, 48, ...}]}  <||@
  Comment 707 1378 NOP  <||@
  Comment 708 1380 NOP  <||@
  Comment 709 1382 NOP  <||@
  Comment 710 1384 NOP  <||@
  Comment 711 1386 NOP  <||@
  Comment 712 1388 NOP  <||@
  Comment 713 1390 NOP  <||@
  Comment 714 1392 r14|DWORD = MOVSXB input: [rax|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD  <||@
  Comment 720 1394 MOVB (x: [r13|QWORD[.] + r9|DWORD * 1 + 16], y: r14|DWORD) size: BYTE  <||@
  Comment 725 1396 rdi|DWORD = MOVSXB input: [r11|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD  <||@
  Comment 731 1398 MOVB (x: [r13|QWORD[.] + rbx|DWORD * 1 + 16], y: rdi|DWORD) size: BYTE  <||@
  Comment 736 1400 JUMP ~outgoingValues: [] destination: B56 -> B57  <||@
  Comment 741 block B58 loop 1 depth 1 header:154|LoopBegin  <||@
  Comment 741 1414 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 768 1416 NOP  <||@
  Comment 769 1418 NOP  <||@
  Comment 770 1420 NOP  <||@
  Comment 771 1422 NOP  <||@
  Comment 772 1424 NOP  <||@
  Comment 773 1426 NOP  <||@
  Comment 774 1428 NOP  <||@
  Comment 775 1430 NOP  <||@
  Comment 776 1432 NOP  <||@
  Comment 777 1434 NOP  <||@
  Comment 778 1436 NOP  <||@
  Comment 779 1438 NOP  <||@
  Comment 780 1440 NOP  <||@
  Comment 781 1442 NOP  <||@
  Comment 782 1444 NOP  <||@
  Comment 783 1446 rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD  <||@
  Comment 786 1448 rdi|QWORD = IMUL x: rdi|QWORD y: 1374389535 size: QWORD  <||@
  Comment 793 1450 rdi|QWORD = SAR x: rdi|QWORD y: 37 size: QWORD  <||@
  Comment 797 1452 rdi|DWORD = MOV value: rdi|QWORD size: DWORD  <||@
  Comment 799 1454 rdi|DWORD = INC value: rdi|DWORD size: DWORD  <||@
  Comment 801 1456 r9|DWORD = IMUL x: rdi|DWORD y: 100 size: DWORD  <||@
  Comment 805 1458 r9|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 808 1460 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B65 y: 100 size: DWORD inlinedY: null  <||@
  Comment 818 block B59 loop 1 depth 1 header:154|LoopBegin  <||@
  Comment 818 1462 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 818 1464 NOP  <||@
  Comment 819 1466 NOP  <||@
  Comment 820 1468 NOP  <||@
  Comment 821 1470 NOP  <||@
  Comment 822 1472 NOP  <||@
  Comment 823 1474 r14|DWORD = DEC value: rbx|DWORD size: DWORD  <||@
  Comment 829 1476 CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B64 size: DWORD  <||@
  Comment 838 block B60 loop 1 depth 1 header:154|LoopBegin  <||@
  Comment 838 1478 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 838 1480 NOP  <||@
  Comment 839 1482 NOP  <||@
  Comment 840 1484 NOP  <||@
  Comment 841 1486 NOP  <||@
  Comment 842 1488 NOP  <||@
  Comment 843 1490 NOP  <||@
  Comment 844 1492 NOP  <||@
  Comment 845 1494 r8|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD  <||@
  Comment 849 1496 CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD  <||@
  Comment 858 block B61 loop 1 depth 1 header:154|LoopBegin  <||@
  Comment 858 1498 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 858 1500 NOP  <||@
  Comment 859 1502 NOP  <||@
  Comment 860 1504 NOP  <||@
  Comment 861 1506 NOP  <||@
  Comment 862 1508 NOP  <||@
  Comment 863 1510 NOP  <||@
  Comment 864 1512 NOP  <||@
  Comment 865 1514 NOP  <||@
  Comment 866 1516 NOP  <||@
  Comment 867 1518 rcx|DWORD = MOVSXB input: [rax|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD  <||@
  Comment 873 1520 MOVB (x: [r13|QWORD[.] + r14|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 878 1522 rcx|DWORD = MOVSXB input: [r11|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD  <||@
  Comment 884 1524 MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 889 1526 SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:69, 30]  <||@
  Comment 896 [rax:0, rsi:0, r11:0, r13:0, stack:24]at java.lang.Integer.getChars(Integer.java:518) [bci: 69, duringCall: false, rethrow: false]
              |0          |1  |2             |3          |4         |5         |6              
     locals:  |rdi|DWORD  |-  |r13|QWORD[.]  |rdi|DWORD  |r9|DWORD  |r8|DWORD  |stack:40|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2  |3         
     locals:  |rsi|QWORD[.]  |-  |-  |rbp|DWORD   <||@
  Comment 896 {infopoint: SAFEPOINT}  <||@
  Comment 896 POLL_FAR  <||@
  Comment 898 1528 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 900 1530 rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 903 1532 JUMP ~outgoingValues: [] destination: B61 -> B57  <||@
  Comment 903 block B57 loop 1 depth 1 header:154|LoopBegin  <||@
  Comment 903 1402 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 903 1404 NOP  <||@
  Comment 904 1406 NOP  <||@
  Comment 905 1408 NOP  <||@
  Comment 906 1410 NOP  <||@
  Comment 907 1412 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B62 y: -99 size: DWORD inlinedY: null  <||@
  Comment 916 block B62 null  <||@
  Comment 916 1534 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 916 1536 NOP  <||@
  Comment 917 1538 NOP  <||@
  Comment 918 1540 NOP  <||@
  Comment 919 1542 r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 922 1544 JUMP ~outgoingValues: [] destination: B62 -> B72  <||@
  Comment 927 block B19 null  <||@
  Comment 927 266 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 927 268 NOP  <||@
  Comment 928 270 NOP  <||@
  Comment 929 272 NOP  <||@
  Comment 930 274 rcx|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 935 276 JUMP ~outgoingValues: [] destination: B19 -> B22  <||@
  Comment 940 block B25 null  <||@
  Comment 940 374 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 940 376 NOP  <||@
  Comment 941 378 NOP  <||@
  Comment 942 380 NOP  <||@
  Comment 943 382 NOP  <||@
  Comment 944 384 NOP  <||@
  Comment 945 386 NOP  <||@
  Comment 946 388 NOP  <||@
  Comment 947 390 NOP  <||@
  Comment 948 392 NOP  <||@
  Comment 949 394 NOP  <||@
  Comment 950 396 NOP  <||@
  Comment 951 398 NOP  <||@
  Comment 952 400 NOP  <||@
  Comment 953 402 NOP  <||@
  Comment 954 404 NOP  <||@
  Comment 955 406 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 957 408 rax|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 961 410 rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 964 412 r14|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 970 416 r14|DWORD = SHL (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 973 418 r14|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 976 420 CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 979 422 rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 983 424 rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 986 426 rcx|DWORD = DEC value: rax|DWORD size: DWORD  <||@
  Comment 990 428 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B89 y: 2147483639 size: DWORD inlinedY: null  <||@
  Comment 1002 block B26 null  <||@
  Comment 1002 430 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1002 432 NOP  <||@
  Comment 1003 434 NOP  <||@
  Comment 1004 436 NOP  <||@
  Comment 1005 438 NOP  <||@
  Comment 1006 440 NOP  <||@
  Comment 1007 442 NOP  <||@
  Comment 1008 444 NOP  <||@
  Comment 1009 446 NOP  <||@
  Comment 1010 448 NOP  <||@
  Comment 1011 450 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1013 452 rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1015 456 r14|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1021 458 CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B31 size: DWORD  <||@
  Comment 1030 block B31 null  <||@
  Comment 1030 630 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1030 632 NOP  <||@
  Comment 1031 634 NOP  <||@
  Comment 1032 636 NOP  <||@
  Comment 1033 638 NOP  <||@
  Comment 1034 640 NOP  <||@
  Comment 1035 642 NOP  <||@
  Comment 1036 644 NOP  <||@
  Comment 1037 646 NOP  <||@
  Comment 1038 648 NOP  <||@
  Comment 1039 650 NOP  <||@
  Comment 1040 652 NOP  <||@
  Comment 1041 654 rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1048 656 rcx|QWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 1051 658 rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD  <||@
  Comment 1055 660 rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD  <||@
  Comment 1059 662 rax|QWORD = ADD (x: rcx|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1065 664 CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD  <||@
  Comment 1078 block B33 null  <||@
  Comment 1078 722 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1078 724 NOP  <||@
  Comment 1079 726 NOP  <||@
  Comment 1080 728 NOP  <||@
  Comment 1081 730 NOP  <||@
  Comment 1082 732 NOP  <||@
  Comment 1083 734 NOP  <||@
  Comment 1084 736 NOP  <||@
  Comment 1085 738 NOP  <||@
  Comment 1086 740 NOP  <||@
  Comment 1087 742 NOP  <||@
  Comment 1088 744 NOP  <||@
  Comment 1089 746 NOP  <||@
  Comment 1090 748 NOP  <||@
  Comment 1091 750 NOP  <||@
  Comment 1092 752 MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD  <||@
  Comment 1099 754 AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 256] instr: 0  <||@
  Comment 1107 756 AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 320] instr: 0  <||@
  Comment 1115 758 AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 384] instr: 0  <||@
  Comment 1123 760 MOV x: [rdi|QWORD] y: 1 size: QWORD  <||@
  Comment 1130 762 MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 1130 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 1137 764 MOV (x: [rdi|QWORD + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 1141 766 rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD  <||@
  Comment 1145 768 CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 1158 block B34 null  <||@
  Comment 1158 770 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1158 772 NOP  <||@
  Comment 1159 774 NOP  <||@
  Comment 1160 776 NOP  <||@
  Comment 1161 778 rax|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 1168 780 JUMP ~outgoingValues: [] destination: B34 -> B35  <||@
  Comment 1173 block B36 loop 0 depth 1 header:1088|LoopBegin  <||@
  Comment 1173 794 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1184 796 NOP  <||@
  Comment 1185 798 NOP  <||@
  Comment 1186 800 NOP  <||@
  Comment 1187 802 NOP  <||@
  Comment 1188 804 NOP  <||@
  Comment 1189 806 NOP  <||@
  Comment 1190 808 NOP  <||@
  Comment 1191 810 MOV x: [rdi|QWORD + rax|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 1199 812 rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD  <||@
  Comment 1203 814 JUMP ~outgoingValues: [] destination: B36 -> B35  <||@
  Comment 1203 block B35 loop 0 depth 1 header:1088|LoopBegin  <||@
  Comment 1203 782 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1203 784 NOP  <||@
  Comment 1204 786 NOP  <||@
  Comment 1205 788 NOP  <||@
  Comment 1206 790 NOP  <||@
  Comment 1207 792 CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD  <||@
  Comment 1212 block B37 null  <||@
  Comment 1212 816 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1212 818 NOP  <||@
  Comment 1213 820 NOP  <||@
  Comment 1214 822 NOP  <||@
  Comment 1215 824 JUMP ~outgoingValues: [] destination: B37 -> B39  <||@
  Comment 1215 block B39 null  <||@
  Comment 1215 878 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1215 880 NOP  <||@
  Comment 1216 882 NOP  <||@
  Comment 1217 884 NOP  <||@
  Comment 1218 886 NOP  <||@
  Comment 1219 888 rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 1219 890 JUMP ~outgoingValues: [] destination: B39 -> B40  <||@
  Comment 1219 block B40 null  <||@
  Comment 1219 892 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1219 894 NOP  <||@
  Comment 1220 896 NOP  <||@
  Comment 1221 898 NOP  <||@
  Comment 1222 900 NOP  <||@
  Comment 1223 902 NOP  <||@
  Comment 1224 904 NOP  <||@
  Comment 1225 906 CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1228 908 rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 1235 910 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD  <||@
  Comment 1243 block B42 null  <||@
  Comment 1243 934 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1243 936 NOP  <||@
  Comment 1244 938 NOP  <||@
  Comment 1245 940 NOP  <||@
  Comment 1246 942 NOP  <||@
  Comment 1247 944 CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD  <||@
  Comment 1256 block B44 null  <||@
  Comment 1256 968 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1256 970 NOP  <||@
  Comment 1257 972 NOP  <||@
  Comment 1258 974 NOP  <||@
  Comment 1259 976 NOP  <||@
  Comment 1260 978 CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD  <||@
  Comment 1269 block B46 null  <||@
  Comment 1269 1002 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1269 1004 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1273 1006 stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1277 1008 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1282 1010 stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1287 1012 stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1291 1014 NOP  <||@
  Comment 1292 1016 NOP  <||@
  Comment 1293 1018 NOP  <||@
  Comment 1294 1020 NOP  <||@
  Comment 1295 1022 NOP  <||@
  Comment 1296 1024 NOP  <||@
  Comment 1297 1026 NOP  <||@
  Comment 1298 1028 NOP  <||@
  Comment 1299 1030 NOP  <||@
  Comment 1300 1032 NOP  <||@
  Comment 1301 1034 NOP  <||@
  Comment 1302 1036 NOP  <||@
  Comment 1303 1038 NOP  <||@
  Comment 1304 1040 NOP  <||@
  Comment 1305 1042 NOP  <||@
  Comment 1306 1044 r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1306 1046 r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1309 1048 rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1309 1050 stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1314 1052 rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD  <||@
  Comment 1318 1054 rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD  <||@
  Comment 1322 1056 rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 1325 1058 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1325 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 1330 1064 JUMP ~outgoingValues: [] destination: B46 -> B47  <||@
  Comment 1330 block B47 null  <||@
  Comment 1330 1066 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1330 624 rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1335 626 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1340 1068 NOP  <||@
  Comment 1341 1070 NOP  <||@
  Comment 1342 1072 NOP  <||@
  Comment 1343 1074 NOP  <||@
  Comment 1344 1076 NOP  <||@
  Comment 1345 1078 NOP  <||@
  Comment 1346 1080 NOP  <||@
  Comment 1347 1082 NOP  <||@
  Comment 1348 1084 NOP  <||@
  Comment 1349 1086 NOP  <||@
  Comment 1350 1088 NOP  <||@
  Comment 1351 1090 NOP  <||@
  Comment 1352 1092 NOP  <||@
  Comment 1353 1094 NOP  <||@
  Comment 1354 1096 NOP  <||@
  Comment 1355 1098 NOP  <||@
  Comment 1356 1100 NOP  <||@
  Comment 1357 1102 NOP  <||@
  Comment 1358 1104 NOP  <||@
  Comment 1359 1106 NOP  <||@
  Comment 1360 1108 NOP  <||@
  Comment 1361 1110 NOP  <||@
  Comment 1362 1112 NOP  <||@
  Comment 1363 1114 NOP  <||@
  Comment 1364 1116 NOP  <||@
  Comment 1365 1118 NOP  <||@
  Comment 1366 1120 NOP  <||@
  Comment 1367 1122 NOP  <||@
  Comment 1368 1124 NOP  <||@
  Comment 1369 1126 NOP  <||@
  Comment 1370 1128 NOP  <||@
  Comment 1371 1130 NOP  <||@
  Comment 1372 1132 NOP  <||@
  Comment 1373 1134 NOP  <||@
  Comment 1374 1136 NOP  <||@
  Comment 1375 1138 NOP  <||@
  Comment 1376 1140 NOP  <||@
  Comment 1377 1142 NOP  <||@
  Comment 1378 1144 NOP  <||@
  Comment 1379 1146 NOP  <||@
  Comment 1380 1148 NOP  <||@
  Comment 1381 1150 NOP  <||@
  Comment 1382 1152 NOP  <||@
  Comment 1383 1154 NOP  <||@
  Comment 1384 1156 NOP  <||@
  Comment 1385 1158 NOP  <||@
  Comment 1386 1160 NOP  <||@
  Comment 1387 1162 NOP  <||@
  Comment 1388 1164 NOP  <||@
  Comment 1389 1166 NOP  <||@
  Comment 1390 1168 NOP  <||@
  Comment 1391 1170 NOP  <||@
  Comment 1392 1172 NOP  <||@
  Comment 1393 1174 NOP  <||@
  Comment 1394 1176 NOP  <||@
  Comment 1395 1178 NOP  <||@
  Comment 1396 1180 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b  <||@
  Comment 1452 1182 rdx|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3  <||@
  Comment 1459 1184 MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD  <||@
  Comment 1462 1186 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b  <||@
  Comment 1544 1188 r13|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1547 1190 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1551 1192 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1555 1194 r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1560 1196 r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1565 1198 rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1569 1200 JUMP ~outgoingValues: [] destination: B47 -> B48  <||@
  Comment 1574 block B18 null  <||@
  Comment 1574 254 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1574 256 NOP  <||@
  Comment 1575 258 NOP  <||@
  Comment 1576 260 NOP  <||@
  Comment 1577 262 rcx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 1582 264 JUMP ~outgoingValues: [] destination: B18 -> B22  <||@
  Comment 1587 block B17 null  <||@
  Comment 1587 242 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1587 244 NOP  <||@
  Comment 1588 246 NOP  <||@
  Comment 1589 248 NOP  <||@
  Comment 1590 250 rcx|DWORD = MOVE input: int[5|0x5]  <||@
  Comment 1595 252 JUMP ~outgoingValues: [] destination: B17 -> B22  <||@
  Comment 1600 block B1 null  <||@
  Comment 1600 38 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1600 40 NOP  <||@
  Comment 1601 42 NOP  <||@
  Comment 1602 44 NOP  <||@
  Comment 1603 46 rdi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1608 48 rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1610 50 JUMP ~outgoingValues: [] destination: B1 -> B3  <||@
  Comment 1615 block B80 null  <||@
  Comment 1615 1844 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1615 1846 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1619 1848 NOP  <||@
  Comment 1620 1850 NOP  <||@
  Comment 1621 1852 NOP  <||@
  Comment 1622 1854 NOP  <||@
  Comment 1623 1856 NOP  <||@
  Comment 1624 1858 rdx|DWORD = DEC value: rax|DWORD size: DWORD  <||@
  Comment 1628 1860 CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: DWORD  <||@
  Comment 1637 block B81 null  <||@
  Comment 1637 1862 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1637 1864 NOP  <||@
  Comment 1638 1866 NOP  <||@
  Comment 1639 1868 NOP  <||@
  Comment 1640 1870 NOP  <||@
  Comment 1641 1872 MOVB x: [r13|QWORD[.] + rdx|DWORD * 1 + 16] y: 45 size: BYTE  <||@
  Comment 1647 1876 JUMP ~outgoingValues: [] destination: B81 -> B84  <||@
  Comment 1652 block B50 null  <||@
  Comment 1652 1226 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1652 1228 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1656 1230 stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1660 1232 NOP  <||@
  Comment 1661 1234 NOP  <||@
  Comment 1662 1236 NOP  <||@
  Comment 1663 1238 r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1668 1244 JUMP ~outgoingValues: [] destination: B50 -> B52  <||@
  Comment 1673 block B16 null  <||@
  Comment 1673 230 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1673 232 NOP  <||@
  Comment 1674 234 NOP  <||@
  Comment 1675 236 NOP  <||@
  Comment 1676 238 rcx|DWORD = MOVE input: int[6|0x6]  <||@
  Comment 1681 240 JUMP ~outgoingValues: [] destination: B16 -> B22  <||@
  Comment 1686 block B15 null  <||@
  Comment 1686 218 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1686 220 NOP  <||@
  Comment 1687 222 NOP  <||@
  Comment 1688 224 NOP  <||@
  Comment 1689 226 rcx|DWORD = MOVE input: int[7|0x7]  <||@
  Comment 1694 228 JUMP ~outgoingValues: [] destination: B15 -> B22  <||@
  Comment 1699 block B14 null  <||@
  Comment 1699 206 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1699 208 NOP  <||@
  Comment 1700 210 NOP  <||@
  Comment 1701 212 NOP  <||@
  Comment 1702 214 rcx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 1707 216 JUMP ~outgoingValues: [] destination: B14 -> B22  <||@
  Comment 1712 block B13 null  <||@
  Comment 1712 194 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1712 196 NOP  <||@
  Comment 1713 198 NOP  <||@
  Comment 1714 200 NOP  <||@
  Comment 1715 202 rcx|DWORD = MOVE input: int[9|0x9]  <||@
  Comment 1720 204 JUMP ~outgoingValues: [] destination: B13 -> B22  <||@
  Comment 1725 block B32 null  <||@
  Comment 1725 666 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1725 668 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1729 670 stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1733 672 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1738 674 stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1743 676 stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1747 678 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 1747 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 1757 680 NOP  <||@
  Comment 1758 682 NOP  <||@
  Comment 1759 684 NOP  <||@
  Comment 1760 686 NOP  <||@
  Comment 1761 688 NOP  <||@
  Comment 1762 690 NOP  <||@
  Comment 1763 692 NOP  <||@
  Comment 1764 694 NOP  <||@
  Comment 1765 696 NOP  <||@
  Comment 1766 698 rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 1769 700 rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 1772 702 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10]  <||@
  Comment 1772 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1777 [r13:0, stack:24]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10, duringCall: false, rethrow: false]
              |0                  |1               |2               |3 
     locals:  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:36|DWORD  |- 
     stack:   |stack:36|DWORD     |r8|DWORD        |                |    <||@
  Comment 1785 704 NULLCHECK address: [rax|QWORD[.]] state [bci:10]  <||@
  Comment 1785 [rax:0, r13:0, stack:24]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10, duringCall: false, rethrow: false]
              |0                  |1               |2               |3 
     locals:  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:36|DWORD  |- 
     stack:   |stack:36|DWORD     |r8|DWORD        |                |    <||@
  Comment 1785 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1787 706 rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1790 716 rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1794 718 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1799 720 JUMP ~outgoingValues: [] destination: B32 -> B40  <||@
  Comment 1804 block B38 null  <||@
  Comment 1804 826 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1804 828 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1808 830 stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1812 832 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1817 834 stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1822 836 stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1826 838 NOP  <||@
  Comment 1827 840 NOP  <||@
  Comment 1828 842 NOP  <||@
  Comment 1829 844 NOP  <||@
  Comment 1830 846 NOP  <||@
  Comment 1831 848 NOP  <||@
  Comment 1832 850 NOP  <||@
  Comment 1833 852 NOP  <||@
  Comment 1834 854 NOP  <||@
  Comment 1835 856 rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 1838 858 rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 1841 860 ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 1851 862 rdi|QWORD = MOVE input: rsi|QWORD moveKind: QWORD  <||@
  Comment 1854 874 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1859 876 JUMP ~outgoingValues: [] destination: B38 -> B39  <||@
  Comment 1864 block B27 null  <||@
  Comment 1864 460 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1864 462 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1868 464 stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1872 466 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1877 468 stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1882 470 stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1886 472 NOP  <||@
  Comment 1887 474 NOP  <||@
  Comment 1888 476 NOP  <||@
  Comment 1889 478 NOP  <||@
  Comment 1890 480 NOP  <||@
  Comment 1891 482 NOP  <||@
  Comment 1892 484 NOP  <||@
  Comment 1893 486 NOP  <||@
  Comment 1894 488 NOP  <||@
  Comment 1895 490 NOP  <||@
  Comment 1896 492 NOP  <||@
  Comment 1897 494 rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1904 496 r9|QWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1907 498 rsi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD  <||@
  Comment 1911 500 rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD  <||@
  Comment 1915 502 rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1921 504 CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD  <||@
  Comment 1934 block B29 null  <||@
  Comment 1934 538 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1934 540 NOP  <||@
  Comment 1935 542 NOP  <||@
  Comment 1936 544 NOP  <||@
  Comment 1937 546 NOP  <||@
  Comment 1938 548 NOP  <||@
  Comment 1939 550 NOP  <||@
  Comment 1940 552 NOP  <||@
  Comment 1941 554 NOP  <||@
  Comment 1942 556 NOP  <||@
  Comment 1943 558 NOP  <||@
  Comment 1944 560 NOP  <||@
  Comment 1945 562 MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD  <||@
  Comment 1952 564 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0  <||@
  Comment 1960 566 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0  <||@
  Comment 1968 568 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0  <||@
  Comment 1976 570 MOV x: [rdi|QWORD] y: 1 size: QWORD  <||@
  Comment 1983 572 MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 1983 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 1990 574 MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 1994 576 rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 1994 578 JUMP ~outgoingValues: [] destination: B29 -> B30  <||@
  Comment 1994 block B30 null  <||@
  Comment 1994 580 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1994 582 NOP  <||@
  Comment 1995 584 NOP  <||@
  Comment 1996 586 NOP  <||@
  Comment 1997 588 NOP  <||@
  Comment 1998 590 NOP  <||@
  Comment 1999 592 NOP  <||@
  Comment 2000 594 NOP  <||@
  Comment 2001 596 NOP  <||@
  Comment 2002 598 NOP  <||@
  Comment 2003 600 NOP  <||@
  Comment 2004 602 NOP  <||@
  Comment 2005 604 NOP  <||@
  Comment 2006 606 NOP  <||@
  Comment 2007 608 NOP  <||@
  Comment 2008 610 r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2008 612 rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2011 614 stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2016 616 rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD  <||@
  Comment 2020 618 rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 2024 620 rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD  <||@
  Comment 2027 622 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 2027 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 2032 628 JUMP ~outgoingValues: [] destination: B30 -> B47  <||@
  Comment 2037 block B28 null  <||@
  Comment 2037 506 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2037 508 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 2037 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 2047 510 NOP  <||@
  Comment 2048 512 NOP  <||@
  Comment 2049 514 NOP  <||@
  Comment 2050 516 NOP  <||@
  Comment 2051 518 NOP  <||@
  Comment 2052 520 NOP  <||@
  Comment 2053 522 NOP  <||@
  Comment 2054 524 NOP  <||@
  Comment 2055 526 NOP  <||@
  Comment 2056 528 rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 2059 530 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10]  <||@
  Comment 2059 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 2064 [r13:0, stack:24]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10, duringCall: false, rethrow: false]
              |0                  |1               |2               |3 
     locals:  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:36|DWORD  |- 
     stack:   |stack:36|DWORD     |r8|DWORD        |                |    <||@
  Comment 2072 532 NULLCHECK address: [rax|QWORD[.]] state [bci:10]  <||@
  Comment 2072 [rax:0, r13:0, stack:24]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10, duringCall: false, rethrow: false]
              |0                  |1               |2               |3 
     locals:  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:36|DWORD  |- 
     stack:   |stack:36|DWORD     |r8|DWORD        |                |    <||@
  Comment 2072 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2074 534 rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2077 536 JUMP ~outgoingValues: [] destination: B28 -> B30  <||@
  Comment 2079 block B65 null  <||@
  Comment 2079 1574 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2079 1576 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 2083 1578 NOP  <||@
  Comment 2084 1580 NOP  <||@
  Comment 2085 1582 NOP  <||@
  Comment 2086 1584 r10|DWORD = MOVE input: int[-189723|0xfffffffffffd1ae5]  <||@
  Comment 2092 1586 JUMP ~outgoingValues: [] destination: B65 -> B66  <||@
  Comment 2092 block B66 null  <||@
  Comment 2092 1588 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2092 1590 NOP  <||@
  Comment 2093 1592 NOP  <||@
  Comment 2094 1594 NOP  <||@
  Comment 2095 1596 NOP  <||@
  Comment 2096 1598 NOP  <||@
  Comment 2097 1600 NOP  <||@
  Comment 2098 1602 NOP  <||@
  Comment 2099 1604 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2106 1606 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2117 1608 DEOPT info [bci:22, 30]  <||@
  Comment 2117 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2122 [r13:0, stack:24]at java.lang.Integer.getChars(Integer.java:513) [bci: 22, duringCall: false, rethrow: false]
              |0          |1  |2             |3  |4  |5          |6              
     locals:  |rcx|DWORD  |-  |r13|QWORD[.]  |-  |-  |rbx|DWORD  |stack:40|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30, duringCall: true, rethrow: false]
              |0                  |1  |2  |3              
     locals:  |stack:56|QWORD[.]  |-  |-  |stack:28|DWORD   <||@
  Comment 2130 block B67 null  <||@
  Comment 2130 1610 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2130 1612 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 2134 1614 NOP  <||@
  Comment 2135 1616 NOP  <||@
  Comment 2136 1618 NOP  <||@
  Comment 2137 1620 r10|DWORD = MOVE input: int[-187419|0xfffffffffffd23e5]  <||@
  Comment 2143 1628 JUMP ~outgoingValues: [] destination: B67 -> B70  <||@
  Comment 2143 block B70 null  <||@
  Comment 2143 1670 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2143 1666 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2148 1672 NOP  <||@
  Comment 2149 1674 NOP  <||@
  Comment 2150 1676 NOP  <||@
  Comment 2151 1678 NOP  <||@
  Comment 2152 1680 NOP  <||@
  Comment 2153 1682 NOP  <||@
  Comment 2154 1684 NOP  <||@
  Comment 2155 1686 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2162 1688 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2173 1690 DEOPT info [bci:22, 30]  <||@
  Comment 2173 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2178 [rsi:0, r13:0]at java.lang.Integer.getChars(Integer.java:513) [bci: 22, duringCall: false, rethrow: false]
              |0          |1  |2             |3  |4  |5          |6        
     locals:  |r11|DWORD  |-  |r13|QWORD[.]  |-  |-  |rbp|DWORD  |r8|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2  |3         
     locals:  |rsi|QWORD[.]  |-  |-  |rbp|DWORD   <||@
  Comment 2186 block B69 null  <||@
  Comment 2186 1650 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2186 1652 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 2190 1654 NOP  <||@
  Comment 2191 1656 NOP  <||@
  Comment 2192 1658 NOP  <||@
  Comment 2193 1660 r10|DWORD = MOVE input: int[-180507|0xfffffffffffd3ee5]  <||@
  Comment 2199 1668 JUMP ~outgoingValues: [] destination: B69 -> B70  <||@
  Comment 2201 block B77 null  <||@
  Comment 2201 1796 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2201 1798 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 2205 1800 NOP  <||@
  Comment 2206 1802 NOP  <||@
  Comment 2207 1804 NOP  <||@
  Comment 2208 1806 NOP  <||@
  Comment 2209 1808 NOP  <||@
  Comment 2210 1810 NOP  <||@
  Comment 2211 1812 NOP  <||@
  Comment 2212 1814 MOV x: [r15|QWORD + 1156] y: -207643 size: DWORD  <||@
  Comment 2223 1816 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2234 1818 DEOPT info [bci:85, 30]  <||@
  Comment 2234 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2239 [r13:0, stack:24]at java.lang.Integer.getChars(Integer.java:523) [bci: 85, duringCall: false, rethrow: false]
              |0          |1  |2             |3  |4  |5         |6              
     locals:  |r11|DWORD  |-  |r13|QWORD[.]  |-  |-  |r8|DWORD  |stack:40|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30, duringCall: true, rethrow: false]
              |0                  |1  |2  |3              
     locals:  |stack:56|QWORD[.]  |-  |-  |stack:28|DWORD   <||@
  Comment 2247 block B68 null  <||@
  Comment 2247 1630 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2247 1632 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 2251 1634 NOP  <||@
  Comment 2252 1636 NOP  <||@
  Comment 2253 1638 NOP  <||@
  Comment 2254 1640 r10|DWORD = MOVE input: int[-184091|0xfffffffffffd30e5]  <||@
  Comment 2260 1648 JUMP ~outgoingValues: [] destination: B68 -> B70  <||@
  Comment 2262 block B82 null  <||@
  Comment 2262 1878 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2262 1880 NOP  <||@
  Comment 2263 1882 NOP  <||@
  Comment 2264 1884 NOP  <||@
  Comment 2265 1886 NOP  <||@
  Comment 2266 1888 NOP  <||@
  Comment 2267 1890 NOP  <||@
  Comment 2268 1892 NOP  <||@
  Comment 2269 1894 MOV x: [r15|QWORD + 1156] y: -204315 size: DWORD  <||@
  Comment 2280 1896 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2291 1898 DEOPT info [bci:104, 30]  <||@
  Comment 2291 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2296 [r13:0, stack:24]at java.lang.Integer.getChars(Integer.java:527) [bci: 104, duringCall: false, rethrow: false]
              |0  |1  |2             |3  |4  |5          |6              
     locals:  |-  |-  |r13|QWORD[.]  |-  |-  |rax|DWORD  |stack:40|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30, duringCall: true, rethrow: false]
              |0                  |1  |2  |3              
     locals:  |stack:56|QWORD[.]  |-  |-  |stack:28|DWORD   <||@
  Comment 2304 block B88 null  <||@
  Comment 2304 1986 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2304 1988 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 2308 1990 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 2313 1992 stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 2317 1994 NOP  <||@
  Comment 2318 1996 NOP  <||@
  Comment 2319 1998 NOP  <||@
  Comment 2320 2000 NOP  <||@
  Comment 2321 2002 NOP  <||@
  Comment 2322 2004 NOP  <||@
  Comment 2323 2006 NOP  <||@
  Comment 2324 2008 MOV x: [r15|QWORD + 1156] y: -233747 size: DWORD  <||@
  Comment 2335 2010 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 2346 2012 DEOPT info [bci:38, 14]  <||@
  Comment 2346 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2351 [stack:24]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1               |2               |3              
     locals:  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:36|DWORD  |stack:28|DWORD   <||@
  Comment 2359 block B43 null  <||@
  Comment 2359 946 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2359 948 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 2364 950 stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 2368 952 NOP  <||@
  Comment 2369 954 NOP  <||@
  Comment 2370 956 NOP  <||@
  Comment 2371 958 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2378 960 r10|DWORD = MOVE input: int[-238105|0xfffffffffffc5de7]  <||@
  Comment 2384 966 JUMP ~outgoingValues: [] destination: B43 -> B90  <||@
  Comment 2384 block B90 null  <||@
  Comment 2384 2036 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2384 2038 NOP  <||@
  Comment 2385 2040 NOP  <||@
  Comment 2386 2042 NOP  <||@
  Comment 2387 2044 NOP  <||@
  Comment 2388 2046 NOP  <||@
  Comment 2389 2048 NOP  <||@
  Comment 2390 2050 NOP  <||@
  Comment 2391 2052 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2398 2054 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2405 2056 DEOPT info [bci:10]  <||@
  Comment 2405 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2410 [stack:24]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10, duringCall: false, rethrow: false]
              |0                  |1          |2         |3 
     locals:  |stack:56|QWORD[.]  |rdx|DWORD  |r9|DWORD  |- 
     stack:   |r9|DWORD           |r8|DWORD   |          |    <||@
  Comment 2418 block B89 null  <||@
  Comment 2418 2014 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2418 2016 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 2423 2018 stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 2427 2020 NOP  <||@
  Comment 2428 2022 NOP  <||@
  Comment 2429 2024 NOP  <||@
  Comment 2430 2026 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 2437 2028 r10|DWORD = MOVE input: int[-236051|0xfffffffffffc65ed]  <||@
  Comment 2443 2034 JUMP ~outgoingValues: [] destination: B89 -> B90  <||@
  Comment 2445 block B64 null  <||@
  Comment 2445 1560 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2445 1562 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 2449 1564 NOP  <||@
  Comment 2450 1566 NOP  <||@
  Comment 2451 1568 NOP  <||@
  Comment 2452 1570 r10|DWORD = MOVE input: int[-192283|0xfffffffffffd10e5]  <||@
  Comment 2458 1572 JUMP ~outgoingValues: [] destination: B64 -> B66  <||@
  Comment 2463 block B45 null  <||@
  Comment 2463 980 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2463 982 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 2468 984 stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 2472 986 NOP  <||@
  Comment 2473 988 NOP  <||@
  Comment 2474 990 NOP  <||@
  Comment 2475 992 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2482 994 r10|DWORD = MOVE input: int[-239129|0xfffffffffffc59e7]  <||@
  Comment 2488 1000 JUMP ~outgoingValues: [] destination: B45 -> B90  <||@
  Comment 2490 block B63 null  <||@
  Comment 2490 1546 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2490 1548 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 2494 1550 NOP  <||@
  Comment 2495 1552 NOP  <||@
  Comment 2496 1554 NOP  <||@
  Comment 2497 1556 r10|DWORD = MOVE input: int[-195611|0xfffffffffffd03e5]  <||@
  Comment 2503 1558 JUMP ~outgoingValues: [] destination: B63 -> B66  <||@
  Comment 2508 block B41 null  <||@
  Comment 2508 912 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2508 914 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 2513 916 stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 2517 918 NOP  <||@
  Comment 2518 920 NOP  <||@
  Comment 2519 922 NOP  <||@
  Comment 2520 924 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2527 926 r10|DWORD = MOVE input: int[-237081|0xfffffffffffc61e7]  <||@
  Comment 2533 932 JUMP ~outgoingValues: [] destination: B41 -> B90  <||@
  Comment 2538 block B86 null  <||@
  Comment 2538 1950 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2538 1952 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 2542 1954 NOP  <||@
  Comment 2543 1956 NOP  <||@
  Comment 2544 1958 NOP  <||@
  Comment 2545 1960 r10|DWORD = MOVE input: int[-198171|0xfffffffffffcf9e5]  <||@
  Comment 2551 1962 JUMP ~outgoingValues: [] destination: B86 -> B87  <||@
  Comment 2551 block B87 null  <||@
  Comment 2551 1964 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2551 1966 NOP  <||@
  Comment 2552 1968 NOP  <||@
  Comment 2553 1970 NOP  <||@
  Comment 2554 1972 NOP  <||@
  Comment 2555 1974 NOP  <||@
  Comment 2556 1976 NOP  <||@
  Comment 2557 1978 NOP  <||@
  Comment 2558 1980 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2565 1982 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2576 1984 DEOPT info [bci:72, 30]  <||@
  Comment 2576 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2581 [r13:0, stack:24]at java.lang.Integer.getChars(Integer.java:522) [bci: 72, duringCall: false, rethrow: false]
              |0          |1  |2             |3  |4  |5          |6              
     locals:  |r11|DWORD  |-  |r13|QWORD[.]  |-  |-  |rbx|DWORD  |stack:40|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30, duringCall: true, rethrow: false]
              |0                  |1  |2  |3              
     locals:  |stack:56|QWORD[.]  |-  |-  |stack:28|DWORD   <||@
  Comment 2589 block B85 null  <||@
  Comment 2589 1936 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2589 1938 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 2593 1940 NOP  <||@
  Comment 2594 1942 NOP  <||@
  Comment 2595 1944 NOP  <||@
  Comment 2596 1946 r10|DWORD = MOVE input: int[-201499|0xfffffffffffcece5]  <||@
  Comment 2602 1948 JUMP ~outgoingValues: [] destination: B85 -> B87  <||@
  Comment 2609 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 2634 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2644 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2659 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 2692 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2697 [rax:0, rsi:0, stack:24]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-   <||@
  Comment 2727 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2732 [rax:0, r13:0, stack:24]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10, duringCall: false, rethrow: false]
              |0                  |1               |2               |3 
     locals:  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:36|DWORD  |- 
     stack:   |stack:36|DWORD     |r8|DWORD        |                |    <||@
  Comment 2762 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2767 [rax:0, r13:0, stack:24]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10, duringCall: false, rethrow: false]
              |0                  |1               |2               |3 
     locals:  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:36|DWORD  |- 
     stack:   |stack:36|DWORD     |r8|DWORD        |                |    <||@
  Comment 2775 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2775 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2781 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 2781 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-7841[java.lang.AbstractStringBuilder.append(int)]"
  method "HotSpotCompilation-7841[java.lang.AbstractStringBuilder.append(int)]"
  date 1724269751942
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789aed0340 448b560849bc0000002b787f00004d03d44d33e4493bc20f85234d8bfe66669089842400c0feff4883ec489041817f20030000000f85f2090000909090909090909090909048896c244048897424188b4614448b14c50c000000448bda41f7db85d20f8cd8050000909090bf00000000418bcb9090909083f9f70f8dbd0100009090909083f99d0f8dcb0100009090909081f919fcffff0f8d020300009090909081f9f1d8ffff0f8d790500009090909081f96179feff0f8d760500009090909081f9c1bdf0ff0f8dbc0500009090909081f9816967ff0f8db90500009090909081f9011f0afa0f8db60500009090909081f9013665c40f8db30500009090909090908d4f0a448bc190909090909090909090909090448b4e0c0fbe5e10418be84103e90fbefb8bcf458bea41d3ed8bcd412bcd448be849c1e50383f9010f8d680200009090909090909084db0f85ad0700009090909085d20f8c1505000090909090909090909090909090458b550c85d2410f9cc0450fb6c0448944242848b8f0f2de2d060000004183fb9d0f8ccf0000009090908bdd9090909090418bcbf7d983f9640f833f0800009090909090448bc341ffc8453bd00f865e0800009090909090900fbe44081043884405104183fbf70f8d77000000909090909090908d43fe443bd00f86ad06000048bf68f3de2d0600000090909090900fbe4c0f1041884c05109090909085d20f8c3e040000909090909090909090909090896e0c488bc6488b6c24404883c448493ba7500400000f8703080000c5f877c3909090b9010000009090909003cfe9b6feffff909090418bc0ebad909090b902000000ebe39090909090909090909090909090904963cb4869c91f85eb5148c1f9258bc9ffc16bf964412bfb83ff640f83f80500009090909090448bcd41ffc9453bd10f8621060000909090909090908d5dfe443bd30f869905000049bb68f3de2d0600000090909090909090440fbe7438104788740d10410fbe7c3b1041887c1d10e9a20000006666660f1f840000000000666666900f1f840000000000666666909090909090909090909090909090904863f94869ff1f85eb5148c1ff258bffffc7446bcf64442bc94183f9640f83ed0400009090909090448bf341ffce453bd60f864706000090909090909090448d43fe453bd00f8660060000909090909090909090420fbe4c081043884c3510430fbe4c0b1043884c0510498b8f5804000085018bcf418bd89090909083f99d0f8c6cffffff909090448bd9e9f9fdffff909090b903000000e999feffff9090909090909090909090909090908bcf8bc5d3e0412bc241be0200000041d3e64503f2443bf0410f4fc64103c28bc8ffc981f9f7ffff7f0f83880500009090909090909090908bcfd3f8448bf041d3e6453bd60f84420300009090909090909090909090498bbfb8010000418bce488d49174883e1f8488bc14803c7493b87c80100000f87870200009090909090909090909090909090498987b80100000f188439000100000f188439400100000f1884398001000048c70701000000c74708c02200004489770c488d41f04881f8000800000f838602000090909048c7c010000000e91e0000006666660f1f8400000000009090909090909048c7040700000000488d400890909090483bc877e490909090909090909090909090453bd6418bca410f4fce85c90f8cf104000090909090413bca0f874f04000090909090413bce0f87aa040000896c2434895c243044894c242c44895c2428895424249090909090909090909090909090904c8bd748897c2410498d7d10498d7210488bd1e8ce9489fe488b7c2410488b742418909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f842d0000008b461448c1e0034885c00f841d000000498b57284883fa000f84b30400004883ea084989572849035738488902488bd748c1ea03895614488bd64833d748c1ea160f8442000000488bd648c1ea0948b800e0368d787f00004803d0803a027429f083042400803a00741fc60200498b47484885c00f84660400004883e80849894748490347584889104c8bef8b6c24348b5c2430448b4c242c448b5c24288b542424e921fbffff909090b904000000e912fcffff909090b905000000e905fcffff909090bf010000008bcae924faffff896c243490909090908bd0ffca443bd20f86710200009090909041c64415102de9a0fbffff896c243489542424909090448b5c2424e9d9faffff909090b906000000e9affbffff909090b907000000e9a2fbffff909090b908000000e995fbffff909090b909000000e988fbffff896c2434895c243044894c242c44895c24288954242448bac022002b787f0000909090909090909090488bf2418bd6e8cfe19ffe0f1f8400000000008500488bf88b542424488b742418e9b7fdffff896c2434895c243044894c242c44895c242889542424909090909090909090488bc8488bf7488d7e104833c0f348aa488bfe488b742418e977fdffff896c2434895c243044894c242c44895c2428895424249090909090909090909090498bbfb8010000458bca498d71174883e6f8488bd64803d7493b97c80100000f87670000009090909090909090909090498997b80100000f18843e000100000f18843e400100000f18843e8001000048c70701000000c74708c02200004489570c9090909090909090909090909090488bd748897c2410498d7d10488d7210498bd1e8109289fee93dfdffff48bec022002b787f0000909090909090909090418bd2e8b0e09ffe0f1f8400000000008500488bf8ebab896c243490909041bae51afdff909090909090904589978404000049c7879004000000000000e8f0a58bfe0f1f840000000000896c243490909041bae523fdff488b742418909090909090904589978404000049c7879004000000000000e8b8a58bfe0f1f840000000000896c243490909041bae53efdffebc6896c24349090909090909041c78784040000e5d4fcff49c7879004000000000000e87ba58bfe0f1f840000000000896c243490909041bae530fdffeb899090909090909041c78784040000e5e1fcff49c7879004000000000000e842a58bfe0f1f840000000000896c243444894c242c895424249090909090909041c78784040000ed6efcff49c7879004000014000000e80ba58bfe0f1f84000000000044894c242c8954242490909049c7c30000000041bae75dfcff90909090909090458997840400004d899f90040000e8d0a48bfe0f1f84000000000044894c242c8954242490909049c7c31405000041baed65fcffebc3896c243490909041bae510fdffe98dfeffff44894c242c8954242490909049c7c30000000041bae759fcffeb96896c243490909041bae503fdffe960feffff44894c242c8954242490909049c7c30000000041bae761fcffe966ffffff896c243490909041bae5f9fcff909090909090904589978404000049c7879004000000000000e825a48bfe0f1f840000000000896c243490909041bae5ecfcffebcb48896c2440e8aaa489fee9fff5fffff4488d0de9f7ffff49898f68040000e971b28bfef448890424e867749ffee94efbfffff448891424e8d8959ffee99bfbfffff441c78784040000f574fdff49c7879004000000000000e8b1a38bfe0f1f84000000000041c787840400008f8ffbff49c7879004000000000000e88ea38bfe0f1f84000000000041c787840400008fdffbff49c7879004000000000000e86ba38bfe0f1f840000000000e8e4449ffef4e8fea08bfef4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 74 26 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@11fbf5cf slotKind: QWORD  <||@
  Comment 74 28 stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 79 30 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 82 32 r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 82 [rax:0, rsi:0, stack:24]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-   <||@
  Comment 82 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 90 34 r11|DWORD = NEG value: rdx|DWORD size: DWORD  <||@
  Comment 96 36 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0248451913249636 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 104 block B2 null  <||@
  Comment 104 52 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 104 54 NOP  <||@
  Comment 105 56 NOP  <||@
  Comment 106 58 NOP  <||@
  Comment 107 60 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 112 62 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 115 64 JUMP ~outgoingValues: [] destination: B2 -> B3  <||@
  Comment 115 block B3 null  <||@
  Comment 115 66 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 115 68 NOP  <||@
  Comment 116 70 NOP  <||@
  Comment 117 72 NOP  <||@
  Comment 118 74 NOP  <||@
  Comment 119 76 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B21 y: -9 size: DWORD inlinedY: null  <||@
  Comment 128 block B4 null  <||@
  Comment 128 78 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 128 80 NOP  <||@
  Comment 129 82 NOP  <||@
  Comment 130 84 NOP  <||@
  Comment 131 86 NOP  <||@
  Comment 132 88 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B20 y: -99 size: DWORD inlinedY: null  <||@
  Comment 141 block B5 null  <||@
  Comment 141 90 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 141 92 NOP  <||@
  Comment 142 94 NOP  <||@
  Comment 143 96 NOP  <||@
  Comment 144 98 NOP  <||@
  Comment 145 100 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B19 y: -999 size: DWORD inlinedY: null  <||@
  Comment 157 block B6 null  <||@
  Comment 157 102 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 157 104 NOP  <||@
  Comment 158 106 NOP  <||@
  Comment 159 108 NOP  <||@
  Comment 160 110 NOP  <||@
  Comment 161 112 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B18 y: -9999 size: DWORD inlinedY: null  <||@
  Comment 173 block B7 null  <||@
  Comment 173 114 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 173 116 NOP  <||@
  Comment 174 118 NOP  <||@
  Comment 175 120 NOP  <||@
  Comment 176 122 NOP  <||@
  Comment 177 124 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B17 y: -99999 size: DWORD inlinedY: null  <||@
  Comment 189 block B8 null  <||@
  Comment 189 126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 189 128 NOP  <||@
  Comment 190 130 NOP  <||@
  Comment 191 132 NOP  <||@
  Comment 192 134 NOP  <||@
  Comment 193 136 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B16 y: -999999 size: DWORD inlinedY: null  <||@
  Comment 205 block B9 null  <||@
  Comment 205 138 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 205 140 NOP  <||@
  Comment 206 142 NOP  <||@
  Comment 207 144 NOP  <||@
  Comment 208 146 NOP  <||@
  Comment 209 148 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B15 y: -9999999 size: DWORD inlinedY: null  <||@
  Comment 221 block B10 null  <||@
  Comment 221 150 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 221 152 NOP  <||@
  Comment 222 154 NOP  <||@
  Comment 223 156 NOP  <||@
  Comment 224 158 NOP  <||@
  Comment 225 160 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B14 y: -99999999 size: DWORD inlinedY: null  <||@
  Comment 237 block B11 null  <||@
  Comment 237 162 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 237 164 NOP  <||@
  Comment 238 166 NOP  <||@
  Comment 239 168 NOP  <||@
  Comment 240 170 NOP  <||@
  Comment 241 172 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5081433618708683 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: -999999999 size: DWORD inlinedY: null  <||@
  Comment 253 block B12 null  <||@
  Comment 253 174 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 253 176 NOP  <||@
  Comment 254 178 NOP  <||@
  Comment 255 180 NOP  <||@
  Comment 256 182 NOP  <||@
  Comment 257 184 NOP  <||@
  Comment 258 186 NOP  <||@
  Comment 259 188 rcx|DWORD = LEA address: [rdi|DWORD + 10] size: DWORD  <||@
  Comment 262 192 JUMP ~outgoingValues: [] destination: B12 -> B23  <||@
  Comment 262 block B23 null  <||@
  Comment 262 318 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 262 314 r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 265 320 NOP  <||@
  Comment 266 322 NOP  <||@
  Comment 267 324 NOP  <||@
  Comment 268 326 NOP  <||@
  Comment 269 328 NOP  <||@
  Comment 270 330 NOP  <||@
  Comment 271 332 NOP  <||@
  Comment 272 334 NOP  <||@
  Comment 273 336 NOP  <||@
  Comment 274 338 NOP  <||@
  Comment 275 340 NOP  <||@
  Comment 276 342 NOP  <||@
  Comment 277 344 NOP  <||@
  Comment 278 346 r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 282 348 rbx|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 286 350 rbp|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 292 352 rdi|DWORD = MOVSXB value: rbx|DWORD size: DWORD  <||@
  Comment 295 354 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 297 356 r13|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 303 358 rcx|DWORD = SUB (x: rbp|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 308 360 r13|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3  <||@
  Comment 315 362 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: DWORD inlinedY: null  <||@
  Comment 324 block B24 null  <||@
  Comment 324 364 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 324 366 NOP  <||@
  Comment 325 368 NOP  <||@
  Comment 326 370 NOP  <||@
  Comment 327 372 JUMP ~outgoingValues: [] destination: B24 -> B48  <||@
  Comment 327 block B48 null  <||@
  Comment 327 1202 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 327 1204 NOP  <||@
  Comment 328 1206 NOP  <||@
  Comment 329 1208 NOP  <||@
  Comment 330 1210 NOP  <||@
  Comment 331 1212 TESTBYTEBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B88  <||@
  Comment 339 block B49 null  <||@
  Comment 339 1214 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 339 1216 NOP  <||@
  Comment 340 1218 NOP  <||@
  Comment 341 1220 NOP  <||@
  Comment 342 1222 NOP  <||@
  Comment 343 1224 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714438988526654 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD  <||@
  Comment 351 block B51 null  <||@
  Comment 351 1246 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 351 1248 NOP  <||@
  Comment 352 1250 NOP  <||@
  Comment 353 1252 NOP  <||@
  Comment 354 1254 JUMP ~outgoingValues: [] destination: B51 -> B52  <||@
  Comment 354 block B52 null  <||@
  Comment 354 1256 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 354 1258 NOP  <||@
  Comment 355 1260 NOP  <||@
  Comment 356 1262 NOP  <||@
  Comment 357 1264 NOP  <||@
  Comment 358 1266 NOP  <||@
  Comment 359 1268 NOP  <||@
  Comment 360 1270 NOP  <||@
  Comment 361 1272 NOP  <||@
  Comment 362 1274 NOP  <||@
  Comment 363 1276 NOP  <||@
  Comment 364 1278 r10|DWORD = MOV input: [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 368 1280 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 370 1282 r8|DWORD = SETCC condition: <  <||@
  Comment 378 1284 stack:40|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 383 1286 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 49, 50, 51, 52, ...}]  <||@
  Comment 383 {Object[byte[100]{48, 49, 50, 51, 52, ...}]}  <||@
  Comment 393 1288 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.20456323728994374 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B71 y: -99 size: DWORD inlinedY: null  <||@
  Comment 403 block B71 null  <||@
  Comment 403 1692 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 403 1694 NOP  <||@
  Comment 404 1696 NOP  <||@
  Comment 405 1698 NOP  <||@
  Comment 406 1700 rbx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 408 1702 JUMP ~outgoingValues: [] destination: B71 -> B72  <||@
  Comment 408 block B72 null  <||@
  Comment 408 1704 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 408 1706 NOP  <||@
  Comment 409 1708 NOP  <||@
  Comment 410 1710 NOP  <||@
  Comment 411 1712 NOP  <||@
  Comment 412 1714 NOP  <||@
  Comment 413 1716 rcx|DWORD = NEG value: r11|DWORD size: DWORD  <||@
  Comment 418 1718 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B72 -> B73 falseDestination: B72 -> B86 y: 100 size: DWORD inlinedY: null  <||@
  Comment 427 block B73 null  <||@
  Comment 427 1720 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 427 1722 NOP  <||@
  Comment 428 1724 NOP  <||@
  Comment 429 1726 NOP  <||@
  Comment 430 1728 NOP  <||@
  Comment 431 1730 NOP  <||@
  Comment 432 1732 r8|DWORD = DEC value: rbx|DWORD size: DWORD  <||@
  Comment 438 1734 CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B85 size: DWORD  <||@
  Comment 447 block B74 null  <||@
  Comment 447 1736 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 447 1738 NOP  <||@
  Comment 448 1740 NOP  <||@
  Comment 449 1742 NOP  <||@
  Comment 450 1744 NOP  <||@
  Comment 451 1746 NOP  <||@
  Comment 452 1748 NOP  <||@
  Comment 453 1750 rax|DWORD = MOVSXB input: [rax|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD  <||@
  Comment 458 1752 MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 463 1754 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.6223590908157148 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B78 y: -9 size: DWORD inlinedY: null  <||@
  Comment 473 block B75 null  <||@
  Comment 473 1756 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 473 1758 NOP  <||@
  Comment 474 1760 NOP  <||@
  Comment 475 1762 NOP  <||@
  Comment 476 1764 NOP  <||@
  Comment 477 1766 NOP  <||@
  Comment 478 1768 NOP  <||@
  Comment 479 1770 NOP  <||@
  Comment 480 1772 rax|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD  <||@
  Comment 483 1774 CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 size: DWORD  <||@
  Comment 492 block B76 null  <||@
  Comment 492 1776 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 492 1778 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}]  <||@
  Comment 492 {Object[byte[100]{48, 48, 48, 48, 48, ...}]}  <||@
  Comment 502 1780 NOP  <||@
  Comment 503 1782 NOP  <||@
  Comment 504 1784 NOP  <||@
  Comment 505 1786 NOP  <||@
  Comment 506 1788 NOP  <||@
  Comment 507 1790 rcx|DWORD = MOVSXB input: [rdi|QWORD[.] + rcx|DWORD * 1 + 16] size: DWORD  <||@
  Comment 512 1792 MOVB (x: [r13|QWORD[.] + rax|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 517 1794 JUMP ~outgoingValues: [] destination: B76 -> B79  <||@
  Comment 517 block B79 null  <||@
  Comment 517 1832 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 517 1834 NOP  <||@
  Comment 518 1836 NOP  <||@
  Comment 519 1838 NOP  <||@
  Comment 520 1840 NOP  <||@
  Comment 521 1842 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.023714554158984935 condition: < trueDestination: B79 -> B80 falseDestination: B79 -> B83 size: DWORD  <||@
  Comment 529 block B83 null  <||@
  Comment 529 1900 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 529 1902 NOP  <||@
  Comment 530 1904 NOP  <||@
  Comment 531 1906 NOP  <||@
  Comment 532 1908 JUMP ~outgoingValues: [] destination: B83 -> B84  <||@
  Comment 532 block B84 null  <||@
  Comment 532 1910 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 532 1912 NOP  <||@
  Comment 533 1914 NOP  <||@
  Comment 534 1916 NOP  <||@
  Comment 535 1918 NOP  <||@
  Comment 536 1920 NOP  <||@
  Comment 537 1922 NOP  <||@
  Comment 538 1924 NOP  <||@
  Comment 539 1926 NOP  <||@
  Comment 540 1928 NOP  <||@
  Comment 541 1930 MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 544 1932 rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 547 1934 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 556 POLL_RETURN_FAR  <||@
  Comment 573 block B21 null  <||@
  Comment 573 290 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 573 292 NOP  <||@
  Comment 574 294 NOP  <||@
  Comment 575 296 NOP  <||@
  Comment 576 298 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 581 300 JUMP ~outgoingValues: [] destination: B21 -> B22  <||@
  Comment 581 block B22 null  <||@
  Comment 581 302 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 581 304 NOP  <||@
  Comment 582 306 NOP  <||@
  Comment 583 308 NOP  <||@
  Comment 584 310 NOP  <||@
  Comment 585 312 rcx|DWORD = ADD (x: rcx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 587 316 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 592 block B78 null  <||@
  Comment 592 1820 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 592 1822 NOP  <||@
  Comment 593 1824 NOP  <||@
  Comment 594 1826 NOP  <||@
  Comment 595 1828 rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 598 1830 JUMP ~outgoingValues: [] destination: B78 -> B79  <||@
  Comment 600 block B20 null  <||@
  Comment 600 278 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 600 280 NOP  <||@
  Comment 601 282 NOP  <||@
  Comment 602 284 NOP  <||@
  Comment 603 286 rcx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 608 288 JUMP ~outgoingValues: [] destination: B20 -> B22  <||@
  Comment 610 block B53 null  <||@
  Comment 610 1290 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 610 1292 NOP  <||@
  Comment 611 1294 NOP  <||@
  Comment 612 1296 NOP  <||@
  Comment 613 1298 NOP  <||@
  Comment 614 1300 NOP  <||@
  Comment 615 1302 NOP  <||@
  Comment 616 1304 NOP  <||@
  Comment 617 1306 NOP  <||@
  Comment 618 1308 NOP  <||@
  Comment 619 1310 NOP  <||@
  Comment 620 1312 NOP  <||@
  Comment 621 1314 NOP  <||@
  Comment 622 1316 NOP  <||@
  Comment 623 1318 NOP  <||@
  Comment 624 1320 NOP  <||@
  Comment 625 1322 rcx|QWORD = MOVSXD value: r11|DWORD size: QWORD  <||@
  Comment 628 1324 rcx|QWORD = IMUL x: rcx|QWORD y: 1374389535 size: QWORD  <||@
  Comment 635 1326 rcx|QWORD = SAR x: rcx|QWORD y: 37 size: QWORD  <||@
  Comment 639 1328 rcx|DWORD = MOV value: rcx|QWORD size: DWORD  <||@
  Comment 641 1330 rcx|DWORD = INC value: rcx|DWORD size: DWORD  <||@
  Comment 643 1332 rdi|DWORD = IMUL x: rcx|DWORD y: 100 size: DWORD  <||@
  Comment 646 1334 rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 649 1336 CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B69 y: 100 size: DWORD inlinedY: null  <||@
  Comment 658 block B54 null  <||@
  Comment 658 1338 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 658 1340 NOP  <||@
  Comment 659 1342 NOP  <||@
  Comment 660 1344 NOP  <||@
  Comment 661 1346 NOP  <||@
  Comment 662 1348 NOP  <||@
  Comment 663 1350 r9|DWORD = DEC value: rbp|DWORD size: DWORD  <||@
  Comment 669 1352 CMPBRANCH (x: r10|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B68 size: DWORD  <||@
  Comment 678 block B55 null  <||@
  Comment 678 1354 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 678 1356 NOP  <||@
  Comment 679 1358 NOP  <||@
  Comment 680 1360 NOP  <||@
  Comment 681 1362 NOP  <||@
  Comment 682 1364 NOP  <||@
  Comment 683 1366 NOP  <||@
  Comment 684 1368 NOP  <||@
  Comment 685 1370 rbx|DWORD = LEA address: [rbp|DWORD - 2] size: DWORD  <||@
  Comment 688 1372 CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B67 size: DWORD  <||@
  Comment 697 block B56 null  <||@
  Comment 697 1374 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 697 1376 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[byte[100]{48, 48, 48, 48, 48, ...}]  <||@
  Comment 697 {Object[byte[100]{48, 48, 48, 48, 48, ...}]}  <||@
  Comment 707 1378 NOP  <||@
  Comment 708 1380 NOP  <||@
  Comment 709 1382 NOP  <||@
  Comment 710 1384 NOP  <||@
  Comment 711 1386 NOP  <||@
  Comment 712 1388 NOP  <||@
  Comment 713 1390 NOP  <||@
  Comment 714 1392 r14|DWORD = MOVSXB input: [rax|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD  <||@
  Comment 720 1394 MOVB (x: [r13|QWORD[.] + r9|DWORD * 1 + 16], y: r14|DWORD) size: BYTE  <||@
  Comment 725 1396 rdi|DWORD = MOVSXB input: [r11|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD  <||@
  Comment 731 1398 MOVB (x: [r13|QWORD[.] + rbx|DWORD * 1 + 16], y: rdi|DWORD) size: BYTE  <||@
  Comment 736 1400 JUMP ~outgoingValues: [] destination: B56 -> B57  <||@
  Comment 741 block B58 loop 1 depth 1 header:154|LoopBegin  <||@
  Comment 741 1414 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 768 1416 NOP  <||@
  Comment 769 1418 NOP  <||@
  Comment 770 1420 NOP  <||@
  Comment 771 1422 NOP  <||@
  Comment 772 1424 NOP  <||@
  Comment 773 1426 NOP  <||@
  Comment 774 1428 NOP  <||@
  Comment 775 1430 NOP  <||@
  Comment 776 1432 NOP  <||@
  Comment 777 1434 NOP  <||@
  Comment 778 1436 NOP  <||@
  Comment 779 1438 NOP  <||@
  Comment 780 1440 NOP  <||@
  Comment 781 1442 NOP  <||@
  Comment 782 1444 NOP  <||@
  Comment 783 1446 rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD  <||@
  Comment 786 1448 rdi|QWORD = IMUL x: rdi|QWORD y: 1374389535 size: QWORD  <||@
  Comment 793 1450 rdi|QWORD = SAR x: rdi|QWORD y: 37 size: QWORD  <||@
  Comment 797 1452 rdi|DWORD = MOV value: rdi|QWORD size: DWORD  <||@
  Comment 799 1454 rdi|DWORD = INC value: rdi|DWORD size: DWORD  <||@
  Comment 801 1456 r9|DWORD = IMUL x: rdi|DWORD y: 100 size: DWORD  <||@
  Comment 805 1458 r9|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 808 1460 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B65 y: 100 size: DWORD inlinedY: null  <||@
  Comment 818 block B59 loop 1 depth 1 header:154|LoopBegin  <||@
  Comment 818 1462 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 818 1464 NOP  <||@
  Comment 819 1466 NOP  <||@
  Comment 820 1468 NOP  <||@
  Comment 821 1470 NOP  <||@
  Comment 822 1472 NOP  <||@
  Comment 823 1474 r14|DWORD = DEC value: rbx|DWORD size: DWORD  <||@
  Comment 829 1476 CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B64 size: DWORD  <||@
  Comment 838 block B60 loop 1 depth 1 header:154|LoopBegin  <||@
  Comment 838 1478 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 838 1480 NOP  <||@
  Comment 839 1482 NOP  <||@
  Comment 840 1484 NOP  <||@
  Comment 841 1486 NOP  <||@
  Comment 842 1488 NOP  <||@
  Comment 843 1490 NOP  <||@
  Comment 844 1492 NOP  <||@
  Comment 845 1494 r8|DWORD = LEA address: [rbx|DWORD - 2] size: DWORD  <||@
  Comment 849 1496 CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63 size: DWORD  <||@
  Comment 858 block B61 loop 1 depth 1 header:154|LoopBegin  <||@
  Comment 858 1498 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 858 1500 NOP  <||@
  Comment 859 1502 NOP  <||@
  Comment 860 1504 NOP  <||@
  Comment 861 1506 NOP  <||@
  Comment 862 1508 NOP  <||@
  Comment 863 1510 NOP  <||@
  Comment 864 1512 NOP  <||@
  Comment 865 1514 NOP  <||@
  Comment 866 1516 NOP  <||@
  Comment 867 1518 rcx|DWORD = MOVSXB input: [rax|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD  <||@
  Comment 873 1520 MOVB (x: [r13|QWORD[.] + r14|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 878 1522 rcx|DWORD = MOVSXB input: [r11|QWORD[.] + r9|DWORD * 1 + 16] size: DWORD  <||@
  Comment 884 1524 MOVB (x: [r13|QWORD[.] + r8|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 889 1526 SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:69, 30]  <||@
  Comment 896 [rax:0, rsi:0, r11:0, r13:0, stack:24]at java.lang.Integer.getChars(Integer.java:518) [bci: 69, duringCall: false, rethrow: false]
              |0          |1  |2             |3          |4         |5         |6              
     locals:  |rdi|DWORD  |-  |r13|QWORD[.]  |rdi|DWORD  |r9|DWORD  |r8|DWORD  |stack:40|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2  |3         
     locals:  |rsi|QWORD[.]  |-  |-  |rbp|DWORD   <||@
  Comment 896 {infopoint: SAFEPOINT}  <||@
  Comment 896 POLL_FAR  <||@
  Comment 898 1528 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 900 1530 rbx|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 903 1532 JUMP ~outgoingValues: [] destination: B61 -> B57  <||@
  Comment 903 block B57 loop 1 depth 1 header:154|LoopBegin  <||@
  Comment 903 1402 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 903 1404 NOP  <||@
  Comment 904 1406 NOP  <||@
  Comment 905 1408 NOP  <||@
  Comment 906 1410 NOP  <||@
  Comment 907 1412 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.01 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B62 y: -99 size: DWORD inlinedY: null  <||@
  Comment 916 block B62 null  <||@
  Comment 916 1534 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 916 1536 NOP  <||@
  Comment 917 1538 NOP  <||@
  Comment 918 1540 NOP  <||@
  Comment 919 1542 r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 922 1544 JUMP ~outgoingValues: [] destination: B62 -> B72  <||@
  Comment 927 block B19 null  <||@
  Comment 927 266 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 927 268 NOP  <||@
  Comment 928 270 NOP  <||@
  Comment 929 272 NOP  <||@
  Comment 930 274 rcx|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 935 276 JUMP ~outgoingValues: [] destination: B19 -> B22  <||@
  Comment 940 block B25 null  <||@
  Comment 940 374 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 940 376 NOP  <||@
  Comment 941 378 NOP  <||@
  Comment 942 380 NOP  <||@
  Comment 943 382 NOP  <||@
  Comment 944 384 NOP  <||@
  Comment 945 386 NOP  <||@
  Comment 946 388 NOP  <||@
  Comment 947 390 NOP  <||@
  Comment 948 392 NOP  <||@
  Comment 949 394 NOP  <||@
  Comment 950 396 NOP  <||@
  Comment 951 398 NOP  <||@
  Comment 952 400 NOP  <||@
  Comment 953 402 NOP  <||@
  Comment 954 404 NOP  <||@
  Comment 955 406 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 957 408 rax|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 961 410 rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 964 412 r14|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 970 416 r14|DWORD = SHL (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 973 418 r14|DWORD = ADD (x: r14|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 976 420 CMP (x: r14|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 979 422 rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 983 424 rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 986 426 rcx|DWORD = DEC value: rax|DWORD size: DWORD  <||@
  Comment 990 428 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B89 y: 2147483639 size: DWORD inlinedY: null  <||@
  Comment 1002 block B26 null  <||@
  Comment 1002 430 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1002 432 NOP  <||@
  Comment 1003 434 NOP  <||@
  Comment 1004 436 NOP  <||@
  Comment 1005 438 NOP  <||@
  Comment 1006 440 NOP  <||@
  Comment 1007 442 NOP  <||@
  Comment 1008 444 NOP  <||@
  Comment 1009 446 NOP  <||@
  Comment 1010 448 NOP  <||@
  Comment 1011 450 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1013 452 rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1015 456 r14|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1021 458 CMPBRANCH (x: r10|DWORD, y: r14|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B31 size: DWORD  <||@
  Comment 1030 block B31 null  <||@
  Comment 1030 630 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1030 632 NOP  <||@
  Comment 1031 634 NOP  <||@
  Comment 1032 636 NOP  <||@
  Comment 1033 638 NOP  <||@
  Comment 1034 640 NOP  <||@
  Comment 1035 642 NOP  <||@
  Comment 1036 644 NOP  <||@
  Comment 1037 646 NOP  <||@
  Comment 1038 648 NOP  <||@
  Comment 1039 650 NOP  <||@
  Comment 1040 652 NOP  <||@
  Comment 1041 654 rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1048 656 rcx|QWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 1051 658 rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD  <||@
  Comment 1055 660 rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD  <||@
  Comment 1059 662 rax|QWORD = ADD (x: rcx|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1065 664 CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD  <||@
  Comment 1078 block B33 null  <||@
  Comment 1078 722 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1078 724 NOP  <||@
  Comment 1079 726 NOP  <||@
  Comment 1080 728 NOP  <||@
  Comment 1081 730 NOP  <||@
  Comment 1082 732 NOP  <||@
  Comment 1083 734 NOP  <||@
  Comment 1084 736 NOP  <||@
  Comment 1085 738 NOP  <||@
  Comment 1086 740 NOP  <||@
  Comment 1087 742 NOP  <||@
  Comment 1088 744 NOP  <||@
  Comment 1089 746 NOP  <||@
  Comment 1090 748 NOP  <||@
  Comment 1091 750 NOP  <||@
  Comment 1092 752 MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD  <||@
  Comment 1099 754 AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 256] instr: 0  <||@
  Comment 1107 756 AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 320] instr: 0  <||@
  Comment 1115 758 AMD64PREFETCH ~address: [rcx|QWORD + rdi|QWORD * 1 + 384] instr: 0  <||@
  Comment 1123 760 MOV x: [rdi|QWORD] y: 1 size: QWORD  <||@
  Comment 1130 762 MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 1130 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 1137 764 MOV (x: [rdi|QWORD + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 1141 766 rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD  <||@
  Comment 1145 768 CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 1158 block B34 null  <||@
  Comment 1158 770 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1158 772 NOP  <||@
  Comment 1159 774 NOP  <||@
  Comment 1160 776 NOP  <||@
  Comment 1161 778 rax|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 1168 780 JUMP ~outgoingValues: [] destination: B34 -> B35  <||@
  Comment 1173 block B36 loop 0 depth 1 header:1088|LoopBegin  <||@
  Comment 1173 794 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1184 796 NOP  <||@
  Comment 1185 798 NOP  <||@
  Comment 1186 800 NOP  <||@
  Comment 1187 802 NOP  <||@
  Comment 1188 804 NOP  <||@
  Comment 1189 806 NOP  <||@
  Comment 1190 808 NOP  <||@
  Comment 1191 810 MOV x: [rdi|QWORD + rax|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 1199 812 rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD  <||@
  Comment 1203 814 JUMP ~outgoingValues: [] destination: B36 -> B35  <||@
  Comment 1203 block B35 loop 0 depth 1 header:1088|LoopBegin  <||@
  Comment 1203 782 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1203 784 NOP  <||@
  Comment 1204 786 NOP  <||@
  Comment 1205 788 NOP  <||@
  Comment 1206 790 NOP  <||@
  Comment 1207 792 CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: QWORD  <||@
  Comment 1212 block B37 null  <||@
  Comment 1212 816 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1212 818 NOP  <||@
  Comment 1213 820 NOP  <||@
  Comment 1214 822 NOP  <||@
  Comment 1215 824 JUMP ~outgoingValues: [] destination: B37 -> B39  <||@
  Comment 1215 block B39 null  <||@
  Comment 1215 878 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1215 880 NOP  <||@
  Comment 1216 882 NOP  <||@
  Comment 1217 884 NOP  <||@
  Comment 1218 886 NOP  <||@
  Comment 1219 888 rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 1219 890 JUMP ~outgoingValues: [] destination: B39 -> B40  <||@
  Comment 1219 block B40 null  <||@
  Comment 1219 892 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1219 894 NOP  <||@
  Comment 1220 896 NOP  <||@
  Comment 1221 898 NOP  <||@
  Comment 1222 900 NOP  <||@
  Comment 1223 902 NOP  <||@
  Comment 1224 904 NOP  <||@
  Comment 1225 906 CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1228 908 rcx|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 1235 910 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD  <||@
  Comment 1243 block B42 null  <||@
  Comment 1243 934 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1243 936 NOP  <||@
  Comment 1244 938 NOP  <||@
  Comment 1245 940 NOP  <||@
  Comment 1246 942 NOP  <||@
  Comment 1247 944 CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD  <||@
  Comment 1256 block B44 null  <||@
  Comment 1256 968 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1256 970 NOP  <||@
  Comment 1257 972 NOP  <||@
  Comment 1258 974 NOP  <||@
  Comment 1259 976 NOP  <||@
  Comment 1260 978 CMPBRANCH (x: rcx|DWORD, y: r14|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD  <||@
  Comment 1269 block B46 null  <||@
  Comment 1269 1002 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1269 1004 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1273 1006 stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1277 1008 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1282 1010 stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1287 1012 stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1291 1014 NOP  <||@
  Comment 1292 1016 NOP  <||@
  Comment 1293 1018 NOP  <||@
  Comment 1294 1020 NOP  <||@
  Comment 1295 1022 NOP  <||@
  Comment 1296 1024 NOP  <||@
  Comment 1297 1026 NOP  <||@
  Comment 1298 1028 NOP  <||@
  Comment 1299 1030 NOP  <||@
  Comment 1300 1032 NOP  <||@
  Comment 1301 1034 NOP  <||@
  Comment 1302 1036 NOP  <||@
  Comment 1303 1038 NOP  <||@
  Comment 1304 1040 NOP  <||@
  Comment 1305 1042 NOP  <||@
  Comment 1306 1044 r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1306 1046 r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1309 1048 rcx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1309 1050 stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1314 1052 rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD  <||@
  Comment 1318 1054 rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD  <||@
  Comment 1322 1056 rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 1325 1058 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1325 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 1330 1064 JUMP ~outgoingValues: [] destination: B46 -> B47  <||@
  Comment 1330 block B47 null  <||@
  Comment 1330 1066 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1330 624 rdi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1335 626 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1340 1068 NOP  <||@
  Comment 1341 1070 NOP  <||@
  Comment 1342 1072 NOP  <||@
  Comment 1343 1074 NOP  <||@
  Comment 1344 1076 NOP  <||@
  Comment 1345 1078 NOP  <||@
  Comment 1346 1080 NOP  <||@
  Comment 1347 1082 NOP  <||@
  Comment 1348 1084 NOP  <||@
  Comment 1349 1086 NOP  <||@
  Comment 1350 1088 NOP  <||@
  Comment 1351 1090 NOP  <||@
  Comment 1352 1092 NOP  <||@
  Comment 1353 1094 NOP  <||@
  Comment 1354 1096 NOP  <||@
  Comment 1355 1098 NOP  <||@
  Comment 1356 1100 NOP  <||@
  Comment 1357 1102 NOP  <||@
  Comment 1358 1104 NOP  <||@
  Comment 1359 1106 NOP  <||@
  Comment 1360 1108 NOP  <||@
  Comment 1361 1110 NOP  <||@
  Comment 1362 1112 NOP  <||@
  Comment 1363 1114 NOP  <||@
  Comment 1364 1116 NOP  <||@
  Comment 1365 1118 NOP  <||@
  Comment 1366 1120 NOP  <||@
  Comment 1367 1122 NOP  <||@
  Comment 1368 1124 NOP  <||@
  Comment 1369 1126 NOP  <||@
  Comment 1370 1128 NOP  <||@
  Comment 1371 1130 NOP  <||@
  Comment 1372 1132 NOP  <||@
  Comment 1373 1134 NOP  <||@
  Comment 1374 1136 NOP  <||@
  Comment 1375 1138 NOP  <||@
  Comment 1376 1140 NOP  <||@
  Comment 1377 1142 NOP  <||@
  Comment 1378 1144 NOP  <||@
  Comment 1379 1146 NOP  <||@
  Comment 1380 1148 NOP  <||@
  Comment 1381 1150 NOP  <||@
  Comment 1382 1152 NOP  <||@
  Comment 1383 1154 NOP  <||@
  Comment 1384 1156 NOP  <||@
  Comment 1385 1158 NOP  <||@
  Comment 1386 1160 NOP  <||@
  Comment 1387 1162 NOP  <||@
  Comment 1388 1164 NOP  <||@
  Comment 1389 1166 NOP  <||@
  Comment 1390 1168 NOP  <||@
  Comment 1391 1170 NOP  <||@
  Comment 1392 1172 NOP  <||@
  Comment 1393 1174 NOP  <||@
  Comment 1394 1176 NOP  <||@
  Comment 1395 1178 NOP  <||@
  Comment 1396 1180 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b  <||@
  Comment 1452 1182 rdx|DWORD[_] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@13bcf0c9 encoding: base: 0 shift: 3  <||@
  Comment 1459 1184 MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD  <||@
  Comment 1462 1186 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdi|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@ba4736b  <||@
  Comment 1544 1188 r13|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1547 1190 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1551 1192 rbx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1555 1194 r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1560 1196 r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1565 1198 rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1569 1200 JUMP ~outgoingValues: [] destination: B47 -> B48  <||@
  Comment 1574 block B18 null  <||@
  Comment 1574 254 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1574 256 NOP  <||@
  Comment 1575 258 NOP  <||@
  Comment 1576 260 NOP  <||@
  Comment 1577 262 rcx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 1582 264 JUMP ~outgoingValues: [] destination: B18 -> B22  <||@
  Comment 1587 block B17 null  <||@
  Comment 1587 242 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1587 244 NOP  <||@
  Comment 1588 246 NOP  <||@
  Comment 1589 248 NOP  <||@
  Comment 1590 250 rcx|DWORD = MOVE input: int[5|0x5]  <||@
  Comment 1595 252 JUMP ~outgoingValues: [] destination: B17 -> B22  <||@
  Comment 1600 block B1 null  <||@
  Comment 1600 38 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1600 40 NOP  <||@
  Comment 1601 42 NOP  <||@
  Comment 1602 44 NOP  <||@
  Comment 1603 46 rdi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1608 48 rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1610 50 JUMP ~outgoingValues: [] destination: B1 -> B3  <||@
  Comment 1615 block B80 null  <||@
  Comment 1615 1844 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1615 1846 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1619 1848 NOP  <||@
  Comment 1620 1850 NOP  <||@
  Comment 1621 1852 NOP  <||@
  Comment 1622 1854 NOP  <||@
  Comment 1623 1856 NOP  <||@
  Comment 1624 1858 rdx|DWORD = DEC value: rax|DWORD size: DWORD  <||@
  Comment 1628 1860 CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: DWORD  <||@
  Comment 1637 block B81 null  <||@
  Comment 1637 1862 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1637 1864 NOP  <||@
  Comment 1638 1866 NOP  <||@
  Comment 1639 1868 NOP  <||@
  Comment 1640 1870 NOP  <||@
  Comment 1641 1872 MOVB x: [r13|QWORD[.] + rdx|DWORD * 1 + 16] y: 45 size: BYTE  <||@
  Comment 1647 1876 JUMP ~outgoingValues: [] destination: B81 -> B84  <||@
  Comment 1652 block B50 null  <||@
  Comment 1652 1226 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1652 1228 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1656 1230 stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1660 1232 NOP  <||@
  Comment 1661 1234 NOP  <||@
  Comment 1662 1236 NOP  <||@
  Comment 1663 1238 r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1668 1244 JUMP ~outgoingValues: [] destination: B50 -> B52  <||@
  Comment 1673 block B16 null  <||@
  Comment 1673 230 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1673 232 NOP  <||@
  Comment 1674 234 NOP  <||@
  Comment 1675 236 NOP  <||@
  Comment 1676 238 rcx|DWORD = MOVE input: int[6|0x6]  <||@
  Comment 1681 240 JUMP ~outgoingValues: [] destination: B16 -> B22  <||@
  Comment 1686 block B15 null  <||@
  Comment 1686 218 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1686 220 NOP  <||@
  Comment 1687 222 NOP  <||@
  Comment 1688 224 NOP  <||@
  Comment 1689 226 rcx|DWORD = MOVE input: int[7|0x7]  <||@
  Comment 1694 228 JUMP ~outgoingValues: [] destination: B15 -> B22  <||@
  Comment 1699 block B14 null  <||@
  Comment 1699 206 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1699 208 NOP  <||@
  Comment 1700 210 NOP  <||@
  Comment 1701 212 NOP  <||@
  Comment 1702 214 rcx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 1707 216 JUMP ~outgoingValues: [] destination: B14 -> B22  <||@
  Comment 1712 block B13 null  <||@
  Comment 1712 194 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1712 196 NOP  <||@
  Comment 1713 198 NOP  <||@
  Comment 1714 200 NOP  <||@
  Comment 1715 202 rcx|DWORD = MOVE input: int[9|0x9]  <||@
  Comment 1720 204 JUMP ~outgoingValues: [] destination: B13 -> B22  <||@
  Comment 1725 block B32 null  <||@
  Comment 1725 666 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1725 668 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1729 670 stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1733 672 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1738 674 stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1743 676 stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1747 678 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 1747 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 1757 680 NOP  <||@
  Comment 1758 682 NOP  <||@
  Comment 1759 684 NOP  <||@
  Comment 1760 686 NOP  <||@
  Comment 1761 688 NOP  <||@
  Comment 1762 690 NOP  <||@
  Comment 1763 692 NOP  <||@
  Comment 1764 694 NOP  <||@
  Comment 1765 696 NOP  <||@
  Comment 1766 698 rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 1769 700 rdx|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 1772 702 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10]  <||@
  Comment 1772 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1777 [r13:0, stack:24]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10, duringCall: false, rethrow: false]
              |0                  |1               |2               |3 
     locals:  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:36|DWORD  |- 
     stack:   |stack:36|DWORD     |r8|DWORD        |                |    <||@
  Comment 1785 704 NULLCHECK address: [rax|QWORD[.]] state [bci:10]  <||@
  Comment 1785 [rax:0, r13:0, stack:24]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10, duringCall: false, rethrow: false]
              |0                  |1               |2               |3 
     locals:  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:36|DWORD  |- 
     stack:   |stack:36|DWORD     |r8|DWORD        |                |    <||@
  Comment 1785 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1787 706 rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1790 716 rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1794 718 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1799 720 JUMP ~outgoingValues: [] destination: B32 -> B40  <||@
  Comment 1804 block B38 null  <||@
  Comment 1804 826 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1804 828 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1808 830 stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1812 832 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1817 834 stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1822 836 stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1826 838 NOP  <||@
  Comment 1827 840 NOP  <||@
  Comment 1828 842 NOP  <||@
  Comment 1829 844 NOP  <||@
  Comment 1830 846 NOP  <||@
  Comment 1831 848 NOP  <||@
  Comment 1832 850 NOP  <||@
  Comment 1833 852 NOP  <||@
  Comment 1834 854 NOP  <||@
  Comment 1835 856 rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 1838 858 rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 1841 860 ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 1851 862 rdi|QWORD = MOVE input: rsi|QWORD moveKind: QWORD  <||@
  Comment 1854 874 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1859 876 JUMP ~outgoingValues: [] destination: B38 -> B39  <||@
  Comment 1864 block B27 null  <||@
  Comment 1864 460 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1864 462 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1868 464 stack:32|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1872 466 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1877 468 stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1882 470 stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1886 472 NOP  <||@
  Comment 1887 474 NOP  <||@
  Comment 1888 476 NOP  <||@
  Comment 1889 478 NOP  <||@
  Comment 1890 480 NOP  <||@
  Comment 1891 482 NOP  <||@
  Comment 1892 484 NOP  <||@
  Comment 1893 486 NOP  <||@
  Comment 1894 488 NOP  <||@
  Comment 1895 490 NOP  <||@
  Comment 1896 492 NOP  <||@
  Comment 1897 494 rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1904 496 r9|QWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1907 498 rsi|QWORD = LEA address: [r9|QWORD + 23] size: QWORD  <||@
  Comment 1911 500 rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD  <||@
  Comment 1915 502 rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1921 504 CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD  <||@
  Comment 1934 block B29 null  <||@
  Comment 1934 538 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1934 540 NOP  <||@
  Comment 1935 542 NOP  <||@
  Comment 1936 544 NOP  <||@
  Comment 1937 546 NOP  <||@
  Comment 1938 548 NOP  <||@
  Comment 1939 550 NOP  <||@
  Comment 1940 552 NOP  <||@
  Comment 1941 554 NOP  <||@
  Comment 1942 556 NOP  <||@
  Comment 1943 558 NOP  <||@
  Comment 1944 560 NOP  <||@
  Comment 1945 562 MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD  <||@
  Comment 1952 564 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0  <||@
  Comment 1960 566 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0  <||@
  Comment 1968 568 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0  <||@
  Comment 1976 570 MOV x: [rdi|QWORD] y: 1 size: QWORD  <||@
  Comment 1983 572 MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 1983 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 1990 574 MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 1994 576 rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 1994 578 JUMP ~outgoingValues: [] destination: B29 -> B30  <||@
  Comment 1994 block B30 null  <||@
  Comment 1994 580 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1994 582 NOP  <||@
  Comment 1995 584 NOP  <||@
  Comment 1996 586 NOP  <||@
  Comment 1997 588 NOP  <||@
  Comment 1998 590 NOP  <||@
  Comment 1999 592 NOP  <||@
  Comment 2000 594 NOP  <||@
  Comment 2001 596 NOP  <||@
  Comment 2002 598 NOP  <||@
  Comment 2003 600 NOP  <||@
  Comment 2004 602 NOP  <||@
  Comment 2005 604 NOP  <||@
  Comment 2006 606 NOP  <||@
  Comment 2007 608 NOP  <||@
  Comment 2008 610 r13|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2008 612 rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2011 614 stack:64|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2016 616 rdi|QWORD = LEA address: [r13|QWORD[*] + 16] size: QWORD  <||@
  Comment 2020 618 rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 2024 620 rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD  <||@
  Comment 2027 622 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 2027 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 2032 628 JUMP ~outgoingValues: [] destination: B30 -> B47  <||@
  Comment 2037 block B28 null  <||@
  Comment 2037 506 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2037 508 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 2037 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 2047 510 NOP  <||@
  Comment 2048 512 NOP  <||@
  Comment 2049 514 NOP  <||@
  Comment 2050 516 NOP  <||@
  Comment 2051 518 NOP  <||@
  Comment 2052 520 NOP  <||@
  Comment 2053 522 NOP  <||@
  Comment 2054 524 NOP  <||@
  Comment 2055 526 NOP  <||@
  Comment 2056 528 rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 2059 530 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10]  <||@
  Comment 2059 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 2064 [r13:0, stack:24]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10, duringCall: false, rethrow: false]
              |0                  |1               |2               |3 
     locals:  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:36|DWORD  |- 
     stack:   |stack:36|DWORD     |r8|DWORD        |                |    <||@
  Comment 2072 532 NULLCHECK address: [rax|QWORD[.]] state [bci:10]  <||@
  Comment 2072 [rax:0, r13:0, stack:24]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10, duringCall: false, rethrow: false]
              |0                  |1               |2               |3 
     locals:  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:36|DWORD  |- 
     stack:   |stack:36|DWORD     |r8|DWORD        |                |    <||@
  Comment 2072 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2074 534 rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2077 536 JUMP ~outgoingValues: [] destination: B28 -> B30  <||@
  Comment 2079 block B65 null  <||@
  Comment 2079 1574 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2079 1576 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 2083 1578 NOP  <||@
  Comment 2084 1580 NOP  <||@
  Comment 2085 1582 NOP  <||@
  Comment 2086 1584 r10|DWORD = MOVE input: int[-189723|0xfffffffffffd1ae5]  <||@
  Comment 2092 1586 JUMP ~outgoingValues: [] destination: B65 -> B66  <||@
  Comment 2092 block B66 null  <||@
  Comment 2092 1588 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2092 1590 NOP  <||@
  Comment 2093 1592 NOP  <||@
  Comment 2094 1594 NOP  <||@
  Comment 2095 1596 NOP  <||@
  Comment 2096 1598 NOP  <||@
  Comment 2097 1600 NOP  <||@
  Comment 2098 1602 NOP  <||@
  Comment 2099 1604 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2106 1606 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2117 1608 DEOPT info [bci:22, 30]  <||@
  Comment 2117 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2122 [r13:0, stack:24]at java.lang.Integer.getChars(Integer.java:513) [bci: 22, duringCall: false, rethrow: false]
              |0          |1  |2             |3  |4  |5          |6              
     locals:  |rcx|DWORD  |-  |r13|QWORD[.]  |-  |-  |rbx|DWORD  |stack:40|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30, duringCall: true, rethrow: false]
              |0                  |1  |2  |3              
     locals:  |stack:56|QWORD[.]  |-  |-  |stack:28|DWORD   <||@
  Comment 2130 block B67 null  <||@
  Comment 2130 1610 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2130 1612 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 2134 1614 NOP  <||@
  Comment 2135 1616 NOP  <||@
  Comment 2136 1618 NOP  <||@
  Comment 2137 1620 r10|DWORD = MOVE input: int[-187419|0xfffffffffffd23e5]  <||@
  Comment 2143 1628 JUMP ~outgoingValues: [] destination: B67 -> B70  <||@
  Comment 2143 block B70 null  <||@
  Comment 2143 1670 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2143 1666 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2148 1672 NOP  <||@
  Comment 2149 1674 NOP  <||@
  Comment 2150 1676 NOP  <||@
  Comment 2151 1678 NOP  <||@
  Comment 2152 1680 NOP  <||@
  Comment 2153 1682 NOP  <||@
  Comment 2154 1684 NOP  <||@
  Comment 2155 1686 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2162 1688 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2173 1690 DEOPT info [bci:22, 30]  <||@
  Comment 2173 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2178 [rsi:0, r13:0]at java.lang.Integer.getChars(Integer.java:513) [bci: 22, duringCall: false, rethrow: false]
              |0          |1  |2             |3  |4  |5          |6        
     locals:  |r11|DWORD  |-  |r13|QWORD[.]  |-  |-  |rbp|DWORD  |r8|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2  |3         
     locals:  |rsi|QWORD[.]  |-  |-  |rbp|DWORD   <||@
  Comment 2186 block B69 null  <||@
  Comment 2186 1650 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2186 1652 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 2190 1654 NOP  <||@
  Comment 2191 1656 NOP  <||@
  Comment 2192 1658 NOP  <||@
  Comment 2193 1660 r10|DWORD = MOVE input: int[-180507|0xfffffffffffd3ee5]  <||@
  Comment 2199 1668 JUMP ~outgoingValues: [] destination: B69 -> B70  <||@
  Comment 2201 block B77 null  <||@
  Comment 2201 1796 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2201 1798 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 2205 1800 NOP  <||@
  Comment 2206 1802 NOP  <||@
  Comment 2207 1804 NOP  <||@
  Comment 2208 1806 NOP  <||@
  Comment 2209 1808 NOP  <||@
  Comment 2210 1810 NOP  <||@
  Comment 2211 1812 NOP  <||@
  Comment 2212 1814 MOV x: [r15|QWORD + 1156] y: -207643 size: DWORD  <||@
  Comment 2223 1816 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2234 1818 DEOPT info [bci:85, 30]  <||@
  Comment 2234 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2239 [r13:0, stack:24]at java.lang.Integer.getChars(Integer.java:523) [bci: 85, duringCall: false, rethrow: false]
              |0          |1  |2             |3  |4  |5         |6              
     locals:  |r11|DWORD  |-  |r13|QWORD[.]  |-  |-  |r8|DWORD  |stack:40|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30, duringCall: true, rethrow: false]
              |0                  |1  |2  |3              
     locals:  |stack:56|QWORD[.]  |-  |-  |stack:28|DWORD   <||@
  Comment 2247 block B68 null  <||@
  Comment 2247 1630 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2247 1632 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 2251 1634 NOP  <||@
  Comment 2252 1636 NOP  <||@
  Comment 2253 1638 NOP  <||@
  Comment 2254 1640 r10|DWORD = MOVE input: int[-184091|0xfffffffffffd30e5]  <||@
  Comment 2260 1648 JUMP ~outgoingValues: [] destination: B68 -> B70  <||@
  Comment 2262 block B82 null  <||@
  Comment 2262 1878 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2262 1880 NOP  <||@
  Comment 2263 1882 NOP  <||@
  Comment 2264 1884 NOP  <||@
  Comment 2265 1886 NOP  <||@
  Comment 2266 1888 NOP  <||@
  Comment 2267 1890 NOP  <||@
  Comment 2268 1892 NOP  <||@
  Comment 2269 1894 MOV x: [r15|QWORD + 1156] y: -204315 size: DWORD  <||@
  Comment 2280 1896 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2291 1898 DEOPT info [bci:104, 30]  <||@
  Comment 2291 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2296 [r13:0, stack:24]at java.lang.Integer.getChars(Integer.java:527) [bci: 104, duringCall: false, rethrow: false]
              |0  |1  |2             |3  |4  |5          |6              
     locals:  |-  |-  |r13|QWORD[.]  |-  |-  |rax|DWORD  |stack:40|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30, duringCall: true, rethrow: false]
              |0                  |1  |2  |3              
     locals:  |stack:56|QWORD[.]  |-  |-  |stack:28|DWORD   <||@
  Comment 2304 block B88 null  <||@
  Comment 2304 1986 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2304 1988 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 2308 1990 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 2313 1992 stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 2317 1994 NOP  <||@
  Comment 2318 1996 NOP  <||@
  Comment 2319 1998 NOP  <||@
  Comment 2320 2000 NOP  <||@
  Comment 2321 2002 NOP  <||@
  Comment 2322 2004 NOP  <||@
  Comment 2323 2006 NOP  <||@
  Comment 2324 2008 MOV x: [r15|QWORD + 1156] y: -233747 size: DWORD  <||@
  Comment 2335 2010 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 2346 2012 DEOPT info [bci:38, 14]  <||@
  Comment 2346 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2351 [stack:24]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:833) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1               |2               |3              
     locals:  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:36|DWORD  |stack:28|DWORD   <||@
  Comment 2359 block B43 null  <||@
  Comment 2359 946 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2359 948 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 2364 950 stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 2368 952 NOP  <||@
  Comment 2369 954 NOP  <||@
  Comment 2370 956 NOP  <||@
  Comment 2371 958 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2378 960 r10|DWORD = MOVE input: int[-238105|0xfffffffffffc5de7]  <||@
  Comment 2384 966 JUMP ~outgoingValues: [] destination: B43 -> B90  <||@
  Comment 2384 block B90 null  <||@
  Comment 2384 2036 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2384 2038 NOP  <||@
  Comment 2385 2040 NOP  <||@
  Comment 2386 2042 NOP  <||@
  Comment 2387 2044 NOP  <||@
  Comment 2388 2046 NOP  <||@
  Comment 2389 2048 NOP  <||@
  Comment 2390 2050 NOP  <||@
  Comment 2391 2052 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2398 2054 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2405 2056 DEOPT info [bci:10]  <||@
  Comment 2405 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2410 [stack:24]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10, duringCall: false, rethrow: false]
              |0                  |1          |2         |3 
     locals:  |stack:56|QWORD[.]  |rdx|DWORD  |r9|DWORD  |- 
     stack:   |r9|DWORD           |r8|DWORD   |          |    <||@
  Comment 2418 block B89 null  <||@
  Comment 2418 2014 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2418 2016 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 2423 2018 stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 2427 2020 NOP  <||@
  Comment 2428 2022 NOP  <||@
  Comment 2429 2024 NOP  <||@
  Comment 2430 2026 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 2437 2028 r10|DWORD = MOVE input: int[-236051|0xfffffffffffc65ed]  <||@
  Comment 2443 2034 JUMP ~outgoingValues: [] destination: B89 -> B90  <||@
  Comment 2445 block B64 null  <||@
  Comment 2445 1560 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2445 1562 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 2449 1564 NOP  <||@
  Comment 2450 1566 NOP  <||@
  Comment 2451 1568 NOP  <||@
  Comment 2452 1570 r10|DWORD = MOVE input: int[-192283|0xfffffffffffd10e5]  <||@
  Comment 2458 1572 JUMP ~outgoingValues: [] destination: B64 -> B66  <||@
  Comment 2463 block B45 null  <||@
  Comment 2463 980 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2463 982 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 2468 984 stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 2472 986 NOP  <||@
  Comment 2473 988 NOP  <||@
  Comment 2474 990 NOP  <||@
  Comment 2475 992 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2482 994 r10|DWORD = MOVE input: int[-239129|0xfffffffffffc59e7]  <||@
  Comment 2488 1000 JUMP ~outgoingValues: [] destination: B45 -> B90  <||@
  Comment 2490 block B63 null  <||@
  Comment 2490 1546 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2490 1548 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 2494 1550 NOP  <||@
  Comment 2495 1552 NOP  <||@
  Comment 2496 1554 NOP  <||@
  Comment 2497 1556 r10|DWORD = MOVE input: int[-195611|0xfffffffffffd03e5]  <||@
  Comment 2503 1558 JUMP ~outgoingValues: [] destination: B63 -> B66  <||@
  Comment 2508 block B41 null  <||@
  Comment 2508 912 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2508 914 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 2513 916 stack:44|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 2517 918 NOP  <||@
  Comment 2518 920 NOP  <||@
  Comment 2519 922 NOP  <||@
  Comment 2520 924 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2527 926 r10|DWORD = MOVE input: int[-237081|0xfffffffffffc61e7]  <||@
  Comment 2533 932 JUMP ~outgoingValues: [] destination: B41 -> B90  <||@
  Comment 2538 block B86 null  <||@
  Comment 2538 1950 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2538 1952 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 2542 1954 NOP  <||@
  Comment 2543 1956 NOP  <||@
  Comment 2544 1958 NOP  <||@
  Comment 2545 1960 r10|DWORD = MOVE input: int[-198171|0xfffffffffffcf9e5]  <||@
  Comment 2551 1962 JUMP ~outgoingValues: [] destination: B86 -> B87  <||@
  Comment 2551 block B87 null  <||@
  Comment 2551 1964 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2551 1966 NOP  <||@
  Comment 2552 1968 NOP  <||@
  Comment 2553 1970 NOP  <||@
  Comment 2554 1972 NOP  <||@
  Comment 2555 1974 NOP  <||@
  Comment 2556 1976 NOP  <||@
  Comment 2557 1978 NOP  <||@
  Comment 2558 1980 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2565 1982 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2576 1984 DEOPT info [bci:72, 30]  <||@
  Comment 2576 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2581 [r13:0, stack:24]at java.lang.Integer.getChars(Integer.java:522) [bci: 72, duringCall: false, rethrow: false]
              |0          |1  |2             |3  |4  |5          |6              
     locals:  |r11|DWORD  |-  |r13|QWORD[.]  |-  |-  |rbx|DWORD  |stack:40|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:835) [bci: 30, duringCall: true, rethrow: false]
              |0                  |1  |2  |3              
     locals:  |stack:56|QWORD[.]  |-  |-  |stack:28|DWORD   <||@
  Comment 2589 block B85 null  <||@
  Comment 2589 1936 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2589 1938 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 2593 1940 NOP  <||@
  Comment 2594 1942 NOP  <||@
  Comment 2595 1944 NOP  <||@
  Comment 2596 1946 r10|DWORD = MOVE input: int[-201499|0xfffffffffffcece5]  <||@
  Comment 2602 1948 JUMP ~outgoingValues: [] destination: B85 -> B87  <||@
  Comment 2609 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 2634 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2644 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2659 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 2692 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2697 [rax:0, rsi:0, stack:24]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:831) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-   <||@
  Comment 2727 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2732 [rax:0, r13:0, stack:24]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10, duringCall: false, rethrow: false]
              |0                  |1               |2               |3 
     locals:  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:36|DWORD  |- 
     stack:   |stack:36|DWORD     |r8|DWORD        |                |    <||@
  Comment 2762 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2767 [rax:0, r13:0, stack:24]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:832) [bci: 10, duringCall: false, rethrow: false]
              |0                  |1               |2               |3 
     locals:  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:36|DWORD  |- 
     stack:   |stack:36|DWORD     |r8|DWORD        |                |    <||@
  Comment 2775 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2775 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2781 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 2781 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
