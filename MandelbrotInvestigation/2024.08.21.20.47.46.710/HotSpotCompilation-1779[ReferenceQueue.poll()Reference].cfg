begin_compilation
  name " HotSpotCompilation-1779[java.lang.ref.ReferenceQueue.poll()]"
  method "HotSpotCompilation-1779[java.lang.ref.ReferenceQueue.poll()]"
  date 1724269725177
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a69 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a69  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.lang.ref.ReferenceQueue
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?122 ?61 ?65 v152 ?33 ?21 v83 ?25 v151 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a69 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a69 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.ref.Reference
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReferenceQueue.head
memoryOrder: VOLATILE
nodeSourcePosition: at java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 1]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
stamp: n java.lang.ref.Reference
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v151 
lastLocationAccess: - 
=== Succesors ===
next: v10 
=== Usages ===
a70 v142 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v151 lastLocationAccess: - #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a69 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a69  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 4]
profileData: PROFILED designatedSuccessorProbability: 0.9995476485705437
stamp: void
=== Inputs ===
condition: v142 
=== Succesors ===
trueSuccessor: v8 
falseSuccessor: v9 
=== Usages ===
=== Predecessor ===
a69 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v142 #trueSuccessor: v8 #falseSuccessor: v9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607178344380559128
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:181) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid a11 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:181) [bci: 7]
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:181) [bci: 8]
stamp: void
=== Inputs ===
memoryMap: - 
result: a11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a11  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a143 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a143  <|@  <|@
f <@~|@floating>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a143 a145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a143 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReferenceQueue.lock
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 10]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v152 
lastLocationAccess: - 
=== Succesors ===
next: a144 
=== Usages ===
v153 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v152 lastLocationAccess: - #next: a144  <|@  <|@
tid ?65 <|@
d <@d|@=== Debug Properties ===
bci: 1
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReferenceQueue.poll()>
localsSize: 3
locksSize: 0
sourceFile: ReferenceQueue.java
sourceLine: 180
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?61 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid a70 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 1]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
op: Uncompress
stamp: a java.lang.ref.Reference
=== Inputs ===
value: a69 
=== Succesors ===
=== Usages ===
?61 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a69  <|@  <|@
tid ?61 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: ifnonnull
code: ResolvedJavaMethodBytecode<ReferenceQueue.headIsNull()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 1]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
sourceFile: ReferenceQueue.java
sourceLine: 111
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?65 
values: a70 a1 
=== Succesors ===
=== Usages ===
v150 a144 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?65 values: a70 a1  <|@  <|@
f <@~|@floating>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a143 
=== Succesors ===
=== Usages ===
a144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a144 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-19211|0xffffffffffffb4f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?61 
guard: - 
address: v153 
lastLocationAccess: - 
=== Succesors ===
next: v150 
=== Usages ===
a78 v157 
=== Predecessor ===
a143 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?61 guard: - address: v153 lastLocationAccess: - #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a144 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?61 
object: v157 
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
a144 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?61 object: v157 #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid a78 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a144 
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a144  <|@  <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/util/concurrent/locks/ReentrantLock$Sync;, resolved>]
stamp: void
targetMethod: HotSpotMethod<ReentrantLock$Sync.lock()>
=== Inputs ===
arguments: a78 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a78  <|@  <|@
tid ?21 <|@
d <@d|@=== Debug Properties ===
bci: 13
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReferenceQueue.poll()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
sourceFile: ReferenceQueue.java
sourceLine: 182
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?121 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid ?121 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 322
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?21 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?21  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
bci: 4
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
polymorphic: false
stamp: void
targetMethod: Direct#ReentrantLock$Sync.lock
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v82 
stateDuring: ?121 
=== Succesors ===
next: a24 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v82 stateDuring: ?121 #next: a24  <|@  <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
referencedType: [null]
returnStamp: a java.lang.ref.Reference
signature: [HotSpotType<Ljava/lang/ref/ReferenceQueue;, resolved>]
stamp: void
targetMethod: HotSpotMethod<ReferenceQueue.poll0()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a24 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?122 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReferenceQueue.poll()>
localsSize: 3
locksSize: 0
sourceFile: ReferenceQueue.java
sourceLine: 184
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
a24 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a24 <|@
d <@d|@=== Debug Properties ===
bci: 17
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
polymorphic: false
stamp: a java.lang.ref.Reference
targetMethod: Direct#ReferenceQueue.poll0
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v83 
stateDuring: ?122 
=== Succesors ===
next: a145 
=== Usages ===
?25 v58 ?33 
=== Predecessor ===
v20 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v83 stateDuring: ?122 #next: a145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a145 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReferenceQueue.lock
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 22]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v152 
lastLocationAccess: - 
=== Succesors ===
next: a146 
=== Usages ===
a85 v154 
=== Predecessor ===
a24 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v152 lastLocationAccess: - #next: a146  <|@  <|@
tid ?25 <|@
d <@d|@=== Debug Properties ===
bci: 20
bytecode: astore_1
code: ResolvedJavaMethodBytecode<ReferenceQueue.poll()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
sourceFile: ReferenceQueue.java
sourceLine: 184
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a24 a1 
=== Succesors ===
=== Usages ===
v148 a146 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a24 a1  <|@  <|@
f <@~|@floating>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a145 
=== Succesors ===
=== Usages ===
a146 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a146 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-22027|0xffffffffffffa9f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?25 
guard: - 
address: v154 
lastLocationAccess: - 
=== Succesors ===
next: v148 
=== Usages ===
a89 v155 v156 
=== Predecessor ===
a145 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?25 guard: - address: v154 lastLocationAccess: - #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a146 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?25 
object: v156 
=== Succesors ===
next: i39 
=== Usages ===
=== Predecessor ===
a146 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?25 object: v156 #next: i39  <|@  <|@
f <@~|@floating>@ <|@
tid a89 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a146 
=== Succesors ===
=== Usages ===
?123 v91 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a146  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 4]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/concurrent/locks/ReentrantLock$Sync;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)>
=== Inputs ===
arguments: a89 i32 
=== Succesors ===
=== Usages ===
i39 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a89 i32  <|@  <|@
tid ?33 <|@
d <@d|@=== Debug Properties ===
bci: 25
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReferenceQueue.poll()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
sourceFile: ReferenceQueue.java
sourceLine: 186
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a24 
=== Succesors ===
=== Usages ===
?48 ?40 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a24  <|@  <|@
f <@~|@floating>@ <|@
tid a85 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 22]
op: Uncompress
stamp: a java.util.concurrent.locks.ReentrantLock
=== Inputs ===
value: a145 
=== Succesors ===
=== Usages ===
?40 ?48 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a145  <|@  <|@
tid ?40 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?33 
values: a85 
=== Succesors ===
=== Usages ===
?123 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?33 values: a85  <|@  <|@
tid ?123 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1059
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?40 
values: a89 
=== Succesors ===
=== Usages ===
i39 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?40 values: a89  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i39 <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#ReentrantLock$Sync.tryRelease
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v91 
stateDuring: ?123 
=== Succesors ===
next: v45 
=== Usages ===
v42 
=== Predecessor ===
v148 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v91 stateDuring: ?123 #next: v45  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i39 
y: i6 
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i39 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
profileData: PROFILED designatedSuccessorProbability: 0.13490440495249595
stamp: void
=== Inputs ===
condition: v42 
=== Succesors ===
trueSuccessor: v44 
falseSuccessor: v43 
=== Usages ===
=== Predecessor ===
i39 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v42 #trueSuccessor: v44 #falseSuccessor: v43  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4544130407221725336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1063) [bci: 17]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v56  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
v44 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4555854336887303917
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 8]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: a94 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a94  <|@  <|@
f <@~|@floating>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a146 
=== Succesors ===
=== Usages ===
a94 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a94 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.head
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v155 
lastLocationAccess: - 
=== Succesors ===
next: v51 
=== Usages ===
a95 
=== Predecessor ===
v43 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v155 lastLocationAccess: - #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid a95 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
op: Uncompress
stamp: a java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
=== Inputs ===
value: a94 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a94  <|@  <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
referencedType: [null]
returnStamp: void
signature: [UnresolvedJavaType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;>]
stamp: void
targetMethod: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
=== Inputs ===
arguments: a95 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a95  <|@  <|@
tid ?48 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?33 
values: a85 
=== Succesors ===
=== Usages ===
?124 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?33 values: a85  <|@  <|@
tid ?124 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1060
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?48 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?48  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
bci: 12
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
polymorphic: false
stamp: void
targetMethod: Direct#AbstractQueuedSynchronizer.signalNext
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v96 
stateDuring: ?124 
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
a94 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v96 stateDuring: ?124 #next: v54  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
v51 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v54 v56 
=== Succesors ===
next: v58 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v54 v56 #next: v58  <|@  <|@
f <@*|@fixed>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 29]
stamp: void
=== Inputs ===
memoryMap: - 
result: a24 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a24  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4d3880ba slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD[_], y: v1|DWORD[_]) trueDestinationProbability: 0.9995476485705437 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607178344380559128
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: v3|QWORD[.] 
locals: v0|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:4, 1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: v3|QWORD[.] 
locals: v0|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v4|DWORD[_] * 8] state [bci:4, 1] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.lock()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 13] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReferenceQueue.poll0()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:17] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v8|DWORD[_] * 8] state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v9|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v10|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 5, 25] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.13490440495249595 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4555854336887303917
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v10|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:12, 5, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4544130407221725336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #26         // headIsNull:()boolean
     4: ifeq          9
     7: aconst_null   
     8: areturn       
     9: aload_0       
    10: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    13: invokevirtual #23         // java.util.concurrent.locks.ReentrantLock.lock:()void
    16: aload_0       
    17: invokevirtual #19         // poll0:()java.lang.ref.Reference
    20: astore_1      
    21: aload_0       
    22: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    25: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    28: aload_1       
    29: areturn       
    30: astore_2      
    31: aload_0       
    32: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    35: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    38: aload_2       
    39: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a69 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a69  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.lang.ref.ReferenceQueue
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?122 ?61 ?65 v152 ?33 ?21 v83 ?25 v151 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v151 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a69 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a69 <|@
result v1|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.ref.Reference
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReferenceQueue.head
memoryOrder: VOLATILE
nodeSourcePosition: at java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 1]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
stamp: n java.lang.ref.Reference
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v151 
lastLocationAccess: - 
=== Succesors ===
next: v10 
=== Usages ===
a70 v142 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v151 lastLocationAccess: - #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a69 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a69  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 4]
profileData: PROFILED designatedSuccessorProbability: 0.9995476485705437
stamp: void
=== Inputs ===
condition: v142 
=== Succesors ===
trueSuccessor: v8 
falseSuccessor: v9 
=== Usages ===
=== Predecessor ===
a69 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v142 #trueSuccessor: v8 #falseSuccessor: v9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4d3880ba slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD[_], y: v1|DWORD[_]) trueDestinationProbability: 0.9995476485705437 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607178344380559128
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:181) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid a11 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:181) [bci: 7]
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:181) [bci: 8]
stamp: void
=== Inputs ===
memoryMap: - 
result: a11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a143 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a143  <|@  <|@
f <@~|@floating>@ <|@
tid v152 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a143 a145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a143 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReferenceQueue.lock
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 10]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v152 
lastLocationAccess: - 
=== Succesors ===
next: a144 
=== Usages ===
v153 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v152 lastLocationAccess: - #next: a144  <|@  <|@
tid ?65 <|@
d <@d|@=== Debug Properties ===
bci: 1
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReferenceQueue.poll()>
localsSize: 3
locksSize: 0
sourceFile: ReferenceQueue.java
sourceLine: 180
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?61 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid a70 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 1]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
op: Uncompress
stamp: a java.lang.ref.Reference
=== Inputs ===
value: a69 
=== Succesors ===
=== Usages ===
?61 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a69  <|@  <|@
tid ?61 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: ifnonnull
code: ResolvedJavaMethodBytecode<ReferenceQueue.headIsNull()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 1]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
sourceFile: ReferenceQueue.java
sourceLine: 111
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?65 
values: a70 a1 
=== Succesors ===
=== Usages ===
v150 a144 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?65 values: a70 a1  <|@  <|@
f <@~|@floating>@ <|@
tid v153 <|@
result [v2|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a143 
=== Succesors ===
=== Usages ===
a144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a144 <|@
result v4|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-19211|0xffffffffffffb4f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?61 
guard: - 
address: v153 
lastLocationAccess: - 
=== Succesors ===
next: v150 
=== Usages ===
a78 v157 
=== Predecessor ===
a143 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?61 guard: - address: v153 lastLocationAccess: - #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
result [v4|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a144 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?61 
object: v157 
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
a144 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?61 object: v157 #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid a78 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a144 
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a144  <|@  <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/util/concurrent/locks/ReentrantLock$Sync;, resolved>]
stamp: void
targetMethod: HotSpotMethod<ReentrantLock$Sync.lock()>
=== Inputs ===
arguments: a78 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a78  <|@  <|@
tid ?21 <|@
d <@d|@=== Debug Properties ===
bci: 13
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReferenceQueue.poll()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
sourceFile: ReferenceQueue.java
sourceLine: 182
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?121 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid ?121 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 322
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?21 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?21  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
bci: 4
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
polymorphic: false
stamp: void
targetMethod: Direct#ReentrantLock$Sync.lock
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v82 
stateDuring: ?121 
=== Succesors ===
next: a24 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v82 stateDuring: ?121 #next: a24  <|@  <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
referencedType: [null]
returnStamp: a java.lang.ref.Reference
signature: [HotSpotType<Ljava/lang/ref/ReferenceQueue;, resolved>]
stamp: void
targetMethod: HotSpotMethod<ReferenceQueue.poll0()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a24 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?122 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReferenceQueue.poll()>
localsSize: 3
locksSize: 0
sourceFile: ReferenceQueue.java
sourceLine: 184
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
a24 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a24 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 17
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
polymorphic: false
stamp: a java.lang.ref.Reference
targetMethod: Direct#ReferenceQueue.poll0
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v83 
stateDuring: ?122 
=== Succesors ===
next: a145 
=== Usages ===
?25 v58 ?33 
=== Predecessor ===
v20 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v83 stateDuring: ?122 #next: a145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a145 <|@
result v7|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReferenceQueue.lock
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 22]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v152 
lastLocationAccess: - 
=== Succesors ===
next: a146 
=== Usages ===
a85 v154 
=== Predecessor ===
a24 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v152 lastLocationAccess: - #next: a146  <|@  <|@
tid ?25 <|@
d <@d|@=== Debug Properties ===
bci: 20
bytecode: astore_1
code: ResolvedJavaMethodBytecode<ReferenceQueue.poll()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
sourceFile: ReferenceQueue.java
sourceLine: 184
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a24 a1 
=== Succesors ===
=== Usages ===
v148 a146 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a24 a1  <|@  <|@
f <@~|@floating>@ <|@
tid v154 <|@
result [v7|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a145 
=== Succesors ===
=== Usages ===
a146 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a146 <|@
result v8|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-22027|0xffffffffffffa9f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?25 
guard: - 
address: v154 
lastLocationAccess: - 
=== Succesors ===
next: v148 
=== Usages ===
a89 v155 v156 
=== Predecessor ===
a145 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?25 guard: - address: v154 lastLocationAccess: - #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid v156 <|@
result [v8|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a146 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?25 
object: v156 
=== Succesors ===
next: i39 
=== Usages ===
=== Predecessor ===
a146 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?25 object: v156 #next: i39  <|@  <|@
f <@~|@floating>@ <|@
tid a89 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a146 
=== Succesors ===
=== Usages ===
?123 v91 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a146  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 4]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/concurrent/locks/ReentrantLock$Sync;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)>
=== Inputs ===
arguments: a89 i32 
=== Succesors ===
=== Usages ===
i39 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a89 i32  <|@  <|@
tid ?33 <|@
d <@d|@=== Debug Properties ===
bci: 25
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReferenceQueue.poll()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
sourceFile: ReferenceQueue.java
sourceLine: 186
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a24 
=== Succesors ===
=== Usages ===
?48 ?40 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a24  <|@  <|@
f <@~|@floating>@ <|@
tid a85 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 22]
op: Uncompress
stamp: a java.util.concurrent.locks.ReentrantLock
=== Inputs ===
value: a145 
=== Succesors ===
=== Usages ===
?40 ?48 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a145  <|@  <|@
tid ?40 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?33 
values: a85 
=== Succesors ===
=== Usages ===
?123 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?33 values: a85  <|@  <|@
tid ?123 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1059
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?40 
values: a89 
=== Succesors ===
=== Usages ===
i39 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?40 values: a89  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i39 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#ReentrantLock$Sync.tryRelease
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v91 
stateDuring: ?123 
=== Succesors ===
next: v45 
=== Usages ===
v42 
=== Predecessor ===
v148 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v91 stateDuring: ?123 #next: v45  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i39 
y: i6 
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i39 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
profileData: PROFILED designatedSuccessorProbability: 0.13490440495249595
stamp: void
=== Inputs ===
condition: v42 
=== Succesors ===
trueSuccessor: v44 
falseSuccessor: v43 
=== Usages ===
=== Predecessor ===
i39 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v42 #trueSuccessor: v44 #falseSuccessor: v43  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: v3|QWORD[.] 
locals: v0|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:4, 1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: v3|QWORD[.] 
locals: v0|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v4|DWORD[_] * 8] state [bci:4, 1] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.lock()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 13] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReferenceQueue.poll0()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:17] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v8|DWORD[_] * 8] state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v9|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v10|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 5, 25] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.13490440495249595 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4544130407221725336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1063) [bci: 17]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v56  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
v44 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4555854336887303917
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 8]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: a94 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a94  <|@  <|@
f <@~|@floating>@ <|@
tid v155 <|@
result [v8|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a146 
=== Succesors ===
=== Usages ===
a94 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a94 <|@
result v12|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.head
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v155 
lastLocationAccess: - 
=== Succesors ===
next: v51 
=== Usages ===
a95 
=== Predecessor ===
v43 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v155 lastLocationAccess: - #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid a95 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
op: Uncompress
stamp: a java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
=== Inputs ===
value: a94 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a94  <|@  <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
referencedType: [null]
returnStamp: void
signature: [UnresolvedJavaType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;>]
stamp: void
targetMethod: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
=== Inputs ===
arguments: a95 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a95  <|@  <|@
tid ?48 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?33 
values: a85 
=== Succesors ===
=== Usages ===
?124 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?33 values: a85  <|@  <|@
tid ?124 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1060
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?48 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?48  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
bci: 12
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
polymorphic: false
stamp: void
targetMethod: Direct#AbstractQueuedSynchronizer.signalNext
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v96 
stateDuring: ?124 
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
a94 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v96 stateDuring: ?124 #next: v54  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
v51 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v10|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:12, 5, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v54 v56 
=== Succesors ===
next: v58 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v54 v56 #next: v58  <|@  <|@
f <@*|@fixed>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 29]
stamp: void
=== Inputs ===
memoryMap: - 
result: a24 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a24  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4d3880ba slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD[_], y: v1|DWORD[_]) trueDestinationProbability: 0.9995476485705437 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607178344380559128
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: v3|QWORD[.] 
locals: v0|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:4, 1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: v3|QWORD[.] 
locals: v0|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v4|DWORD[_] * 8] state [bci:4, 1] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.lock()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 13] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReferenceQueue.poll0()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:17] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v8|DWORD[_] * 8] state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v9|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v10|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 5, 25] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.13490440495249595 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4555854336887303917
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v10|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:12, 5, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4544130407221725336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #26         // headIsNull:()boolean
     4: ifeq          9
     7: aconst_null   
     8: areturn       
     9: aload_0       
    10: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    13: invokevirtual #23         // java.util.concurrent.locks.ReentrantLock.lock:()void
    16: aload_0       
    17: invokevirtual #19         // poll0:()java.lang.ref.Reference
    20: astore_1      
    21: aload_0       
    22: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    25: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    28: aload_1       
    29: areturn       
    30: astore_2      
    31: aload_0       
    32: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    35: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    38: aload_2       
    39: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4d3880ba slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD[_], y: v1|DWORD[_]) trueDestinationProbability: 0.9995476485705437 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607178344380559128
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: v3|QWORD[.] 
locals: v0|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:4, 1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: v3|QWORD[.] 
locals: v0|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v4|DWORD[_] * 8] state [bci:4, 1] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.lock()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 13] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReferenceQueue.poll0()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:17] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v8|DWORD[_] * 8] state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v9|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v10|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 5, 25] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.13490440495249595 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4555854336887303917
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v10|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:12, 5, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4544130407221725336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #26         // headIsNull:()boolean
     4: ifeq          9
     7: aconst_null   
     8: areturn       
     9: aload_0       
    10: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    13: invokevirtual #23         // java.util.concurrent.locks.ReentrantLock.lock:()void
    16: aload_0       
    17: invokevirtual #19         // poll0:()java.lang.ref.Reference
    20: astore_1      
    21: aload_0       
    22: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    25: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    28: aload_1       
    29: areturn       
    30: astore_2      
    31: aload_0       
    32: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    35: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    38: aload_2       
    39: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4d3880ba slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD[_], y: v1|DWORD[_]) trueDestinationProbability: 0.9995476485705437 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607178344380559128
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: v3|QWORD[.] 
locals: v0|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:4, 1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: v3|QWORD[.] 
locals: v0|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v4|DWORD[_] * 8] state [bci:4, 1] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.lock()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 13] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReferenceQueue.poll0()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:17] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v8|DWORD[_] * 8] state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v9|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v10|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 5, 25] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.13490440495249595 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4555854336887303917
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v10|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:12, 5, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4544130407221725336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #26         // headIsNull:()boolean
     4: ifeq          9
     7: aconst_null   
     8: areturn       
     9: aload_0       
    10: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    13: invokevirtual #23         // java.util.concurrent.locks.ReentrantLock.lock:()void
    16: aload_0       
    17: invokevirtual #19         // poll0:()java.lang.ref.Reference
    20: astore_1      
    21: aload_0       
    22: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    25: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    28: aload_1       
    29: areturn       
    30: astore_2      
    31: aload_0       
    32: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    35: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    38: aload_2       
    39: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4d3880ba slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD[_], y: v1|DWORD[_]) trueDestinationProbability: 0.9995476485705437 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607178344380559128
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: v3|QWORD[.] 
locals: v0|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:4, 1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: v3|QWORD[.] 
locals: v0|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v4|DWORD[_] * 8] state [bci:4, 1] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.lock()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 13] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReferenceQueue.poll0()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:17] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v8|DWORD[_] * 8] state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v9|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v10|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 5, 25] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.13490440495249595 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4555854336887303917
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v10|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:12, 5, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4544130407221725336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #26         // headIsNull:()boolean
     4: ifeq          9
     7: aconst_null   
     8: areturn       
     9: aload_0       
    10: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    13: invokevirtual #23         // java.util.concurrent.locks.ReentrantLock.lock:()void
    16: aload_0       
    17: invokevirtual #19         // poll0:()java.lang.ref.Reference
    20: astore_1      
    21: aload_0       
    22: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    25: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    28: aload_1       
    29: areturn       
    30: astore_2      
    31: aload_0       
    32: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    35: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    38: aload_2       
    39: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4d3880ba slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD[_], y: v1|DWORD[_]) trueDestinationProbability: 0.9995476485705437 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607178344380559128
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: v3|QWORD[.] 
locals: v0|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:4, 1] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: v3|QWORD[.] 
locals: v0|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v4|DWORD[_] * 8] state [bci:4, 1] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.lock()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 13] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReferenceQueue.poll0()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:17] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v8|DWORD[_] * 8] state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v9|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v10|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 5, 25] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.13490440495249595 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4555854336887303917
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v10|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:12, 5, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4544130407221725336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #26         // headIsNull:()boolean
     4: ifeq          9
     7: aconst_null   
     8: areturn       
     9: aload_0       
    10: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    13: invokevirtual #23         // java.util.concurrent.locks.ReentrantLock.lock:()void
    16: aload_0       
    17: invokevirtual #19         // poll0:()java.lang.ref.Reference
    20: astore_1      
    21: aload_0       
    22: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    25: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    28: aload_1       
    29: areturn       
    30: astore_2      
    31: aload_0       
    32: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    35: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    38: aload_2       
    39: athrow        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4d3880ba slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v1|DWORD[_], y: v1|DWORD[_]) trueDestinationProbability: 0.9995476485705437 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607178344380559128
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  120  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: v3|QWORD[.] 
locals: v0|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:4, 1] <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: v3|QWORD[.] 
locals: v0|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v4|DWORD[_] * 8] state [bci:4, 1] <|@ <|@
      nr  126  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.lock()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 13] <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReferenceQueue.poll0()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:17] <|@ <|@
      nr  136  <|@ instruction v6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:20] <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v8|DWORD[_] * 8] state [bci:20] <|@ <|@
      nr  144  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v9|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v10|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 5, 25] <|@ <|@
      nr  154  <|@ instruction v11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.13490440495249595 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4555854336887303917
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction v12|DWORD[_] = MOV input: [v8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  182  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v10|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:12, 5, 25] <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4544130407221725336
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rax|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #26         // headIsNull:()boolean
     4: ifeq          9
     7: aconst_null   
     8: areturn       
     9: aload_0       
    10: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    13: invokevirtual #23         // java.util.concurrent.locks.ReentrantLock.lock:()void
    16: aload_0       
    17: invokevirtual #19         // poll0:()java.lang.ref.Reference
    20: astore_1      
    21: aload_0       
    22: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    25: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    28: aload_1       
    29: areturn       
    30: astore_2      
    31: aload_0       
    32: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    35: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    38: aload_2       
    39: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4d3880ba slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v1|DWORD[_], y: v1|DWORD[_]) trueDestinationProbability: 0.9995476485705437 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607178344380559128
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  120  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: v3|QWORD[.] 
locals: v0|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:4, 1] <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: v3|QWORD[.] 
locals: v0|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v4|DWORD[_] * 8] state [bci:4, 1] <|@ <|@
      nr  126  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.lock()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 13] <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReferenceQueue.poll0()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:17] <|@ <|@
      nr  136  <|@ instruction v6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:20] <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v8|DWORD[_] * 8] state [bci:20] <|@ <|@
      nr  144  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v9|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v10|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 5, 25] <|@ <|@
      nr  154  <|@ instruction v11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.13490440495249595 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4555854336887303917
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction v12|DWORD[_] = MOV input: [v8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  182  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v10|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:12, 5, 25] <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4544130407221725336
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rax|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #26         // headIsNull:()boolean
     4: ifeq          9
     7: aconst_null   
     8: areturn       
     9: aload_0       
    10: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    13: invokevirtual #23         // java.util.concurrent.locks.ReentrantLock.lock:()void
    16: aload_0       
    17: invokevirtual #19         // poll0:()java.lang.ref.Reference
    20: astore_1      
    21: aload_0       
    22: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    25: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    28: aload_1       
    29: areturn       
    30: astore_2      
    31: aload_0       
    32: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    35: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    38: aload_2       
    39: athrow        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v6|q [0, 1[[46, 48[[130, 131[[134, 136[[152, 154[[186, 187[[218, 220[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[130, 131[[134, 135[[150, 153[[186, 187[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 18[[130, 131[[134, 135[[152, 153[[186, 187[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v5|q [0, 22[[128, 131[[132, 135[[148, 153[[184, 187[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [22, 28[[50, 187[22 MustHaveRegister 24 MustHaveRegister 118 MustHaveRegister 132 ShouldHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d -1 [24, 28[[50, 120[24 MustHaveRegister 26 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [118, 122[118 MustHaveRegister 122 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q v1|d [120, 125[120 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [122, 126[122 MustHaveRegister 124 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q v4|d [126, 128[126 MustHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q rax|q [136, 218[136 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [138, 146[138 MustHaveRegister 140 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [140, 180[140 MustHaveRegister 142 MustHaveRegister 144 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q v8|d [144, 153[144 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q v7|d [146, 187[146 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d rax|q [154, 156[154 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [180, 182[180 MustHaveRegister 182 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q v12|d [182, 184[182 MustHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v6|q [0, 1[[46, 48[[130, 131[[134, 136[[152, 154[[186, 187[[218, 220[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[130, 131[[134, 135[[150, 153[[186, 187[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 18[[130, 131[[134, 135[[152, 153[[186, 187[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v5|q [0, 22[[128, 131[[132, 135[[148, 153[[184, 187[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [22, 28[[50, 127[22 MustHaveRegister 24 MustHaveRegister 118 MustHaveRegister  "SpillInDominator"
  v1|d DWORD "[r10|d]" v1|d -1 [24, 28[[50, 120[24 MustHaveRegister 26 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r11|d]" v2|d -1 [118, 122[118 MustHaveRegister 122 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[r10|q]" v3|q v1|d [120, 125[120 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [122, 126[122 MustHaveRegister 124 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q v4|d [126, 128[126 MustHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q rax|q [136, 151[136 MustHaveRegister  "OneSpillStore"
  v7|d DWORD "[rdx|d]" v7|d -1 [138, 146[138 MustHaveRegister 140 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r10|d]" v8|d -1 [140, 151[140 MustHaveRegister 142 MustHaveRegister 144 MustHaveRegister  "OneSpillStore"
  v9|q QWORD "[r11|q]" v9|q v8|d [144, 151[144 MustHaveRegister 148 ShouldHaveRegister  "OneSpillStore"
  v10|q QWORD "[rdx|q]" v10|q v7|d [146, 149[146 MustHaveRegister  "SpillInDominator"
  v11|d DWORD "[rax|d]" v11|d rax|q [154, 156[154 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[r10|d]" v12|d -1 [180, 182[180 MustHaveRegister 182 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[r10|q]" v13|q v12|d [182, 184[182 MustHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[vstack:0|q]" v0|q v0|q [127, 137[132 ShouldHaveRegister  "SpillInDominator"
  v15|q QWORD "[rsi|q]" v0|q v0|q [137, 147[138 MustHaveRegister  "SpillInDominator"
  v16|q QWORD "[vstack:3|q]" v6|q v6|q [151, 200[ "OneSpillStore"
  v17|q QWORD "[vstack:0|q]" v0|q v0|q [147, 151[ "SpillInDominator"
  v18|d DWORD "[vstack:2|d]" v8|d v8|d [151, 158[ "OneSpillStore"
  v19|q QWORD "[vstack:4|q]" v9|q v9|q [151, 153[ "OneSpillStore"
  v20|q QWORD "[vstack:1|q]" v10|q v10|q [149, 158[ "SpillInDominator"
  v21|q QWORD "[vstack:0|q]" v0|q v0|q [151, 158[ "SpillInDominator"
  v22|q QWORD "[vstack:1|q]" v10|q v10|q [158, 185[ "SpillInDominator"
  v23|d DWORD "[r10|d]" v8|d v8|d [158, 180[180 MustHaveRegister  "OneSpillStore"
  v24|q QWORD "[rax|q]" v6|q v6|q [200, 218[218 ShouldHaveRegister  "OneSpillStore"
  v25|q QWORD "[vstack:0|q]" v0|q v0|q [158, 183[ "SpillInDominator"
  v26|q QWORD "[vstack:0|q]" v0|q v0|q [183, 187[ "SpillInDominator"
  v27|q QWORD "[vstack:1|q]" v10|q v10|q [185, 187[ "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4d3880ba slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v1|DWORD[_], y: v1|DWORD[_]) trueDestinationProbability: 0.9995476485705437 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607178344380559128
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  120  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: v3|QWORD[.] 
locals: v0|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:4, 1] <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: v3|QWORD[.] 
locals: v0|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v4|DWORD[_] * 8] state [bci:4, 1] <|@ <|@
      nr  126  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.lock()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 13] <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReferenceQueue.poll0()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:17] <|@ <|@
      nr  136  <|@ instruction v6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:20] <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v8|DWORD[_] * 8] state [bci:20] <|@ <|@
      nr  144  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  150  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = STACKMOVE (input: v17|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = MOVE input: v8|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v9|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v10|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 5, 25] <|@ <|@
      nr  154  <|@ instruction v11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.13490440495249595 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4555854336887303917
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction v12|DWORD[_] = MOV input: [v8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  182  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = STACKMOVE (input: v25|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = STACKMOVE (input: v22|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v10|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:12, 5, 25] <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4544130407221725336
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rax|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #26         // headIsNull:()boolean
     4: ifeq          9
     7: aconst_null   
     8: areturn       
     9: aload_0       
    10: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    13: invokevirtual #23         // java.util.concurrent.locks.ReentrantLock.lock:()void
    16: aload_0       
    17: invokevirtual #19         // poll0:()java.lang.ref.Reference
    20: astore_1      
    21: aload_0       
    22: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    25: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    28: aload_1       
    29: areturn       
    30: astore_2      
    31: aload_0       
    32: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    35: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    38: aload_2       
    39: athrow        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v6|q [0, 1[[46, 48[[130, 131[[134, 136[[152, 154[[186, 187[[218, 220[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[130, 131[[134, 135[[150, 153[[186, 187[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 18[[130, 131[[134, 135[[152, 153[[186, 187[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v5|q [0, 22[[128, 131[[132, 135[[148, 153[[184, 187[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [22, 28[[50, 127[22 MustHaveRegister 24 MustHaveRegister 118 MustHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[r10|d]" v1|d -1 [24, 28[[50, 120[24 MustHaveRegister 26 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r11|d]" v2|d -1 [118, 122[118 MustHaveRegister 122 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[r10|q]" v3|q v1|d [120, 125[120 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [122, 126[122 MustHaveRegister 124 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q v4|d [126, 128[126 MustHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q rax|q [136, 151[136 MustHaveRegister  "OneSpillStore"
  v7|d DWORD "[rdx|d]" v7|d -1 [138, 146[138 MustHaveRegister 140 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r10|d]" v8|d -1 [140, 151[140 MustHaveRegister 142 MustHaveRegister 144 MustHaveRegister  "OneSpillStore"
  v9|q QWORD "[r11|q]" v9|q v8|d [144, 151[144 MustHaveRegister 148 ShouldHaveRegister  "OneSpillStore"
  v10|q QWORD "[rdx|q]" v10|q v7|d [146, 149[146 MustHaveRegister  "StoreAtDefinition"
  v11|d DWORD "[rax|d]" v11|d rax|q [154, 156[154 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[r10|d]" v12|d -1 [180, 182[180 MustHaveRegister 182 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[r10|q]" v13|q v12|d [182, 184[182 MustHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[vstack:0|q]" v0|q v0|q [127, 137[132 ShouldHaveRegister  "StoreAtDefinition"
  v15|q QWORD "[rsi|q]" v0|q v0|q [137, 147[138 MustHaveRegister  "StoreAtDefinition"
  v16|q QWORD "[vstack:3|q]" v6|q v6|q [151, 200[ "OneSpillStore"
  v17|q QWORD "[vstack:0|q]" v0|q v0|q [147, 151[ "StoreAtDefinition"
  v18|d DWORD "[vstack:2|d]" v8|d v8|d [151, 158[ "OneSpillStore"
  v19|q QWORD "[vstack:4|q]" v9|q v9|q [151, 153[ "OneSpillStore"
  v20|q QWORD "[vstack:1|q]" v10|q v10|q [149, 158[ "StoreAtDefinition"
  v21|q QWORD "[vstack:0|q]" v0|q v0|q [151, 158[ "StoreAtDefinition"
  v22|q QWORD "[vstack:1|q]" v10|q v10|q [158, 185[ "StoreAtDefinition"
  v23|d DWORD "[r10|d]" v8|d v8|d [158, 180[180 MustHaveRegister  "OneSpillStore"
  v24|q QWORD "[rax|q]" v6|q v6|q [200, 218[218 ShouldHaveRegister  "OneSpillStore"
  v25|q QWORD "[vstack:0|q]" v0|q v0|q [158, 183[ "StoreAtDefinition"
  v26|q QWORD "[vstack:0|q]" v0|q v0|q [183, 187[ "StoreAtDefinition"
  v27|q QWORD "[vstack:1|q]" v10|q v10|q [185, 187[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4d3880ba slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v1|DWORD[_], y: v1|DWORD[_]) trueDestinationProbability: 0.9995476485705437 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607178344380559128
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  120  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: v3|QWORD[.] 
locals: v0|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:4, 1] <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: v3|QWORD[.] 
locals: v0|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v4|DWORD[_] * 8] state [bci:4, 1] <|@ <|@
      nr  126  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.lock()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 13] <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReferenceQueue.poll0()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:17] <|@ <|@
      nr  136  <|@ instruction v6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:20] <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v8|DWORD[_] * 8] state [bci:20] <|@ <|@
      nr  144  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  150  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = STACKMOVE (input: v17|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = MOVE input: v8|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v9|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v10|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 5, 25] <|@ <|@
      nr  154  <|@ instruction v11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.13490440495249595 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4555854336887303917
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction v12|DWORD[_] = MOV input: [v8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  182  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = STACKMOVE (input: v25|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = STACKMOVE (input: v22|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v10|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:12, 5, 25] <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4544130407221725336
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rax|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #26         // headIsNull:()boolean
     4: ifeq          9
     7: aconst_null   
     8: areturn       
     9: aload_0       
    10: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    13: invokevirtual #23         // java.util.concurrent.locks.ReentrantLock.lock:()void
    16: aload_0       
    17: invokevirtual #19         // poll0:()java.lang.ref.Reference
    20: astore_1      
    21: aload_0       
    22: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    25: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    28: aload_1       
    29: areturn       
    30: astore_2      
    31: aload_0       
    32: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    35: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    38: aload_2       
    39: athrow        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v6|q [0, 1[[46, 48[[130, 131[[134, 136[[152, 154[[186, 187[[218, 220[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[130, 131[[134, 135[[150, 153[[186, 187[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 18[[130, 131[[134, 135[[152, 153[[186, 187[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v5|q [0, 22[[128, 131[[132, 135[[148, 153[[184, 187[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[130, 131[[134, 135[[152, 153[[186, 187[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [22, 28[[50, 127[22 MustHaveRegister 24 MustHaveRegister 118 MustHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[r10|d]" v1|d -1 [24, 28[[50, 120[24 MustHaveRegister 26 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r11|d]" v2|d -1 [118, 122[118 MustHaveRegister 122 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[r10|q]" v3|q v1|d [120, 125[120 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [122, 126[122 MustHaveRegister 124 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q v4|d [126, 128[126 MustHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q rax|q [136, 151[136 MustHaveRegister  "OneSpillStore"
  v7|d DWORD "[rdx|d]" v7|d -1 [138, 146[138 MustHaveRegister 140 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r10|d]" v8|d -1 [140, 151[140 MustHaveRegister 142 MustHaveRegister 144 MustHaveRegister  "OneSpillStore"
  v9|q QWORD "[r11|q]" v9|q v8|d [144, 151[144 MustHaveRegister 148 ShouldHaveRegister  "OneSpillStore"
  v10|q QWORD "[rdx|q]" v10|q v7|d [146, 149[146 MustHaveRegister  "StoreAtDefinition"
  v11|d DWORD "[rax|d]" v11|d rax|q [154, 156[154 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[r10|d]" v12|d -1 [180, 182[180 MustHaveRegister 182 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[r10|q]" v13|q v12|d [182, 184[182 MustHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[vstack:0|q]" v0|q v0|q [127, 137[132 ShouldHaveRegister  "StoreAtDefinition"
  v15|q QWORD "[rsi|q]" v0|q v0|q [137, 147[138 MustHaveRegister  "StoreAtDefinition"
  v16|q QWORD "[vstack:3|q]" v6|q v6|q [151, 200[ "OneSpillStore"
  v17|q QWORD "[vstack:0|q]" v0|q v0|q [147, 151[ "StoreAtDefinition"
  v18|d DWORD "[vstack:2|d]" v8|d v8|d [151, 158[ "OneSpillStore"
  v19|q QWORD "[vstack:4|q]" v9|q v9|q [151, 153[ "OneSpillStore"
  v20|q QWORD "[vstack:1|q]" v10|q v10|q [149, 158[ "StoreAtDefinition"
  v21|q QWORD "[vstack:0|q]" v0|q v0|q [151, 158[ "StoreAtDefinition"
  v22|q QWORD "[vstack:1|q]" v10|q v10|q [158, 185[ "StoreAtDefinition"
  v23|d DWORD "[r10|d]" v8|d v8|d [158, 180[180 MustHaveRegister  "OneSpillStore"
  v24|q QWORD "[rax|q]" v6|q v6|q [200, 218[218 ShouldHaveRegister  "OneSpillStore"
  v25|q QWORD "[vstack:0|q]" v0|q v0|q [158, 183[ "StoreAtDefinition"
  v26|q QWORD "[vstack:0|q]" v0|q v0|q [183, 187[ "StoreAtDefinition"
  v27|q QWORD "[vstack:1|q]" v10|q v10|q [185, 187[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4d3880ba slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v1|DWORD[_], y: v1|DWORD[_]) trueDestinationProbability: 0.9995476485705437 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607178344380559128
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  120  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: v3|QWORD[.] 
locals: v0|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:4, 1] <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: v3|QWORD[.] 
locals: v0|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v4|DWORD[_] * 8] state [bci:4, 1] <|@ <|@
      nr  126  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.lock()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 13] <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReferenceQueue.poll0()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:17] <|@ <|@
      nr  136  <|@ instruction v6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:20] <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v8|DWORD[_] * 8] state [bci:20] <|@ <|@
      nr  144  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  150  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = STACKMOVE (input: v17|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = MOVE input: v8|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v9|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v10|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 5, 25] <|@ <|@
      nr  154  <|@ instruction v11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.13490440495249595 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4555854336887303917
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOVE input: v18|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction v12|DWORD[_] = MOV input: [v8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  182  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = STACKMOVE (input: v25|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = STACKMOVE (input: v22|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v10|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:12, 5, 25] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4544130407221725336
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rax|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #26         // headIsNull:()boolean
     4: ifeq          9
     7: aconst_null   
     8: areturn       
     9: aload_0       
    10: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    13: invokevirtual #23         // java.util.concurrent.locks.ReentrantLock.lock:()void
    16: aload_0       
    17: invokevirtual #19         // poll0:()java.lang.ref.Reference
    20: astore_1      
    21: aload_0       
    22: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    25: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    28: aload_1       
    29: areturn       
    30: astore_2      
    31: aload_0       
    32: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    35: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    38: aload_2       
    39: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4d3880ba slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   24  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v1|DWORD[_], y: v1|DWORD[_]) trueDestinationProbability: 0.9995476485705437 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607178344380559128
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  120  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: v3|QWORD[.] 
locals: v0|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:4, 1] <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: v3|QWORD[.] 
locals: v0|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v4|DWORD[_] * 8] state [bci:4, 1] <|@ <|@
      nr  126  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.lock()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 13] <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReferenceQueue.poll0()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:17] <|@ <|@
      nr  136  <|@ instruction v6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:20] <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v8|DWORD[_] * 8] state [bci:20] <|@ <|@
      nr  144  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  150  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = MOVE input: v8|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v9|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v10|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 5, 25] <|@ <|@
      nr  154  <|@ instruction v11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.13490440495249595 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4555854336887303917
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOVE input: v18|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction v12|DWORD[_] = MOV input: [v8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  182  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = MOVE input: v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v10|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:12, 5, 25] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4544130407221725336
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction rax|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #26         // headIsNull:()boolean
     4: ifeq          9
     7: aconst_null   
     8: areturn       
     9: aload_0       
    10: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    13: invokevirtual #23         // java.util.concurrent.locks.ReentrantLock.lock:()void
    16: aload_0       
    17: invokevirtual #19         // poll0:()java.lang.ref.Reference
    20: astore_1      
    21: aload_0       
    22: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    25: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    28: aload_1       
    29: areturn       
    30: astore_2      
    31: aload_0       
    32: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    35: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    38: aload_2       
    39: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4d3880ba slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9995476485705437 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607178344380559128
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  120  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:4, 1] <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:4, 1] <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
locals: vstack:0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.lock()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 13] <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
locals: vstack:0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReferenceQueue.poll0()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:17] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:20] <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:20] <|@ <|@
      nr  144  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: vstack:4|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:1|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: vstack:0|QWORD[.] vstack:3|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 5, 25] <|@ <|@
      nr  156  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.13490440495249595 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4555854336887303917
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE input: vstack:2|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  182  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:1|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: vstack:0|QWORD[.] vstack:3|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:12, 5, 25] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4544130407221725336
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #26         // headIsNull:()boolean
     4: ifeq          9
     7: aconst_null   
     8: areturn       
     9: aload_0       
    10: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    13: invokevirtual #23         // java.util.concurrent.locks.ReentrantLock.lock:()void
    16: aload_0       
    17: invokevirtual #19         // poll0:()java.lang.ref.Reference
    20: astore_1      
    21: aload_0       
    22: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    25: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    28: aload_1       
    29: areturn       
    30: astore_2      
    31: aload_0       
    32: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    35: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    38: aload_2       
    39: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4d3880ba slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9995476485705437 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607178344380559128
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  120  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:4, 1] <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:4, 1] <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
locals: vstack:0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.lock()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 13] <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
locals: vstack:0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReferenceQueue.poll0()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:17] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:20] <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:20] <|@ <|@
      nr  144  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: vstack:4|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:1|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: vstack:0|QWORD[.] vstack:3|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 5, 25] <|@ <|@
      nr  156  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.13490440495249595 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4555854336887303917
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE input: vstack:2|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  182  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:1|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: vstack:0|QWORD[.] vstack:3|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:12, 5, 25] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4544130407221725336
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #26         // headIsNull:()boolean
     4: ifeq          9
     7: aconst_null   
     8: areturn       
     9: aload_0       
    10: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    13: invokevirtual #23         // java.util.concurrent.locks.ReentrantLock.lock:()void
    16: aload_0       
    17: invokevirtual #19         // poll0:()java.lang.ref.Reference
    20: astore_1      
    21: aload_0       
    22: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    25: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    28: aload_1       
    29: areturn       
    30: astore_2      
    31: aload_0       
    32: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    35: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    38: aload_2       
    39: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4d3880ba slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9995476485705437 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607178344380559128
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  120  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:4, 1] <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:4, 1] <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
locals: vstack:0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.lock()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 13] <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
locals: vstack:0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReferenceQueue.poll0()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:17] <|@ <|@
      nr  136  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:20] <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:20] <|@ <|@
      nr  144  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  154  <|@ instruction vstack:4|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction vstack:3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction vstack:2|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: vstack:4|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:1|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: vstack:0|QWORD[.] vstack:3|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 5, 25] <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.13490440495249595 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4555854336887303917
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction r10|DWORD[_] = MOVE input: vstack:2|DWORD[_] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  202  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:1|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: vstack:0|QWORD[.] vstack:3|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:12, 5, 25] <|@ <|@
      nr  208  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4544130407221725336
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #26         // headIsNull:()boolean
     4: ifeq          9
     7: aconst_null   
     8: areturn       
     9: aload_0       
    10: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    13: invokevirtual #23         // java.util.concurrent.locks.ReentrantLock.lock:()void
    16: aload_0       
    17: invokevirtual #19         // poll0:()java.lang.ref.Reference
    20: astore_1      
    21: aload_0       
    22: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    25: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    28: aload_1       
    29: areturn       
    30: astore_2      
    31: aload_0       
    32: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    35: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    38: aload_2       
    39: athrow        
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [22, 206[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [148, 206[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[vstack:2|d]" vstack:2|d -1 [158, 178[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[vstack:3|q]" vstack:3|q -1 [156, 208[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[vstack:4|q]" vstack:4|q -1 [154, 160[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:32|q]" vstack:0|q -1 [22, 206[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:40|q]" vstack:1|q -1 [148, 206[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[stack:60|d]" vstack:2|d -1 [158, 178[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[stack:56|q]" vstack:3|q -1 [156, 208[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[stack:48|q]" vstack:4|q -1 [154, 160[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4d3880ba slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9995476485705437 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607178344380559128
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  120  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:4, 1] <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:4, 1] <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.lock()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 13] <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReferenceQueue.poll0()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:17] <|@ <|@
      nr  136  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:20] <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:20] <|@ <|@
      nr  144  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  154  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction stack:60|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: stack:48|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:40|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: stack:32|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 5, 25] <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.13490440495249595 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4555854336887303917
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction r10|DWORD[_] = MOVE input: stack:60|DWORD[_] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  202  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:40|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: stack:32|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:12, 5, 25] <|@ <|@
      nr  208  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4544130407221725336
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #26         // headIsNull:()boolean
     4: ifeq          9
     7: aconst_null   
     8: areturn       
     9: aload_0       
    10: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    13: invokevirtual #23         // java.util.concurrent.locks.ReentrantLock.lock:()void
    16: aload_0       
    17: invokevirtual #19         // poll0:()java.lang.ref.Reference
    20: astore_1      
    21: aload_0       
    22: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    25: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    28: aload_1       
    29: areturn       
    30: astore_2      
    31: aload_0       
    32: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    35: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    38: aload_2       
    39: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4d3880ba slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9995476485705437 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607178344380559128
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  120  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:4, 1] <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:4, 1] <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.lock()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 13] <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReferenceQueue.poll0()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:17] <|@ <|@
      nr  136  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:20] <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:20] <|@ <|@
      nr  144  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  154  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction stack:60|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: stack:48|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:40|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: stack:32|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 5, 25] <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.13490440495249595 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4555854336887303917
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction r10|DWORD[_] = MOVE input: stack:60|DWORD[_] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  202  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:40|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: stack:32|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:12, 5, 25] <|@ <|@
      nr  208  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4544130407221725336
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #26         // headIsNull:()boolean
     4: ifeq          9
     7: aconst_null   
     8: areturn       
     9: aload_0       
    10: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    13: invokevirtual #23         // java.util.concurrent.locks.ReentrantLock.lock:()void
    16: aload_0       
    17: invokevirtual #19         // poll0:()java.lang.ref.Reference
    20: astore_1      
    21: aload_0       
    22: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    25: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    28: aload_1       
    29: areturn       
    30: astore_2      
    31: aload_0       
    32: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    35: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    38: aload_2       
    39: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4d3880ba slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9995476485705437 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607178344380559128
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  120  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:4, 1] <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:4, 1] <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.lock()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 13] <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReferenceQueue.poll0()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:17] <|@ <|@
      nr  136  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:20] <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:20] <|@ <|@
      nr  144  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  154  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction stack:60|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: stack:48|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:40|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: stack:32|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 5, 25] <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.13490440495249595 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4555854336887303917
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction r10|DWORD[_] = MOVE input: stack:60|DWORD[_] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  202  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:40|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: stack:32|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:12, 5, 25] <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4544130407221725336
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #26         // headIsNull:()boolean
     4: ifeq          9
     7: aconst_null   
     8: areturn       
     9: aload_0       
    10: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    13: invokevirtual #23         // java.util.concurrent.locks.ReentrantLock.lock:()void
    16: aload_0       
    17: invokevirtual #19         // poll0:()java.lang.ref.Reference
    20: astore_1      
    21: aload_0       
    22: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    25: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    28: aload_1       
    29: areturn       
    30: astore_2      
    31: aload_0       
    32: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    35: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    38: aload_2       
    39: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4d3880ba slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9995476485705437 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607178344380559128
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  120  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:4, 1] <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:4, 1] <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.lock()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 13] <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReferenceQueue.poll0()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:17] <|@ <|@
      nr  136  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:20] <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:20] <|@ <|@
      nr  144  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  154  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction stack:60|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: stack:48|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:40|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: stack:32|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 5, 25] <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.13490440495249595 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4555854336887303917
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction r10|DWORD[_] = MOVE input: stack:60|DWORD[_] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  202  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:40|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: stack:32|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:12, 5, 25] <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4544130407221725336
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #26         // headIsNull:()boolean
     4: ifeq          9
     7: aconst_null   
     8: areturn       
     9: aload_0       
    10: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    13: invokevirtual #23         // java.util.concurrent.locks.ReentrantLock.lock:()void
    16: aload_0       
    17: invokevirtual #19         // poll0:()java.lang.ref.Reference
    20: astore_1      
    21: aload_0       
    22: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    25: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    28: aload_1       
    29: areturn       
    30: astore_2      
    31: aload_0       
    32: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    35: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    38: aload_2       
    39: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4d3880ba slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9995476485705437 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607178344380559128
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  120  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:4, 1] <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:4, 1] <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.lock()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 13] <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReferenceQueue.poll0()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:17] <|@ <|@
      nr  136  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:20] <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:20] <|@ <|@
      nr  144  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  154  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction stack:60|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: stack:48|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:40|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: stack:32|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 5, 25] <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.13490440495249595 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4555854336887303917
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction r10|DWORD[_] = MOVE input: stack:60|DWORD[_] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  202  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:40|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: stack:32|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:12, 5, 25] <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4544130407221725336
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #26         // headIsNull:()boolean
     4: ifeq          9
     7: aconst_null   
     8: areturn       
     9: aload_0       
    10: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    13: invokevirtual #23         // java.util.concurrent.locks.ReentrantLock.lock:()void
    16: aload_0       
    17: invokevirtual #19         // poll0:()java.lang.ref.Reference
    20: astore_1      
    21: aload_0       
    22: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    25: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    28: aload_1       
    29: areturn       
    30: astore_2      
    31: aload_0       
    32: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    35: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    38: aload_2       
    39: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4d3880ba slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9995476485705437 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607178344380559128
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  120  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:4, 1] <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:4, 1] <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.lock()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 13] <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReferenceQueue.poll0()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:17] <|@ <|@
      nr  136  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:20] <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:20] <|@ <|@
      nr  144  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  154  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction stack:60|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: stack:48|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:40|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: stack:32|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 5, 25] <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.13490440495249595 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4555854336887303917
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction r10|DWORD[_] = MOVE input: stack:60|DWORD[_] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  202  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:40|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: stack:32|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:12, 5, 25] <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4544130407221725336
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #26         // headIsNull:()boolean
     4: ifeq          9
     7: aconst_null   
     8: areturn       
     9: aload_0       
    10: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    13: invokevirtual #23         // java.util.concurrent.locks.ReentrantLock.lock:()void
    16: aload_0       
    17: invokevirtual #19         // poll0:()java.lang.ref.Reference
    20: astore_1      
    21: aload_0       
    22: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    25: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    28: aload_1       
    29: areturn       
    30: astore_2      
    31: aload_0       
    32: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    35: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    38: aload_2       
    39: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4d3880ba slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9995476485705437 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607178344380559128
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  120  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:4, 1] <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:4, 1] <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.lock()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 13] <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReferenceQueue.poll0()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:17] <|@ <|@
      nr  136  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:20] <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:20] <|@ <|@
      nr  144  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  154  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction stack:60|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: stack:48|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:40|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: stack:32|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 5, 25] <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.13490440495249595 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4555854336887303917
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction r10|DWORD[_] = MOVE input: stack:60|DWORD[_] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  202  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:40|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: stack:32|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:12, 5, 25] <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4544130407221725336
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #26         // headIsNull:()boolean
     4: ifeq          9
     7: aconst_null   
     8: areturn       
     9: aload_0       
    10: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    13: invokevirtual #23         // java.util.concurrent.locks.ReentrantLock.lock:()void
    16: aload_0       
    17: invokevirtual #19         // poll0:()java.lang.ref.Reference
    20: astore_1      
    21: aload_0       
    22: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    25: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    28: aload_1       
    29: areturn       
    30: astore_2      
    31: aload_0       
    32: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    35: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    38: aload_2       
    39: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4d3880ba slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9995476485705437 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607178344380559128
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  120  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:4, 1] <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:4, 1] <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.lock()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 13] <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReferenceQueue.poll0()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:17] <|@ <|@
      nr  136  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:20] <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:20] <|@ <|@
      nr  144  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  154  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction stack:60|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: stack:48|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:40|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: stack:32|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 5, 25] <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.13490440495249595 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4555854336887303917
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction r10|DWORD[_] = MOVE input: stack:60|DWORD[_] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  202  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:40|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: stack:32|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:12, 5, 25] <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4544130407221725336
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #26         // headIsNull:()boolean
     4: ifeq          9
     7: aconst_null   
     8: areturn       
     9: aload_0       
    10: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    13: invokevirtual #23         // java.util.concurrent.locks.ReentrantLock.lock:()void
    16: aload_0       
    17: invokevirtual #19         // poll0:()java.lang.ref.Reference
    20: astore_1      
    21: aload_0       
    22: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    25: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    28: aload_1       
    29: areturn       
    30: astore_2      
    31: aload_0       
    32: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    35: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    38: aload_2       
    39: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4d3880ba slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9995476485705437 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607178344380559128
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  120  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:4, 1] <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:4, 1] <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.lock()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 13] <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReferenceQueue.poll0()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:17] <|@ <|@
      nr  136  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:20] <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:20] <|@ <|@
      nr  144  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  154  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction stack:60|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: stack:48|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:40|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: stack:32|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 5, 25] <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.13490440495249595 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4555854336887303917
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction r10|DWORD[_] = MOVE input: stack:60|DWORD[_] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  202  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:40|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: stack:32|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:12, 5, 25] <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4544130407221725336
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #26         // headIsNull:()boolean
     4: ifeq          9
     7: aconst_null   
     8: areturn       
     9: aload_0       
    10: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    13: invokevirtual #23         // java.util.concurrent.locks.ReentrantLock.lock:()void
    16: aload_0       
    17: invokevirtual #19         // poll0:()java.lang.ref.Reference
    20: astore_1      
    21: aload_0       
    22: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    25: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    28: aload_1       
    29: areturn       
    30: astore_2      
    31: aload_0       
    32: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    35: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    38: aload_2       
    39: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4d3880ba slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9995476485705437 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607178344380559128
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  120  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:32]
live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:4, 1] <|@ <|@
      nr  124  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:32]
live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:4, 1] <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.lock()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 13] <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReferenceQueue.poll0()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:17] <|@ <|@
      nr  136  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:32]
live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:20] <|@ <|@
      nr  142  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r10:0, stack:32]
live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:20] <|@ <|@
      nr  144  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  154  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction stack:60|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  160  <|@ st <@st|@reference-map: [stack:4, stack:8, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: stack:48|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:40|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: stack:32|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 5, 25] <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.13490440495249595 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4555854336887303917
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction r10|DWORD[_] = MOVE input: stack:60|DWORD[_] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  202  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ st <@st|@reference-map: [stack:8, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:40|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: stack:32|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:12, 5, 25] <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4544130407221725336
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #26         // headIsNull:()boolean
     4: ifeq          9
     7: aconst_null   
     8: areturn       
     9: aload_0       
    10: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    13: invokevirtual #23         // java.util.concurrent.locks.ReentrantLock.lock:()void
    16: aload_0       
    17: invokevirtual #19         // poll0:()java.lang.ref.Reference
    20: astore_1      
    21: aload_0       
    22: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    25: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    28: aload_1       
    29: areturn       
    30: astore_2      
    31: aload_0       
    32: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    35: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    38: aload_2       
    39: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4d3880ba slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9995476485705437 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607178344380559128
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  120  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:32]
live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:4, 1] <|@ <|@
      nr  124  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:32]
live-base-pointers: []
java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:4, 1] <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.lock()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 13] <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReferenceQueue.poll0()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:17] <|@ <|@
      nr  136  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:32]
live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:20] <|@ <|@
      nr  142  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r10:0, stack:32]
live-base-pointers: []
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20]
stack: rax|QWORD[.] 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:20] <|@ <|@
      nr  144  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  154  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction stack:60|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  160  <|@ st <@st|@reference-map: [stack:4, stack:8, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: stack:48|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:40|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: stack:32|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 5, 25] <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.13490440495249595 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4555854336887303917
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction r10|DWORD[_] = MOVE input: stack:60|DWORD[_] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  202  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ st <@st|@reference-map: [stack:8, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:40|QWORD[.] 
java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25]
locals: stack:32|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:12, 5, 25] <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 4556980034694758400
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4544130407221725336
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #26         // headIsNull:()boolean
     4: ifeq          9
     7: aconst_null   
     8: areturn       
     9: aload_0       
    10: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    13: invokevirtual #23         // java.util.concurrent.locks.ReentrantLock.lock:()void
    16: aload_0       
    17: invokevirtual #19         // poll0:()java.lang.ref.Reference
    20: astore_1      
    21: aload_0       
    22: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    25: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    28: aload_1       
    29: areturn       
    30: astore_2      
    31: aload_0       
    32: getfield      #8          // lock:java.util.concurrent.locks.ReentrantLock
    35: invokevirtual #25         // java.util.concurrent.locks.ReentrantLock.unlock:()void
    38: aload_2       
    39: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec389041817f20000000000f854f010000909090909090909048896c24304889742420448b560c4585d20f8526000000909090909090909048c7c000000000488b6c24304883c438493ba7500400000f871b010000c3909090909090909090909090909090909090909090909090909090909090909090448b5e1849c1e203468b1cdd0c000000428504dd0000000049c1e303498bf3e8000000000f1f840000000000488b7424206690e8000000000f1f840000000000488b7424208b5618448b14d50c000000428504d500000000458bda49c1e30348c1e2034889542418498bf3ba010000004c895c241048894424084489542404e8000000000f1f84000000000085c00f8450000000448b54240490909090909090909090468b14d51400000049c1e203498bf290e8000000000f1f840000000000488b4424089090909090909090488b6c24304883c438493ba7500400000f872a000000c3909090ebd748896c2430e800000000e9a2fefffff4488d0dd1feffff49898f68040000e954fefffff4488d0dc2ffffff49898f68040000e940fefffff441c78784040000f5b4ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5a9ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 71 20 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4d3880ba slotKind: QWORD  <||@
  Comment 71 22 stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 76 24 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 80 26 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9995476485705437 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 89 block B1 null  <||@
  Comment 89 28 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 89 30 NOP  <||@
  Comment 90 32 NOP  <||@
  Comment 91 34 NOP  <||@
  Comment 92 36 NOP  <||@
  Comment 93 38 NOP  <||@
  Comment 94 40 NOP  <||@
  Comment 95 42 NOP  <||@
  Comment 96 44 NOP  <||@
  Comment 97 46 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 104 48 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 113 POLL_RETURN_FAR  <||@
  Comment 127 block B2 null  <||@
  Comment 127 50 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 127 52 NOP  <||@
  Comment 128 54 NOP  <||@
  Comment 129 56 NOP  <||@
  Comment 130 58 NOP  <||@
  Comment 131 60 NOP  <||@
  Comment 132 62 NOP  <||@
  Comment 133 64 NOP  <||@
  Comment 134 66 NOP  <||@
  Comment 135 68 NOP  <||@
  Comment 136 70 NOP  <||@
  Comment 137 72 NOP  <||@
  Comment 138 74 NOP  <||@
  Comment 139 76 NOP  <||@
  Comment 140 78 NOP  <||@
  Comment 141 80 NOP  <||@
  Comment 142 82 NOP  <||@
  Comment 143 84 NOP  <||@
  Comment 144 86 NOP  <||@
  Comment 145 88 NOP  <||@
  Comment 146 90 NOP  <||@
  Comment 147 92 NOP  <||@
  Comment 148 94 NOP  <||@
  Comment 149 96 NOP  <||@
  Comment 150 98 NOP  <||@
  Comment 151 100 NOP  <||@
  Comment 152 102 NOP  <||@
  Comment 153 104 NOP  <||@
  Comment 154 106 NOP  <||@
  Comment 155 108 NOP  <||@
  Comment 156 110 NOP  <||@
  Comment 157 112 NOP  <||@
  Comment 158 114 NOP  <||@
  Comment 159 116 NOP  <||@
  Comment 160 118 r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 164 120 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3  <||@
  Comment 168 122 r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:4, 1]  <||@
  Comment 168 [rsi:0, r10:0, stack:32]at java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
     stack:   |r10|QWORD[.] 
  at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 168 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 176 124 NULLCHECK address: [r11|DWORD[_] * 8] state [bci:4, 1]  <||@
  Comment 176 [rsi:0, r10:0, r11:0, stack:32]at java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
     stack:   |r10|QWORD[.] 
  at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 176 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 184 126 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3  <||@
  Comment 188 128 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 191 130 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.lock()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 13]  <||@
  Comment 191 {HotSpotMethod<ReentrantLock$Sync.lock()>}  <||@
  Comment 191 INVOKESPECIAL  <||@
  Comment 196 [stack:32]at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 204 132 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 209 134 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReferenceQueue.poll0()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:17]  <||@
  Comment 211 {HotSpotMethod<ReferenceQueue.poll0()>}  <||@
  Comment 211 INVOKESPECIAL  <||@
  Comment 216 [stack:32]at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 224 136 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 229 138 rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 232 140 r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:20]  <||@
  Comment 232 [rax:0, rdx:0, rsi:0, stack:32]at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|QWORD[.]  |   |    <||@
  Comment 232 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 240 142 NULLCHECK address: [r10|DWORD[_] * 8] state [bci:20]  <||@
  Comment 240 [rax:0, rdx:0, rsi:0, r10:0, stack:32]at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|QWORD[.]  |   |    <||@
  Comment 240 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 248 144 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3  <||@
  Comment 255 146 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3  <||@
  Comment 259 148 stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 264 150 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 267 152 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 272 154 stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 277 156 stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 282 158 stack:60|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD  <||@
  Comment 287 160 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 5, 25]  <||@
  Comment 287 {HotSpotMethod<ReentrantLock$Sync.tryRelease(int)>}  <||@
  Comment 287 INVOKESPECIAL  <||@
  Comment 292 [stack:4, stack:8, stack:16, stack:24, stack:32]at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25, duringCall: true, rethrow: false]
              |0                  |1                  |2 
     locals:  |stack:32|QWORD[.]  |stack:56|QWORD[.]  |-   <||@
  Comment 300 162 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.13490440495249595 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 308 block B4 null  <||@
  Comment 308 176 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 308 178 r10|DWORD[_] = MOVE input: stack:60|DWORD[_] moveKind: DWORD  <||@
  Comment 313 180 NOP  <||@
  Comment 314 182 NOP  <||@
  Comment 315 184 NOP  <||@
  Comment 316 186 NOP  <||@
  Comment 317 188 NOP  <||@
  Comment 318 190 NOP  <||@
  Comment 319 192 NOP  <||@
  Comment 320 194 NOP  <||@
  Comment 321 196 NOP  <||@
  Comment 322 198 NOP  <||@
  Comment 323 200 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 331 202 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3  <||@
  Comment 335 204 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 338 206 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:12, 5, 25]  <||@
  Comment 339 {HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>}  <||@
  Comment 339 INVOKESTATIC  <||@
  Comment 344 [stack:8, stack:24, stack:32]at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25, duringCall: true, rethrow: false]
              |0                  |1                  |2 
     locals:  |stack:32|QWORD[.]  |stack:56|QWORD[.]  |-   <||@
  Comment 352 210 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 352 block B5 null  <||@
  Comment 352 212 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 352 208 rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 357 214 NOP  <||@
  Comment 358 216 NOP  <||@
  Comment 359 218 NOP  <||@
  Comment 360 220 NOP  <||@
  Comment 361 222 NOP  <||@
  Comment 362 224 NOP  <||@
  Comment 363 226 NOP  <||@
  Comment 364 228 NOP  <||@
  Comment 365 230 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 374 POLL_RETURN_FAR  <||@
  Comment 388 block B3 null  <||@
  Comment 388 164 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 388 166 NOP  <||@
  Comment 389 168 NOP  <||@
  Comment 390 170 NOP  <||@
  Comment 391 174 JUMP ~outgoingValues: [] destination: B3 -> B5  <||@
  Comment 398 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 423 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 443 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 471 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 476 [rsi:0, r10:0, stack:32]at java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
     stack:   |r10|QWORD[.] 
  at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 506 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 511 [rax:0, rdx:0, rsi:0, stack:32]at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|QWORD[.]  |   |    <||@
  Comment 519 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 519 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 525 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 525 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-1779[java.lang.ref.ReferenceQueue.poll()]"
  method "HotSpotCompilation-1779[java.lang.ref.ReferenceQueue.poll()]"
  date 1724269725356
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789acce540 448b560849bc0000002b787f00004d03d44d33e4493bc20f85236babfe66669089842400c0feff4883ec389041817f20030000000f854f010000909090909090909048896c24304889742420448b560c4585d20f8526000000909090909090909048c7c000000000488b6c24304883c438493ba7500400000f871b010000c3909090909090909090909090909090909090909090909090909090909090909090448b5e1849c1e203468b1cdd0c000000428504dd0000000049c1e303498bf3e87c6dabfe0f1f840074020002488b7424206690e8686dabfe0f1f840088020003488b7424208b5618448b14d50c000000428504d500000000458bda49c1e30348c1e2034889542418498bf3ba010000004c895c241048894424084489542404e81c6dabfe0f1f8400d402000685c00f8450000000448b54240490909090909090909090468b14d51400000049c1e203498bf290e8e872abfe0f1f840008030007488b4424089090909090909090488b6c24304883c438493ba7500400000f872a000000c3909090ebd748896c2430e84dcba9fee9a2fefffff4488d0dd1feffff49898f68040000e914d9abfef4488d0dc2ffffff49898f68040000e900d9abfef441c78784040000f5b4ffff49c7879004000000000000e85ecaabfe0f1f84000000000041c78784040000f5a9ffff49c7879004000000000000e83bcaabfe0f1f840000000000e8b46bbffef4e8cec7abfef4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 71 20 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4d3880ba slotKind: QWORD  <||@
  Comment 71 22 stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 76 24 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 80 26 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.9995476485705437 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 89 block B1 null  <||@
  Comment 89 28 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 89 30 NOP  <||@
  Comment 90 32 NOP  <||@
  Comment 91 34 NOP  <||@
  Comment 92 36 NOP  <||@
  Comment 93 38 NOP  <||@
  Comment 94 40 NOP  <||@
  Comment 95 42 NOP  <||@
  Comment 96 44 NOP  <||@
  Comment 97 46 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 104 48 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 113 POLL_RETURN_FAR  <||@
  Comment 127 block B2 null  <||@
  Comment 127 50 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 127 52 NOP  <||@
  Comment 128 54 NOP  <||@
  Comment 129 56 NOP  <||@
  Comment 130 58 NOP  <||@
  Comment 131 60 NOP  <||@
  Comment 132 62 NOP  <||@
  Comment 133 64 NOP  <||@
  Comment 134 66 NOP  <||@
  Comment 135 68 NOP  <||@
  Comment 136 70 NOP  <||@
  Comment 137 72 NOP  <||@
  Comment 138 74 NOP  <||@
  Comment 139 76 NOP  <||@
  Comment 140 78 NOP  <||@
  Comment 141 80 NOP  <||@
  Comment 142 82 NOP  <||@
  Comment 143 84 NOP  <||@
  Comment 144 86 NOP  <||@
  Comment 145 88 NOP  <||@
  Comment 146 90 NOP  <||@
  Comment 147 92 NOP  <||@
  Comment 148 94 NOP  <||@
  Comment 149 96 NOP  <||@
  Comment 150 98 NOP  <||@
  Comment 151 100 NOP  <||@
  Comment 152 102 NOP  <||@
  Comment 153 104 NOP  <||@
  Comment 154 106 NOP  <||@
  Comment 155 108 NOP  <||@
  Comment 156 110 NOP  <||@
  Comment 157 112 NOP  <||@
  Comment 158 114 NOP  <||@
  Comment 159 116 NOP  <||@
  Comment 160 118 r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 164 120 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3  <||@
  Comment 168 122 r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:4, 1]  <||@
  Comment 168 [rsi:0, r10:0, stack:32]at java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
     stack:   |r10|QWORD[.] 
  at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 168 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 176 124 NULLCHECK address: [r11|DWORD[_] * 8] state [bci:4, 1]  <||@
  Comment 176 [rsi:0, r10:0, r11:0, stack:32]at java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
     stack:   |r10|QWORD[.] 
  at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 176 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 184 126 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3  <||@
  Comment 188 128 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 191 130 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.lock()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 13]  <||@
  Comment 191 {HotSpotMethod<ReentrantLock$Sync.lock()>}  <||@
  Comment 191 INVOKESPECIAL  <||@
  Comment 196 [stack:32]at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182) [bci: 13, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 204 132 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 209 134 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<ReferenceQueue.poll0()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:17]  <||@
  Comment 211 {HotSpotMethod<ReferenceQueue.poll0()>}  <||@
  Comment 211 INVOKESPECIAL  <||@
  Comment 216 [stack:32]at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 224 136 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 229 138 rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 232 140 r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:20]  <||@
  Comment 232 [rax:0, rdx:0, rsi:0, stack:32]at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|QWORD[.]  |   |    <||@
  Comment 232 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 240 142 NULLCHECK address: [r10|DWORD[_] * 8] state [bci:20]  <||@
  Comment 240 [rax:0, rdx:0, rsi:0, r10:0, stack:32]at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|QWORD[.]  |   |    <||@
  Comment 240 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 248 144 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3  <||@
  Comment 255 146 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3  <||@
  Comment 259 148 stack:40|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 264 150 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 267 152 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 272 154 stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 277 156 stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 282 158 stack:60|DWORD[_] = MOVE input: r10|DWORD[_] moveKind: DWORD  <||@
  Comment 287 160 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$Sync.tryRelease(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 5, 25]  <||@
  Comment 287 {HotSpotMethod<ReentrantLock$Sync.tryRelease(int)>}  <||@
  Comment 287 INVOKESPECIAL  <||@
  Comment 292 [stack:4, stack:8, stack:16, stack:24, stack:32]at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25, duringCall: true, rethrow: false]
              |0                  |1                  |2 
     locals:  |stack:32|QWORD[.]  |stack:56|QWORD[.]  |-   <||@
  Comment 300 162 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.13490440495249595 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 308 block B4 null  <||@
  Comment 308 176 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 308 178 r10|DWORD[_] = MOVE input: stack:60|DWORD[_] moveKind: DWORD  <||@
  Comment 313 180 NOP  <||@
  Comment 314 182 NOP  <||@
  Comment 315 184 NOP  <||@
  Comment 316 186 NOP  <||@
  Comment 317 188 NOP  <||@
  Comment 318 190 NOP  <||@
  Comment 319 192 NOP  <||@
  Comment 320 194 NOP  <||@
  Comment 321 196 NOP  <||@
  Comment 322 198 NOP  <||@
  Comment 323 200 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 331 202 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2221b665 encoding: base: 0 shift: 3  <||@
  Comment 335 204 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 338 206 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:12, 5, 25]  <||@
  Comment 339 {HotSpotMethod<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>}  <||@
  Comment 339 INVOKESTATIC  <||@
  Comment 344 [stack:8, stack:24, stack:32]at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:186) [bci: 25, duringCall: true, rethrow: false]
              |0                  |1                  |2 
     locals:  |stack:32|QWORD[.]  |stack:56|QWORD[.]  |-   <||@
  Comment 352 210 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 352 block B5 null  <||@
  Comment 352 212 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 352 208 rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 357 214 NOP  <||@
  Comment 358 216 NOP  <||@
  Comment 359 218 NOP  <||@
  Comment 360 220 NOP  <||@
  Comment 361 222 NOP  <||@
  Comment 362 224 NOP  <||@
  Comment 363 226 NOP  <||@
  Comment 364 228 NOP  <||@
  Comment 365 230 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 374 POLL_RETURN_FAR  <||@
  Comment 388 block B3 null  <||@
  Comment 388 164 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 388 166 NOP  <||@
  Comment 389 168 NOP  <||@
  Comment 390 170 NOP  <||@
  Comment 391 174 JUMP ~outgoingValues: [] destination: B3 -> B5  <||@
  Comment 398 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 423 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 443 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 471 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 476 [rsi:0, r10:0, stack:32]at java.lang.ref.ReferenceQueue.headIsNull(ReferenceQueue.java:111) [bci: 4, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
     stack:   |r10|QWORD[.] 
  at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:180) [bci: 1, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 506 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 511 [rax:0, rdx:0, rsi:0, stack:32]at java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:184) [bci: 20, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|QWORD[.]  |   |    <||@
  Comment 519 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 519 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 525 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 525 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
