begin_compilation
  name " HotSpotCompilation-7845[java.util.regex.Pattern$Start.match(Matcher, int, CharSequence)]"
  method "HotSpotCompilation-7845[java.util.regex.Pattern$Start.match(Matcher, int, CharSequence)]"
  date 1724269714391
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i929 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i929  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.util.regex.Pattern$Start
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v993 ?337 ?26 v995 ?264 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.util.regex.Matcher
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v1025 v1022 ?86 v517 ?26 v490 ?270 ?796 ?41 ?258 ?264 ?337 ?794 ?795 ?315 v992 v994 v1021 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v9 i25 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a java.lang.Object
uncheckedStamp: a java.lang.CharSequence
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?26 v517 ?794 ?258 ?264 ?337 ?795 ?86 v490 v998 v497 ?270 ?796 ?315 v1027 v997 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_2
code: ResolvedJavaMethodBytecode<Pattern$Start.match(Matcher, int, CharSequence)>
localsSize: 5
locksSize: 0
sourceFile: Pattern.java
sourceLine: 3781
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 
=== Succesors ===
=== Usages ===
v1039 i929 v931 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4  <|@  <|@
f <@~|@floating>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i929 i934 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i929 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-89099|0xfffffffffffea3f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.to
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 2]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v992 
lastLocationAccess: - 
=== Succesors ===
next: i930 
=== Usages ===
i8 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v992 lastLocationAccess: - #next: i930  <|@  <|@
f <@~|@floating>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i930 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i930 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$Start.minLength
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 6]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v993 
lastLocationAccess: - 
=== Succesors ===
next: v12 
=== Usages ===
i8 
=== Predecessor ===
i929 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v993 lastLocationAccess: - #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 9]
stamp: i32
=== Inputs ===
x: i929 
y: i930 
=== Succesors ===
=== Usages ===
v9 ?26 v27 ?337 ?264 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i929 y: i930  <|@  <|@
f <@~|@floating>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i8 
y: i3 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i8 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3783) [bci: 18]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v18 i269 v326 v59 v87 v96 v285 v245 i142 ?244 ?95 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i557 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3782) [bci: 15]
rawvalue: 1
stableDimension: 0
stamp: i8 [1]
stampKind: i8
value: byte[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v358 v520 v556 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v358 v520 v556 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 10]
profileData: PROFILED designatedSuccessorProbability: 9.93051617825813E-7
stamp: void
=== Inputs ===
condition: v9 
=== Succesors ===
trueSuccessor: v11 
falseSuccessor: v10 
=== Usages ===
=== Predecessor ===
i930 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v9 #trueSuccessor: v11 #falseSuccessor: v10  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4517296380301017088
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3782) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v358 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.hitEnd
location: Matcher.hitEnd
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3782) [bci: 15]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v994 
lastLocationAccess: - 
value: i557 
stateAfter: - 
=== Succesors ===
next: v18 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v994 lastLocationAccess: - value: i557 stateAfter: - #next: v18  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3783) [bci: 19]
stamp: void
=== Inputs ===
memoryMap: - 
result: i17 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i17  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B83" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3785) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v931 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v931  <|@  <|@
f <@~|@floating>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v931 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-94219|0xfffffffffffe8ff5]
deoptSpeculation: long[12184|0x2f98]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v1027 
lastLocationAccess: - 
=== Succesors ===
next: v657 
=== Usages ===
v928 
=== Predecessor ===
v10 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v1027 lastLocationAccess: - #next: v657  <|@  <|@
f <@~|@floating>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v928 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v931 
y: v927 
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v931 y: v927  <|@  <|@
f <@*|@fixed>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v928 
=== Succesors ===
trueSuccessor: v654 
falseSuccessor: v656 
=== Usages ===
=== Predecessor ===
v931 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v928 #trueSuccessor: v654 #falseSuccessor: v656  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid j802 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j816 j816 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3782) [bci: 14]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i297 i44 i142 v56 i298 i123 i123 i123 i123 i123 i123 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i560 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
i939 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a935 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a932 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
v654 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B48" "B75" 
    successors "B78" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612642046083831603
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v24 
values: i3 i44 i44 
=== Succesors ===
=== Usages ===
?26 v27 v384 v524 v542 i44 ?258 ?264 ?337 j562 v82 ?86 i268 ?41 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v24 values: i3 i44 i44  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v23 
=== Succesors ===
next: v32 
=== Usages ===
i25 v30 v39 v45 v581 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v23 #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 34]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i8 
y: i25 
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i8 y: i25  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 34]
profileData: PROFILED designatedSuccessorProbability: 8.983968413646328E-4
stamp: void
=== Inputs ===
condition: v27 
=== Succesors ===
trueSuccessor: v30 
falseSuccessor: v28 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v27 #trueSuccessor: v30 #falseSuccessor: v28  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B61" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612637141171924796
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a932 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a932  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a932 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.regex.Pattern$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 38]
stamp: n java.util.regex.Pattern$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v995 
lastLocationAccess: - 
=== Succesors ===
next: v933 
=== Usages ===
a362 v996 v1015 v1018 v1028 
=== Predecessor ===
v28 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v995 lastLocationAccess: - #next: v933  <|@  <|@
tid ?26 <|@
d <@d|@=== Debug Properties ===
bci: 31
bytecode: iload_2
code: ResolvedJavaMethodBytecode<Pattern$Start.match(Matcher, int, CharSequence)>
localsSize: 5
locksSize: 0
sourceFile: Pattern.java
sourceLine: 3786
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i25 a4 i8 
=== Succesors ===
=== Usages ===
v817 v933 i936 v938 i943 v946 v950 v954 v958 v962 v991 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i25 a4 i8  <|@  <|@
f <@~|@floating>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a932 
=== Succesors ===
=== Usages ===
v933 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a932  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-92939|0xfffffffffffe94f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?26 
guard: - 
address: v1028 
lastLocationAccess: - 
=== Succesors ===
next: i934 
=== Usages ===
v897 
=== Predecessor ===
a932 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?26 guard: - address: v1028 lastLocationAccess: - #next: i934  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i934 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.to
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 2]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v992 
lastLocationAccess: - 
=== Succesors ===
next: v78 
=== Usages ===
v82 ?270 v271 ?795 ?794 
=== Predecessor ===
v933 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v992 lastLocationAccess: - #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v933 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v933  <|@  <|@
f <@~|@floating>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a932 
=== Succesors ===
=== Usages ===
a972 a976 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a932  <|@  <|@
f <@~|@floating>@ <|@
tid a362 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 38]
op: Uncompress
stamp: a java.util.regex.Pattern$Node
=== Inputs ===
value: a932 
=== Succesors ===
=== Usages ===
?270 ?315 ?794 ?258 ?796 ?86 ?795 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a932  <|@  <|@
f <@~|@floating>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a932 
=== Succesors ===
=== Usages ===
a937 i975 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a932  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 77]
stamp: i32
=== Inputs ===
x: i25 
y: i13 
=== Succesors ===
=== Usages ===
i25 v490 i25 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i25 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}]
keySuccessors: [I@36ef5061
keys: [HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>, HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>]
profileData: PROFILED keyProbabilities: [0.9808101766301843, 0.019189823369815628, 0.0]
stamp: void
=== Inputs ===
value: v897 
=== Succesors ===
successors: v65 v70 v73 
=== Usages ===
=== Predecessor ===
i934 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v897 #successors: v65 v70 v73  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a935 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a935  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a935 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.charAt(String.java:1555) [bci: 8]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v998 
lastLocationAccess: - 
=== Succesors ===
next: i936 
=== Usages ===
v1000 v999 
=== Predecessor ===
v65 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v998 lastLocationAccess: - #next: i936  <|@  <|@
f <@~|@floating>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a935 
=== Succesors ===
=== Usages ===
i936 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a935  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i936 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-96779|0xfffffffffffe85f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 2]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?26 
guard: - 
address: v999 
lastLocationAccess: - 
=== Succesors ===
next: v669 
=== Usages ===
v384 
=== Predecessor ===
a935 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?26 guard: - address: v999 lastLocationAccess: - #next: v669  <|@  <|@
f <@~|@floating>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i25 
y: i936 
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i25 y: i936  <|@  <|@
f <@*|@fixed>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v384 
=== Succesors ===
trueSuccessor: v666 
falseSuccessor: v668 
=== Usages ===
=== Predecessor ===
i936 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v384 #trueSuccessor: v666 #falseSuccessor: v668  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: a937 
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a937  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a937 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$CharProperty.predicate
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 9]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v996 
lastLocationAccess: - 
=== Succesors ===
next: v938 
=== Usages ===
v1029 v1001 v1004 
=== Predecessor ===
v666 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v996 lastLocationAccess: - #next: v938  <|@  <|@
f <@~|@floating>@ <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a937 
=== Succesors ===
=== Usages ===
v938 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a937  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-100619|0xfffffffffffe76f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?26 
guard: - 
address: v1029 
lastLocationAccess: - 
=== Succesors ===
next: v735 
=== Usages ===
v900 
=== Predecessor ===
a937 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?26 guard: - address: v1029 lastLocationAccess: - #next: v735  <|@  <|@
f <@~|@floating>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 5]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i25 
y: i934 
=== Succesors ===
=== Usages ===
v735 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i25 y: i934  <|@  <|@
f <@*|@fixed>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 5]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v82 
=== Succesors ===
trueSuccessor: v733 
falseSuccessor: v734 
=== Usages ===
=== Predecessor ===
v938 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v82 #trueSuccessor: v733 #falseSuccessor: v734  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 8]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: i939 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i939  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i939 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 7]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v997 
lastLocationAccess: - 
=== Succesors ===
next: v739 
=== Usages ===
v561 
=== Predecessor ===
v733 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v997 lastLocationAccess: - #next: v739  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i939 
y: i560 
=== Succesors ===
=== Usages ===
v739 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i939 y: i560  <|@  <|@
f <@*|@fixed>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:1554) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v561 
=== Succesors ===
trueSuccessor: v737 
falseSuccessor: v738 
=== Usages ===
=== Predecessor ===
i939 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v561 #trueSuccessor: v737 #falseSuccessor: v738  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" "B14" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.charAt(String.java:1555) [bci: 7]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: i940 
=== Usages ===
=== Predecessor ===
v739 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i940  <|@  <|@
f <@~|@floating>@ <|@
tid j562 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i25 
=== Succesors ===
=== Usages ===
v1000 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i25  <|@  <|@
f <@~|@floating>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j562 
index: a935 
=== Succesors ===
=== Usages ===
i940 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j562 index: a935  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i940 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1000 
lastLocationAccess: - 
=== Succesors ===
next: v136 
=== Usages ===
i563 j564 
=== Predecessor ===
v737 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1000 lastLocationAccess: - #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid i563 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 12]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i940 
=== Succesors ===
=== Usages ===
?256 v141 v404 v160 v162 v179 v181 v198 v200 v217 v219 v236 v238 v476 ?244 ?248 ?250 ?252 ?254 ?797 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i940  <|@  <|@
f <@~|@floating>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v938 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v938  <|@  <|@
f <@~|@floating>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a937 
=== Succesors ===
=== Usages ===
i941 a942 a945 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a937  <|@  <|@
tid ?264 <|@
d <@d|@=== Debug Properties ===
bci: 44
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern$Start.match(Matcher, int, CharSequence)>
localsSize: 5
locksSize: 0
sourceFile: Pattern.java
sourceLine: 3787
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i25 a4 i8 
=== Succesors ===
=== Usages ===
?86 ?95 ?258 ?798 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i25 a4 i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@2fa93f49
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>, HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5933422498483732, 0.20333546313444018, 0.20332228701718652, 0.0]
stamp: void
=== Inputs ===
value: v900 
=== Succesors ===
successors: v124 v126 v128 v131 
=== Usages ===
=== Predecessor ===
i940 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v900 #successors: v124 v126 v128 v131  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609027637273029927
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i941 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i941  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i941 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003b.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003b.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1001 
lastLocationAccess: - 
=== Succesors ===
next: v125 
=== Usages ===
v141 
=== Predecessor ===
v124 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1001 lastLocationAccess: - #next: v125  <|@  <|@
f <@~|@floating>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.lambda$Single$14(Pattern.java:5910) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x80000003b.is(int) [bci: 5]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i563 
y: i941 
=== Succesors ===
=== Usages ===
i142 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i563 y: i941  <|@  <|@
f <@~|@floating>@ <|@
tid i142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$Single$14(Pattern.java:5910) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x80000003b.is(int) [bci: 5]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
condition: v141 
trueValue: i13 
falseValue: i17 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v141 trueValue: i13 falseValue: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
i941 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a942 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a942  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a942 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# boolean[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$BitClass.bits
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 8]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n# boolean[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1001 
lastLocationAccess: - 
=== Succesors ===
next: i943 
=== Usages ===
v1003 v1002 
=== Predecessor ===
v126 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1001 lastLocationAccess: - #next: i943  <|@  <|@
f <@~|@floating>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a942 
=== Succesors ===
=== Usages ===
i943 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a942  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i943 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-102411|0xfffffffffffe6ff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?26 
guard: - 
address: v1002 
lastLocationAccess: - 
=== Succesors ===
next: v681 
=== Usages ===
v404 
=== Predecessor ===
a942 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?26 guard: - address: v1002 lastLocationAccess: - #next: v681  <|@  <|@
f <@~|@floating>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i563 
y: i943 
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i563 y: i943  <|@  <|@
f <@*|@fixed>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v404 
=== Succesors ===
trueSuccessor: v678 
falseSuccessor: v680 
=== Usages ===
=== Predecessor ===
i943 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v404 #trueSuccessor: v678 #falseSuccessor: v680  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: i944 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i944  <|@  <|@
f <@~|@floating>@ <|@
tid j564 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
resultBits: 64
stamp: i64 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i940 
=== Succesors ===
=== Usages ===
v1003 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i940  <|@  <|@
f <@~|@floating>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j564 
index: a942 
=== Succesors ===
=== Usages ===
i944 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: a942  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i944 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: boolean
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1003 
lastLocationAccess: - 
=== Succesors ===
next: v127 
=== Usages ===
i411 
=== Predecessor ===
v678 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1003 lastLocationAccess: - #next: v127  <|@  <|@
f <@~|@floating>@ <|@
tid i411 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
resultBits: 32
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
value: i944 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i944  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
i944 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v842 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v842  <|@  <|@
f <@~|@floating>@ <|@
tid i843 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -103707
stableDimension: 0
stamp: i32 [-103707]
stampKind: i32
value: int[-103707|0xfffffffffffe6ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v680 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" "B20" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602373890597978734
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a945 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a945  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a945 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1001 
lastLocationAccess: - 
=== Succesors ===
next: v946 
=== Usages ===
v1030 v1005 v1006 
=== Predecessor ===
v128 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1001 lastLocationAccess: - #next: v946  <|@  <|@
f <@~|@floating>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a945 
=== Succesors ===
=== Usages ===
v946 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a945  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-107019|0xfffffffffffe5df5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?26 
guard: - 
address: v1030 
lastLocationAccess: - 
=== Succesors ===
next: v155 
=== Usages ===
v903 
=== Predecessor ===
a945 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?26 guard: - address: v1030 lastLocationAccess: - #next: v155  <|@  <|@
f <@~|@floating>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v946 
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v946  <|@  <|@
f <@~|@floating>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a945 
=== Succesors ===
=== Usages ===
i948 a970 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a945  <|@  <|@
f <@~|@floating>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a945 
=== Succesors ===
=== Usages ===
i947 a949 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a945  <|@  <|@
f <@~|@floating>@ <|@
tid j848 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: 8980
stableDimension: 0
stamp: i64 [8980]
stampKind: i64
value: long[8980|0x2314]
=== Inputs ===
=== Succesors ===
=== Usages ===
j816 j816 j816 j816 j816 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j841 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: 9620
stableDimension: 0
stamp: i64 [9620]
stampKind: i64
value: long[9620|0x2594]
=== Inputs ===
=== Succesors ===
=== Usages ===
j816 j816 j816 j816 j816 j816 j816 j816 j816 j816 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@5c89843a
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5000012462543825, 0.49999875374561753, 0.0]
stamp: void
=== Inputs ===
value: v903 
=== Succesors ===
successors: v147 v148 v150 
=== Usages ===
=== Predecessor ===
v946 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v903 #successors: v147 v148 v150  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i947 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i947  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i947 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1005 
lastLocationAccess: - 
=== Succesors ===
next: v743 
=== Usages ===
v160 
=== Predecessor ===
v147 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1005 lastLocationAccess: - #next: v743  <|@  <|@
f <@~|@floating>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i563 
y: i947 
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i563 y: i947  <|@  <|@
f <@*|@fixed>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v160 
=== Succesors ===
trueSuccessor: v741 
falseSuccessor: v742 
=== Usages ===
=== Predecessor ===
i947 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v160 #trueSuccessor: v741 #falseSuccessor: v742  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v839 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v839  <|@  <|@
f <@~|@floating>@ <|@
tid i840 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -189459
stableDimension: 0
stamp: i32 [-189459]
stampKind: i32
value: int[-189459|0xfffffffffffd1bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v741 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 5]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: i948 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i948  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i948 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1006 
lastLocationAccess: - 
=== Succesors ===
next: v747 
=== Usages ===
v162 
=== Predecessor ===
v742 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1006 lastLocationAccess: - #next: v747  <|@  <|@
f <@~|@floating>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i948 
y: i563 
=== Succesors ===
=== Usages ===
v747 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i948 y: i563  <|@  <|@
f <@*|@fixed>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v162 
=== Succesors ===
trueSuccessor: v745 
falseSuccessor: v746 
=== Usages ===
=== Predecessor ===
i948 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v162 #trueSuccessor: v745 #falseSuccessor: v746  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v849 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v849  <|@  <|@
f <@~|@floating>@ <|@
tid i850 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -190483
stableDimension: 0
stamp: i32 [-190483]
stampKind: i32
value: int[-190483|0xfffffffffffd17ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v745 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 10]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v129  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
v746 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B26" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870269280122293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a949 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a949  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a949 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1005 
lastLocationAccess: - 
=== Succesors ===
next: v950 
=== Usages ===
v1031 v1007 v1008 
=== Predecessor ===
v148 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1005 lastLocationAccess: - #next: v950  <|@  <|@
f <@~|@floating>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a949 
=== Succesors ===
=== Usages ===
v950 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a949  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-109835|0xfffffffffffe52f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?26 
guard: - 
address: v1031 
lastLocationAccess: - 
=== Succesors ===
next: v174 
=== Usages ===
v906 
=== Predecessor ===
a949 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?26 guard: - address: v1031 lastLocationAccess: - #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v950 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v950  <|@  <|@
f <@~|@floating>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a949 
=== Succesors ===
=== Usages ===
i952 a969 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a949  <|@  <|@
f <@~|@floating>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a949 
=== Succesors ===
=== Usages ===
i951 a953 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a949  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@245496da
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5000012462543825, 0.49999875374561753, 0.0]
stamp: void
=== Inputs ===
value: v906 
=== Succesors ===
successors: v166 v167 v169 
=== Usages ===
=== Predecessor ===
v950 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v906 #successors: v166 v167 v169  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i951 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i951  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i951 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1007 
lastLocationAccess: - 
=== Succesors ===
next: v751 
=== Usages ===
v179 
=== Predecessor ===
v166 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1007 lastLocationAccess: - #next: v751  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i563 
y: i951 
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i563 y: i951  <|@  <|@
f <@*|@fixed>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v179 
=== Succesors ===
trueSuccessor: v749 
falseSuccessor: v750 
=== Usages ===
=== Predecessor ===
i951 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v179 #trueSuccessor: v749 #falseSuccessor: v750  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v851 
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v851  <|@  <|@
f <@~|@floating>@ <|@
tid i852 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -191507
stableDimension: 0
stamp: i32 [-191507]
stampKind: i32
value: int[-191507|0xfffffffffffd13ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v749 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 5]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: i952 
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i952  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i952 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1008 
lastLocationAccess: - 
=== Succesors ===
next: v755 
=== Usages ===
v181 
=== Predecessor ===
v750 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1008 lastLocationAccess: - #next: v755  <|@  <|@
f <@~|@floating>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i952 
y: i563 
=== Succesors ===
=== Usages ===
v755 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i952 y: i563  <|@  <|@
f <@*|@fixed>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v181 
=== Succesors ===
trueSuccessor: v753 
falseSuccessor: v754 
=== Usages ===
=== Predecessor ===
i952 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v181 #trueSuccessor: v753 #falseSuccessor: v754  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v857 
=== Usages ===
=== Predecessor ===
v755 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v857  <|@  <|@
f <@~|@floating>@ <|@
tid i858 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -192531
stableDimension: 0
stamp: i32 [-192531]
stampKind: i32
value: int[-192531|0xfffffffffffd0fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v753 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 10]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v263 
=== Usages ===
=== Predecessor ===
v755 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v263  <|@  <|@
f <@*|@fixed>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
v754 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" "B32" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366647962319916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a953 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a953  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a953 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1007 
lastLocationAccess: - 
=== Succesors ===
next: v954 
=== Usages ===
v1032 v1009 v1010 
=== Predecessor ===
v167 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1007 lastLocationAccess: - #next: v954  <|@  <|@
f <@~|@floating>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a953 
=== Succesors ===
=== Usages ===
v954 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a953  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-112651|0xfffffffffffe47f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?26 
guard: - 
address: v1032 
lastLocationAccess: - 
=== Succesors ===
next: v193 
=== Usages ===
v909 
=== Predecessor ===
a953 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?26 guard: - address: v1032 lastLocationAccess: - #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v954 
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v954  <|@  <|@
f <@~|@floating>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a953 
=== Succesors ===
=== Usages ===
i956 a968 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a953  <|@  <|@
f <@~|@floating>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a953 
=== Succesors ===
=== Usages ===
i955 a957 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a953  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@68f4a669
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5000012462543825, 0.49999875374561753, 0.0]
stamp: void
=== Inputs ===
value: v909 
=== Succesors ===
successors: v185 v186 v188 
=== Usages ===
=== Predecessor ===
v954 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v909 #successors: v185 v186 v188  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i955 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i955  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i955 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1009 
lastLocationAccess: - 
=== Succesors ===
next: v759 
=== Usages ===
v198 
=== Predecessor ===
v185 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1009 lastLocationAccess: - #next: v759  <|@  <|@
f <@~|@floating>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i563 
y: i955 
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i563 y: i955  <|@  <|@
f <@*|@fixed>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v198 
=== Succesors ===
trueSuccessor: v757 
falseSuccessor: v758 
=== Usages ===
=== Predecessor ===
i955 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v198 #trueSuccessor: v757 #falseSuccessor: v758  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v859 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v859  <|@  <|@
f <@~|@floating>@ <|@
tid i860 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -193555
stableDimension: 0
stamp: i32 [-193555]
stampKind: i32
value: int[-193555|0xfffffffffffd0bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v757 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 5]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: i956 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i956  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i956 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1010 
lastLocationAccess: - 
=== Succesors ===
next: v763 
=== Usages ===
v200 
=== Predecessor ===
v758 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1010 lastLocationAccess: - #next: v763  <|@  <|@
f <@~|@floating>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i956 
y: i563 
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i956 y: i563  <|@  <|@
f <@*|@fixed>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v200 
=== Succesors ===
trueSuccessor: v761 
falseSuccessor: v762 
=== Usages ===
=== Predecessor ===
i956 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v200 #trueSuccessor: v761 #falseSuccessor: v762  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v865 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v865  <|@  <|@
f <@~|@floating>@ <|@
tid i866 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -194579
stableDimension: 0
stamp: i32 [-194579]
stampKind: i32
value: int[-194579|0xfffffffffffd07ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v761 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 10]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v259 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v259  <|@  <|@
f <@*|@fixed>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
v762 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B38" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863026644571602
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a957 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a957  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a957 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1009 
lastLocationAccess: - 
=== Succesors ===
next: v958 
=== Usages ===
v1033 v1011 v1012 
=== Predecessor ===
v186 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1009 lastLocationAccess: - #next: v958  <|@  <|@
f <@~|@floating>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a957 
=== Succesors ===
=== Usages ===
v958 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a957  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-115467|0xfffffffffffe3cf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?26 
guard: - 
address: v1033 
lastLocationAccess: - 
=== Succesors ===
next: v212 
=== Usages ===
v912 
=== Predecessor ===
a957 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?26 guard: - address: v1033 lastLocationAccess: - #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v958 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v958  <|@  <|@
f <@~|@floating>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a957 
=== Succesors ===
=== Usages ===
i960 a967 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a957  <|@  <|@
f <@~|@floating>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a957 
=== Succesors ===
=== Usages ===
i959 a961 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a957  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@ec19f49
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5000012462543825, 0.49999875374561753, 0.0]
stamp: void
=== Inputs ===
value: v912 
=== Succesors ===
successors: v204 v205 v207 
=== Usages ===
=== Predecessor ===
v958 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v912 #successors: v204 v205 v207  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i959 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i959  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i959 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1011 
lastLocationAccess: - 
=== Succesors ===
next: v767 
=== Usages ===
v217 
=== Predecessor ===
v204 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1011 lastLocationAccess: - #next: v767  <|@  <|@
f <@~|@floating>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i563 
y: i959 
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i563 y: i959  <|@  <|@
f <@*|@fixed>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v217 
=== Succesors ===
trueSuccessor: v765 
falseSuccessor: v766 
=== Usages ===
=== Predecessor ===
i959 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v217 #trueSuccessor: v765 #falseSuccessor: v766  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v867 
=== Usages ===
=== Predecessor ===
v767 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v867  <|@  <|@
f <@~|@floating>@ <|@
tid i868 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -195603
stableDimension: 0
stamp: i32 [-195603]
stampKind: i32
value: int[-195603|0xfffffffffffd03ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v765 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 5]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: i960 
=== Usages ===
=== Predecessor ===
v767 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i960  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i960 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1012 
lastLocationAccess: - 
=== Succesors ===
next: v771 
=== Usages ===
v219 
=== Predecessor ===
v766 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1012 lastLocationAccess: - #next: v771  <|@  <|@
f <@~|@floating>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i960 
y: i563 
=== Succesors ===
=== Usages ===
v771 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i960 y: i563  <|@  <|@
f <@*|@fixed>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v219 
=== Succesors ===
trueSuccessor: v769 
falseSuccessor: v770 
=== Usages ===
=== Predecessor ===
i960 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v219 #trueSuccessor: v769 #falseSuccessor: v770  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v873 
=== Usages ===
=== Predecessor ===
v771 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v873  <|@  <|@
f <@~|@floating>@ <|@
tid i874 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -196627
stableDimension: 0
stamp: i32 [-196627]
stampKind: i32
value: int[-196627|0xfffffffffffcffed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v769 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 10]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
v771 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v262  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
v770 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B44" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359405326877352
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a961 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a961  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a961 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1011 
lastLocationAccess: - 
=== Succesors ===
next: v962 
=== Usages ===
v1034 v1013 v1014 
=== Predecessor ===
v205 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1011 lastLocationAccess: - #next: v962  <|@  <|@
f <@~|@floating>@ <|@
tid v1034 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a961 
=== Succesors ===
=== Usages ===
v962 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a961  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v962 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-118283|0xfffffffffffe31f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?26 
guard: - 
address: v1034 
lastLocationAccess: - 
=== Succesors ===
next: v231 
=== Usages ===
v915 
=== Predecessor ===
a961 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?26 guard: - address: v1034 lastLocationAccess: - #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v962 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v962  <|@  <|@
f <@~|@floating>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a961 
=== Succesors ===
=== Usages ===
i964 a966 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a961  <|@  <|@
f <@~|@floating>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a961 
=== Succesors ===
=== Usages ===
i963 a965 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a961  <|@  <|@
f <@*|@fixed>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@1e7972ff
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5000012462543825, 0.49999875374561753, 0.0]
stamp: void
=== Inputs ===
value: v915 
=== Succesors ===
successors: v223 v224 v226 
=== Usages ===
=== Predecessor ===
v962 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v915 #successors: v223 v224 v226  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i963 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i963  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i963 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1013 
lastLocationAccess: - 
=== Succesors ===
next: v775 
=== Usages ===
v236 
=== Predecessor ===
v223 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1013 lastLocationAccess: - #next: v775  <|@  <|@
f <@~|@floating>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i563 
y: i963 
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i563 y: i963  <|@  <|@
f <@*|@fixed>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v236 
=== Succesors ===
trueSuccessor: v773 
falseSuccessor: v774 
=== Usages ===
=== Predecessor ===
i963 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v236 #trueSuccessor: v773 #falseSuccessor: v774  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v875 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v875  <|@  <|@
f <@~|@floating>@ <|@
tid i876 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -197651
stableDimension: 0
stamp: i32 [-197651]
stampKind: i32
value: int[-197651|0xfffffffffffcfbed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v773 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 5]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: i964 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i964  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i964 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1014 
lastLocationAccess: - 
=== Succesors ===
next: v779 
=== Usages ===
v238 
=== Predecessor ===
v774 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1014 lastLocationAccess: - #next: v779  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i964 
y: i563 
=== Succesors ===
=== Usages ===
v779 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i964 y: i563  <|@  <|@
f <@*|@fixed>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v238 
=== Succesors ===
trueSuccessor: v777 
falseSuccessor: v778 
=== Usages ===
=== Predecessor ===
i964 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v238 #trueSuccessor: v777 #falseSuccessor: v778  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v881 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v881  <|@  <|@
f <@~|@floating>@ <|@
tid i882 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -198675
stableDimension: 0
stamp: i32 [-198675]
stampKind: i32
value: int[-198675|0xfffffffffffcf7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v777 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 10]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v260 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v260  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
v778 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a965 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a965  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a965 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1013 
lastLocationAccess: - 
=== Succesors ===
next: v991 
=== Usages ===
a469 v1038 
=== Predecessor ===
v224 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1013 lastLocationAccess: - #next: v991  <|@  <|@
f <@~|@floating>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a965 
=== Succesors ===
=== Usages ===
v991 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a965  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?26 
object: v1038 
=== Succesors ===
next: a966 
=== Usages ===
=== Predecessor ===
a965 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?26 object: v1038 #next: a966  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a966 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1014 
lastLocationAccess: - 
=== Succesors ===
next: a967 
=== Usages ===
a472 
=== Predecessor ===
v991 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1014 lastLocationAccess: - #next: a967  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a967 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1012 
lastLocationAccess: - 
=== Succesors ===
next: a968 
=== Usages ===
a461 
=== Predecessor ===
a966 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1012 lastLocationAccess: - #next: a968  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a968 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1010 
lastLocationAccess: - 
=== Succesors ===
next: a969 
=== Usages ===
a450 
=== Predecessor ===
a967 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1010 lastLocationAccess: - #next: a969  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a969 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1008 
lastLocationAccess: - 
=== Succesors ===
next: a970 
=== Usages ===
a439 
=== Predecessor ===
a968 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1008 lastLocationAccess: - #next: a970  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a970 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1006 
lastLocationAccess: - 
=== Succesors ===
next: a971 
=== Usages ===
a428 
=== Predecessor ===
a969 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1006 lastLocationAccess: - #next: a971  <|@  <|@
f <@~|@floating>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a937 
=== Succesors ===
=== Usages ===
a971 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a937  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a971 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1004 
lastLocationAccess: - 
=== Succesors ===
next: i243 
=== Usages ===
a417 
=== Predecessor ===
a970 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1004 lastLocationAccess: - #next: i243  <|@  <|@
f <@~|@floating>@ <|@
tid a469 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a965 
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a965  <|@  <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/regex/Pattern$CharPredicate;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Pattern$CharPredicate.is(int)>
=== Inputs ===
arguments: a469 i563 
=== Succesors ===
=== Usages ===
i243 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a469 i563  <|@  <|@
tid ?258 <|@
d <@d|@=== Debug Properties ===
bci: 19
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
localsSize: 4
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4133
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?264 
values: a362 a2 i25 a4 
=== Succesors ===
=== Usages ===
?257 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?264 values: a362 a2 i25 a4  <|@  <|@
tid ?257 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?258 
=== Succesors ===
=== Usages ===
?256 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?258  <|@  <|@
f <@~|@floating>@ <|@
tid a417 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a971 
=== Succesors ===
=== Usages ===
?256 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a971  <|@  <|@
tid ?256 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?257 
values: - a417 i563 
=== Succesors ===
=== Usages ===
?255 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?257 values: - a417 i563  <|@  <|@
tid ?255 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?256 
=== Succesors ===
=== Usages ===
?254 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?256  <|@  <|@
f <@~|@floating>@ <|@
tid a428 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a970 
=== Succesors ===
=== Usages ===
?254 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a970  <|@  <|@
tid ?254 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?255 
values: - a428 i563 
=== Succesors ===
=== Usages ===
?253 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?255 values: - a428 i563  <|@  <|@
tid ?253 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?254 
=== Succesors ===
=== Usages ===
?252 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?254  <|@  <|@
f <@~|@floating>@ <|@
tid a439 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a969 
=== Succesors ===
=== Usages ===
?252 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a969  <|@  <|@
tid ?252 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?253 
values: - a439 i563 
=== Succesors ===
=== Usages ===
?251 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?253 values: - a439 i563  <|@  <|@
tid ?251 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?252 
=== Succesors ===
=== Usages ===
?250 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?252  <|@  <|@
f <@~|@floating>@ <|@
tid a450 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a968 
=== Succesors ===
=== Usages ===
?250 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a968  <|@  <|@
tid ?250 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?251 
values: - a450 i563 
=== Succesors ===
=== Usages ===
?249 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?251 values: - a450 i563  <|@  <|@
tid ?249 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?250 
=== Succesors ===
=== Usages ===
?248 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?250  <|@  <|@
f <@~|@floating>@ <|@
tid a461 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a967 
=== Succesors ===
=== Usages ===
?248 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a967  <|@  <|@
tid ?248 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?249 
values: - a461 i563 
=== Succesors ===
=== Usages ===
?247 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?249 values: - a461 i563  <|@  <|@
tid ?247 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?248 
=== Succesors ===
=== Usages ===
?244 ?797 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?248  <|@  <|@
f <@~|@floating>@ <|@
tid a472 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a966 
=== Succesors ===
=== Usages ===
?244 ?797 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a966  <|@  <|@
tid ?797 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?247 
values: - a472 i563 
=== Succesors ===
=== Usages ===
i243 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?247 values: - a472 i563  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i243 <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#Pattern$CharPredicate.is
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v476 
stateDuring: ?797 
=== Succesors ===
next: v783 
=== Usages ===
v245 
=== Predecessor ===
a971 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v476 stateDuring: ?797 #next: v783  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i243 
y: i17 
=== Succesors ===
=== Usages ===
v783 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i243 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v245 
=== Succesors ===
trueSuccessor: v781 
falseSuccessor: v782 
=== Usages ===
=== Predecessor ===
i243 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v245 #trueSuccessor: v781 #falseSuccessor: v782  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v780 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v780  <|@  <|@
tid ?244 <|@
d <@d|@=== Debug Properties ===
bci: 7
bytecode: ifne
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?247 
values: i17 - a472 i563 
=== Succesors ===
=== Usages ===
v780 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?247 values: i17 - a472 i563  <|@  <|@
f <@*|@fixed>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
reason: UnreachedCode
speculation: {0x0000000000002094[index: 260, len: 20, hash: 0xd98badbc]: UnreachedCode@6[HotSpotMethod<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>, 10]}
stamp: void
=== Inputs ===
stateBefore: ?244 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?244  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 20]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v261 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v261  <|@  <|@
f <@*|@fixed>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
v782 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B19" "B31" "B43" "B46" "B37" "B25" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i123 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v122 
values: i142 i411 i13 i13 i13 i13 i13 i13 
=== Succesors ===
=== Usages ===
?86 v87 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v122 values: i142 i411 i13 i13 i13 i13 i13 i13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v125 v127 v129 v259 v260 v261 v262 v263 
=== Succesors ===
next: v90 
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v125 v127 v129 v259 v260 v261 v262 v263 #next: v90  <|@  <|@
tid ?86 <|@
d <@d|@=== Debug Properties ===
bci: 24
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
sourceFile: Pattern.java
sourceLine: 4133
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?264 
values: i123 a362 a2 i25 a4 
=== Succesors ===
=== Usages ===
v730 v973 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?264 values: i123 a362 a2 i25 a4  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i123 
y: i17 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i123 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: PROFILED designatedSuccessorProbability: 0.5929707392225225
stamp: void
=== Inputs ===
condition: v87 
=== Succesors ===
trueSuccessor: v89 
falseSuccessor: v88 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v87 #trueSuccessor: v89 #falseSuccessor: v88  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609023662074253018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 46]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v730 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v730  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
stamp: void
=== Inputs ===
stateBefore: ?86 
=== Succesors ===
next: v45 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?86 #next: v45  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
stamp: void
=== Inputs ===
loopBegin: v24 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v730 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v24  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 27]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: a972 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a972  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a972 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.regex.Pattern$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 28]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.util.regex.Pattern$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1015 
lastLocationAccess: - 
=== Succesors ===
next: v973 
=== Usages ===
a479 v1035 
=== Predecessor ===
v88 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1015 lastLocationAccess: - #next: v973  <|@  <|@
f <@~|@floating>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a972 
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a972  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-123147|0xfffffffffffe1ef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?86 
guard: - 
address: v1035 
lastLocationAccess: - 
=== Succesors ===
next: v486 
=== Usages ===
v918 
=== Predecessor ===
a972 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?86 guard: - address: v1035 lastLocationAccess: - #next: v486  <|@  <|@
f <@~|@floating>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v973 
=== Succesors ===
=== Usages ===
v1016 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v973  <|@  <|@
f <@~|@floating>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
displacement: 496
stamp: void*
stride: S1
=== Inputs ===
base: v918 
index: - 
=== Succesors ===
=== Usages ===
v486 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v918 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1016 
lastLocationAccess: - 
=== Succesors ===
next: j489 
=== Usages ===
v1017 v490 
=== Predecessor ===
v973 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1016 lastLocationAccess: - #next: j489  <|@  <|@
f <@~|@floating>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v486 
index: - 
=== Succesors ===
=== Usages ===
j489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v486 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j489 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1017 
lastLocationAccess: - 
=== Succesors ===
next: i94 
=== Usages ===
v490 
=== Predecessor ===
v486 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1017 lastLocationAccess: - #next: i94  <|@  <|@
f <@~|@floating>@ <|@
tid a479 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 28]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: Uncompress
stamp: a java.util.regex.Pattern$Node
=== Inputs ===
value: a972 
=== Succesors ===
=== Usages ===
v490 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a972  <|@  <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>, UnresolvedJavaType<Ljava/util/regex/Matcher;>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/CharSequence;>]
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
computedAddress: j489 
metaspaceMethod: v486 
arguments: a479 a2 i44 a4 
=== Succesors ===
=== Usages ===
i94 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j489 metaspaceMethod: v486 arguments: a479 a2 i44 a4  <|@  <|@
tid ?798 <|@
d <@d|@=== Debug Properties ===
bci: 36
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
localsSize: 4
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4134
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?264 
=== Succesors ===
=== Usages ===
i94 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?264  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i94 <|@
d <@d|@=== Debug Properties ===
bci: 36
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Pattern$Node.match
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v490 
stateDuring: ?798 
=== Succesors ===
next: v787 
=== Usages ===
v96 
=== Predecessor ===
j489 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v490 stateDuring: ?798 #next: v787  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i94 
y: i17 
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i94 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v96 
=== Succesors ===
trueSuccessor: v785 
falseSuccessor: v786 
=== Usages ===
=== Predecessor ===
i94 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v96 #trueSuccessor: v785 #falseSuccessor: v786  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v784 
=== Usages ===
=== Predecessor ===
v787 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v784  <|@  <|@
tid ?95 <|@
d <@d|@=== Debug Properties ===
bci: 39
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
sourceFile: Pattern.java
sourceLine: 4134
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?264 
values: i17 
=== Succesors ===
=== Usages ===
v784 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?264 values: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
reason: UnreachedCode
speculation: {0x0000000000000514[index: 40, len: 20, hash: 0xfea36e57]: UnreachedCode@6[HotSpotMethod<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>, 46]}
stamp: void
=== Inputs ===
stateBefore: ?95 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?95  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 42]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v787 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v66  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
v786 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v879 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v879  <|@  <|@
f <@~|@floating>@ <|@
tid i880 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -57651
stableDimension: 0
stamp: i32 [-57651]
stampKind: i32
value: int[-57651|0xffffffffffff1ecd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v226 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v871 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v871  <|@  <|@
f <@~|@floating>@ <|@
tid i872 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -52787
stableDimension: 0
stamp: i32 [-52787]
stampKind: i32
value: int[-52787|0xffffffffffff31cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v207 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v863 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v863  <|@  <|@
f <@~|@floating>@ <|@
tid i864 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -47923
stableDimension: 0
stamp: i32 [-47923]
stampKind: i32
value: int[-47923|0xffffffffffff44cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v188 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v855 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v855  <|@  <|@
f <@~|@floating>@ <|@
tid i856 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -43059
stableDimension: 0
stamp: i32 [-43059]
stampKind: i32
value: int[-43059|0xffffffffffff57cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v169 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v846 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v846  <|@  <|@
f <@~|@floating>@ <|@
tid i847 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -38195
stableDimension: 0
stamp: i32 [-38195]
stampKind: i32
value: int[-38195|0xffffffffffff6acd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v150 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v836 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v836  <|@  <|@
f <@~|@floating>@ <|@
tid j838 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: 7700
stableDimension: 0
stamp: i64 [7700]
stampKind: i64
value: long[7700|0x1e14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j816 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i837 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -33331
stableDimension: 0
stamp: i32 [-33331]
stampKind: i32
value: int[-33331|0xffffffffffff7dcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v131 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.charAt(String.java:1554) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v829 
=== Usages ===
=== Predecessor ===
v739 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v829  <|@  <|@
f <@~|@floating>@ <|@
tid j831 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: 2580
stableDimension: 0
stamp: i64 [2580]
stampKind: i64
value: long[2580|0xa14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j816 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i830 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -188435
stableDimension: 0
stamp: i32 [-188435]
stampKind: i32
value: int[-188435|0xfffffffffffd1fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v738 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 5]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v826 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v826  <|@  <|@
f <@~|@floating>@ <|@
tid j828 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j816 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i827 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -187411
stableDimension: 0
stamp: i32 [-187411]
stampKind: i32
value: int[-187411|0xfffffffffffd23ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v734 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v824 
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v824  <|@  <|@
f <@~|@floating>@ <|@
tid i825 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -97820
stableDimension: 0
stamp: i32 [-97820]
stampKind: i32
value: int[-97820|0xfffffffffffe81e4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v668 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084642
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v266 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v266  <|@  <|@
f <@~|@floating>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a932 
=== Succesors ===
=== Usages ===
a974 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a932  <|@  <|@
tid ?337 <|@
d <@d|@=== Debug Properties ===
bci: 44
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern$Start.match(Matcher, int, CharSequence)>
localsSize: 5
locksSize: 0
sourceFile: Pattern.java
sourceLine: 3787
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i25 a4 i8 
=== Succesors ===
=== Usages ===
?270 ?796 ?794 ?315 ?320 ?795 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i25 a4 i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
v70 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors "B63" "B66" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4590333408894431376
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v267 
values: i25 i297 
=== Succesors ===
=== Usages ===
?270 v271 i297 v497 ?794 ?795 i313 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v267 values: i25 i297  <|@  <|@
f <@~|@floating>@ <|@
tid i269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v267 
values: i17 i298 
=== Succesors ===
=== Usages ===
?270 i314 i298 ?794 ?795 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v267 values: i17 i298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 10
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v266 
=== Succesors ===
next: v277 
=== Usages ===
i268 i269 v272 v290 v299 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v266 #next: v277  <|@  <|@
f <@~|@floating>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 12]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i268 
y: i934 
=== Succesors ===
=== Usages ===
v277 v304 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i268 y: i934  <|@  <|@
f <@*|@fixed>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 12]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: PROFILED designatedSuccessorProbability: 0.9999997723712406
stamp: void
=== Inputs ===
condition: v271 
=== Succesors ===
trueSuccessor: v276 
falseSuccessor: v272 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v271 #trueSuccessor: v276 #falseSuccessor: v272  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590333407604006618
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 15]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: a974 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a974  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a974 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$CharPropertyGreedy.predicate
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 16]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1018 
lastLocationAccess: - 
=== Succesors ===
next: v984 
=== Usages ===
a494 v1037 
=== Predecessor ===
v276 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1018 lastLocationAccess: - #next: v984  <|@  <|@
tid ?270 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: iload_2
code: ResolvedJavaMethodBytecode<Pattern$BmpCharPropertyGreedy.match(Matcher, int, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4502
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?337 
values: a362 a2 i268 a4 i269 i934 
=== Succesors ===
=== Usages ===
v984 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?337 values: a362 a2 i268 a4 i269 i934  <|@  <|@
f <@~|@floating>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a974 
=== Succesors ===
=== Usages ===
v984 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a974  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?270 
object: v1037 
=== Succesors ===
next: i280 
=== Usages ===
=== Predecessor ===
a974 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?270 object: v1037 #next: i280  <|@  <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
referencedType: [null]
returnStamp: i32 [0 - 65535] bits:0...0xxxxxxxxxxxxxxxx
signature: [HotSpotType<Ljava/lang/CharSequence;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<CharSequence.charAt(int)>
=== Inputs ===
arguments: a4 i268 
=== Succesors ===
=== Usages ===
i280 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a4 i268  <|@  <|@
f <@~|@floating>@ <|@
tid a494 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 16]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a974 
=== Succesors ===
=== Usages ===
?794 v501 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a974  <|@  <|@
tid ?794 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern$BmpCharPropertyGreedy.match(Matcher, int, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4502
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?337 
values: a494 a362 a2 i268 a4 i269 i934 
=== Succesors ===
=== Usages ===
i280 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?337 values: a494 a362 a2 i268 a4 i269 i934  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i280 <|@
d <@d|@=== Debug Properties ===
bci: 21
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
polymorphic: false
stamp: i32 [0 - 65535] bits:0...0xxxxxxxxxxxxxxxx
targetMethod: Direct#CharSequence.charAt
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v497 
stateDuring: ?794 
=== Succesors ===
next: i283 
=== Usages ===
v501 
=== Predecessor ===
v984 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v497 stateDuring: ?794 #next: i283  <|@  <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/regex/Pattern$CharPredicate;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Pattern$CharPredicate.is(int)>
=== Inputs ===
arguments: a494 i280 
=== Succesors ===
=== Usages ===
i283 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a494 i280  <|@  <|@
tid ?795 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern$BmpCharPropertyGreedy.match(Matcher, int, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4502
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?337 
values: a362 a2 i268 a4 i269 i934 
=== Succesors ===
=== Usages ===
i283 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?337 values: a362 a2 i268 a4 i269 i934  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i283 <|@
d <@d|@=== Debug Properties ===
bci: 26
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#Pattern$CharPredicate.is
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v501 
stateDuring: ?795 
=== Succesors ===
next: v296 
=== Usages ===
v285 
=== Predecessor ===
i280 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v501 stateDuring: ?795 #next: v296  <|@  <|@
f <@~|@floating>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 31]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i283 
y: i17 
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i283 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 31]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: PROFILED designatedSuccessorProbability: 0.5908646161430428
stamp: void
=== Inputs ===
condition: v285 
=== Succesors ===
trueSuccessor: v290 
falseSuccessor: v286 
=== Usages ===
=== Predecessor ===
i283 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v285 #trueSuccessor: v290 #falseSuccessor: v286  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584799587332037117
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4503) [bci: 34]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v299  <|@  <|@
f <@~|@floating>@ <|@
tid i298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4503) [bci: 37]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
=== Inputs ===
x: i269 
y: i13 
=== Succesors ===
=== Usages ===
i269 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i269 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4503) [bci: 34]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
=== Inputs ===
x: i268 
y: i13 
=== Succesors ===
=== Usages ===
i268 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i268 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
loopBegin: v267 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v267  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621235127
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v267 
=== Succesors ===
next: v289 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v267 #next: v289  <|@  <|@
f <@*|@fixed>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
v290 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997662585697696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v267 
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v267 #next: v287  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
v272 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v287 v289 
=== Succesors ===
next: v304 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v287 v289 #next: v304  <|@  <|@
f <@*|@fixed>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 46]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: PROFILED designatedSuccessorProbability: 0.9999996147864973
stamp: void
=== Inputs ===
condition: v271 
=== Succesors ===
trueSuccessor: v303 
falseSuccessor: v302 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v271 #trueSuccessor: v303 #falseSuccessor: v302  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621458430
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v307 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v307  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
v303 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997194285186786
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4506) [bci: 49]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.hitEnd
location: Matcher.hitEnd
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4506) [bci: 51]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v994 
lastLocationAccess: - 
value: i557 
stateAfter: - 
=== Succesors ===
next: v309 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v994 lastLocationAccess: - value: i557 stateAfter: - #next: v309  <|@  <|@
f <@*|@fixed>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
v520 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" "B69" 
    successors "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v307 v309 
=== Succesors ===
next: v311 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v307 v309 #next: v311  <|@  <|@
f <@*|@fixed>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
v308 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B73" 
    successors "B75" "B72" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4588886804909642497
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v312 
values: i268 i332 
=== Succesors ===
=== Usages ===
?315 v517 ?796 i332 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v312 values: i268 i332  <|@  <|@
f <@~|@floating>@ <|@
tid i314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v312 
values: i269 i333 
=== Succesors ===
=== Usages ===
?315 v317 ?796 i333 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v312 values: i269 i333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 58
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v311 
=== Succesors ===
next: i975 
=== Usages ===
i313 i314 v319 v327 v334 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v311 #next: i975  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i975 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$CharPropertyGreedy.cmin
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 57]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v996 
lastLocationAccess: - 
=== Succesors ===
next: v321 
=== Usages ===
v317 
=== Predecessor ===
v312 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v996 lastLocationAccess: - #next: v321  <|@  <|@
f <@~|@floating>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 60]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i314 
y: i975 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i314 y: i975  <|@  <|@
f <@*|@fixed>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 60]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: PROFILED designatedSuccessorProbability: 0.2596988928056022
stamp: void
=== Inputs ===
condition: v317 
=== Succesors ===
trueSuccessor: v319 
falseSuccessor: v318 
=== Usages ===
=== Predecessor ===
i975 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v317 #trueSuccessor: v319 #falseSuccessor: v318  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4586620676558964615
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 63]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: a976 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a976  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a976 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.regex.Pattern$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 64]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.util.regex.Pattern$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1015 
lastLocationAccess: - 
=== Succesors ===
next: v977 
=== Usages ===
a508 v1036 
=== Predecessor ===
v318 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1015 lastLocationAccess: - #next: v977  <|@  <|@
tid ?315 <|@
d <@d|@=== Debug Properties ===
bci: 54
bytecode: iload
code: ResolvedJavaMethodBytecode<Pattern$BmpCharPropertyGreedy.match(Matcher, int, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4508
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?337 
values: a362 a2 i313 a4 i314 
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?337 values: a362 a2 i313 a4 i314  <|@  <|@
f <@~|@floating>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a976 
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a976  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-130571|0xfffffffffffe01f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?315 
guard: - 
address: v1036 
lastLocationAccess: - 
=== Succesors ===
next: v514 
=== Usages ===
v923 
=== Predecessor ===
a976 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?315 guard: - address: v1036 lastLocationAccess: - #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v977 
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v977  <|@  <|@
f <@~|@floating>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
displacement: 496
stamp: void*
stride: S1
=== Inputs ===
base: v923 
index: - 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v923 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1019 
lastLocationAccess: - 
=== Succesors ===
next: j516 
=== Usages ===
v1020 v517 
=== Predecessor ===
v977 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1019 lastLocationAccess: - #next: j516  <|@  <|@
f <@~|@floating>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v514 
index: - 
=== Succesors ===
=== Usages ===
j516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v514 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j516 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1020 
lastLocationAccess: - 
=== Succesors ===
next: i324 
=== Usages ===
v517 
=== Predecessor ===
v514 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1020 lastLocationAccess: - #next: i324  <|@  <|@
f <@~|@floating>@ <|@
tid a508 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 64]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: Uncompress
stamp: a java.util.regex.Pattern$Node
=== Inputs ===
value: a976 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a976  <|@  <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>, UnresolvedJavaType<Ljava/util/regex/Matcher;>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/CharSequence;>]
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
computedAddress: j516 
metaspaceMethod: v514 
arguments: a508 a2 i313 a4 
=== Succesors ===
=== Usages ===
i324 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j516 metaspaceMethod: v514 arguments: a508 a2 i313 a4  <|@  <|@
tid ?796 <|@
d <@d|@=== Debug Properties ===
bci: 70
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern$BmpCharPropertyGreedy.match(Matcher, int, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4509
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?337 
values: a362 a2 i313 a4 i314 
=== Succesors ===
=== Usages ===
i324 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?337 values: a362 a2 i313 a4 i314  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i324 <|@
d <@d|@=== Debug Properties ===
bci: 70
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Pattern$Node.match
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v517 
stateDuring: ?796 
=== Succesors ===
next: v330 
=== Usages ===
v326 
=== Predecessor ===
j516 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v517 stateDuring: ?796 #next: v330  <|@  <|@
f <@~|@floating>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 73]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i324 
y: i17 
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i324 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 73]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: PROFILED designatedSuccessorProbability: 0.31374907693960497
stamp: void
=== Inputs ===
condition: v326 
=== Succesors ===
trueSuccessor: v329 
falseSuccessor: v327 
=== Usages ===
=== Predecessor ===
i324 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v326 #trueSuccessor: v329 #falseSuccessor: v327  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B71" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4579260716611284855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4511) [bci: 78]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid i331 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4511) [bci: 78]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i332 i333 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4511) [bci: 81]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
=== Inputs ===
x: i314 
y: i331 
=== Succesors ===
=== Usages ===
i314 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i314 y: i331  <|@  <|@
f <@~|@floating>@ <|@
tid i332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4511) [bci: 78]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
=== Inputs ===
x: i313 
y: i331 
=== Succesors ===
=== Usages ===
i313 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i313 y: i331  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
loopBegin: v312 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v312  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4584523385039648594
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4510) [bci: 76]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v312 
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v312 #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
v327 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580189478109779700
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v312 
=== Succesors ===
next: v731 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v312 #next: v731  <|@  <|@
tid ?320 <|@
d <@d|@=== Debug Properties ===
bci: 87
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Pattern$BmpCharPropertyGreedy.match(Matcher, int, CharSequence)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
sourceFile: Pattern.java
sourceLine: 4513
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?337 
=== Succesors ===
=== Usages ===
v731 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stamp: void
=== Inputs ===
stateBefore: ?320 
=== Succesors ===
next: v581 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?320 #next: v581  <|@  <|@
f <@*|@fixed>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stamp: void
=== Inputs ===
loopBegin: v24 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v731 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v24  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B51" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v66 v71 
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v66 v71 #next: v39  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v24 
=== Succesors ===
next: a978 
=== Usages ===
=== Predecessor ===
v570 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v24 #next: a978  <|@  <|@
f <@~|@floating>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a978 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a978 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.groups
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3789) [bci: 56]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1022 
lastLocationAccess: - 
=== Succesors ===
next: i979 
=== Usages ===
v1026 v1023 v1024 
=== Predecessor ===
v39 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1022 lastLocationAccess: - #next: i979  <|@  <|@
tid ?41 <|@
d <@d|@=== Debug Properties ===
bci: 50
bytecode: aload_1
code: ResolvedJavaMethodBytecode<Pattern$Start.match(Matcher, int, CharSequence)>
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
sourceFile: Pattern.java
sourceLine: 3788
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - a2 i25 
=== Succesors ===
=== Usages ===
v1040 i979 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 i25  <|@  <|@
f <@~|@floating>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a978 
=== Succesors ===
=== Usages ===
i979 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a978  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i979 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-135691|0xfffffffffffdedf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3789) [bci: 64]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?41 
guard: - 
address: v1023 
lastLocationAccess: - 
=== Succesors ===
next: v729 
=== Usages ===
v645 
=== Predecessor ===
a978 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?41 guard: - address: v1023 lastLocationAccess: - #next: v729  <|@  <|@
f <@~|@floating>@ <|@
tid i538 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3789) [bci: 64]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v645 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3790) [bci: 74]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i979 
y: i538 
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i979 y: i538  <|@  <|@
f <@*|@fixed>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3789) [bci: 64]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v645 
=== Succesors ===
trueSuccessor: v728 
falseSuccessor: v726 
=== Usages ===
=== Predecessor ===
i979 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v645 #trueSuccessor: v728 #falseSuccessor: v726  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4567169052318882655
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3794) [bci: 83]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v24 
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v24 #next: v556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.hitEnd
location: Matcher.hitEnd
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3794) [bci: 85]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v994 
lastLocationAccess: - 
value: i557 
stateAfter: - 
=== Succesors ===
next: v59 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v994 lastLocationAccess: - value: i557 stateAfter: - #next: v59  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3795) [bci: 89]
stamp: void
=== Inputs ===
memoryMap: - 
result: i17 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i17  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3789) [bci: 64]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1040 
=== Usages ===
=== Predecessor ===
v729 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1040  <|@  <|@
f <@*|@fixed>@ <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 576
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3789) [bci: 64]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?41 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v728 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?41  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3789) [bci: 64]
stamp: void
=== Inputs ===
=== Succesors ===
next: v524 
=== Usages ===
v542 v554 
=== Predecessor ===
v729 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v524  <|@  <|@
f <@~|@floating>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.first
location: Matcher.first
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 52]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1021 
lastLocationAccess: - 
value: i25 
stateAfter: - 
=== Succesors ===
next: v542 
=== Usages ===
=== Predecessor ===
v726 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1021 lastLocationAccess: - value: i25 stateAfter: - #next: v542  <|@  <|@
f <@~|@floating>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a978 
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a978  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3789) [bci: 64]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v726 
address: v1024 
lastLocationAccess: - 
value: i25 
stateAfter: - 
=== Succesors ===
next: i980 
=== Usages ===
=== Predecessor ===
v524 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v726 address: v1024 lastLocationAccess: - value: i25 stateAfter: - #next: i980  <|@  <|@
f <@~|@floating>@ <|@
tid v1025 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i980 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i980 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.last
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3790) [bci: 71]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1025 
lastLocationAccess: - 
=== Succesors ===
next: v554 
=== Usages ===
v554 
=== Predecessor ===
v542 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1025 lastLocationAccess: - #next: v554  <|@  <|@
f <@~|@floating>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a978 
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a978  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3790) [bci: 74]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v726 
address: v1026 
lastLocationAccess: - 
value: i980 
stateAfter: - 
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
i980 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v726 address: v1026 lastLocationAccess: - value: i980 stateAfter: - #next: v56  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3791) [bci: 76]
stamp: void
=== Inputs ===
memoryMap: - 
result: i13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v820 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v820  <|@  <|@
f <@~|@floating>@ <|@
tid j373 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.charAt(String.java:1555) [bci: 8]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j816 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i821 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -18483
stableDimension: 0
stamp: i32 [-18483]
stampKind: i32
value: int[-18483|0xffffffffffffb7cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v73 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B60" "B59" "B58" "B57" "B16" "B13" "B56" "B18" "B22" "B55" "B24" "B28" "B54" "B30" "B34" "B53" "B36" "B40" "B52" "B42" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i815 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32 [-198675 - -18483] bits:1...1xxxxxxxxxx11x0x10x
valueDescription: i32
=== Inputs ===
merge: v812 
values: i821 i825 i827 i830 i837 i840 i843 i847 i850 i852 i856 i858 i860 i864 i866 i868 i872 i874 i876 i880 i882 
=== Succesors ===
=== Usages ===
v817 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v812 values: i821 i825 i827 i830 i837 i840 i843 i847 i850 i852 i856 i858 i860 i864 i866 i868 i872 i874 i876 i880 i882  <|@  <|@
f <@~|@floating>@ <|@
tid j816 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i64 [0 - 9620] bits:0...0xxxxxxx00x0x00
valueDescription: i64
=== Inputs ===
merge: v812 
values: j373 j802 j828 j831 j838 j841 j802 j848 j841 j841 j848 j841 j841 j848 j841 j841 j848 j841 j841 j848 j841 
=== Succesors ===
=== Usages ===
v817 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v812 values: j373 j802 j828 j831 j838 j841 j802 j848 j841 j841 j848 j841 j841 j848 j841 j841 j848 j841 j841 j848 j841  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v820 v824 v826 v829 v836 v839 v842 v846 v849 v851 v855 v857 v859 v863 v865 v867 v871 v873 v875 v879 v881 
=== Succesors ===
next: v817 
=== Usages ===
i815 j816 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v820 v824 v826 v829 v836 v839 v842 v846 v849 v851 v855 v857 v859 v863 v865 v867 v871 v873 v875 v879 v881 #next: v817  <|@  <|@
f <@*|@fixed>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
stateBefore: ?26 
actionAndReason: i815 
speculation: j816 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v812 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?26 actionAndReason: i815 speculation: j816  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1039 
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1039  <|@  <|@
f <@*|@fixed>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 369
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 2]
reason: TypeCheckedInliningViolated
speculation: {0x0000000000003298[index: 404, len: 24, hash: 0x1c59cc2c]: GuardMovement@3[HotSpotMethod<Pattern$Start.match(Matcher, int, CharSequence)>, 31, TypeCheckedInliningViolated]}
stamp: void
=== Inputs ===
stateBefore: ?5 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?5  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e1bc5ac slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SUB (x: v4|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v5|DWORD) trueDestinationProbability: 9.93051617825813E-7 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B83" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B83 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B48" "B75" 
    successors "B78" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612642046083831603
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v5|DWORD) trueDestinationProbability: 8.983968413646328E-4 condition: > trueDestination: B4 -> B78 falseDestination: B4 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B61" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612637141171924796
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v8|DWORD = MOV input: [v7|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = UNCOMPRESSPOINTER (input: v8|DWORD, ~baseRegister: v11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v10|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}] keyTargets: [B5 -> B6, B5 -> B61] defaultTarget: B5 -> B81 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v14|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B60 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v16|DWORD = MOV input: [v15|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B58 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" "B14" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVSXB input: [v6|DWORD + v14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVZXB value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = UNCOMPRESSPOINTER (input: v16|DWORD, ~baseRegister: v20|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v19|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B9 -> B10, B9 -> B11, B9 -> B14] defaultTarget: B9 -> B57 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609027637273029927
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B10 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v23|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVZXB value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVZXB input: [v24|QWORD + v23|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B12 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" "B20" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602373890597978734
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v27|DWORD = MOV input: [v26|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = UNCOMPRESSPOINTER (input: v27|DWORD, ~baseRegister: v29|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v28|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B14 -> B15, B14 -> B20] defaultTarget: B14 -> B56 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v26|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v26|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B19 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B26" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870269280122293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v31|DWORD = MOV input: [v30|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = UNCOMPRESSPOINTER (input: v31|DWORD, ~baseRegister: v33|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v32|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B20 -> B21, B20 -> B26] defaultTarget: B20 -> B55 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v30|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v30|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" "B32" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366647962319916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v35|DWORD = MOV input: [v34|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = UNCOMPRESSPOINTER (input: v35|DWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v36|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B26 -> B27, B26 -> B32] defaultTarget: B26 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v34|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v34|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B31 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B38" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863026644571602
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v39|DWORD = MOV input: [v38|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = UNCOMPRESSPOINTER (input: v39|DWORD, ~baseRegister: v41|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v40|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B32 -> B33, B32 -> B38] defaultTarget: B32 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v38|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v38|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084642
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, int[0|0x0]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors "B63" "B66" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4590333408894431376
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD, v72|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9999997723712406 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590333407604006618
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction NULLCHECK address: [v73|DWORD[_] * 8] state [bci:9, 44] <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v71|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stack: v74|QWORD[.] 
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<CharSequence.charAt(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:21, 44] <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v75|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:26, 44] <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v76|DWORD, y: v76|DWORD) trueDestinationProbability: 0.5908646161430428 condition: = trueDestination: B63 -> B65 falseDestination: B63 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584799587332037117
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v78|DWORD, v77|DWORD] destination: B64 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621235127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9999996147864973 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621458430
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" "B69" 
    successors "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v71|DWORD, v72|DWORD] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B73" 
    successors "B75" "B72" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4588886804909642497
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|DWORD, v80|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|DWORD, y: [v7|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.2596988928056022 condition: < trueDestination: B71 -> B75 falseDestination: B71 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4586620676558964615
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v12|QWORD[.] v1|QWORD[.] v79|DWORD v3|QWORD[.] v80|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v82|DWORD = MOV input: [v81|DWORD[_] * 8 + 8] size: DWORD state [bci:54, 44] <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = UNCOMPRESSPOINTER (input: v82|DWORD, ~baseRegister: v84|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOV input: [v83|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = MOV input: [v85|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v81|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v79|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v85|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v86|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v12|QWORD[.] v1|QWORD[.] v79|DWORD v3|QWORD[.] v80|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70, 44] <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v88|DWORD, y: v88|DWORD) trueDestinationProbability: 0.31374907693960497 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B71" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4579260716611284855
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = DEC value: v80|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = DEC value: v79|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|DWORD, v89|DWORD] destination: B73 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B44" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359405326877352
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v43|DWORD = MOV input: [v42|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v44|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B38 -> B39, B38 -> B44] defaultTarget: B38 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v42|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v42|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580189478109779700
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
locals: - - - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction SAFEPOINT temp: v91|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:87, 44] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B75 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction NULLCHECK address: [v46|DWORD[_] * 8] state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v59|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v58|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v57|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v56|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v55|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v54|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B19" "B31" "B43" "B46" "B37" "B25" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v61|DWORD, y: v61|DWORD) trueDestinationProbability: 0.5929707392225225 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609023662074253018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v61|DWORD 
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction SAFEPOINT temp: v62|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:24, 44] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B48 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v61|DWORD 
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v64|DWORD = MOV input: [v63|DWORD[_] * 8 + 8] size: DWORD state [bci:24, 44] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = UNCOMPRESSPOINTER (input: v64|DWORD, ~baseRegister: v66|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV input: [v65|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOV input: [v67|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v67|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v68|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36, 44] <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B51" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV input: [v1|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v1|QWORD[.] v6|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v92|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B77 -> B79 falseDestination: B77 -> B80 y: 2 size: DWORD inlinedY: null state [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 28], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v92|DWORD[_] * 8 + 16], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v92|DWORD[_] * 8 + 20], y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4584523385039648594
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4567169052318882655
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4517296380301017088
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997662585697696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997194285186786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-192531|0xfffffffffffd0fed], long[9620|0x2594]] destination: B24 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-187411|0xfffffffffffd23ed], long[660|0x294]] destination: B59 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -200723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:39, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-38195|0xffffffffffff6acd], long[8980|0x2314]] destination: B56 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-197651|0xfffffffffffcfbed], long[9620|0x2594]] destination: B40 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-97820|0xfffffffffffe81e4], long[0|0x0]] destination: B60 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -199699 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v59|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v58|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v57|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v56|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v55|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v54|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-196627|0xfffffffffffcffed], long[9620|0x2594]] destination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-52787|0xffffffffffff31cd], long[8980|0x2314]] destination: B53 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-33331|0xffffffffffff7dcd], long[7700|0x1e14]] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-194579|0xfffffffffffd07ed], long[9620|0x2594]] destination: B30 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-47923|0xffffffffffff44cd], long[8980|0x2314]] destination: B54 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-188435|0xfffffffffffd1fed], long[2580|0xa14]] destination: B58 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43059|0xffffffffffff57cd], long[8980|0x2314]] destination: B55 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-191507|0xfffffffffffd13ed], long[9620|0x2594]] destination: B22 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-198675|0xfffffffffffcf7ed], long[9620|0x2594]] destination: B42 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-189459|0xfffffffffffd1bed], long[9620|0x2594]] destination: B16 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -147483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v1|QWORD[.] v6|DWORD - - 
>@ <|@ instruction DEOPT info [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-18483|0xffffffffffffb7cd], long[20|0x14]] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-193555|0xfffffffffffd0bed], long[9620|0x2594]] destination: B28 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-57651|0xffffffffffff1ecd], long[8980|0x2314]] destination: B52 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -94515 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 12952 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-195603|0xfffffffffffd03ed], long[9620|0x2594]] destination: B34 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-190483|0xfffffffffffd17ed], long[9620|0x2594]] destination: B18 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-103707|0xfffffffffffe6ae5], long[0|0x0]] destination: B13 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B60" "B59" "B58" "B57" "B16" "B13" "B56" "B18" "B22" "B55" "B24" "B28" "B54" "B30" "B34" "B53" "B36" "B40" "B52" "B42" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|DWORD, v95|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v95|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #6          // java.util.regex.Matcher.to:int
     5: aload_0       
     6: getfield      #5          // minLength:int
     9: isub          
    10: if_icmple     20
    13: aload_1       
    14: iconst_1      
    15: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    18: iconst_0      
    19: ireturn       
    20: aload_1       
    21: getfield      #6          // java.util.regex.Matcher.to:int
    24: aload_0       
    25: getfield      #5          // minLength:int
    28: isub          
    29: istore        4
    31: iload_2       
    32: iload         4
    34: if_icmpgt     83
    37: aload_0       
    38: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    41: aload_1       
    42: iload_2       
    43: aload_3       
    44: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    47: ifeq          77
    50: aload_1       
    51: iload_2       
    52: putfield      #9          // java.util.regex.Matcher.first:int
    55: aload_1       
    56: getfield      #10         // java.util.regex.Matcher.groups:int[]
    59: iconst_0      
    60: aload_1       
    61: getfield      #9          // java.util.regex.Matcher.first:int
    64: iastore       
    65: aload_1       
    66: getfield      #10         // java.util.regex.Matcher.groups:int[]
    69: iconst_1      
    70: aload_1       
    71: getfield      #11         // java.util.regex.Matcher.last:int
    74: iastore       
    75: iconst_1      
    76: ireturn       
    77: iinc          
    80: goto          31
    83: aload_1       
    84: iconst_1      
    85: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    88: iconst_0      
    89: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i929 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i929  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.util.regex.Pattern$Start
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v993 ?337 ?26 v995 ?264 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.util.regex.Matcher
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v1025 v1022 ?86 v517 ?26 v490 ?270 ?796 ?41 ?258 ?264 ?337 ?794 ?795 ?315 v992 v994 v1021 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v9 i25 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a java.lang.Object
uncheckedStamp: a java.lang.CharSequence
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?26 v517 ?794 ?258 ?264 ?337 ?795 ?86 v490 v998 v497 ?270 ?796 ?315 v1027 v997 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_2
code: ResolvedJavaMethodBytecode<Pattern$Start.match(Matcher, int, CharSequence)>
localsSize: 5
locksSize: 0
sourceFile: Pattern.java
sourceLine: 3781
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 
=== Succesors ===
=== Usages ===
v1039 i929 v931 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4  <|@  <|@
f <@~|@floating>@ <|@
tid v992 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i929 i934 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i929 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-89099|0xfffffffffffea3f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.to
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 2]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v992 
lastLocationAccess: - 
=== Succesors ===
next: i930 
=== Usages ===
i8 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v992 lastLocationAccess: - #next: i930  <|@  <|@
f <@~|@floating>@ <|@
tid v993 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i930 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i930 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$Start.minLength
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 6]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v993 
lastLocationAccess: - 
=== Succesors ===
next: v12 
=== Usages ===
i8 
=== Predecessor ===
i929 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v993 lastLocationAccess: - #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 9]
stamp: i32
=== Inputs ===
x: i929 
y: i930 
=== Succesors ===
=== Usages ===
v9 ?26 v27 ?337 ?264 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i929 y: i930  <|@  <|@
f <@~|@floating>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i8 
y: i3 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i8 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3783) [bci: 18]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v18 i269 v326 v59 v87 v96 v285 v245 i142 ?244 ?95 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i557 <|@
result byte[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3782) [bci: 15]
rawvalue: 1
stableDimension: 0
stamp: i8 [1]
stampKind: i8
value: byte[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v358 v520 v556 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v994 <|@
result [v1|QWORD[.] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v358 v520 v556 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 10]
profileData: PROFILED designatedSuccessorProbability: 9.93051617825813E-7
stamp: void
=== Inputs ===
condition: v9 
=== Succesors ===
trueSuccessor: v11 
falseSuccessor: v10 
=== Usages ===
=== Predecessor ===
i930 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v9 #trueSuccessor: v11 #falseSuccessor: v10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e1bc5ac slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SUB (x: v4|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v5|DWORD) trueDestinationProbability: 9.93051617825813E-7 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4517296380301017088
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3782) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v358 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.hitEnd
location: Matcher.hitEnd
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3782) [bci: 15]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v994 
lastLocationAccess: - 
value: i557 
stateAfter: - 
=== Succesors ===
next: v18 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v994 lastLocationAccess: - value: i557 stateAfter: - #next: v18  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3783) [bci: 19]
stamp: void
=== Inputs ===
memoryMap: - 
result: i17 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i17  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B83" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3785) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v931 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v931  <|@  <|@
f <@~|@floating>@ <|@
tid v1027 <|@
result [v3|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v931 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-94219|0xfffffffffffe8ff5]
deoptSpeculation: long[12184|0x2f98]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v1027 
lastLocationAccess: - 
=== Succesors ===
next: v657 
=== Usages ===
v928 
=== Predecessor ===
v10 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v1027 lastLocationAccess: - #next: v657  <|@  <|@
f <@~|@floating>@ <|@
tid v927 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v928 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v931 
y: v927 
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v931 y: v927  <|@  <|@
f <@*|@fixed>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v928 
=== Succesors ===
trueSuccessor: v654 
falseSuccessor: v656 
=== Usages ===
=== Predecessor ===
v931 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v928 #trueSuccessor: v654 #falseSuccessor: v656  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B83 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid j802 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j816 j816 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3782) [bci: 14]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i297 i44 i142 v56 i298 i123 i123 i123 i123 i123 i123 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i560 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v997 <|@
result [v3|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
i939 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v998 <|@
result [v3|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a935 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v995 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a932 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
v654 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B48" "B75" 
    successors "B78" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612642046083831603
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i25 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v24 
values: i3 i44 i44 
=== Succesors ===
=== Usages ===
?26 v27 v384 v524 v542 i44 ?258 ?264 ?337 j562 v82 ?86 i268 ?41 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v24 values: i3 i44 i44  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v23 
=== Succesors ===
next: v32 
=== Usages ===
i25 v30 v39 v45 v581 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v23 #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 34]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i8 
y: i25 
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i8 y: i25  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 34]
profileData: PROFILED designatedSuccessorProbability: 8.983968413646328E-4
stamp: void
=== Inputs ===
condition: v27 
=== Succesors ===
trueSuccessor: v30 
falseSuccessor: v28 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v27 #trueSuccessor: v30 #falseSuccessor: v28  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v5|DWORD) trueDestinationProbability: 8.983968413646328E-4 condition: > trueDestination: B4 -> B78 falseDestination: B4 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B61" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612637141171924796
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a932 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a932  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a932 <|@
result v7|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.regex.Pattern$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 38]
stamp: n java.util.regex.Pattern$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v995 
lastLocationAccess: - 
=== Succesors ===
next: v933 
=== Usages ===
a362 v996 v1015 v1018 v1028 
=== Predecessor ===
v28 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v995 lastLocationAccess: - #next: v933  <|@  <|@
tid ?26 <|@
d <@d|@=== Debug Properties ===
bci: 31
bytecode: iload_2
code: ResolvedJavaMethodBytecode<Pattern$Start.match(Matcher, int, CharSequence)>
localsSize: 5
locksSize: 0
sourceFile: Pattern.java
sourceLine: 3786
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i25 a4 i8 
=== Succesors ===
=== Usages ===
v817 v933 i936 v938 i943 v946 v950 v954 v958 v962 v991 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i25 a4 i8  <|@  <|@
f <@~|@floating>@ <|@
tid v1028 <|@
result [v7|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a932 
=== Succesors ===
=== Usages ===
v933 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a932  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v933 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-92939|0xfffffffffffe94f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?26 
guard: - 
address: v1028 
lastLocationAccess: - 
=== Succesors ===
next: i934 
=== Usages ===
v897 
=== Predecessor ===
a932 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?26 guard: - address: v1028 lastLocationAccess: - #next: i934  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i934 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.to
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 2]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v992 
lastLocationAccess: - 
=== Succesors ===
next: v78 
=== Usages ===
v82 ?270 v271 ?795 ?794 
=== Predecessor ===
v933 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v992 lastLocationAccess: - #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid v897 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v933 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v933  <|@  <|@
f <@~|@floating>@ <|@
tid v1015 <|@
result [v7|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a932 
=== Succesors ===
=== Usages ===
a972 a976 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a932  <|@  <|@
f <@~|@floating>@ <|@
tid a362 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 38]
op: Uncompress
stamp: a java.util.regex.Pattern$Node
=== Inputs ===
value: a932 
=== Succesors ===
=== Usages ===
?270 ?315 ?794 ?258 ?796 ?86 ?795 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a932  <|@  <|@
f <@~|@floating>@ <|@
tid v996 <|@
result [v7|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a932 
=== Succesors ===
=== Usages ===
a937 i975 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a932  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 77]
stamp: i32
=== Inputs ===
x: i25 
y: i13 
=== Succesors ===
=== Usages ===
i25 v490 i25 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i25 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}]
keySuccessors: [I@36ef5061
keys: [HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>, HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>]
profileData: PROFILED keyProbabilities: [0.9808101766301843, 0.019189823369815628, 0.0]
stamp: void
=== Inputs ===
value: v897 
=== Succesors ===
successors: v65 v70 v73 
=== Usages ===
=== Predecessor ===
i934 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v897 #successors: v65 v70 v73  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v8|DWORD = MOV input: [v7|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = UNCOMPRESSPOINTER (input: v8|DWORD, ~baseRegister: v11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v10|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}] keyTargets: [B5 -> B6, B5 -> B61] defaultTarget: B5 -> B81 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a935 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a935  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a935 <|@
result v14|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.charAt(String.java:1555) [bci: 8]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v998 
lastLocationAccess: - 
=== Succesors ===
next: i936 
=== Usages ===
v1000 v999 
=== Predecessor ===
v65 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v998 lastLocationAccess: - #next: i936  <|@  <|@
f <@~|@floating>@ <|@
tid v999 <|@
result [v14|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a935 
=== Succesors ===
=== Usages ===
i936 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a935  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i936 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-96779|0xfffffffffffe85f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 2]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?26 
guard: - 
address: v999 
lastLocationAccess: - 
=== Succesors ===
next: v669 
=== Usages ===
v384 
=== Predecessor ===
a935 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?26 guard: - address: v999 lastLocationAccess: - #next: v669  <|@  <|@
f <@~|@floating>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i25 
y: i936 
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i25 y: i936  <|@  <|@
f <@*|@fixed>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v384 
=== Succesors ===
trueSuccessor: v666 
falseSuccessor: v668 
=== Usages ===
=== Predecessor ===
i936 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v384 #trueSuccessor: v666 #falseSuccessor: v668  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v14|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B60 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: a937 
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a937  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a937 <|@
result v15|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$CharProperty.predicate
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 9]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v996 
lastLocationAccess: - 
=== Succesors ===
next: v938 
=== Usages ===
v1029 v1001 v1004 
=== Predecessor ===
v666 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v996 lastLocationAccess: - #next: v938  <|@  <|@
f <@~|@floating>@ <|@
tid v1029 <|@
result [v15|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a937 
=== Succesors ===
=== Usages ===
v938 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a937  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v938 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-100619|0xfffffffffffe76f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?26 
guard: - 
address: v1029 
lastLocationAccess: - 
=== Succesors ===
next: v735 
=== Usages ===
v900 
=== Predecessor ===
a937 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?26 guard: - address: v1029 lastLocationAccess: - #next: v735  <|@  <|@
f <@~|@floating>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 5]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i25 
y: i934 
=== Succesors ===
=== Usages ===
v735 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i25 y: i934  <|@  <|@
f <@*|@fixed>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 5]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v82 
=== Succesors ===
trueSuccessor: v733 
falseSuccessor: v734 
=== Usages ===
=== Predecessor ===
v938 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v82 #trueSuccessor: v733 #falseSuccessor: v734  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v16|DWORD = MOV input: [v15|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 8]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: i939 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i939  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i939 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 7]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v997 
lastLocationAccess: - 
=== Succesors ===
next: v739 
=== Usages ===
v561 
=== Predecessor ===
v733 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v997 lastLocationAccess: - #next: v739  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.charAt(String.java:1554) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i939 
y: i560 
=== Succesors ===
=== Usages ===
v739 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i939 y: i560  <|@  <|@
f <@*|@fixed>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:1554) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v561 
=== Succesors ===
trueSuccessor: v737 
falseSuccessor: v738 
=== Usages ===
=== Predecessor ===
i939 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v561 #trueSuccessor: v737 #falseSuccessor: v738  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B58 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" "B14" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.charAt(String.java:1555) [bci: 7]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: i940 
=== Usages ===
=== Predecessor ===
v739 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i940  <|@  <|@
f <@~|@floating>@ <|@
tid j562 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i25 
=== Succesors ===
=== Usages ===
v1000 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i25  <|@  <|@
f <@~|@floating>@ <|@
tid v1000 <|@
result [v6|DWORD + v14|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j562 
index: a935 
=== Succesors ===
=== Usages ===
i940 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j562 index: a935  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i940 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 8]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1000 
lastLocationAccess: - 
=== Succesors ===
next: v136 
=== Usages ===
i563 j564 
=== Predecessor ===
v737 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1000 lastLocationAccess: - #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid i563 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.charAt(StringLatin1.java:47) [bci: 12]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i940 
=== Succesors ===
=== Usages ===
?256 v141 v404 v160 v162 v179 v181 v198 v200 v217 v219 v236 v238 v476 ?244 ?248 ?250 ?252 ?254 ?797 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i940  <|@  <|@
f <@~|@floating>@ <|@
tid v900 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v938 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v938  <|@  <|@
f <@~|@floating>@ <|@
tid v1001 <|@
result [v15|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a937 
=== Succesors ===
=== Usages ===
i941 a942 a945 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a937  <|@  <|@
tid ?264 <|@
d <@d|@=== Debug Properties ===
bci: 44
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern$Start.match(Matcher, int, CharSequence)>
localsSize: 5
locksSize: 0
sourceFile: Pattern.java
sourceLine: 3787
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i25 a4 i8 
=== Succesors ===
=== Usages ===
?86 ?95 ?258 ?798 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i25 a4 i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@2fa93f49
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>, HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5933422498483732, 0.20333546313444018, 0.20332228701718652, 0.0]
stamp: void
=== Inputs ===
value: v900 
=== Succesors ===
successors: v124 v126 v128 v131 
=== Usages ===
=== Predecessor ===
i940 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v900 #successors: v124 v126 v128 v131  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVSXB input: [v6|DWORD + v14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVZXB value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = UNCOMPRESSPOINTER (input: v16|DWORD, ~baseRegister: v20|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v19|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B9 -> B10, B9 -> B11, B9 -> B14] defaultTarget: B9 -> B57 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609027637273029927
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i941 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i941  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i941 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003b.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003b.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1001 
lastLocationAccess: - 
=== Succesors ===
next: v125 
=== Usages ===
v141 
=== Predecessor ===
v124 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1001 lastLocationAccess: - #next: v125  <|@  <|@
f <@~|@floating>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.lambda$Single$14(Pattern.java:5910) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x80000003b.is(int) [bci: 5]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i563 
y: i941 
=== Succesors ===
=== Usages ===
i142 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i563 y: i941  <|@  <|@
f <@~|@floating>@ <|@
tid i142 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$Single$14(Pattern.java:5910) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x80000003b.is(int) [bci: 5]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
condition: v141 
trueValue: i13 
falseValue: i17 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v141 trueValue: i13 falseValue: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
i941 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B10 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a942 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a942  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a942 <|@
result v23|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# boolean[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$BitClass.bits
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 8]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n# boolean[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1001 
lastLocationAccess: - 
=== Succesors ===
next: i943 
=== Usages ===
v1003 v1002 
=== Predecessor ===
v126 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1001 lastLocationAccess: - #next: i943  <|@  <|@
f <@~|@floating>@ <|@
tid v1002 <|@
result [v23|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a942 
=== Succesors ===
=== Usages ===
i943 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a942  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i943 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-102411|0xfffffffffffe6ff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?26 
guard: - 
address: v1002 
lastLocationAccess: - 
=== Succesors ===
next: v681 
=== Usages ===
v404 
=== Predecessor ===
a942 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?26 guard: - address: v1002 lastLocationAccess: - #next: v681  <|@  <|@
f <@~|@floating>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i563 
y: i943 
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i563 y: i943  <|@  <|@
f <@*|@fixed>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v404 
=== Succesors ===
trueSuccessor: v678 
falseSuccessor: v680 
=== Usages ===
=== Predecessor ===
i943 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v404 #trueSuccessor: v678 #falseSuccessor: v680  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v23|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: i944 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i944  <|@  <|@
f <@~|@floating>@ <|@
tid j564 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
resultBits: 64
stamp: i64 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i940 
=== Succesors ===
=== Usages ===
v1003 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i940  <|@  <|@
f <@~|@floating>@ <|@
tid v1003 <|@
result [v24|QWORD + v23|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j564 
index: a942 
=== Succesors ===
=== Usages ===
i944 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: a942  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i944 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: boolean
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1003 
lastLocationAccess: - 
=== Succesors ===
next: v127 
=== Usages ===
i411 
=== Predecessor ===
v678 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1003 lastLocationAccess: - #next: v127  <|@  <|@
f <@~|@floating>@ <|@
tid i411 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
resultBits: 32
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
value: i944 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i944  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
i944 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVZXB value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVZXB input: [v24|QWORD + v23|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B12 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.is(Pattern.java:3682) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v842 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v842  <|@  <|@
f <@~|@floating>@ <|@
tid i843 <|@
result int[-103707|0xfffffffffffe6ae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -103707
stableDimension: 0
stamp: i32 [-103707]
stampKind: i32
value: int[-103707|0xfffffffffffe6ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v680 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-103707|0xfffffffffffe6ae5], long[0|0x0]] destination: B13 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" "B20" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602373890597978734
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a945 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a945  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a945 <|@
result v26|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1001 
lastLocationAccess: - 
=== Succesors ===
next: v946 
=== Usages ===
v1030 v1005 v1006 
=== Predecessor ===
v128 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1001 lastLocationAccess: - #next: v946  <|@  <|@
f <@~|@floating>@ <|@
tid v1030 <|@
result [v26|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a945 
=== Succesors ===
=== Usages ===
v946 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a945  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v946 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-107019|0xfffffffffffe5df5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?26 
guard: - 
address: v1030 
lastLocationAccess: - 
=== Succesors ===
next: v155 
=== Usages ===
v903 
=== Predecessor ===
a945 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?26 guard: - address: v1030 lastLocationAccess: - #next: v155  <|@  <|@
f <@~|@floating>@ <|@
tid v903 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v946 
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v946  <|@  <|@
f <@~|@floating>@ <|@
tid v1006 <|@
result [v26|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a945 
=== Succesors ===
=== Usages ===
i948 a970 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a945  <|@  <|@
f <@~|@floating>@ <|@
tid v1005 <|@
result [v26|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a945 
=== Succesors ===
=== Usages ===
i947 a949 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a945  <|@  <|@
f <@~|@floating>@ <|@
tid j848 <|@
result long[8980|0x2314] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: 8980
stableDimension: 0
stamp: i64 [8980]
stampKind: i64
value: long[8980|0x2314]
=== Inputs ===
=== Succesors ===
=== Usages ===
j816 j816 j816 j816 j816 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j841 <|@
result long[9620|0x2594] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: 9620
stableDimension: 0
stamp: i64 [9620]
stampKind: i64
value: long[9620|0x2594]
=== Inputs ===
=== Succesors ===
=== Usages ===
j816 j816 j816 j816 j816 j816 j816 j816 j816 j816 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@5c89843a
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5000012462543825, 0.49999875374561753, 0.0]
stamp: void
=== Inputs ===
value: v903 
=== Succesors ===
successors: v147 v148 v150 
=== Usages ===
=== Predecessor ===
v946 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v903 #successors: v147 v148 v150  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v27|DWORD = MOV input: [v26|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = UNCOMPRESSPOINTER (input: v27|DWORD, ~baseRegister: v29|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v28|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B14 -> B15, B14 -> B20] defaultTarget: B14 -> B56 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i947 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i947  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i947 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1005 
lastLocationAccess: - 
=== Succesors ===
next: v743 
=== Usages ===
v160 
=== Predecessor ===
v147 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1005 lastLocationAccess: - #next: v743  <|@  <|@
f <@~|@floating>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i563 
y: i947 
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i563 y: i947  <|@  <|@
f <@*|@fixed>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v160 
=== Succesors ===
trueSuccessor: v741 
falseSuccessor: v742 
=== Usages ===
=== Predecessor ===
i947 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v160 #trueSuccessor: v741 #falseSuccessor: v742  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v26|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v839 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v839  <|@  <|@
f <@~|@floating>@ <|@
tid i840 <|@
result int[-189459|0xfffffffffffd1bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -189459
stableDimension: 0
stamp: i32 [-189459]
stampKind: i32
value: int[-189459|0xfffffffffffd1bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v741 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-189459|0xfffffffffffd1bed], long[9620|0x2594]] destination: B16 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 5]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: i948 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i948  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i948 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1006 
lastLocationAccess: - 
=== Succesors ===
next: v747 
=== Usages ===
v162 
=== Predecessor ===
v742 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1006 lastLocationAccess: - #next: v747  <|@  <|@
f <@~|@floating>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i948 
y: i563 
=== Succesors ===
=== Usages ===
v747 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i948 y: i563  <|@  <|@
f <@*|@fixed>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v162 
=== Succesors ===
trueSuccessor: v745 
falseSuccessor: v746 
=== Usages ===
=== Predecessor ===
i948 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v162 #trueSuccessor: v745 #falseSuccessor: v746  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v26|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v849 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v849  <|@  <|@
f <@~|@floating>@ <|@
tid i850 <|@
result int[-190483|0xfffffffffffd17ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -190483
stableDimension: 0
stamp: i32 [-190483]
stampKind: i32
value: int[-190483|0xfffffffffffd17ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v745 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-190483|0xfffffffffffd17ed], long[9620|0x2594]] destination: B18 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 10]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v129  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
v746 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B19 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B26" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870269280122293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a949 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a949  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a949 <|@
result v30|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1005 
lastLocationAccess: - 
=== Succesors ===
next: v950 
=== Usages ===
v1031 v1007 v1008 
=== Predecessor ===
v148 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1005 lastLocationAccess: - #next: v950  <|@  <|@
f <@~|@floating>@ <|@
tid v1031 <|@
result [v30|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a949 
=== Succesors ===
=== Usages ===
v950 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a949  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v950 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-109835|0xfffffffffffe52f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?26 
guard: - 
address: v1031 
lastLocationAccess: - 
=== Succesors ===
next: v174 
=== Usages ===
v906 
=== Predecessor ===
a949 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?26 guard: - address: v1031 lastLocationAccess: - #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v906 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v950 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v950  <|@  <|@
f <@~|@floating>@ <|@
tid v1008 <|@
result [v30|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a949 
=== Succesors ===
=== Usages ===
i952 a969 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a949  <|@  <|@
f <@~|@floating>@ <|@
tid v1007 <|@
result [v30|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a949 
=== Succesors ===
=== Usages ===
i951 a953 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a949  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@245496da
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5000012462543825, 0.49999875374561753, 0.0]
stamp: void
=== Inputs ===
value: v906 
=== Succesors ===
successors: v166 v167 v169 
=== Usages ===
=== Predecessor ===
v950 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v906 #successors: v166 v167 v169  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v31|DWORD = MOV input: [v30|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = UNCOMPRESSPOINTER (input: v31|DWORD, ~baseRegister: v33|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v32|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B20 -> B21, B20 -> B26] defaultTarget: B20 -> B55 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i951 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i951  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i951 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1007 
lastLocationAccess: - 
=== Succesors ===
next: v751 
=== Usages ===
v179 
=== Predecessor ===
v166 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1007 lastLocationAccess: - #next: v751  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i563 
y: i951 
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i563 y: i951  <|@  <|@
f <@*|@fixed>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v179 
=== Succesors ===
trueSuccessor: v749 
falseSuccessor: v750 
=== Usages ===
=== Predecessor ===
i951 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v179 #trueSuccessor: v749 #falseSuccessor: v750  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v30|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v851 
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v851  <|@  <|@
f <@~|@floating>@ <|@
tid i852 <|@
result int[-191507|0xfffffffffffd13ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -191507
stableDimension: 0
stamp: i32 [-191507]
stampKind: i32
value: int[-191507|0xfffffffffffd13ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v749 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-191507|0xfffffffffffd13ed], long[9620|0x2594]] destination: B22 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 5]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: i952 
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i952  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i952 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1008 
lastLocationAccess: - 
=== Succesors ===
next: v755 
=== Usages ===
v181 
=== Predecessor ===
v750 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1008 lastLocationAccess: - #next: v755  <|@  <|@
f <@~|@floating>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i952 
y: i563 
=== Succesors ===
=== Usages ===
v755 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i952 y: i563  <|@  <|@
f <@*|@fixed>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v181 
=== Succesors ===
trueSuccessor: v753 
falseSuccessor: v754 
=== Usages ===
=== Predecessor ===
i952 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v181 #trueSuccessor: v753 #falseSuccessor: v754  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v30|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v857 
=== Usages ===
=== Predecessor ===
v755 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v857  <|@  <|@
f <@~|@floating>@ <|@
tid i858 <|@
result int[-192531|0xfffffffffffd0fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -192531
stableDimension: 0
stamp: i32 [-192531]
stampKind: i32
value: int[-192531|0xfffffffffffd0fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v753 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-192531|0xfffffffffffd0fed], long[9620|0x2594]] destination: B24 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 10]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v263 
=== Usages ===
=== Predecessor ===
v755 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v263  <|@  <|@
f <@*|@fixed>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
v754 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" "B32" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366647962319916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a953 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a953  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a953 <|@
result v34|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1007 
lastLocationAccess: - 
=== Succesors ===
next: v954 
=== Usages ===
v1032 v1009 v1010 
=== Predecessor ===
v167 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1007 lastLocationAccess: - #next: v954  <|@  <|@
f <@~|@floating>@ <|@
tid v1032 <|@
result [v34|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a953 
=== Succesors ===
=== Usages ===
v954 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a953  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v954 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-112651|0xfffffffffffe47f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?26 
guard: - 
address: v1032 
lastLocationAccess: - 
=== Succesors ===
next: v193 
=== Usages ===
v909 
=== Predecessor ===
a953 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?26 guard: - address: v1032 lastLocationAccess: - #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid v909 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v954 
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v954  <|@  <|@
f <@~|@floating>@ <|@
tid v1010 <|@
result [v34|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a953 
=== Succesors ===
=== Usages ===
i956 a968 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a953  <|@  <|@
f <@~|@floating>@ <|@
tid v1009 <|@
result [v34|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a953 
=== Succesors ===
=== Usages ===
i955 a957 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a953  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@68f4a669
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5000012462543825, 0.49999875374561753, 0.0]
stamp: void
=== Inputs ===
value: v909 
=== Succesors ===
successors: v185 v186 v188 
=== Usages ===
=== Predecessor ===
v954 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v909 #successors: v185 v186 v188  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v35|DWORD = MOV input: [v34|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = UNCOMPRESSPOINTER (input: v35|DWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v36|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B26 -> B27, B26 -> B32] defaultTarget: B26 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i955 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i955  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i955 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1009 
lastLocationAccess: - 
=== Succesors ===
next: v759 
=== Usages ===
v198 
=== Predecessor ===
v185 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1009 lastLocationAccess: - #next: v759  <|@  <|@
f <@~|@floating>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i563 
y: i955 
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i563 y: i955  <|@  <|@
f <@*|@fixed>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v198 
=== Succesors ===
trueSuccessor: v757 
falseSuccessor: v758 
=== Usages ===
=== Predecessor ===
i955 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v198 #trueSuccessor: v757 #falseSuccessor: v758  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v34|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v859 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v859  <|@  <|@
f <@~|@floating>@ <|@
tid i860 <|@
result int[-193555|0xfffffffffffd0bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -193555
stableDimension: 0
stamp: i32 [-193555]
stampKind: i32
value: int[-193555|0xfffffffffffd0bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v757 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-193555|0xfffffffffffd0bed], long[9620|0x2594]] destination: B28 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 5]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: i956 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i956  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i956 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1010 
lastLocationAccess: - 
=== Succesors ===
next: v763 
=== Usages ===
v200 
=== Predecessor ===
v758 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1010 lastLocationAccess: - #next: v763  <|@  <|@
f <@~|@floating>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i956 
y: i563 
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i956 y: i563  <|@  <|@
f <@*|@fixed>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v200 
=== Succesors ===
trueSuccessor: v761 
falseSuccessor: v762 
=== Usages ===
=== Predecessor ===
i956 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v200 #trueSuccessor: v761 #falseSuccessor: v762  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v34|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v865 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v865  <|@  <|@
f <@~|@floating>@ <|@
tid i866 <|@
result int[-194579|0xfffffffffffd07ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -194579
stableDimension: 0
stamp: i32 [-194579]
stampKind: i32
value: int[-194579|0xfffffffffffd07ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v761 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-194579|0xfffffffffffd07ed], long[9620|0x2594]] destination: B30 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 10]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v259 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v259  <|@  <|@
f <@*|@fixed>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
v762 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B31 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B38" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863026644571602
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a957 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a957  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a957 <|@
result v38|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1009 
lastLocationAccess: - 
=== Succesors ===
next: v958 
=== Usages ===
v1033 v1011 v1012 
=== Predecessor ===
v186 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1009 lastLocationAccess: - #next: v958  <|@  <|@
f <@~|@floating>@ <|@
tid v1033 <|@
result [v38|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a957 
=== Succesors ===
=== Usages ===
v958 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a957  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v958 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-115467|0xfffffffffffe3cf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?26 
guard: - 
address: v1033 
lastLocationAccess: - 
=== Succesors ===
next: v212 
=== Usages ===
v912 
=== Predecessor ===
a957 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?26 guard: - address: v1033 lastLocationAccess: - #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid v912 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v958 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v958  <|@  <|@
f <@~|@floating>@ <|@
tid v1012 <|@
result [v38|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a957 
=== Succesors ===
=== Usages ===
i960 a967 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a957  <|@  <|@
f <@~|@floating>@ <|@
tid v1011 <|@
result [v38|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a957 
=== Succesors ===
=== Usages ===
i959 a961 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a957  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@ec19f49
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5000012462543825, 0.49999875374561753, 0.0]
stamp: void
=== Inputs ===
value: v912 
=== Succesors ===
successors: v204 v205 v207 
=== Usages ===
=== Predecessor ===
v958 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v912 #successors: v204 v205 v207  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v39|DWORD = MOV input: [v38|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = UNCOMPRESSPOINTER (input: v39|DWORD, ~baseRegister: v41|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v40|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B32 -> B33, B32 -> B38] defaultTarget: B32 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i959 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i959  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i959 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1011 
lastLocationAccess: - 
=== Succesors ===
next: v767 
=== Usages ===
v217 
=== Predecessor ===
v204 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1011 lastLocationAccess: - #next: v767  <|@  <|@
f <@~|@floating>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i563 
y: i959 
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i563 y: i959  <|@  <|@
f <@*|@fixed>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v217 
=== Succesors ===
trueSuccessor: v765 
falseSuccessor: v766 
=== Usages ===
=== Predecessor ===
i959 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v217 #trueSuccessor: v765 #falseSuccessor: v766  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v38|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v867 
=== Usages ===
=== Predecessor ===
v767 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v867  <|@  <|@
f <@~|@floating>@ <|@
tid i868 <|@
result int[-195603|0xfffffffffffd03ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -195603
stableDimension: 0
stamp: i32 [-195603]
stampKind: i32
value: int[-195603|0xfffffffffffd03ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v765 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-195603|0xfffffffffffd03ed], long[9620|0x2594]] destination: B34 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 5]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: i960 
=== Usages ===
=== Predecessor ===
v767 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i960  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i960 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1012 
lastLocationAccess: - 
=== Succesors ===
next: v771 
=== Usages ===
v219 
=== Predecessor ===
v766 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1012 lastLocationAccess: - #next: v771  <|@  <|@
f <@~|@floating>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i960 
y: i563 
=== Succesors ===
=== Usages ===
v771 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i960 y: i563  <|@  <|@
f <@*|@fixed>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v219 
=== Succesors ===
trueSuccessor: v769 
falseSuccessor: v770 
=== Usages ===
=== Predecessor ===
i960 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v219 #trueSuccessor: v769 #falseSuccessor: v770  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v38|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v873 
=== Usages ===
=== Predecessor ===
v771 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v873  <|@  <|@
f <@~|@floating>@ <|@
tid i874 <|@
result int[-196627|0xfffffffffffcffed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -196627
stableDimension: 0
stamp: i32 [-196627]
stampKind: i32
value: int[-196627|0xfffffffffffcffed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v769 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-196627|0xfffffffffffcffed], long[9620|0x2594]] destination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 10]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
v771 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v262  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
v770 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B44" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359405326877352
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a961 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a961  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a961 <|@
result v42|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1011 
lastLocationAccess: - 
=== Succesors ===
next: v962 
=== Usages ===
v1034 v1013 v1014 
=== Predecessor ===
v205 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1011 lastLocationAccess: - #next: v962  <|@  <|@
f <@~|@floating>@ <|@
tid v1034 <|@
result [v42|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a961 
=== Succesors ===
=== Usages ===
v962 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a961  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v962 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-118283|0xfffffffffffe31f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?26 
guard: - 
address: v1034 
lastLocationAccess: - 
=== Succesors ===
next: v231 
=== Usages ===
v915 
=== Predecessor ===
a961 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?26 guard: - address: v1034 lastLocationAccess: - #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid v915 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v962 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v962  <|@  <|@
f <@~|@floating>@ <|@
tid v1014 <|@
result [v42|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a961 
=== Succesors ===
=== Usages ===
i964 a966 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a961  <|@  <|@
f <@~|@floating>@ <|@
tid v1013 <|@
result [v42|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a961 
=== Succesors ===
=== Usages ===
i963 a965 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a961  <|@  <|@
f <@*|@fixed>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}]
keySuccessors: [I@1e7972ff
keys: [HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>, HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>]
profileData: PROFILED keyProbabilities: [0.5000012462543825, 0.49999875374561753, 0.0]
stamp: void
=== Inputs ===
value: v915 
=== Succesors ===
successors: v223 v224 v226 
=== Usages ===
=== Predecessor ===
v962 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v915 #successors: v223 v224 v226  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v43|DWORD = MOV input: [v42|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v44|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B38 -> B39, B38 -> B44] defaultTarget: B38 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i963 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i963  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i963 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1013 
lastLocationAccess: - 
=== Succesors ===
next: v775 
=== Usages ===
v236 
=== Predecessor ===
v223 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1013 lastLocationAccess: - #next: v775  <|@  <|@
f <@~|@floating>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i563 
y: i963 
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i563 y: i963  <|@  <|@
f <@*|@fixed>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v236 
=== Succesors ===
trueSuccessor: v773 
falseSuccessor: v774 
=== Usages ===
=== Predecessor ===
i963 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v236 #trueSuccessor: v773 #falseSuccessor: v774  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v42|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 2]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v875 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v875  <|@  <|@
f <@~|@floating>@ <|@
tid i876 <|@
result int[-197651|0xfffffffffffcfbed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -197651
stableDimension: 0
stamp: i32 [-197651]
stampKind: i32
value: int[-197651|0xfffffffffffcfbed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v773 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-197651|0xfffffffffffcfbed], long[9620|0x2594]] destination: B40 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 5]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: i964 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i964  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i964 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x80000003c.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1014 
lastLocationAccess: - 
=== Succesors ===
next: v779 
=== Usages ===
v238 
=== Predecessor ===
v774 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1014 lastLocationAccess: - #next: v779  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i964 
y: i563 
=== Succesors ===
=== Usages ===
v779 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i964 y: i563  <|@  <|@
f <@*|@fixed>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v238 
=== Succesors ===
trueSuccessor: v777 
falseSuccessor: v778 
=== Usages ===
=== Predecessor ===
i964 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v238 #trueSuccessor: v777 #falseSuccessor: v778  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v42|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 7]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v881 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v881  <|@  <|@
f <@~|@floating>@ <|@
tid i882 <|@
result int[-198675|0xfffffffffffcf7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -198675
stableDimension: 0
stamp: i32 [-198675]
stampKind: i32
value: int[-198675|0xfffffffffffcf7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v777 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-198675|0xfffffffffffcf7ed], long[9620|0x2594]] destination: B42 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:5929) [bci: 10]
at java.util.regex.Pattern.lambda$Range$17(Pattern.java:5939) [bci: 3]
at java.util.regex.Pattern$$Lambda/0x80000003c.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v260 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v260  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
v778 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a965 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a965  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a965 <|@
result v46|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$1
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1013 
lastLocationAccess: - 
=== Succesors ===
next: v991 
=== Usages ===
a469 v1038 
=== Predecessor ===
v224 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1013 lastLocationAccess: - #next: v991  <|@  <|@
f <@~|@floating>@ <|@
tid v1038 <|@
result [v46|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a965 
=== Succesors ===
=== Usages ===
v991 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a965  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?26 
object: v1038 
=== Succesors ===
next: a966 
=== Usages ===
=== Predecessor ===
a965 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?26 object: v1038 #next: a966  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a966 <|@
result v47|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1014 
lastLocationAccess: - 
=== Succesors ===
next: a967 
=== Usages ===
a472 
=== Predecessor ===
v991 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1014 lastLocationAccess: - #next: a967  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a967 <|@
result v48|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1012 
lastLocationAccess: - 
=== Succesors ===
next: a968 
=== Usages ===
a461 
=== Predecessor ===
a966 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1012 lastLocationAccess: - #next: a968  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a968 <|@
result v49|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1010 
lastLocationAccess: - 
=== Succesors ===
next: a969 
=== Usages ===
a450 
=== Predecessor ===
a967 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1010 lastLocationAccess: - #next: a969  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a969 <|@
result v50|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1008 
lastLocationAccess: - 
=== Succesors ===
next: a970 
=== Usages ===
a439 
=== Predecessor ===
a968 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1008 lastLocationAccess: - #next: a970  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a970 <|@
result v51|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1006 
lastLocationAccess: - 
=== Succesors ===
next: a971 
=== Usages ===
a428 
=== Predecessor ===
a969 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1006 lastLocationAccess: - #next: a971  <|@  <|@
f <@~|@floating>@ <|@
tid v1004 <|@
result [v15|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a937 
=== Succesors ===
=== Usages ===
a971 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a937  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a971 <|@
result v52|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$$Lambda/0x800000044.arg$2
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1004 
lastLocationAccess: - 
=== Succesors ===
next: i243 
=== Usages ===
a417 
=== Predecessor ===
a970 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1004 lastLocationAccess: - #next: i243  <|@  <|@
f <@~|@floating>@ <|@
tid a469 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 1]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a965 
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a965  <|@  <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/regex/Pattern$CharPredicate;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Pattern$CharPredicate.is(int)>
=== Inputs ===
arguments: a469 i563 
=== Succesors ===
=== Usages ===
i243 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a469 i563  <|@  <|@
tid ?258 <|@
d <@d|@=== Debug Properties ===
bci: 19
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
localsSize: 4
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4133
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?264 
values: a362 a2 i25 a4 
=== Succesors ===
=== Usages ===
?257 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?264 values: a362 a2 i25 a4  <|@  <|@
tid ?257 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?258 
=== Succesors ===
=== Usages ===
?256 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?258  <|@  <|@
f <@~|@floating>@ <|@
tid a417 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a971 
=== Succesors ===
=== Usages ===
?256 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a971  <|@  <|@
tid ?256 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?257 
values: - a417 i563 
=== Succesors ===
=== Usages ===
?255 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?257 values: - a417 i563  <|@  <|@
tid ?255 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?256 
=== Succesors ===
=== Usages ===
?254 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?256  <|@  <|@
f <@~|@floating>@ <|@
tid a428 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a970 
=== Succesors ===
=== Usages ===
?254 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a970  <|@  <|@
tid ?254 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?255 
values: - a428 i563 
=== Succesors ===
=== Usages ===
?253 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?255 values: - a428 i563  <|@  <|@
tid ?253 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?254 
=== Succesors ===
=== Usages ===
?252 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?254  <|@  <|@
f <@~|@floating>@ <|@
tid a439 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a969 
=== Succesors ===
=== Usages ===
?252 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a969  <|@  <|@
tid ?252 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?253 
values: - a439 i563 
=== Succesors ===
=== Usages ===
?251 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?253 values: - a439 i563  <|@  <|@
tid ?251 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?252 
=== Succesors ===
=== Usages ===
?250 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?252  <|@  <|@
f <@~|@floating>@ <|@
tid a450 <|@
result v57|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a968 
=== Succesors ===
=== Usages ===
?250 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a968  <|@  <|@
tid ?250 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?251 
values: - a450 i563 
=== Succesors ===
=== Usages ===
?249 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?251 values: - a450 i563  <|@  <|@
tid ?249 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?250 
=== Succesors ===
=== Usages ===
?248 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?250  <|@  <|@
f <@~|@floating>@ <|@
tid a461 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a967 
=== Succesors ===
=== Usages ===
?248 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a967  <|@  <|@
tid ?248 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?249 
values: - a461 i563 
=== Succesors ===
=== Usages ===
?247 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?249 values: - a461 i563  <|@  <|@
tid ?247 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern$$Lambda/0x800000044.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?248 
=== Succesors ===
=== Usages ===
?244 ?797 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?248  <|@  <|@
f <@~|@floating>@ <|@
tid a472 <|@
result v59|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 5]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a966 
=== Succesors ===
=== Usages ===
?244 ?797 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a966  <|@  <|@
tid ?797 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?247 
values: - a472 i563 
=== Succesors ===
=== Usages ===
i243 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?247 values: - a472 i563  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i243 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#Pattern$CharPredicate.is
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v476 
stateDuring: ?797 
=== Succesors ===
next: v783 
=== Usages ===
v245 
=== Predecessor ===
a971 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v476 stateDuring: ?797 #next: v783  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i243 
y: i17 
=== Succesors ===
=== Usages ===
v783 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i243 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v245 
=== Succesors ===
trueSuccessor: v781 
falseSuccessor: v782 
=== Usages ===
=== Predecessor ===
i243 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v245 #trueSuccessor: v781 #falseSuccessor: v782  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction NULLCHECK address: [v46|DWORD[_] * 8] state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v59|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v58|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v57|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v56|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v55|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v54|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v780 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v780  <|@  <|@
tid ?244 <|@
d <@d|@=== Debug Properties ===
bci: 7
bytecode: ifne
code: ResolvedJavaMethodBytecode<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
sourceFile: Pattern.java
sourceLine: 5802
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?247 
values: i17 - a472 i563 
=== Succesors ===
=== Usages ===
v780 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?247 values: i17 - a472 i563  <|@  <|@
f <@*|@fixed>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
reason: UnreachedCode
speculation: {0x0000000000002094[index: 260, len: 20, hash: 0xd98badbc]: UnreachedCode@6[HotSpotMethod<Pattern.lambda$union$3(Pattern$CharPredicate, Pattern$CharPredicate, int)>, 10]}
stamp: void
=== Inputs ===
stateBefore: ?244 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?244  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -199699 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v59|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v58|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v57|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v56|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v55|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v54|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 20]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v261 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v261  <|@  <|@
f <@*|@fixed>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
v782 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B19" "B31" "B43" "B46" "B37" "B25" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i123 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v122 
values: i142 i411 i13 i13 i13 i13 i13 i13 
=== Succesors ===
=== Usages ===
?86 v87 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v122 values: i142 i411 i13 i13 i13 i13 i13 i13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v125 v127 v129 v259 v260 v261 v262 v263 
=== Succesors ===
next: v90 
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v125 v127 v129 v259 v260 v261 v262 v263 #next: v90  <|@  <|@
tid ?86 <|@
d <@d|@=== Debug Properties ===
bci: 24
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
sourceFile: Pattern.java
sourceLine: 4133
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?264 
values: i123 a362 a2 i25 a4 
=== Succesors ===
=== Usages ===
v730 v973 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?264 values: i123 a362 a2 i25 a4  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i123 
y: i17 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i123 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: PROFILED designatedSuccessorProbability: 0.5929707392225225
stamp: void
=== Inputs ===
condition: v87 
=== Succesors ===
trueSuccessor: v89 
falseSuccessor: v88 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v87 #trueSuccessor: v89 #falseSuccessor: v88  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v61|DWORD, y: v61|DWORD) trueDestinationProbability: 0.5929707392225225 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609023662074253018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 46]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v730 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v730  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
stamp: void
=== Inputs ===
stateBefore: ?86 
=== Succesors ===
next: v45 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?86 #next: v45  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
stamp: void
=== Inputs ===
loopBegin: v24 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v730 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v24  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v61|DWORD 
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction SAFEPOINT temp: v62|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:24, 44] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B48 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 27]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: a972 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a972  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a972 <|@
result v63|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.regex.Pattern$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 28]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.util.regex.Pattern$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1015 
lastLocationAccess: - 
=== Succesors ===
next: v973 
=== Usages ===
a479 v1035 
=== Predecessor ===
v88 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1015 lastLocationAccess: - #next: v973  <|@  <|@
f <@~|@floating>@ <|@
tid v1035 <|@
result [v63|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a972 
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a972  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v973 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-123147|0xfffffffffffe1ef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?86 
guard: - 
address: v1035 
lastLocationAccess: - 
=== Succesors ===
next: v486 
=== Usages ===
v918 
=== Predecessor ===
a972 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?86 guard: - address: v1035 lastLocationAccess: - #next: v486  <|@  <|@
f <@~|@floating>@ <|@
tid v918 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v973 
=== Succesors ===
=== Usages ===
v1016 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v973  <|@  <|@
f <@~|@floating>@ <|@
tid v1016 <|@
result [v65|QWORD + 496] <|@
d <@d|@=== Debug Properties ===
displacement: 496
stamp: void*
stride: S1
=== Inputs ===
base: v918 
index: - 
=== Succesors ===
=== Usages ===
v486 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v918 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v486 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1016 
lastLocationAccess: - 
=== Succesors ===
next: j489 
=== Usages ===
v1017 v490 
=== Predecessor ===
v973 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1016 lastLocationAccess: - #next: j489  <|@  <|@
f <@~|@floating>@ <|@
tid v1017 <|@
result [v67|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v486 
index: - 
=== Succesors ===
=== Usages ===
j489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v486 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j489 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1017 
lastLocationAccess: - 
=== Succesors ===
next: i94 
=== Usages ===
v490 
=== Predecessor ===
v486 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1017 lastLocationAccess: - #next: i94  <|@  <|@
f <@~|@floating>@ <|@
tid a479 <|@
result v69|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 28]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: Uncompress
stamp: a java.util.regex.Pattern$Node
=== Inputs ===
value: a972 
=== Succesors ===
=== Usages ===
v490 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a972  <|@  <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>, UnresolvedJavaType<Ljava/util/regex/Matcher;>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/CharSequence;>]
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
computedAddress: j489 
metaspaceMethod: v486 
arguments: a479 a2 i44 a4 
=== Succesors ===
=== Usages ===
i94 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j489 metaspaceMethod: v486 arguments: a479 a2 i44 a4  <|@  <|@
tid ?798 <|@
d <@d|@=== Debug Properties ===
bci: 36
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
localsSize: 4
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4134
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?264 
=== Succesors ===
=== Usages ===
i94 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?264  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i94 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 36
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Pattern$Node.match
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v490 
stateDuring: ?798 
=== Succesors ===
next: v787 
=== Usages ===
v96 
=== Predecessor ===
j489 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v490 stateDuring: ?798 #next: v787  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i94 
y: i17 
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i94 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v96 
=== Succesors ===
trueSuccessor: v785 
falseSuccessor: v786 
=== Usages ===
=== Predecessor ===
i94 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v96 #trueSuccessor: v785 #falseSuccessor: v786  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v61|DWORD 
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v64|DWORD = MOV input: [v63|DWORD[_] * 8 + 8] size: DWORD state [bci:24, 44] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = UNCOMPRESSPOINTER (input: v64|DWORD, ~baseRegister: v66|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV input: [v65|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOV input: [v67|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v67|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v68|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36, 44] <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v784 
=== Usages ===
=== Predecessor ===
v787 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v784  <|@  <|@
tid ?95 <|@
d <@d|@=== Debug Properties ===
bci: 39
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
sourceFile: Pattern.java
sourceLine: 4134
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?264 
values: i17 
=== Succesors ===
=== Usages ===
v784 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?264 values: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
reason: UnreachedCode
speculation: {0x0000000000000514[index: 40, len: 20, hash: 0xfea36e57]: UnreachedCode@6[HotSpotMethod<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>, 46]}
stamp: void
=== Inputs ===
stateBefore: ?95 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?95  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -200723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:39, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 42]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v787 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v66  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
v786 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v879 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v879  <|@  <|@
f <@~|@floating>@ <|@
tid i880 <|@
result int[-57651|0xffffffffffff1ecd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -57651
stableDimension: 0
stamp: i32 [-57651]
stampKind: i32
value: int[-57651|0xffffffffffff1ecd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v226 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-57651|0xffffffffffff1ecd], long[8980|0x2314]] destination: B52 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v871 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v871  <|@  <|@
f <@~|@floating>@ <|@
tid i872 <|@
result int[-52787|0xffffffffffff31cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -52787
stableDimension: 0
stamp: i32 [-52787]
stampKind: i32
value: int[-52787|0xffffffffffff31cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v207 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-52787|0xffffffffffff31cd], long[8980|0x2314]] destination: B53 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v863 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v863  <|@  <|@
f <@~|@floating>@ <|@
tid i864 <|@
result int[-47923|0xffffffffffff44cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -47923
stableDimension: 0
stamp: i32 [-47923]
stampKind: i32
value: int[-47923|0xffffffffffff44cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v188 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-47923|0xffffffffffff44cd], long[8980|0x2314]] destination: B54 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v855 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v855  <|@  <|@
f <@~|@floating>@ <|@
tid i856 <|@
result int[-43059|0xffffffffffff57cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -43059
stableDimension: 0
stamp: i32 [-43059]
stampKind: i32
value: int[-43059|0xffffffffffff57cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v169 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43059|0xffffffffffff57cd], long[8980|0x2314]] destination: B55 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v846 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v846  <|@  <|@
f <@~|@floating>@ <|@
tid i847 <|@
result int[-38195|0xffffffffffff6acd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -38195
stableDimension: 0
stamp: i32 [-38195]
stampKind: i32
value: int[-38195|0xffffffffffff6acd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v150 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-38195|0xffffffffffff6acd], long[8980|0x2314]] destination: B56 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v836 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v836  <|@  <|@
f <@~|@floating>@ <|@
tid j838 <|@
result long[7700|0x1e14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: 7700
stableDimension: 0
stamp: i64 [7700]
stampKind: i64
value: long[7700|0x1e14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j816 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i837 <|@
result int[-33331|0xffffffffffff7dcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -33331
stableDimension: 0
stamp: i32 [-33331]
stampKind: i32
value: int[-33331|0xffffffffffff7dcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v131 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-33331|0xffffffffffff7dcd], long[7700|0x1e14]] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.charAt(String.java:1554) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v829 
=== Usages ===
=== Predecessor ===
v739 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v829  <|@  <|@
f <@~|@floating>@ <|@
tid j831 <|@
result long[2580|0xa14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: 2580
stableDimension: 0
stamp: i64 [2580]
stampKind: i64
value: long[2580|0xa14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j816 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i830 <|@
result int[-188435|0xfffffffffffd1fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -188435
stableDimension: 0
stamp: i32 [-188435]
stampKind: i32
value: int[-188435|0xfffffffffffd1fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v738 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-188435|0xfffffffffffd1fed], long[2580|0xa14]] destination: B58 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4132) [bci: 5]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v826 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v826  <|@  <|@
f <@~|@floating>@ <|@
tid j828 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j816 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i827 <|@
result int[-187411|0xfffffffffffd23ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -187411
stableDimension: 0
stamp: i32 [-187411]
stampKind: i32
value: int[-187411|0xfffffffffffd23ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v734 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-187411|0xfffffffffffd23ed], long[660|0x294]] destination: B59 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkIndex(int, int, BiFunction) [bci: -1]
at java.lang.String.checkIndex(String.java:4832) [bci: 5]
at java.lang.StringLatin1.charAt(StringLatin1.java:46) [bci: 3]
at java.lang.String.charAt(String.java:1555) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v824 
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v824  <|@  <|@
f <@~|@floating>@ <|@
tid i825 <|@
result int[-97820|0xfffffffffffe81e4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -97820
stableDimension: 0
stamp: i32 [-97820]
stampKind: i32
value: int[-97820|0xfffffffffffe81e4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v668 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-97820|0xfffffffffffe81e4], long[0|0x0]] destination: B60 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084642
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v266 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v266  <|@  <|@
f <@~|@floating>@ <|@
tid v1018 <|@
result [v7|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a932 
=== Succesors ===
=== Usages ===
a974 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a932  <|@  <|@
tid ?337 <|@
d <@d|@=== Debug Properties ===
bci: 44
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern$Start.match(Matcher, int, CharSequence)>
localsSize: 5
locksSize: 0
sourceFile: Pattern.java
sourceLine: 3787
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i25 a4 i8 
=== Succesors ===
=== Usages ===
?270 ?796 ?794 ?315 ?320 ?795 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i25 a4 i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
v70 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, int[0|0x0]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors "B63" "B66" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4590333408894431376
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i268 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v267 
values: i25 i297 
=== Succesors ===
=== Usages ===
?270 v271 i297 v497 ?794 ?795 i313 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v267 values: i25 i297  <|@  <|@
f <@~|@floating>@ <|@
tid i269 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v267 
values: i17 i298 
=== Succesors ===
=== Usages ===
?270 i314 i298 ?794 ?795 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v267 values: i17 i298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 10
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v266 
=== Succesors ===
next: v277 
=== Usages ===
i268 i269 v272 v290 v299 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v266 #next: v277  <|@  <|@
f <@~|@floating>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 12]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i268 
y: i934 
=== Succesors ===
=== Usages ===
v277 v304 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i268 y: i934  <|@  <|@
f <@*|@fixed>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 12]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: PROFILED designatedSuccessorProbability: 0.9999997723712406
stamp: void
=== Inputs ===
condition: v271 
=== Succesors ===
trueSuccessor: v276 
falseSuccessor: v272 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v271 #trueSuccessor: v276 #falseSuccessor: v272  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD, v72|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9999997723712406 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590333407604006618
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 15]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: a974 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a974  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a974 <|@
result v73|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$CharPropertyGreedy.predicate
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 16]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1018 
lastLocationAccess: - 
=== Succesors ===
next: v984 
=== Usages ===
a494 v1037 
=== Predecessor ===
v276 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1018 lastLocationAccess: - #next: v984  <|@  <|@
tid ?270 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: iload_2
code: ResolvedJavaMethodBytecode<Pattern$BmpCharPropertyGreedy.match(Matcher, int, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4502
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?337 
values: a362 a2 i268 a4 i269 i934 
=== Succesors ===
=== Usages ===
v984 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?337 values: a362 a2 i268 a4 i269 i934  <|@  <|@
f <@~|@floating>@ <|@
tid v1037 <|@
result [v73|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a974 
=== Succesors ===
=== Usages ===
v984 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a974  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?270 
object: v1037 
=== Succesors ===
next: i280 
=== Usages ===
=== Predecessor ===
a974 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?270 object: v1037 #next: i280  <|@  <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
referencedType: [null]
returnStamp: i32 [0 - 65535] bits:0...0xxxxxxxxxxxxxxxx
signature: [HotSpotType<Ljava/lang/CharSequence;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<CharSequence.charAt(int)>
=== Inputs ===
arguments: a4 i268 
=== Succesors ===
=== Usages ===
i280 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a4 i268  <|@  <|@
f <@~|@floating>@ <|@
tid a494 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 16]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a974 
=== Succesors ===
=== Usages ===
?794 v501 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a974  <|@  <|@
tid ?794 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern$BmpCharPropertyGreedy.match(Matcher, int, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4502
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?337 
values: a494 a362 a2 i268 a4 i269 i934 
=== Succesors ===
=== Usages ===
i280 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?337 values: a494 a362 a2 i268 a4 i269 i934  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i280 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 21
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
polymorphic: false
stamp: i32 [0 - 65535] bits:0...0xxxxxxxxxxxxxxxx
targetMethod: Direct#CharSequence.charAt
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v497 
stateDuring: ?794 
=== Succesors ===
next: i283 
=== Usages ===
v501 
=== Predecessor ===
v984 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v497 stateDuring: ?794 #next: i283  <|@  <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/regex/Pattern$CharPredicate;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Pattern$CharPredicate.is(int)>
=== Inputs ===
arguments: a494 i280 
=== Succesors ===
=== Usages ===
i283 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a494 i280  <|@  <|@
tid ?795 <|@
d <@d|@=== Debug Properties ===
bci: 26
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Pattern$BmpCharPropertyGreedy.match(Matcher, int, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4502
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?337 
values: a362 a2 i268 a4 i269 i934 
=== Succesors ===
=== Usages ===
i283 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?337 values: a362 a2 i268 a4 i269 i934  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i283 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 26
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#Pattern$CharPredicate.is
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v501 
stateDuring: ?795 
=== Succesors ===
next: v296 
=== Usages ===
v285 
=== Predecessor ===
i280 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v501 stateDuring: ?795 #next: v296  <|@  <|@
f <@~|@floating>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 31]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i283 
y: i17 
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i283 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 31]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: PROFILED designatedSuccessorProbability: 0.5908646161430428
stamp: void
=== Inputs ===
condition: v285 
=== Succesors ===
trueSuccessor: v290 
falseSuccessor: v286 
=== Usages ===
=== Predecessor ===
i283 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v285 #trueSuccessor: v290 #falseSuccessor: v286  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction NULLCHECK address: [v73|DWORD[_] * 8] state [bci:9, 44] <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v71|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stack: v74|QWORD[.] 
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<CharSequence.charAt(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:21, 44] <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v75|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:26, 44] <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v76|DWORD, y: v76|DWORD) trueDestinationProbability: 0.5908646161430428 condition: = trueDestination: B63 -> B65 falseDestination: B63 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584799587332037117
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4503) [bci: 34]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v299  <|@  <|@
f <@~|@floating>@ <|@
tid i298 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4503) [bci: 37]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
=== Inputs ===
x: i269 
y: i13 
=== Succesors ===
=== Usages ===
i269 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i269 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i297 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4503) [bci: 34]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
=== Inputs ===
x: i268 
y: i13 
=== Succesors ===
=== Usages ===
i268 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i268 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
loopBegin: v267 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v267  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v78|DWORD, v77|DWORD] destination: B64 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621235127
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v267 
=== Succesors ===
next: v289 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v267 #next: v289  <|@  <|@
f <@*|@fixed>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
v290 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997662585697696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v267 
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v267 #next: v287  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
v272 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 43]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v287 v289 
=== Succesors ===
next: v304 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v287 v289 #next: v304  <|@  <|@
f <@*|@fixed>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4505) [bci: 46]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: PROFILED designatedSuccessorProbability: 0.9999996147864973
stamp: void
=== Inputs ===
condition: v271 
=== Succesors ===
trueSuccessor: v303 
falseSuccessor: v302 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v271 #trueSuccessor: v303 #falseSuccessor: v302  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9999996147864973 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621458430
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v307 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v307  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
v303 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997194285186786
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4506) [bci: 49]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.hitEnd
location: Matcher.hitEnd
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4506) [bci: 51]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v994 
lastLocationAccess: - 
value: i557 
stateAfter: - 
=== Succesors ===
next: v309 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v994 lastLocationAccess: - value: i557 stateAfter: - #next: v309  <|@  <|@
f <@*|@fixed>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
v520 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" "B69" 
    successors "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v307 v309 
=== Succesors ===
next: v311 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v307 v309 #next: v311  <|@  <|@
f <@*|@fixed>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
v308 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v71|DWORD, v72|DWORD] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B73" 
    successors "B75" "B72" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4588886804909642497
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i313 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v312 
values: i268 i332 
=== Succesors ===
=== Usages ===
?315 v517 ?796 i332 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v312 values: i268 i332  <|@  <|@
f <@~|@floating>@ <|@
tid i314 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v312 
values: i269 i333 
=== Succesors ===
=== Usages ===
?315 v317 ?796 i333 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v312 values: i269 i333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 58
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v311 
=== Succesors ===
next: i975 
=== Usages ===
i313 i314 v319 v327 v334 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v311 #next: i975  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i975 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$CharPropertyGreedy.cmin
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 57]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v996 
lastLocationAccess: - 
=== Succesors ===
next: v321 
=== Usages ===
v317 
=== Predecessor ===
v312 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v996 lastLocationAccess: - #next: v321  <|@  <|@
f <@~|@floating>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 60]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i314 
y: i975 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i314 y: i975  <|@  <|@
f <@*|@fixed>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 60]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: PROFILED designatedSuccessorProbability: 0.2596988928056022
stamp: void
=== Inputs ===
condition: v317 
=== Succesors ===
trueSuccessor: v319 
falseSuccessor: v318 
=== Usages ===
=== Predecessor ===
i975 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v317 #trueSuccessor: v319 #falseSuccessor: v318  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|DWORD, v80|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|DWORD, y: [v7|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.2596988928056022 condition: < trueDestination: B71 -> B75 falseDestination: B71 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4586620676558964615
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 63]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: a976 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a976  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a976 <|@
result v81|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.regex.Pattern$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 64]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: n java.util.regex.Pattern$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1015 
lastLocationAccess: - 
=== Succesors ===
next: v977 
=== Usages ===
a508 v1036 
=== Predecessor ===
v318 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1015 lastLocationAccess: - #next: v977  <|@  <|@
tid ?315 <|@
d <@d|@=== Debug Properties ===
bci: 54
bytecode: iload
code: ResolvedJavaMethodBytecode<Pattern$BmpCharPropertyGreedy.match(Matcher, int, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4508
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?337 
values: a362 a2 i313 a4 i314 
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?337 values: a362 a2 i313 a4 i314  <|@  <|@
f <@~|@floating>@ <|@
tid v1036 <|@
result [v81|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a976 
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a976  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v977 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-130571|0xfffffffffffe01f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?315 
guard: - 
address: v1036 
lastLocationAccess: - 
=== Succesors ===
next: v514 
=== Usages ===
v923 
=== Predecessor ===
a976 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?315 guard: - address: v1036 lastLocationAccess: - #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid v923 <|@
result v83|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v977 
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v977  <|@  <|@
f <@~|@floating>@ <|@
tid v1019 <|@
result [v83|QWORD + 496] <|@
d <@d|@=== Debug Properties ===
displacement: 496
stamp: void*
stride: S1
=== Inputs ===
base: v923 
index: - 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v923 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
result v85|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1019 
lastLocationAccess: - 
=== Succesors ===
next: j516 
=== Usages ===
v1020 v517 
=== Predecessor ===
v977 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1019 lastLocationAccess: - #next: j516  <|@  <|@
f <@~|@floating>@ <|@
tid v1020 <|@
result [v85|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v514 
index: - 
=== Succesors ===
=== Usages ===
j516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v514 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j516 <|@
result v86|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1020 
lastLocationAccess: - 
=== Succesors ===
next: i324 
=== Usages ===
v517 
=== Predecessor ===
v514 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1020 lastLocationAccess: - #next: i324  <|@  <|@
f <@~|@floating>@ <|@
tid a508 <|@
result v87|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 64]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
op: Uncompress
stamp: a java.util.regex.Pattern$Node
=== Inputs ===
value: a976 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a976  <|@  <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>, UnresolvedJavaType<Ljava/util/regex/Matcher;>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/CharSequence;>]
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
computedAddress: j516 
metaspaceMethod: v514 
arguments: a508 a2 i313 a4 
=== Succesors ===
=== Usages ===
i324 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j516 metaspaceMethod: v514 arguments: a508 a2 i313 a4  <|@  <|@
tid ?796 <|@
d <@d|@=== Debug Properties ===
bci: 70
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern$BmpCharPropertyGreedy.match(Matcher, int, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Pattern.java
sourceLine: 4509
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?337 
values: a362 a2 i313 a4 i314 
=== Succesors ===
=== Usages ===
i324 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?337 values: a362 a2 i313 a4 i314  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i324 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 70
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Pattern$Node.match
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v517 
stateDuring: ?796 
=== Succesors ===
next: v330 
=== Usages ===
v326 
=== Predecessor ===
j516 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v517 stateDuring: ?796 #next: v330  <|@  <|@
f <@~|@floating>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 73]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i324 
y: i17 
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i324 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 73]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
profileData: PROFILED designatedSuccessorProbability: 0.31374907693960497
stamp: void
=== Inputs ===
condition: v326 
=== Succesors ===
trueSuccessor: v329 
falseSuccessor: v327 
=== Usages ===
=== Predecessor ===
i324 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v326 #trueSuccessor: v329 #falseSuccessor: v327  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v12|QWORD[.] v1|QWORD[.] v79|DWORD v3|QWORD[.] v80|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v82|DWORD = MOV input: [v81|DWORD[_] * 8 + 8] size: DWORD state [bci:54, 44] <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = UNCOMPRESSPOINTER (input: v82|DWORD, ~baseRegister: v84|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOV input: [v83|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = MOV input: [v85|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v81|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v79|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v85|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v86|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v12|QWORD[.] v1|QWORD[.] v79|DWORD v3|QWORD[.] v80|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70, 44] <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v88|DWORD, y: v88|DWORD) trueDestinationProbability: 0.31374907693960497 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B71" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4579260716611284855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4511) [bci: 78]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid i331 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4511) [bci: 78]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i332 i333 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i333 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4511) [bci: 81]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
=== Inputs ===
x: i314 
y: i331 
=== Succesors ===
=== Usages ===
i314 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i314 y: i331  <|@  <|@
f <@~|@floating>@ <|@
tid i332 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4511) [bci: 78]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32
=== Inputs ===
x: i313 
y: i331 
=== Succesors ===
=== Usages ===
i313 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i313 y: i331  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
loopBegin: v312 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v312  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = DEC value: v80|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = DEC value: v79|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|DWORD, v89|DWORD] destination: B73 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4584523385039648594
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4510) [bci: 76]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v312 
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v312 #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
v327 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580189478109779700
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v312 
=== Succesors ===
next: v731 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v312 #next: v731  <|@  <|@
tid ?320 <|@
d <@d|@=== Debug Properties ===
bci: 87
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Pattern$BmpCharPropertyGreedy.match(Matcher, int, CharSequence)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
sourceFile: Pattern.java
sourceLine: 4513
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?337 
=== Succesors ===
=== Usages ===
v731 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stamp: void
=== Inputs ===
stateBefore: ?320 
=== Succesors ===
next: v581 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?320 #next: v581  <|@  <|@
f <@*|@fixed>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stamp: void
=== Inputs ===
loopBegin: v24 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v731 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v24  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
locals: - - - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction SAFEPOINT temp: v91|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:87, 44] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B75 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B51" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v66 v71 
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v66 v71 #next: v39  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v24 
=== Succesors ===
next: a978 
=== Usages ===
=== Predecessor ===
v570 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v24 #next: a978  <|@  <|@
f <@~|@floating>@ <|@
tid v1022 <|@
result [v1|QWORD[.] + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a978 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a978 <|@
result v92|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.groups
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3789) [bci: 56]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1022 
lastLocationAccess: - 
=== Succesors ===
next: i979 
=== Usages ===
v1026 v1023 v1024 
=== Predecessor ===
v39 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1022 lastLocationAccess: - #next: i979  <|@  <|@
tid ?41 <|@
d <@d|@=== Debug Properties ===
bci: 50
bytecode: aload_1
code: ResolvedJavaMethodBytecode<Pattern$Start.match(Matcher, int, CharSequence)>
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
sourceFile: Pattern.java
sourceLine: 3788
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - a2 i25 
=== Succesors ===
=== Usages ===
v1040 i979 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 i25  <|@  <|@
f <@~|@floating>@ <|@
tid v1023 <|@
result [v92|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a978 
=== Succesors ===
=== Usages ===
i979 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a978  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i979 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-135691|0xfffffffffffdedf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3789) [bci: 64]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?41 
guard: - 
address: v1023 
lastLocationAccess: - 
=== Succesors ===
next: v729 
=== Usages ===
v645 
=== Predecessor ===
a978 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?41 guard: - address: v1023 lastLocationAccess: - #next: v729  <|@  <|@
f <@~|@floating>@ <|@
tid i538 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3789) [bci: 64]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v645 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3790) [bci: 74]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i979 
y: i538 
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i979 y: i538  <|@  <|@
f <@*|@fixed>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3789) [bci: 64]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v645 
=== Succesors ===
trueSuccessor: v728 
falseSuccessor: v726 
=== Usages ===
=== Predecessor ===
i979 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v645 #trueSuccessor: v728 #falseSuccessor: v726  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV input: [v1|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v1|QWORD[.] v6|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v92|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B77 -> B79 falseDestination: B77 -> B80 y: 2 size: DWORD inlinedY: null state [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4567169052318882655
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3794) [bci: 83]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v24 
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v24 #next: v556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.hitEnd
location: Matcher.hitEnd
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3794) [bci: 85]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v994 
lastLocationAccess: - 
value: i557 
stateAfter: - 
=== Succesors ===
next: v59 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v994 lastLocationAccess: - value: i557 stateAfter: - #next: v59  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3795) [bci: 89]
stamp: void
=== Inputs ===
memoryMap: - 
result: i17 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i17  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3789) [bci: 64]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1040 
=== Usages ===
=== Predecessor ===
v729 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1040  <|@  <|@
f <@*|@fixed>@ <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 576
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3789) [bci: 64]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?41 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v728 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?41  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -147483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v1|QWORD[.] v6|DWORD - - 
>@ <|@ instruction DEOPT info [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3789) [bci: 64]
stamp: void
=== Inputs ===
=== Succesors ===
next: v524 
=== Usages ===
v542 v554 
=== Predecessor ===
v729 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v524  <|@  <|@
f <@~|@floating>@ <|@
tid v1021 <|@
result [v1|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.first
location: Matcher.first
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 52]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1021 
lastLocationAccess: - 
value: i25 
stateAfter: - 
=== Succesors ===
next: v542 
=== Usages ===
=== Predecessor ===
v726 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1021 lastLocationAccess: - value: i25 stateAfter: - #next: v542  <|@  <|@
f <@~|@floating>@ <|@
tid v1024 <|@
result [v92|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a978 
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a978  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3789) [bci: 64]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v726 
address: v1024 
lastLocationAccess: - 
value: i25 
stateAfter: - 
=== Succesors ===
next: i980 
=== Usages ===
=== Predecessor ===
v524 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v726 address: v1024 lastLocationAccess: - value: i25 stateAfter: - #next: i980  <|@  <|@
f <@~|@floating>@ <|@
tid v1025 <|@
result [v1|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i980 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i980 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.last
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3790) [bci: 71]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1025 
lastLocationAccess: - 
=== Succesors ===
next: v554 
=== Usages ===
v554 
=== Predecessor ===
v542 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1025 lastLocationAccess: - #next: v554  <|@  <|@
f <@~|@floating>@ <|@
tid v1026 <|@
result [v92|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a978 
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a978  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3790) [bci: 74]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v726 
address: v1026 
lastLocationAccess: - 
value: i980 
stateAfter: - 
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
i980 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v726 address: v1026 lastLocationAccess: - value: i980 stateAfter: - #next: v56  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3791) [bci: 76]
stamp: void
=== Inputs ===
memoryMap: - 
result: i13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i13  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 28], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v92|DWORD[_] * 8 + 16], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v92|DWORD[_] * 8 + 20], y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v820 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v820  <|@  <|@
f <@~|@floating>@ <|@
tid j373 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.charAt(String.java:1555) [bci: 8]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j816 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i821 <|@
result int[-18483|0xffffffffffffb7cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
rawvalue: -18483
stableDimension: 0
stamp: i32 [-18483]
stampKind: i32
value: int[-18483|0xffffffffffffb7cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v73 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-18483|0xffffffffffffb7cd], long[20|0x14]] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B60" "B59" "B58" "B57" "B16" "B13" "B56" "B18" "B22" "B55" "B24" "B28" "B54" "B30" "B34" "B53" "B36" "B40" "B52" "B42" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i815 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i32 [-198675 - -18483] bits:1...1xxxxxxxxxx11x0x10x
valueDescription: i32
=== Inputs ===
merge: v812 
values: i821 i825 i827 i830 i837 i840 i843 i847 i850 i852 i856 i858 i860 i864 i866 i868 i872 i874 i876 i880 i882 
=== Succesors ===
=== Usages ===
v817 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v812 values: i821 i825 i827 i830 i837 i840 i843 i847 i850 i852 i856 i858 i860 i864 i866 i868 i872 i874 i876 i880 i882  <|@  <|@
f <@~|@floating>@ <|@
tid j816 <|@
result v95|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: i64 [0 - 9620] bits:0...0xxxxxxx00x0x00
valueDescription: i64
=== Inputs ===
merge: v812 
values: j373 j802 j828 j831 j838 j841 j802 j848 j841 j841 j848 j841 j841 j848 j841 j841 j848 j841 j841 j848 j841 
=== Succesors ===
=== Usages ===
v817 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v812 values: j373 j802 j828 j831 j838 j841 j802 j848 j841 j841 j848 j841 j841 j848 j841 j841 j848 j841 j841 j848 j841  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v820 v824 v826 v829 v836 v839 v842 v846 v849 v851 v855 v857 v859 v863 v865 v867 v871 v873 v875 v879 v881 
=== Succesors ===
next: v817 
=== Usages ===
i815 j816 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v820 v824 v826 v829 v836 v839 v842 v846 v849 v851 v855 v857 v859 v863 v865 v867 v871 v873 v875 v879 v881 #next: v817  <|@  <|@
f <@*|@fixed>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
stateBefore: ?26 
actionAndReason: i815 
speculation: j816 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v812 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?26 actionAndReason: i815 speculation: j816  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|DWORD, v95|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v95|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 14]
at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1039 
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1039  <|@  <|@
f <@*|@fixed>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 369
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 2]
reason: TypeCheckedInliningViolated
speculation: {0x0000000000003298[index: 404, len: 24, hash: 0x1c59cc2c]: GuardMovement@3[HotSpotMethod<Pattern$Start.match(Matcher, int, CharSequence)>, 31, TypeCheckedInliningViolated]}
stamp: void
=== Inputs ===
stateBefore: ?5 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?5  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -94515 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 12952 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e1bc5ac slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SUB (x: v4|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v5|DWORD) trueDestinationProbability: 9.93051617825813E-7 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B83" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B83 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B48" "B75" 
    successors "B78" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612642046083831603
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v5|DWORD) trueDestinationProbability: 8.983968413646328E-4 condition: > trueDestination: B4 -> B78 falseDestination: B4 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B61" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612637141171924796
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v8|DWORD = MOV input: [v7|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = UNCOMPRESSPOINTER (input: v8|DWORD, ~baseRegister: v11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v10|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}] keyTargets: [B5 -> B6, B5 -> B61] defaultTarget: B5 -> B81 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v14|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B60 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v16|DWORD = MOV input: [v15|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B58 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" "B14" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVSXB input: [v6|DWORD + v14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVZXB value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = UNCOMPRESSPOINTER (input: v16|DWORD, ~baseRegister: v20|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v19|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B9 -> B10, B9 -> B11, B9 -> B14] defaultTarget: B9 -> B57 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609027637273029927
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B10 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v23|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVZXB value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVZXB input: [v24|QWORD + v23|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B12 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" "B20" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602373890597978734
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v27|DWORD = MOV input: [v26|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = UNCOMPRESSPOINTER (input: v27|DWORD, ~baseRegister: v29|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v28|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B14 -> B15, B14 -> B20] defaultTarget: B14 -> B56 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v26|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v26|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B19 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B26" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870269280122293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v31|DWORD = MOV input: [v30|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = UNCOMPRESSPOINTER (input: v31|DWORD, ~baseRegister: v33|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v32|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B20 -> B21, B20 -> B26] defaultTarget: B20 -> B55 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v30|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v30|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" "B32" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366647962319916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v35|DWORD = MOV input: [v34|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = UNCOMPRESSPOINTER (input: v35|DWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v36|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B26 -> B27, B26 -> B32] defaultTarget: B26 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v34|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v34|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B31 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B38" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863026644571602
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v39|DWORD = MOV input: [v38|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = UNCOMPRESSPOINTER (input: v39|DWORD, ~baseRegister: v41|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v40|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B32 -> B33, B32 -> B38] defaultTarget: B32 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v38|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v38|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084642
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, int[0|0x0]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors "B63" "B66" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4590333408894431376
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD, v72|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9999997723712406 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590333407604006618
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v73|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction NULLCHECK address: [v73|DWORD[_] * 8] state [bci:9, 44] <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v71|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stack: v74|QWORD[.] 
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<CharSequence.charAt(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:21, 44] <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v75|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:26, 44] <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v76|DWORD, y: v76|DWORD) trueDestinationProbability: 0.5908646161430428 condition: = trueDestination: B63 -> B65 falseDestination: B63 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584799587332037117
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v78|DWORD, v77|DWORD] destination: B64 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621235127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9999996147864973 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621458430
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" "B69" 
    successors "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v71|DWORD, v72|DWORD] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B73" 
    successors "B75" "B72" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4588886804909642497
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|DWORD, v80|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|DWORD, y: [v7|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.2596988928056022 condition: < trueDestination: B71 -> B75 falseDestination: B71 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4586620676558964615
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v81|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v12|QWORD[.] v1|QWORD[.] v79|DWORD v3|QWORD[.] v80|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v82|DWORD = MOV input: [v81|DWORD[_] * 8 + 8] size: DWORD state [bci:54, 44] <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = UNCOMPRESSPOINTER (input: v82|DWORD, ~baseRegister: v84|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOV input: [v83|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = MOV input: [v85|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v81|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v79|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v85|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v86|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v12|QWORD[.] v1|QWORD[.] v79|DWORD v3|QWORD[.] v80|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70, 44] <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v88|DWORD, y: v88|DWORD) trueDestinationProbability: 0.31374907693960497 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B71" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4579260716611284855
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = DEC value: v80|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = DEC value: v79|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|DWORD, v89|DWORD] destination: B73 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B44" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359405326877352
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v43|DWORD = MOV input: [v42|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v44|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B38 -> B39, B38 -> B44] defaultTarget: B38 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v42|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v42|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580189478109779700
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
locals: - - - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction SAFEPOINT temp: v91|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:87, 44] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B75 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction NULLCHECK address: [v46|DWORD[_] * 8] state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v59|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v58|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v57|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v56|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v55|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v54|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B19" "B31" "B43" "B46" "B37" "B25" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v61|DWORD, y: v61|DWORD) trueDestinationProbability: 0.5929707392225225 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609023662074253018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v61|DWORD 
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction SAFEPOINT temp: v62|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:24, 44] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B48 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v61|DWORD 
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v64|DWORD = MOV input: [v63|DWORD[_] * 8 + 8] size: DWORD state [bci:24, 44] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = UNCOMPRESSPOINTER (input: v64|DWORD, ~baseRegister: v66|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV input: [v65|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOV input: [v67|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v67|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v68|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36, 44] <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B51" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV input: [v1|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v1|QWORD[.] v6|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v92|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B77 -> B79 falseDestination: B77 -> B80 y: 2 size: DWORD inlinedY: null state [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 28], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v92|DWORD[_] * 8 + 16], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v92|DWORD[_] * 8 + 20], y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4584523385039648594
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4567169052318882655
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4517296380301017088
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997662585697696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997194285186786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-192531|0xfffffffffffd0fed], long[9620|0x2594]] destination: B24 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-187411|0xfffffffffffd23ed], long[660|0x294]] destination: B59 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -200723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:39, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-38195|0xffffffffffff6acd], long[8980|0x2314]] destination: B56 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-197651|0xfffffffffffcfbed], long[9620|0x2594]] destination: B40 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-97820|0xfffffffffffe81e4], long[0|0x0]] destination: B60 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -199699 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v59|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v58|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v57|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v56|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v55|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v54|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-196627|0xfffffffffffcffed], long[9620|0x2594]] destination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-52787|0xffffffffffff31cd], long[8980|0x2314]] destination: B53 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-33331|0xffffffffffff7dcd], long[7700|0x1e14]] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-194579|0xfffffffffffd07ed], long[9620|0x2594]] destination: B30 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-47923|0xffffffffffff44cd], long[8980|0x2314]] destination: B54 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-188435|0xfffffffffffd1fed], long[2580|0xa14]] destination: B58 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43059|0xffffffffffff57cd], long[8980|0x2314]] destination: B55 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-191507|0xfffffffffffd13ed], long[9620|0x2594]] destination: B22 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-198675|0xfffffffffffcf7ed], long[9620|0x2594]] destination: B42 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-189459|0xfffffffffffd1bed], long[9620|0x2594]] destination: B16 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -147483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v1|QWORD[.] v6|DWORD - - 
>@ <|@ instruction DEOPT info [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-18483|0xffffffffffffb7cd], long[20|0x14]] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-193555|0xfffffffffffd0bed], long[9620|0x2594]] destination: B28 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-57651|0xffffffffffff1ecd], long[8980|0x2314]] destination: B52 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -94515 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 12952 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-195603|0xfffffffffffd03ed], long[9620|0x2594]] destination: B34 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-190483|0xfffffffffffd17ed], long[9620|0x2594]] destination: B18 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-103707|0xfffffffffffe6ae5], long[0|0x0]] destination: B13 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B60" "B59" "B58" "B57" "B16" "B13" "B56" "B18" "B22" "B55" "B24" "B28" "B54" "B30" "B34" "B53" "B36" "B40" "B52" "B42" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|DWORD, v95|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v95|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #6          // java.util.regex.Matcher.to:int
     5: aload_0       
     6: getfield      #5          // minLength:int
     9: isub          
    10: if_icmple     20
    13: aload_1       
    14: iconst_1      
    15: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    18: iconst_0      
    19: ireturn       
    20: aload_1       
    21: getfield      #6          // java.util.regex.Matcher.to:int
    24: aload_0       
    25: getfield      #5          // minLength:int
    28: isub          
    29: istore        4
    31: iload_2       
    32: iload         4
    34: if_icmpgt     83
    37: aload_0       
    38: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    41: aload_1       
    42: iload_2       
    43: aload_3       
    44: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    47: ifeq          77
    50: aload_1       
    51: iload_2       
    52: putfield      #9          // java.util.regex.Matcher.first:int
    55: aload_1       
    56: getfield      #10         // java.util.regex.Matcher.groups:int[]
    59: iconst_0      
    60: aload_1       
    61: getfield      #9          // java.util.regex.Matcher.first:int
    64: iastore       
    65: aload_1       
    66: getfield      #10         // java.util.regex.Matcher.groups:int[]
    69: iconst_1      
    70: aload_1       
    71: getfield      #11         // java.util.regex.Matcher.last:int
    74: iastore       
    75: iconst_1      
    76: ireturn       
    77: iinc          
    80: goto          31
    83: aload_1       
    84: iconst_1      
    85: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    88: iconst_0      
    89: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e1bc5ac slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SUB (x: v4|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v5|DWORD) trueDestinationProbability: 9.93051617825813E-7 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B83" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B83 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B48" "B75" 
    successors "B78" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612642046083831603
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v5|DWORD) trueDestinationProbability: 8.983968413646328E-4 condition: > trueDestination: B4 -> B78 falseDestination: B4 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B61" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612637141171924796
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v8|DWORD = MOV input: [v7|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = UNCOMPRESSPOINTER (input: v8|DWORD, ~baseRegister: v11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v10|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}] keyTargets: [B5 -> B6, B5 -> B61] defaultTarget: B5 -> B81 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v14|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B60 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v16|DWORD = MOV input: [v15|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B58 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" "B14" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVSXB input: [v6|DWORD + v14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVZXB value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = UNCOMPRESSPOINTER (input: v16|DWORD, ~baseRegister: v20|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v19|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B9 -> B10, B9 -> B11, B9 -> B14] defaultTarget: B9 -> B57 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609027637273029927
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B10 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v23|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVZXB value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVZXB input: [v24|QWORD + v23|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B12 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" "B20" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602373890597978734
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v27|DWORD = MOV input: [v26|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = UNCOMPRESSPOINTER (input: v27|DWORD, ~baseRegister: v29|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v28|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B14 -> B15, B14 -> B20] defaultTarget: B14 -> B56 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v26|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v26|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B19 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B26" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870269280122293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v31|DWORD = MOV input: [v30|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = UNCOMPRESSPOINTER (input: v31|DWORD, ~baseRegister: v33|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v32|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B20 -> B21, B20 -> B26] defaultTarget: B20 -> B55 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v30|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v30|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" "B32" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366647962319916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v35|DWORD = MOV input: [v34|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = UNCOMPRESSPOINTER (input: v35|DWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v36|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B26 -> B27, B26 -> B32] defaultTarget: B26 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v34|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v34|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B31 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B38" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863026644571602
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v39|DWORD = MOV input: [v38|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = UNCOMPRESSPOINTER (input: v39|DWORD, ~baseRegister: v41|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v40|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B32 -> B33, B32 -> B38] defaultTarget: B32 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v38|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v38|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084642
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, int[0|0x0]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors "B63" "B66" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4590333408894431376
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD, v72|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9999997723712406 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590333407604006618
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v73|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction NULLCHECK address: [v73|DWORD[_] * 8] state [bci:9, 44] <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v71|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stack: v74|QWORD[.] 
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<CharSequence.charAt(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:21, 44] <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v75|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:26, 44] <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v76|DWORD, y: v76|DWORD) trueDestinationProbability: 0.5908646161430428 condition: = trueDestination: B63 -> B65 falseDestination: B63 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584799587332037117
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v78|DWORD, v77|DWORD] destination: B64 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621235127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9999996147864973 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621458430
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" "B69" 
    successors "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v71|DWORD, v72|DWORD] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B73" 
    successors "B75" "B72" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4588886804909642497
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|DWORD, v80|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|DWORD, y: [v7|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.2596988928056022 condition: < trueDestination: B71 -> B75 falseDestination: B71 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4586620676558964615
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v81|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v12|QWORD[.] v1|QWORD[.] v79|DWORD v3|QWORD[.] v80|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v82|DWORD = MOV input: [v81|DWORD[_] * 8 + 8] size: DWORD state [bci:54, 44] <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = UNCOMPRESSPOINTER (input: v82|DWORD, ~baseRegister: v84|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOV input: [v83|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = MOV input: [v85|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v81|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v79|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v85|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v86|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v12|QWORD[.] v1|QWORD[.] v79|DWORD v3|QWORD[.] v80|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70, 44] <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v88|DWORD, y: v88|DWORD) trueDestinationProbability: 0.31374907693960497 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B71" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4579260716611284855
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = DEC value: v80|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = DEC value: v79|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|DWORD, v89|DWORD] destination: B73 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B44" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359405326877352
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v43|DWORD = MOV input: [v42|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v44|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B38 -> B39, B38 -> B44] defaultTarget: B38 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v42|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v42|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580189478109779700
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
locals: - - - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction SAFEPOINT temp: v91|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:87, 44] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B75 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction NULLCHECK address: [v46|DWORD[_] * 8] state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v59|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v58|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v57|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v56|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v55|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v54|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B19" "B31" "B43" "B46" "B37" "B25" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v61|DWORD, y: v61|DWORD) trueDestinationProbability: 0.5929707392225225 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609023662074253018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v61|DWORD 
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction SAFEPOINT temp: v62|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:24, 44] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B48 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v61|DWORD 
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v64|DWORD = MOV input: [v63|DWORD[_] * 8 + 8] size: DWORD state [bci:24, 44] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = UNCOMPRESSPOINTER (input: v64|DWORD, ~baseRegister: v66|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV input: [v65|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOV input: [v67|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v67|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v68|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36, 44] <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B51" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV input: [v1|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v1|QWORD[.] v6|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v92|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B77 -> B79 falseDestination: B77 -> B80 y: 2 size: DWORD inlinedY: null state [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 28], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v92|DWORD[_] * 8 + 16], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v92|DWORD[_] * 8 + 20], y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4584523385039648594
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4567169052318882655
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4517296380301017088
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997662585697696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997194285186786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-192531|0xfffffffffffd0fed], long[9620|0x2594]] destination: B24 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-187411|0xfffffffffffd23ed], long[660|0x294]] destination: B59 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -200723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:39, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-38195|0xffffffffffff6acd], long[8980|0x2314]] destination: B56 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-197651|0xfffffffffffcfbed], long[9620|0x2594]] destination: B40 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-97820|0xfffffffffffe81e4], long[0|0x0]] destination: B60 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -199699 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v59|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v58|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v57|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v56|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v55|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v54|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-196627|0xfffffffffffcffed], long[9620|0x2594]] destination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-52787|0xffffffffffff31cd], long[8980|0x2314]] destination: B53 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-33331|0xffffffffffff7dcd], long[7700|0x1e14]] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-194579|0xfffffffffffd07ed], long[9620|0x2594]] destination: B30 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-47923|0xffffffffffff44cd], long[8980|0x2314]] destination: B54 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-188435|0xfffffffffffd1fed], long[2580|0xa14]] destination: B58 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43059|0xffffffffffff57cd], long[8980|0x2314]] destination: B55 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-191507|0xfffffffffffd13ed], long[9620|0x2594]] destination: B22 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-198675|0xfffffffffffcf7ed], long[9620|0x2594]] destination: B42 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-189459|0xfffffffffffd1bed], long[9620|0x2594]] destination: B16 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -147483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v1|QWORD[.] v6|DWORD - - 
>@ <|@ instruction DEOPT info [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-18483|0xffffffffffffb7cd], long[20|0x14]] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-193555|0xfffffffffffd0bed], long[9620|0x2594]] destination: B28 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-57651|0xffffffffffff1ecd], long[8980|0x2314]] destination: B52 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -94515 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 12952 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-195603|0xfffffffffffd03ed], long[9620|0x2594]] destination: B34 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-190483|0xfffffffffffd17ed], long[9620|0x2594]] destination: B18 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-103707|0xfffffffffffe6ae5], long[0|0x0]] destination: B13 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B60" "B59" "B58" "B57" "B16" "B13" "B56" "B18" "B22" "B55" "B24" "B28" "B54" "B30" "B34" "B53" "B36" "B40" "B52" "B42" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|DWORD, v95|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v95|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #6          // java.util.regex.Matcher.to:int
     5: aload_0       
     6: getfield      #5          // minLength:int
     9: isub          
    10: if_icmple     20
    13: aload_1       
    14: iconst_1      
    15: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    18: iconst_0      
    19: ireturn       
    20: aload_1       
    21: getfield      #6          // java.util.regex.Matcher.to:int
    24: aload_0       
    25: getfield      #5          // minLength:int
    28: isub          
    29: istore        4
    31: iload_2       
    32: iload         4
    34: if_icmpgt     83
    37: aload_0       
    38: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    41: aload_1       
    42: iload_2       
    43: aload_3       
    44: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    47: ifeq          77
    50: aload_1       
    51: iload_2       
    52: putfield      #9          // java.util.regex.Matcher.first:int
    55: aload_1       
    56: getfield      #10         // java.util.regex.Matcher.groups:int[]
    59: iconst_0      
    60: aload_1       
    61: getfield      #9          // java.util.regex.Matcher.first:int
    64: iastore       
    65: aload_1       
    66: getfield      #10         // java.util.regex.Matcher.groups:int[]
    69: iconst_1      
    70: aload_1       
    71: getfield      #11         // java.util.regex.Matcher.last:int
    74: iastore       
    75: iconst_1      
    76: ireturn       
    77: iinc          
    80: goto          31
    83: aload_1       
    84: iconst_1      
    85: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    88: iconst_0      
    89: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e1bc5ac slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SUB (x: v4|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v5|DWORD) trueDestinationProbability: 9.93051617825813E-7 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B83" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B83 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B48" "B75" 
    successors "B78" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612642046083831603
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v5|DWORD) trueDestinationProbability: 8.983968413646328E-4 condition: > trueDestination: B4 -> B78 falseDestination: B4 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B61" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612637141171924796
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v8|DWORD = MOV input: [v7|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = UNCOMPRESSPOINTER (input: v8|DWORD, ~baseRegister: v11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v10|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}] keyTargets: [B5 -> B6, B5 -> B61] defaultTarget: B5 -> B81 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v14|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B60 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v16|DWORD = MOV input: [v15|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B58 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" "B14" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVSXB input: [v6|DWORD + v14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVZXB value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = UNCOMPRESSPOINTER (input: v16|DWORD, ~baseRegister: v20|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v19|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B9 -> B10, B9 -> B11, B9 -> B14] defaultTarget: B9 -> B57 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609027637273029927
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B10 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v23|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVZXB value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVZXB input: [v24|QWORD + v23|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B12 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" "B20" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602373890597978734
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v27|DWORD = MOV input: [v26|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = UNCOMPRESSPOINTER (input: v27|DWORD, ~baseRegister: v29|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v28|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B14 -> B15, B14 -> B20] defaultTarget: B14 -> B56 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v26|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v26|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B19 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B26" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870269280122293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v31|DWORD = MOV input: [v30|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = UNCOMPRESSPOINTER (input: v31|DWORD, ~baseRegister: v33|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v32|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B20 -> B21, B20 -> B26] defaultTarget: B20 -> B55 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v30|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v30|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" "B32" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366647962319916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v35|DWORD = MOV input: [v34|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = UNCOMPRESSPOINTER (input: v35|DWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v36|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B26 -> B27, B26 -> B32] defaultTarget: B26 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v34|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v34|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B31 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B38" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863026644571602
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v39|DWORD = MOV input: [v38|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = UNCOMPRESSPOINTER (input: v39|DWORD, ~baseRegister: v41|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v40|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B32 -> B33, B32 -> B38] defaultTarget: B32 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v38|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v38|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084642
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, int[0|0x0]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors "B63" "B66" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4590333408894431376
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD, v72|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9999997723712406 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590333407604006618
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v73|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction NULLCHECK address: [v73|DWORD[_] * 8] state [bci:9, 44] <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v71|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stack: v74|QWORD[.] 
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<CharSequence.charAt(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:21, 44] <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v75|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:26, 44] <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v76|DWORD, y: v76|DWORD) trueDestinationProbability: 0.5908646161430428 condition: = trueDestination: B63 -> B65 falseDestination: B63 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584799587332037117
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v78|DWORD, v77|DWORD] destination: B64 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621235127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9999996147864973 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621458430
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" "B69" 
    successors "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v71|DWORD, v72|DWORD] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B73" 
    successors "B75" "B72" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4588886804909642497
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|DWORD, v80|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|DWORD, y: [v7|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.2596988928056022 condition: < trueDestination: B71 -> B75 falseDestination: B71 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4586620676558964615
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v81|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v12|QWORD[.] v1|QWORD[.] v79|DWORD v3|QWORD[.] v80|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v82|DWORD = MOV input: [v81|DWORD[_] * 8 + 8] size: DWORD state [bci:54, 44] <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = UNCOMPRESSPOINTER (input: v82|DWORD, ~baseRegister: v84|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOV input: [v83|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = MOV input: [v85|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v81|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v79|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v85|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v86|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v12|QWORD[.] v1|QWORD[.] v79|DWORD v3|QWORD[.] v80|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70, 44] <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v88|DWORD, y: v88|DWORD) trueDestinationProbability: 0.31374907693960497 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B71" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4579260716611284855
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = DEC value: v80|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = DEC value: v79|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|DWORD, v89|DWORD] destination: B73 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B44" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359405326877352
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v43|DWORD = MOV input: [v42|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v44|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B38 -> B39, B38 -> B44] defaultTarget: B38 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v42|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v42|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580189478109779700
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
locals: - - - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction SAFEPOINT temp: v91|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:87, 44] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B75 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction NULLCHECK address: [v46|DWORD[_] * 8] state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v59|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v58|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v57|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v56|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v55|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v54|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B19" "B31" "B43" "B46" "B37" "B25" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v61|DWORD, y: v61|DWORD) trueDestinationProbability: 0.5929707392225225 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609023662074253018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v61|DWORD 
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction SAFEPOINT temp: v62|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:24, 44] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B48 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v61|DWORD 
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v64|DWORD = MOV input: [v63|DWORD[_] * 8 + 8] size: DWORD state [bci:24, 44] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = UNCOMPRESSPOINTER (input: v64|DWORD, ~baseRegister: v66|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV input: [v65|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOV input: [v67|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v67|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v68|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36, 44] <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B51" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV input: [v1|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v1|QWORD[.] v6|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v92|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B77 -> B79 falseDestination: B77 -> B80 y: 2 size: DWORD inlinedY: null state [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 28], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v92|DWORD[_] * 8 + 16], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v92|DWORD[_] * 8 + 20], y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4584523385039648594
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4567169052318882655
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4517296380301017088
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997662585697696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997194285186786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-192531|0xfffffffffffd0fed], long[9620|0x2594]] destination: B24 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-187411|0xfffffffffffd23ed], long[660|0x294]] destination: B59 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -200723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:39, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-38195|0xffffffffffff6acd], long[8980|0x2314]] destination: B56 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-197651|0xfffffffffffcfbed], long[9620|0x2594]] destination: B40 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-97820|0xfffffffffffe81e4], long[0|0x0]] destination: B60 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -199699 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v59|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v58|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v57|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v56|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v55|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v54|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-196627|0xfffffffffffcffed], long[9620|0x2594]] destination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-52787|0xffffffffffff31cd], long[8980|0x2314]] destination: B53 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-33331|0xffffffffffff7dcd], long[7700|0x1e14]] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-194579|0xfffffffffffd07ed], long[9620|0x2594]] destination: B30 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-47923|0xffffffffffff44cd], long[8980|0x2314]] destination: B54 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-188435|0xfffffffffffd1fed], long[2580|0xa14]] destination: B58 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43059|0xffffffffffff57cd], long[8980|0x2314]] destination: B55 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-191507|0xfffffffffffd13ed], long[9620|0x2594]] destination: B22 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-198675|0xfffffffffffcf7ed], long[9620|0x2594]] destination: B42 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-189459|0xfffffffffffd1bed], long[9620|0x2594]] destination: B16 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -147483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v1|QWORD[.] v6|DWORD - - 
>@ <|@ instruction DEOPT info [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-18483|0xffffffffffffb7cd], long[20|0x14]] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-193555|0xfffffffffffd0bed], long[9620|0x2594]] destination: B28 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-57651|0xffffffffffff1ecd], long[8980|0x2314]] destination: B52 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -94515 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 12952 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-195603|0xfffffffffffd03ed], long[9620|0x2594]] destination: B34 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-190483|0xfffffffffffd17ed], long[9620|0x2594]] destination: B18 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-103707|0xfffffffffffe6ae5], long[0|0x0]] destination: B13 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B60" "B59" "B58" "B57" "B16" "B13" "B56" "B18" "B22" "B55" "B24" "B28" "B54" "B30" "B34" "B53" "B36" "B40" "B52" "B42" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|DWORD, v95|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v95|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #6          // java.util.regex.Matcher.to:int
     5: aload_0       
     6: getfield      #5          // minLength:int
     9: isub          
    10: if_icmple     20
    13: aload_1       
    14: iconst_1      
    15: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    18: iconst_0      
    19: ireturn       
    20: aload_1       
    21: getfield      #6          // java.util.regex.Matcher.to:int
    24: aload_0       
    25: getfield      #5          // minLength:int
    28: isub          
    29: istore        4
    31: iload_2       
    32: iload         4
    34: if_icmpgt     83
    37: aload_0       
    38: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    41: aload_1       
    42: iload_2       
    43: aload_3       
    44: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    47: ifeq          77
    50: aload_1       
    51: iload_2       
    52: putfield      #9          // java.util.regex.Matcher.first:int
    55: aload_1       
    56: getfield      #10         // java.util.regex.Matcher.groups:int[]
    59: iconst_0      
    60: aload_1       
    61: getfield      #9          // java.util.regex.Matcher.first:int
    64: iastore       
    65: aload_1       
    66: getfield      #10         // java.util.regex.Matcher.groups:int[]
    69: iconst_1      
    70: aload_1       
    71: getfield      #11         // java.util.regex.Matcher.last:int
    74: iastore       
    75: iconst_1      
    76: ireturn       
    77: iinc          
    80: goto          31
    83: aload_1       
    84: iconst_1      
    85: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    88: iconst_0      
    89: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e1bc5ac slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SUB (x: v4|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v5|DWORD) trueDestinationProbability: 9.93051617825813E-7 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B83" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B83 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B48" "B75" 
    successors "B78" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612642046083831603
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v5|DWORD) trueDestinationProbability: 8.983968413646328E-4 condition: > trueDestination: B4 -> B78 falseDestination: B4 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B61" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612637141171924796
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v8|DWORD = MOV input: [v7|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = UNCOMPRESSPOINTER (input: v8|DWORD, ~baseRegister: v11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v10|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}] keyTargets: [B5 -> B6, B5 -> B61] defaultTarget: B5 -> B81 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v14|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B60 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v16|DWORD = MOV input: [v15|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B58 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" "B14" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVSXB input: [v6|DWORD + v14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVZXB value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = UNCOMPRESSPOINTER (input: v16|DWORD, ~baseRegister: v20|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v19|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B9 -> B10, B9 -> B11, B9 -> B14] defaultTarget: B9 -> B57 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609027637273029927
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B10 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v23|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVZXB value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVZXB input: [v24|QWORD + v23|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B12 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" "B20" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602373890597978734
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v27|DWORD = MOV input: [v26|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = UNCOMPRESSPOINTER (input: v27|DWORD, ~baseRegister: v29|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v28|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B14 -> B15, B14 -> B20] defaultTarget: B14 -> B56 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v26|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v26|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B19 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B26" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870269280122293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v31|DWORD = MOV input: [v30|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = UNCOMPRESSPOINTER (input: v31|DWORD, ~baseRegister: v33|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v32|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B20 -> B21, B20 -> B26] defaultTarget: B20 -> B55 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v30|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v30|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" "B32" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366647962319916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v35|DWORD = MOV input: [v34|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = UNCOMPRESSPOINTER (input: v35|DWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v36|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B26 -> B27, B26 -> B32] defaultTarget: B26 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v34|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v34|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B31 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B38" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863026644571602
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v39|DWORD = MOV input: [v38|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = UNCOMPRESSPOINTER (input: v39|DWORD, ~baseRegister: v41|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v40|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B32 -> B33, B32 -> B38] defaultTarget: B32 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v38|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v38|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084642
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, int[0|0x0]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors "B63" "B66" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4590333408894431376
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD, v72|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9999997723712406 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590333407604006618
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v73|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction NULLCHECK address: [v73|DWORD[_] * 8] state [bci:9, 44] <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v71|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stack: v74|QWORD[.] 
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<CharSequence.charAt(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:21, 44] <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v75|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:26, 44] <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v76|DWORD, y: v76|DWORD) trueDestinationProbability: 0.5908646161430428 condition: = trueDestination: B63 -> B65 falseDestination: B63 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584799587332037117
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v78|DWORD, v77|DWORD] destination: B64 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621235127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9999996147864973 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621458430
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" "B69" 
    successors "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v71|DWORD, v72|DWORD] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B73" 
    successors "B75" "B72" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4588886804909642497
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|DWORD, v80|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|DWORD, y: [v7|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.2596988928056022 condition: < trueDestination: B71 -> B75 falseDestination: B71 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4586620676558964615
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v81|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v12|QWORD[.] v1|QWORD[.] v79|DWORD v3|QWORD[.] v80|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v82|DWORD = MOV input: [v81|DWORD[_] * 8 + 8] size: DWORD state [bci:54, 44] <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = UNCOMPRESSPOINTER (input: v82|DWORD, ~baseRegister: v84|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOV input: [v83|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = MOV input: [v85|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v81|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v79|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v85|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v86|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v12|QWORD[.] v1|QWORD[.] v79|DWORD v3|QWORD[.] v80|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70, 44] <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v88|DWORD, y: v88|DWORD) trueDestinationProbability: 0.31374907693960497 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B71" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4579260716611284855
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = DEC value: v80|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = DEC value: v79|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|DWORD, v89|DWORD] destination: B73 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B44" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359405326877352
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v43|DWORD = MOV input: [v42|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v44|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B38 -> B39, B38 -> B44] defaultTarget: B38 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v42|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v42|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580189478109779700
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
locals: - - - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction SAFEPOINT temp: v91|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:87, 44] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B75 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction NULLCHECK address: [v46|DWORD[_] * 8] state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v59|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v58|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v57|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v56|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v55|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v54|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B19" "B31" "B43" "B46" "B37" "B25" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v61|DWORD, y: v61|DWORD) trueDestinationProbability: 0.5929707392225225 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609023662074253018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v61|DWORD 
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction SAFEPOINT temp: v62|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:24, 44] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B48 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v61|DWORD 
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v64|DWORD = MOV input: [v63|DWORD[_] * 8 + 8] size: DWORD state [bci:24, 44] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = UNCOMPRESSPOINTER (input: v64|DWORD, ~baseRegister: v66|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV input: [v65|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOV input: [v67|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v67|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v68|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36, 44] <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B51" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV input: [v1|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v1|QWORD[.] v6|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v92|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B77 -> B79 falseDestination: B77 -> B80 y: 2 size: DWORD inlinedY: null state [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 28], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v92|DWORD[_] * 8 + 16], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v92|DWORD[_] * 8 + 20], y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4584523385039648594
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4567169052318882655
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4517296380301017088
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997662585697696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997194285186786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-192531|0xfffffffffffd0fed], long[9620|0x2594]] destination: B24 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-187411|0xfffffffffffd23ed], long[660|0x294]] destination: B59 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -200723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:39, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-38195|0xffffffffffff6acd], long[8980|0x2314]] destination: B56 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-197651|0xfffffffffffcfbed], long[9620|0x2594]] destination: B40 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-97820|0xfffffffffffe81e4], long[0|0x0]] destination: B60 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -199699 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v59|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v58|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v57|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v56|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v55|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v54|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-196627|0xfffffffffffcffed], long[9620|0x2594]] destination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-52787|0xffffffffffff31cd], long[8980|0x2314]] destination: B53 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-33331|0xffffffffffff7dcd], long[7700|0x1e14]] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-194579|0xfffffffffffd07ed], long[9620|0x2594]] destination: B30 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-47923|0xffffffffffff44cd], long[8980|0x2314]] destination: B54 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-188435|0xfffffffffffd1fed], long[2580|0xa14]] destination: B58 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43059|0xffffffffffff57cd], long[8980|0x2314]] destination: B55 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-191507|0xfffffffffffd13ed], long[9620|0x2594]] destination: B22 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-198675|0xfffffffffffcf7ed], long[9620|0x2594]] destination: B42 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-189459|0xfffffffffffd1bed], long[9620|0x2594]] destination: B16 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -147483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v1|QWORD[.] v6|DWORD - - 
>@ <|@ instruction DEOPT info [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-18483|0xffffffffffffb7cd], long[20|0x14]] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-193555|0xfffffffffffd0bed], long[9620|0x2594]] destination: B28 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-57651|0xffffffffffff1ecd], long[8980|0x2314]] destination: B52 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -94515 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 12952 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-195603|0xfffffffffffd03ed], long[9620|0x2594]] destination: B34 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-190483|0xfffffffffffd17ed], long[9620|0x2594]] destination: B18 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-103707|0xfffffffffffe6ae5], long[0|0x0]] destination: B13 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B60" "B59" "B58" "B57" "B16" "B13" "B56" "B18" "B22" "B55" "B24" "B28" "B54" "B30" "B34" "B53" "B36" "B40" "B52" "B42" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|DWORD, v95|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v95|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #6          // java.util.regex.Matcher.to:int
     5: aload_0       
     6: getfield      #5          // minLength:int
     9: isub          
    10: if_icmple     20
    13: aload_1       
    14: iconst_1      
    15: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    18: iconst_0      
    19: ireturn       
    20: aload_1       
    21: getfield      #6          // java.util.regex.Matcher.to:int
    24: aload_0       
    25: getfield      #5          // minLength:int
    28: isub          
    29: istore        4
    31: iload_2       
    32: iload         4
    34: if_icmpgt     83
    37: aload_0       
    38: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    41: aload_1       
    42: iload_2       
    43: aload_3       
    44: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    47: ifeq          77
    50: aload_1       
    51: iload_2       
    52: putfield      #9          // java.util.regex.Matcher.first:int
    55: aload_1       
    56: getfield      #10         // java.util.regex.Matcher.groups:int[]
    59: iconst_0      
    60: aload_1       
    61: getfield      #9          // java.util.regex.Matcher.first:int
    64: iastore       
    65: aload_1       
    66: getfield      #10         // java.util.regex.Matcher.groups:int[]
    69: iconst_1      
    70: aload_1       
    71: getfield      #11         // java.util.regex.Matcher.last:int
    74: iastore       
    75: iconst_1      
    76: ireturn       
    77: iinc          
    80: goto          31
    83: aload_1       
    84: iconst_1      
    85: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    88: iconst_0      
    89: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e1bc5ac slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SUB (x: v4|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v5|DWORD) trueDestinationProbability: 9.93051617825813E-7 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B83" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B83 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|DWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B48" "B75" 
    successors "B78" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612642046083831603
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v5|DWORD) trueDestinationProbability: 8.983968413646328E-4 condition: > trueDestination: B4 -> B78 falseDestination: B4 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B61" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612637141171924796
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v8|DWORD = MOV input: [v7|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = UNCOMPRESSPOINTER (input: v8|DWORD, ~baseRegister: v11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v10|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}] keyTargets: [B5 -> B6, B5 -> B61] defaultTarget: B5 -> B81 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v14|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B60 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v16|DWORD = MOV input: [v15|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B58 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" "B14" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVSXB input: [v6|DWORD + v14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVZXB value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = UNCOMPRESSPOINTER (input: v16|DWORD, ~baseRegister: v20|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v19|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B9 -> B10, B9 -> B11, B9 -> B14] defaultTarget: B9 -> B57 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609027637273029927
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B10 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v23|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVZXB value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVZXB input: [v24|QWORD + v23|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B12 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" "B20" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602373890597978734
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v27|DWORD = MOV input: [v26|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = UNCOMPRESSPOINTER (input: v27|DWORD, ~baseRegister: v29|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v28|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B14 -> B15, B14 -> B20] defaultTarget: B14 -> B56 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v26|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v26|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B19 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B26" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870269280122293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v31|DWORD = MOV input: [v30|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = UNCOMPRESSPOINTER (input: v31|DWORD, ~baseRegister: v33|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v32|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B20 -> B21, B20 -> B26] defaultTarget: B20 -> B55 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v30|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v30|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" "B32" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366647962319916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v35|DWORD = MOV input: [v34|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = UNCOMPRESSPOINTER (input: v35|DWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v36|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B26 -> B27, B26 -> B32] defaultTarget: B26 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v34|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v34|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B31 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B38" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863026644571602
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v39|DWORD = MOV input: [v38|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = UNCOMPRESSPOINTER (input: v39|DWORD, ~baseRegister: v41|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v40|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B32 -> B33, B32 -> B38] defaultTarget: B32 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v38|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v38|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084642
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, int[0|0x0]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors "B63" "B66" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4590333408894431376
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD, v72|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9999997723712406 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590333407604006618
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v73|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction NULLCHECK address: [v73|DWORD[_] * 8] state [bci:9, 44] <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v71|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stack: v74|QWORD[.] 
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<CharSequence.charAt(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:21, 44] <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v75|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:26, 44] <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v76|DWORD, y: v76|DWORD) trueDestinationProbability: 0.5908646161430428 condition: = trueDestination: B63 -> B65 falseDestination: B63 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584799587332037117
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v78|DWORD, v77|DWORD] destination: B64 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621235127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9999996147864973 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621458430
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" "B69" 
    successors "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v71|DWORD, v72|DWORD] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B73" 
    successors "B75" "B72" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4588886804909642497
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|DWORD, v80|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|DWORD, y: [v7|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.2596988928056022 condition: < trueDestination: B71 -> B75 falseDestination: B71 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4586620676558964615
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v81|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v12|QWORD[.] v1|QWORD[.] v79|DWORD v3|QWORD[.] v80|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v82|DWORD = MOV input: [v81|DWORD[_] * 8 + 8] size: DWORD state [bci:54, 44] <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = UNCOMPRESSPOINTER (input: v82|DWORD, ~baseRegister: v84|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOV input: [v83|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = MOV input: [v85|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v81|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v79|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v85|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v86|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v12|QWORD[.] v1|QWORD[.] v79|DWORD v3|QWORD[.] v80|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70, 44] <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v88|DWORD, y: v88|DWORD) trueDestinationProbability: 0.31374907693960497 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B71" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4579260716611284855
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = DEC value: v80|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = DEC value: v79|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|DWORD, v89|DWORD] destination: B73 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B44" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359405326877352
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v43|DWORD = MOV input: [v42|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v44|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B38 -> B39, B38 -> B44] defaultTarget: B38 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v42|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v42|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580189478109779700
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
locals: - - - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction SAFEPOINT temp: v91|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:87, 44] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B75 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction NULLCHECK address: [v46|DWORD[_] * 8] state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v59|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v58|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v57|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v56|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v55|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v54|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B19" "B31" "B43" "B46" "B37" "B25" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v61|DWORD, y: v61|DWORD) trueDestinationProbability: 0.5929707392225225 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609023662074253018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v61|DWORD 
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction SAFEPOINT temp: v62|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:24, 44] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B48 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v61|DWORD 
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v64|DWORD = MOV input: [v63|DWORD[_] * 8 + 8] size: DWORD state [bci:24, 44] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = UNCOMPRESSPOINTER (input: v64|DWORD, ~baseRegister: v66|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV input: [v65|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOV input: [v67|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v67|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v68|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36, 44] <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B51" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV input: [v1|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v1|QWORD[.] v6|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v92|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B77 -> B79 falseDestination: B77 -> B80 y: 2 size: DWORD inlinedY: null state [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 28], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v92|DWORD[_] * 8 + 16], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v92|DWORD[_] * 8 + 20], y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4584523385039648594
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4567169052318882655
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4517296380301017088
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997662585697696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997194285186786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-192531|0xfffffffffffd0fed], long[9620|0x2594]] destination: B24 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-187411|0xfffffffffffd23ed], long[660|0x294]] destination: B59 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -200723 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:39, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-38195|0xffffffffffff6acd], long[8980|0x2314]] destination: B56 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-197651|0xfffffffffffcfbed], long[9620|0x2594]] destination: B40 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-97820|0xfffffffffffe81e4], long[0|0x0]] destination: B60 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -199699 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v59|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v58|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v57|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v56|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v55|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v54|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-196627|0xfffffffffffcffed], long[9620|0x2594]] destination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-52787|0xffffffffffff31cd], long[8980|0x2314]] destination: B53 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-33331|0xffffffffffff7dcd], long[7700|0x1e14]] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-194579|0xfffffffffffd07ed], long[9620|0x2594]] destination: B30 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-47923|0xffffffffffff44cd], long[8980|0x2314]] destination: B54 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-188435|0xfffffffffffd1fed], long[2580|0xa14]] destination: B58 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43059|0xffffffffffff57cd], long[8980|0x2314]] destination: B55 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-191507|0xfffffffffffd13ed], long[9620|0x2594]] destination: B22 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-198675|0xfffffffffffcf7ed], long[9620|0x2594]] destination: B42 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-189459|0xfffffffffffd1bed], long[9620|0x2594]] destination: B16 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -147483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v1|QWORD[.] v6|DWORD - - 
>@ <|@ instruction DEOPT info [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-18483|0xffffffffffffb7cd], long[20|0x14]] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-193555|0xfffffffffffd0bed], long[9620|0x2594]] destination: B28 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-57651|0xffffffffffff1ecd], long[8980|0x2314]] destination: B52 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -94515 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 12952 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-195603|0xfffffffffffd03ed], long[9620|0x2594]] destination: B34 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-190483|0xfffffffffffd17ed], long[9620|0x2594]] destination: B18 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-103707|0xfffffffffffe6ae5], long[0|0x0]] destination: B13 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B60" "B59" "B58" "B57" "B16" "B13" "B56" "B18" "B22" "B55" "B24" "B28" "B54" "B30" "B34" "B53" "B36" "B40" "B52" "B42" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|DWORD, v95|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v95|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #6          // java.util.regex.Matcher.to:int
     5: aload_0       
     6: getfield      #5          // minLength:int
     9: isub          
    10: if_icmple     20
    13: aload_1       
    14: iconst_1      
    15: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    18: iconst_0      
    19: ireturn       
    20: aload_1       
    21: getfield      #6          // java.util.regex.Matcher.to:int
    24: aload_0       
    25: getfield      #5          // minLength:int
    28: isub          
    29: istore        4
    31: iload_2       
    32: iload         4
    34: if_icmpgt     83
    37: aload_0       
    38: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    41: aload_1       
    42: iload_2       
    43: aload_3       
    44: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    47: ifeq          77
    50: aload_1       
    51: iload_2       
    52: putfield      #9          // java.util.regex.Matcher.first:int
    55: aload_1       
    56: getfield      #10         // java.util.regex.Matcher.groups:int[]
    59: iconst_0      
    60: aload_1       
    61: getfield      #9          // java.util.regex.Matcher.first:int
    64: iastore       
    65: aload_1       
    66: getfield      #10         // java.util.regex.Matcher.groups:int[]
    69: iconst_1      
    70: aload_1       
    71: getfield      #11         // java.util.regex.Matcher.last:int
    74: iastore       
    75: iconst_1      
    76: ireturn       
    77: iinc          
    80: goto          31
    83: aload_1       
    84: iconst_1      
    85: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    88: iconst_0      
    89: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e1bc5ac slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction v5|DWORD = SUB (x: v4|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v5|DWORD) trueDestinationProbability: 9.93051617825813E-7 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B83" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B83 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [v2|DWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B48" "B75" 
    successors "B78" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612642046083831603
    begin_IR
      LIR
      nr   66  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v5|DWORD) trueDestinationProbability: 8.983968413646328E-4 condition: > trueDestination: B4 -> B78 falseDestination: B4 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B61" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612637141171924796
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v8|DWORD = MOV input: [v7|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  122  <|@ instruction v9|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction v11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  126  <|@ instruction v10|QWORD = UNCOMPRESSPOINTER (input: v8|DWORD, ~baseRegister: v11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  128  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr  130  <|@ instruction v13|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v10|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}] keyTargets: [B5 -> B6, B5 -> B61] defaultTarget: B5 -> B81 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction v14|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v14|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B60 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction v15|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v16|DWORD = MOV input: [v15|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  168  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B58 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" "B14" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction v17|DWORD = MOVSXB input: [v6|DWORD + v14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  216  <|@ instruction v18|DWORD = MOVZXB value: v17|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction v20|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  220  <|@ instruction v19|QWORD = UNCOMPRESSPOINTER (input: v16|DWORD, ~baseRegister: v20|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  222  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v19|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B9 -> B10, B9 -> B11, B9 -> B14] defaultTarget: B9 -> B57 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609027637273029927
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction v21|DWORD = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  242  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction v22|DWORD = SETCC condition: = <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B10 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction v23|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v23|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction v24|QWORD = MOVZXB value: v17|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction v25|DWORD = MOVZXB input: [v24|QWORD + v23|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B12 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" "B20" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602373890597978734
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction v26|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  316  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v27|DWORD = MOV input: [v26|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  318  <|@ instruction v29|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  320  <|@ instruction v28|QWORD = UNCOMPRESSPOINTER (input: v27|DWORD, ~baseRegister: v29|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  322  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v28|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B14 -> B15, B14 -> B20] defaultTarget: B14 -> B56 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v26|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v26|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B19 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B26" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870269280122293
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction v30|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v31|DWORD = MOV input: [v30|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  394  <|@ instruction v33|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  396  <|@ instruction v32|QWORD = UNCOMPRESSPOINTER (input: v31|DWORD, ~baseRegister: v33|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  398  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v32|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B20 -> B21, B20 -> B26] defaultTarget: B20 -> B55 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v30|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v30|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" "B32" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366647962319916
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction v34|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v35|DWORD = MOV input: [v34|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  470  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  472  <|@ instruction v36|QWORD = UNCOMPRESSPOINTER (input: v35|DWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  474  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v36|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B26 -> B27, B26 -> B32] defaultTarget: B26 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v34|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v34|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B31 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B38" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863026644571602
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction v38|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  544  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v39|DWORD = MOV input: [v38|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  546  <|@ instruction v41|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  548  <|@ instruction v40|QWORD = UNCOMPRESSPOINTER (input: v39|DWORD, ~baseRegister: v41|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  550  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v40|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B32 -> B33, B32 -> B38] defaultTarget: B32 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v38|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v38|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084642
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, int[0|0x0]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors "B63" "B66" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4590333408894431376
    begin_IR
      LIR
      nr  596  <|@ instruction [v71|DWORD, v72|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9999997723712406 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590333407604006618
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction v73|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  656  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction NULLCHECK address: [v73|DWORD[_] * 8] state [bci:9, 44] <|@ <|@
      nr  658  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr  660  <|@ instruction rsi|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rdx|DWORD = MOVE input: v71|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stack: v74|QWORD[.] 
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<CharSequence.charAt(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:21, 44] <|@ <|@
      nr  666  <|@ instruction v75|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction rsi|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction rdx|DWORD = MOVE input: v75|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:26, 44] <|@ <|@
      nr  674  <|@ instruction v76|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction TESTBRANCH (x: v76|DWORD, y: v76|DWORD) trueDestinationProbability: 0.5908646161430428 condition: = trueDestination: B63 -> B65 falseDestination: B63 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584799587332037117
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction v77|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr  692  <|@ instruction v78|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [v78|DWORD, v77|DWORD] destination: B64 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621235127
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9999996147864973 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621458430
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" "B69" 
    successors "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [v71|DWORD, v72|DWORD] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B73" 
    successors "B75" "B72" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4588886804909642497
    begin_IR
      LIR
      nr  738  <|@ instruction [v79|DWORD, v80|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction CMPBRANCH (x: v80|DWORD, y: [v7|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.2596988928056022 condition: < trueDestination: B71 -> B75 falseDestination: B71 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4586620676558964615
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction v81|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  800  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v12|QWORD[.] v1|QWORD[.] v79|DWORD v3|QWORD[.] v80|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v82|DWORD = MOV input: [v81|DWORD[_] * 8 + 8] size: DWORD state [bci:54, 44] <|@ <|@
      nr  802  <|@ instruction v84|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  804  <|@ instruction v83|QWORD = UNCOMPRESSPOINTER (input: v82|DWORD, ~baseRegister: v84|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  806  <|@ instruction v85|QWORD = MOV input: [v83|QWORD + 496] size: QWORD <|@ <|@
      nr  808  <|@ instruction v86|QWORD = MOV input: [v85|QWORD + 64] size: QWORD <|@ <|@
      nr  810  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v81|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr  812  <|@ instruction rsi|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction rcx|DWORD = MOVE input: v79|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rbx|QWORD = MOVE input: v85|QWORD moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction rax|QWORD = MOVE input: v86|QWORD moveKind: QWORD <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v12|QWORD[.] v1|QWORD[.] v79|DWORD v3|QWORD[.] v80|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70, 44] <|@ <|@
      nr  826  <|@ instruction v88|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: v88|DWORD, y: v88|DWORD) trueDestinationProbability: 0.31374907693960497 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B71" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4579260716611284855
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction v89|DWORD = DEC value: v80|DWORD size: DWORD <|@ <|@
      nr  844  <|@ instruction v90|DWORD = DEC value: v79|DWORD size: DWORD <|@ <|@
      nr  846  <|@ instruction JUMP ~outgoingValues: [v90|DWORD, v89|DWORD] destination: B73 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B44" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359405326877352
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction v42|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  882  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v43|DWORD = MOV input: [v42|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  884  <|@ instruction v45|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  886  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  888  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v44|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B38 -> B39, B38 -> B44] defaultTarget: B38 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v42|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v42|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580189478109779700
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
locals: - - - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction SAFEPOINT temp: v91|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:87, 44] <|@ <|@
      nr  938  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B75 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction v46|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1010  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction NULLCHECK address: [v46|DWORD[_] * 8] state [bci:31] <|@ <|@
      nr 1012  <|@ instruction v47|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction v48|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1016  <|@ instruction v49|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1018  <|@ instruction v50|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1020  <|@ instruction v51|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction v52|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1024  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1026  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1028  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1030  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1032  <|@ instruction v57|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1038  <|@ instruction rsi|QWORD[.] = MOVE input: v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1040  <|@ instruction rdx|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v59|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v58|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v57|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v56|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v55|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v54|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
      nr 1044  <|@ instruction v60|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1046  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B19" "B31" "B43" "B46" "B37" "B25" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr 1058  <|@ instruction [v61|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction TESTBRANCH (x: v61|DWORD, y: v61|DWORD) trueDestinationProbability: 0.5929707392225225 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609023662074253018
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v61|DWORD 
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction SAFEPOINT temp: v62|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:24, 44] <|@ <|@
      nr 1084  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B48 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction v63|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1136  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v61|DWORD 
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v64|DWORD = MOV input: [v63|DWORD[_] * 8 + 8] size: DWORD state [bci:24, 44] <|@ <|@
      nr 1138  <|@ instruction v66|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1140  <|@ instruction v65|QWORD = UNCOMPRESSPOINTER (input: v64|DWORD, ~baseRegister: v66|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1142  <|@ instruction v67|QWORD = MOV input: [v65|QWORD + 496] size: QWORD <|@ <|@
      nr 1144  <|@ instruction v68|QWORD = MOV input: [v67|QWORD + 64] size: QWORD <|@ <|@
      nr 1146  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1148  <|@ instruction rsi|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1150  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1152  <|@ instruction rcx|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr 1154  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction rbx|QWORD = MOVE input: v67|QWORD moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction rax|QWORD = MOVE input: v68|QWORD moveKind: QWORD <|@ <|@
      nr 1160  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36, 44] <|@ <|@
      nr 1162  <|@ instruction v70|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B51" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction v92|DWORD[_] = MOV input: [v1|QWORD[.] + 56] size: DWORD <|@ <|@
      nr 1200  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v1|QWORD[.] v6|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v92|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B77 -> B79 falseDestination: B77 -> B80 y: 2 size: DWORD inlinedY: null state [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction MOV (x: [v1|QWORD[.] + 28], y: v6|DWORD) size: DWORD <|@ <|@
      nr 1230  <|@ instruction MOV (x: [v92|DWORD[_] * 8 + 16], y: v6|DWORD) size: DWORD <|@ <|@
      nr 1232  <|@ instruction v93|DWORD = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV (x: [v92|DWORD[_] * 8 + 20], y: v93|DWORD) size: DWORD <|@ <|@
      nr 1236  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1238  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4584523385039648594
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4567169052318882655
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1272  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1274  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4517296380301017088
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1298  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997662585697696
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997194285186786
    begin_IR
      LIR
      nr 1312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1324  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction JUMP ~outgoingValues: [int[-192531|0xfffffffffffd0fed], long[9620|0x2594]] destination: B24 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [int[-187411|0xfffffffffffd23ed], long[660|0x294]] destination: B59 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -200723 size: DWORD <|@ <|@
      nr 1364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1366  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:39, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction JUMP ~outgoingValues: [int[-38195|0xffffffffffff6acd], long[8980|0x2314]] destination: B56 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction JUMP ~outgoingValues: [int[-197651|0xfffffffffffcfbed], long[9620|0x2594]] destination: B40 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction JUMP ~outgoingValues: [int[-97820|0xfffffffffffe81e4], long[0|0x0]] destination: B60 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction MOV x: [r15|QWORD + 1156] y: -199699 size: DWORD <|@ <|@
      nr 1416  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1418  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v59|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v58|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v57|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v56|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v55|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v54|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction JUMP ~outgoingValues: [int[-196627|0xfffffffffffcffed], long[9620|0x2594]] destination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction JUMP ~outgoingValues: [int[-52787|0xffffffffffff31cd], long[8980|0x2314]] destination: B53 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction JUMP ~outgoingValues: [int[-33331|0xffffffffffff7dcd], long[7700|0x1e14]] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction JUMP ~outgoingValues: [int[-194579|0xfffffffffffd07ed], long[9620|0x2594]] destination: B30 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction JUMP ~outgoingValues: [int[-47923|0xffffffffffff44cd], long[8980|0x2314]] destination: B54 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction JUMP ~outgoingValues: [int[-188435|0xfffffffffffd1fed], long[2580|0xa14]] destination: B58 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction JUMP ~outgoingValues: [int[-43059|0xffffffffffff57cd], long[8980|0x2314]] destination: B55 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [int[-191507|0xfffffffffffd13ed], long[9620|0x2594]] destination: B22 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction JUMP ~outgoingValues: [int[-198675|0xfffffffffffcf7ed], long[9620|0x2594]] destination: B42 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction JUMP ~outgoingValues: [int[-189459|0xfffffffffffd1bed], long[9620|0x2594]] destination: B16 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction MOV x: [r15|QWORD + 1156] y: -147483 size: DWORD <|@ <|@
      nr 1538  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1540  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v1|QWORD[.] v6|DWORD - - 
>@ <|@ instruction DEOPT info [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction JUMP ~outgoingValues: [int[-18483|0xffffffffffffb7cd], long[20|0x14]] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [int[-193555|0xfffffffffffd0bed], long[9620|0x2594]] destination: B28 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction JUMP ~outgoingValues: [int[-57651|0xffffffffffff1ecd], long[8980|0x2314]] destination: B52 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction MOV x: [r15|QWORD + 1156] y: -94515 size: DWORD <|@ <|@
      nr 1590  <|@ instruction MOV x: [r15|QWORD + 1168] y: 12952 size: QWORD <|@ <|@
      nr 1592  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction JUMP ~outgoingValues: [int[-195603|0xfffffffffffd03ed], long[9620|0x2594]] destination: B34 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction JUMP ~outgoingValues: [int[-190483|0xfffffffffffd17ed], long[9620|0x2594]] destination: B18 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction JUMP ~outgoingValues: [int[-103707|0xfffffffffffe6ae5], long[0|0x0]] destination: B13 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B60" "B59" "B58" "B57" "B16" "B13" "B56" "B18" "B22" "B55" "B24" "B28" "B54" "B30" "B34" "B53" "B36" "B40" "B52" "B42" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1624  <|@ instruction [v94|DWORD, v95|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v94|DWORD) size: DWORD <|@ <|@
      nr 1642  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v95|QWORD) size: QWORD <|@ <|@
      nr 1644  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #6          // java.util.regex.Matcher.to:int
     5: aload_0       
     6: getfield      #5          // minLength:int
     9: isub          
    10: if_icmple     20
    13: aload_1       
    14: iconst_1      
    15: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    18: iconst_0      
    19: ireturn       
    20: aload_1       
    21: getfield      #6          // java.util.regex.Matcher.to:int
    24: aload_0       
    25: getfield      #5          // minLength:int
    28: isub          
    29: istore        4
    31: iload_2       
    32: iload         4
    34: if_icmpgt     83
    37: aload_0       
    38: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    41: aload_1       
    42: iload_2       
    43: aload_3       
    44: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    47: ifeq          77
    50: aload_1       
    51: iload_2       
    52: putfield      #9          // java.util.regex.Matcher.first:int
    55: aload_1       
    56: getfield      #10         // java.util.regex.Matcher.groups:int[]
    59: iconst_0      
    60: aload_1       
    61: getfield      #9          // java.util.regex.Matcher.first:int
    64: iastore       
    65: aload_1       
    66: getfield      #10         // java.util.regex.Matcher.groups:int[]
    69: iconst_1      
    70: aload_1       
    71: getfield      #11         // java.util.regex.Matcher.last:int
    74: iastore       
    75: iconst_1      
    76: ireturn       
    77: iinc          
    80: goto          31
    83: aload_1       
    84: iconst_1      
    85: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    88: iconst_0      
    89: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e1bc5ac slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction v5|DWORD = SUB (x: v4|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v5|DWORD) trueDestinationProbability: 9.93051617825813E-7 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B83" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B83 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [v2|DWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B48" "B75" 
    successors "B78" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612642046083831603
    begin_IR
      LIR
      nr   66  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v5|DWORD) trueDestinationProbability: 8.983968413646328E-4 condition: > trueDestination: B4 -> B78 falseDestination: B4 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B61" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612637141171924796
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v8|DWORD = MOV input: [v7|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  122  <|@ instruction v9|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction v11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  126  <|@ instruction v10|QWORD = UNCOMPRESSPOINTER (input: v8|DWORD, ~baseRegister: v11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  128  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr  130  <|@ instruction v13|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v10|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}] keyTargets: [B5 -> B6, B5 -> B61] defaultTarget: B5 -> B81 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction v14|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v14|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B60 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction v15|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v16|DWORD = MOV input: [v15|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  168  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B58 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" "B14" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction v17|DWORD = MOVSXB input: [v6|DWORD + v14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  216  <|@ instruction v18|DWORD = MOVZXB value: v17|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction v20|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  220  <|@ instruction v19|QWORD = UNCOMPRESSPOINTER (input: v16|DWORD, ~baseRegister: v20|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  222  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v19|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B9 -> B10, B9 -> B11, B9 -> B14] defaultTarget: B9 -> B57 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609027637273029927
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction v21|DWORD = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  242  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction v22|DWORD = SETCC condition: = <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B10 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction v23|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v23|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction v24|QWORD = MOVZXB value: v17|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction v25|DWORD = MOVZXB input: [v24|QWORD + v23|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B12 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" "B20" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602373890597978734
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction v26|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  316  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v27|DWORD = MOV input: [v26|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  318  <|@ instruction v29|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  320  <|@ instruction v28|QWORD = UNCOMPRESSPOINTER (input: v27|DWORD, ~baseRegister: v29|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  322  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v28|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B14 -> B15, B14 -> B20] defaultTarget: B14 -> B56 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v26|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v26|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B19 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B26" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870269280122293
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction v30|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v31|DWORD = MOV input: [v30|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  394  <|@ instruction v33|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  396  <|@ instruction v32|QWORD = UNCOMPRESSPOINTER (input: v31|DWORD, ~baseRegister: v33|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  398  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v32|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B20 -> B21, B20 -> B26] defaultTarget: B20 -> B55 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v30|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v30|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" "B32" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366647962319916
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction v34|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v35|DWORD = MOV input: [v34|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  470  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  472  <|@ instruction v36|QWORD = UNCOMPRESSPOINTER (input: v35|DWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  474  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v36|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B26 -> B27, B26 -> B32] defaultTarget: B26 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v34|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v34|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B31 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B38" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863026644571602
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction v38|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  544  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v39|DWORD = MOV input: [v38|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  546  <|@ instruction v41|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  548  <|@ instruction v40|QWORD = UNCOMPRESSPOINTER (input: v39|DWORD, ~baseRegister: v41|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  550  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v40|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B32 -> B33, B32 -> B38] defaultTarget: B32 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v38|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v38|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084642
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, int[0|0x0]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors "B63" "B66" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4590333408894431376
    begin_IR
      LIR
      nr  596  <|@ instruction [v71|DWORD, v72|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9999997723712406 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590333407604006618
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction v73|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  656  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction NULLCHECK address: [v73|DWORD[_] * 8] state [bci:9, 44] <|@ <|@
      nr  658  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr  660  <|@ instruction rsi|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rdx|DWORD = MOVE input: v71|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stack: v74|QWORD[.] 
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<CharSequence.charAt(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:21, 44] <|@ <|@
      nr  666  <|@ instruction v75|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction rsi|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction rdx|DWORD = MOVE input: v75|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:26, 44] <|@ <|@
      nr  674  <|@ instruction v76|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction TESTBRANCH (x: v76|DWORD, y: v76|DWORD) trueDestinationProbability: 0.5908646161430428 condition: = trueDestination: B63 -> B65 falseDestination: B63 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584799587332037117
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction v77|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr  692  <|@ instruction v78|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [v78|DWORD, v77|DWORD] destination: B64 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621235127
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9999996147864973 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621458430
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" "B69" 
    successors "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [v71|DWORD, v72|DWORD] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B73" 
    successors "B75" "B72" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4588886804909642497
    begin_IR
      LIR
      nr  738  <|@ instruction [v79|DWORD, v80|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction CMPBRANCH (x: v80|DWORD, y: [v7|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.2596988928056022 condition: < trueDestination: B71 -> B75 falseDestination: B71 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4586620676558964615
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction v81|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  800  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v12|QWORD[.] v1|QWORD[.] v79|DWORD v3|QWORD[.] v80|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v82|DWORD = MOV input: [v81|DWORD[_] * 8 + 8] size: DWORD state [bci:54, 44] <|@ <|@
      nr  802  <|@ instruction v84|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  804  <|@ instruction v83|QWORD = UNCOMPRESSPOINTER (input: v82|DWORD, ~baseRegister: v84|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  806  <|@ instruction v85|QWORD = MOV input: [v83|QWORD + 496] size: QWORD <|@ <|@
      nr  808  <|@ instruction v86|QWORD = MOV input: [v85|QWORD + 64] size: QWORD <|@ <|@
      nr  810  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v81|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr  812  <|@ instruction rsi|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction rcx|DWORD = MOVE input: v79|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rbx|QWORD = MOVE input: v85|QWORD moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction rax|QWORD = MOVE input: v86|QWORD moveKind: QWORD <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v12|QWORD[.] v1|QWORD[.] v79|DWORD v3|QWORD[.] v80|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70, 44] <|@ <|@
      nr  826  <|@ instruction v88|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: v88|DWORD, y: v88|DWORD) trueDestinationProbability: 0.31374907693960497 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B71" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4579260716611284855
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction v89|DWORD = DEC value: v80|DWORD size: DWORD <|@ <|@
      nr  844  <|@ instruction v90|DWORD = DEC value: v79|DWORD size: DWORD <|@ <|@
      nr  846  <|@ instruction JUMP ~outgoingValues: [v90|DWORD, v89|DWORD] destination: B73 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B44" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359405326877352
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction v42|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  882  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v43|DWORD = MOV input: [v42|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  884  <|@ instruction v45|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  886  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  888  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v44|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B38 -> B39, B38 -> B44] defaultTarget: B38 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v42|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v42|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580189478109779700
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
locals: - - - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction SAFEPOINT temp: v91|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:87, 44] <|@ <|@
      nr  938  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B75 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction v46|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1010  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction NULLCHECK address: [v46|DWORD[_] * 8] state [bci:31] <|@ <|@
      nr 1012  <|@ instruction v47|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction v48|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1016  <|@ instruction v49|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1018  <|@ instruction v50|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1020  <|@ instruction v51|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction v52|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1024  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1026  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1028  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1030  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1032  <|@ instruction v57|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1038  <|@ instruction rsi|QWORD[.] = MOVE input: v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1040  <|@ instruction rdx|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v59|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v58|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v57|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v56|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v55|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v54|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
      nr 1044  <|@ instruction v60|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1046  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B19" "B31" "B43" "B46" "B37" "B25" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr 1058  <|@ instruction [v61|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction TESTBRANCH (x: v61|DWORD, y: v61|DWORD) trueDestinationProbability: 0.5929707392225225 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609023662074253018
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v61|DWORD 
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction SAFEPOINT temp: v62|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:24, 44] <|@ <|@
      nr 1084  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B48 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction v63|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1136  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v61|DWORD 
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v64|DWORD = MOV input: [v63|DWORD[_] * 8 + 8] size: DWORD state [bci:24, 44] <|@ <|@
      nr 1138  <|@ instruction v66|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1140  <|@ instruction v65|QWORD = UNCOMPRESSPOINTER (input: v64|DWORD, ~baseRegister: v66|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1142  <|@ instruction v67|QWORD = MOV input: [v65|QWORD + 496] size: QWORD <|@ <|@
      nr 1144  <|@ instruction v68|QWORD = MOV input: [v67|QWORD + 64] size: QWORD <|@ <|@
      nr 1146  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1148  <|@ instruction rsi|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1150  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1152  <|@ instruction rcx|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr 1154  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction rbx|QWORD = MOVE input: v67|QWORD moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction rax|QWORD = MOVE input: v68|QWORD moveKind: QWORD <|@ <|@
      nr 1160  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36, 44] <|@ <|@
      nr 1162  <|@ instruction v70|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B51" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction v92|DWORD[_] = MOV input: [v1|QWORD[.] + 56] size: DWORD <|@ <|@
      nr 1200  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v1|QWORD[.] v6|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v92|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B77 -> B79 falseDestination: B77 -> B80 y: 2 size: DWORD inlinedY: null state [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction MOV (x: [v1|QWORD[.] + 28], y: v6|DWORD) size: DWORD <|@ <|@
      nr 1230  <|@ instruction MOV (x: [v92|DWORD[_] * 8 + 16], y: v6|DWORD) size: DWORD <|@ <|@
      nr 1232  <|@ instruction v93|DWORD = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV (x: [v92|DWORD[_] * 8 + 20], y: v93|DWORD) size: DWORD <|@ <|@
      nr 1236  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1238  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4584523385039648594
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4567169052318882655
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1272  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1274  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4517296380301017088
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1298  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997662585697696
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997194285186786
    begin_IR
      LIR
      nr 1312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1324  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction JUMP ~outgoingValues: [int[-192531|0xfffffffffffd0fed], long[9620|0x2594]] destination: B24 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [int[-187411|0xfffffffffffd23ed], long[660|0x294]] destination: B59 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -200723 size: DWORD <|@ <|@
      nr 1364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1366  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:39, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction JUMP ~outgoingValues: [int[-38195|0xffffffffffff6acd], long[8980|0x2314]] destination: B56 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction JUMP ~outgoingValues: [int[-197651|0xfffffffffffcfbed], long[9620|0x2594]] destination: B40 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction JUMP ~outgoingValues: [int[-97820|0xfffffffffffe81e4], long[0|0x0]] destination: B60 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction MOV x: [r15|QWORD + 1156] y: -199699 size: DWORD <|@ <|@
      nr 1416  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1418  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v59|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v58|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v57|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v56|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v55|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v54|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction JUMP ~outgoingValues: [int[-196627|0xfffffffffffcffed], long[9620|0x2594]] destination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction JUMP ~outgoingValues: [int[-52787|0xffffffffffff31cd], long[8980|0x2314]] destination: B53 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction JUMP ~outgoingValues: [int[-33331|0xffffffffffff7dcd], long[7700|0x1e14]] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction JUMP ~outgoingValues: [int[-194579|0xfffffffffffd07ed], long[9620|0x2594]] destination: B30 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction JUMP ~outgoingValues: [int[-47923|0xffffffffffff44cd], long[8980|0x2314]] destination: B54 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction JUMP ~outgoingValues: [int[-188435|0xfffffffffffd1fed], long[2580|0xa14]] destination: B58 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction JUMP ~outgoingValues: [int[-43059|0xffffffffffff57cd], long[8980|0x2314]] destination: B55 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [int[-191507|0xfffffffffffd13ed], long[9620|0x2594]] destination: B22 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction JUMP ~outgoingValues: [int[-198675|0xfffffffffffcf7ed], long[9620|0x2594]] destination: B42 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction JUMP ~outgoingValues: [int[-189459|0xfffffffffffd1bed], long[9620|0x2594]] destination: B16 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction MOV x: [r15|QWORD + 1156] y: -147483 size: DWORD <|@ <|@
      nr 1538  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1540  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v1|QWORD[.] v6|DWORD - - 
>@ <|@ instruction DEOPT info [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction JUMP ~outgoingValues: [int[-18483|0xffffffffffffb7cd], long[20|0x14]] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [int[-193555|0xfffffffffffd0bed], long[9620|0x2594]] destination: B28 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction JUMP ~outgoingValues: [int[-57651|0xffffffffffff1ecd], long[8980|0x2314]] destination: B52 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction MOV x: [r15|QWORD + 1156] y: -94515 size: DWORD <|@ <|@
      nr 1590  <|@ instruction MOV x: [r15|QWORD + 1168] y: 12952 size: QWORD <|@ <|@
      nr 1592  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction JUMP ~outgoingValues: [int[-195603|0xfffffffffffd03ed], long[9620|0x2594]] destination: B34 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction JUMP ~outgoingValues: [int[-190483|0xfffffffffffd17ed], long[9620|0x2594]] destination: B18 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction JUMP ~outgoingValues: [int[-103707|0xfffffffffffe6ae5], long[0|0x0]] destination: B13 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B60" "B59" "B58" "B57" "B16" "B13" "B56" "B18" "B22" "B55" "B24" "B28" "B54" "B30" "B34" "B53" "B36" "B40" "B52" "B42" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1624  <|@ instruction [v94|DWORD, v95|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v94|DWORD) size: DWORD <|@ <|@
      nr 1642  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v95|QWORD) size: QWORD <|@ <|@
      nr 1644  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #6          // java.util.regex.Matcher.to:int
     5: aload_0       
     6: getfield      #5          // minLength:int
     9: isub          
    10: if_icmple     20
    13: aload_1       
    14: iconst_1      
    15: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    18: iconst_0      
    19: ireturn       
    20: aload_1       
    21: getfield      #6          // java.util.regex.Matcher.to:int
    24: aload_0       
    25: getfield      #5          // minLength:int
    28: isub          
    29: istore        4
    31: iload_2       
    32: iload         4
    34: if_icmpgt     83
    37: aload_0       
    38: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    41: aload_1       
    42: iload_2       
    43: aload_3       
    44: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    47: ifeq          77
    50: aload_1       
    51: iload_2       
    52: putfield      #9          // java.util.regex.Matcher.first:int
    55: aload_1       
    56: getfield      #10         // java.util.regex.Matcher.groups:int[]
    59: iconst_0      
    60: aload_1       
    61: getfield      #9          // java.util.regex.Matcher.first:int
    64: iastore       
    65: aload_1       
    66: getfield      #10         // java.util.regex.Matcher.groups:int[]
    69: iconst_1      
    70: aload_1       
    71: getfield      #11         // java.util.regex.Matcher.last:int
    74: iastore       
    75: iconst_1      
    76: ireturn       
    77: iinc          
    80: goto          31
    83: aload_1       
    84: iconst_1      
    85: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    88: iconst_0      
    89: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v86|q [0, 1[[664, 666[[672, 674[[822, 826[[1042, 1044[[1158, 1162[[1236, 1238[[1272, 1274[[1298, 1300[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v79|d [0, 34[[664, 665[[672, 673[[816, 825[[1042, 1043[[1152, 1161[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v71|d [0, 32[[662, 665[[670, 673[[814, 825[[1040, 1043[[1150, 1161[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v85|q [0, 1[[664, 665[[672, 673[[820, 825[[1042, 1043[[1156, 1161[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 26[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v3|q [0, 30[[660, 665[[668, 673[[812, 825[[1038, 1043[[1148, 1161[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v3|q [0, 36[[664, 665[[672, 673[[818, 825[[1042, 1043[[1154, 1161[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [30, 1166[[1302, 1367[[1368, 1419[[1420, 1520[[1542, 1593[[1594, 1645[30 MustHaveRegister 40 MustHaveRegister 118 MustHaveRegister 939 LiveAtLoopEnd 1085 LiveAtLoopEnd  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [32, 1232[[1240, 1270[[1276, 1296[[1302, 1367[[1368, 1419[[1420, 1541[[1542, 1593[[1594, 1645[32 MustHaveRegister 38 MustHaveRegister 122 MustHaveRegister 814 ShouldHaveRegister 847 LiveAtLoopEnd 939 LiveAtLoopEnd 1085 LiveAtLoopEnd 1150 ShouldHaveRegister 1198 MustHaveRegister 1228 MustHaveRegister 1232 MustHaveRegister 1270 MustHaveRegister 1296 MustHaveRegister 1322 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|- [34, 65[[1572, 1593[34 MustHaveRegister 42 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q r8|- [36, 1166[[1302, 1367[[1368, 1419[[1420, 1520[[1542, 1593[[1594, 1645[36 MustHaveRegister 54 MustHaveRegister 146 MustHaveRegister 180 MustHaveRegister 660 ShouldHaveRegister 695 LiveAtLoopEnd 818 ShouldHaveRegister 847 LiveAtLoopEnd 939 LiveAtLoopEnd 1085 LiveAtLoopEnd 1154 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [38, 40[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d v4|d [40, 1166[[1302, 1367[[1368, 1419[[1420, 1520[[1542, 1572[[1594, 1645[40 MustHaveRegister 42 ShouldHaveRegister 76 ShouldHaveRegister 939 LiveAtLoopEnd 1085 LiveAtLoopEnd  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d v13|d [66, 937[[940, 1083[[1086, 1230[[1240, 1250[[1302, 1367[[1368, 1419[[1420, 1541[[1542, 1572[[1594, 1645[76 MustHaveRegister 130 ShouldHaveRegister 148 MustHaveRegister 168 ShouldHaveRegister 214 MustHaveRegister 594 ShouldHaveRegister 1228 MustHaveRegister 1230 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [118, 924[[940, 1070[[1086, 1134[[1302, 1326[118 MustHaveRegister 120 MustHaveRegister 128 MustHaveRegister 164 MustHaveRegister 654 MustHaveRegister 695 LiveAtLoopEnd 748 MustHaveRegister 798 MustHaveRegister 847 LiveAtLoopEnd 1134 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [120, 126[120 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [122, 168[[586, 716[[1302, 1312[122 MustHaveRegister 168 MustHaveRegister 606 MustHaveRegister 695 LiveAtLoopEnd 716 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q v8|d [126, 133[126 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q -1 [124, 127[124 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q v7|d [128, 924[[940, 1083[[1086, 1137[[1302, 1326[[1398, 1419[128 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d v6|d [130, 939[[940, 1085[[1086, 1152[[1302, 1326[130 MustHaveRegister 938 ShouldHaveRegister 1084 ShouldHaveRegister 1152 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [146, 214[146 MustHaveRegister 148 MustHaveRegister 214 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d -1 [164, 240[[248, 260[[282, 324[[358, 400[[434, 476[[510, 552[[848, 890[[940, 1022[164 MustHaveRegister 166 MustHaveRegister 240 MustHaveRegister 260 MustHaveRegister 314 MustHaveRegister 1022 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d -1 [166, 220[166 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d -1 [214, 224[[248, 276[214 MustHaveRegister 216 ShouldHaveRegister 276 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d -1 [216, 242[[248, 262[[282, 346[[358, 422[[434, 498[[510, 574[[848, 912[[940, 1048[[1398, 1419[216 MustHaveRegister 242 ShouldHaveRegister 262 MustHaveRegister 334 MustHaveRegister 346 MustHaveRegister 410 MustHaveRegister 422 MustHaveRegister 486 MustHaveRegister 498 MustHaveRegister 562 MustHaveRegister 574 MustHaveRegister 900 MustHaveRegister 912 MustHaveRegister 1040 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q v16|d [220, 223[220 MustHaveRegister 222 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q -1 [218, 221[218 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d -1 [240, 242[240 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d v61|d [244, 247[244 MustHaveRegister 246 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d -1 [260, 278[260 MustHaveRegister 262 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q -1 [276, 278[276 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d -1 [278, 281[278 MustHaveRegister 280 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d -1 [314, 346[[358, 400[[434, 476[[510, 552[[848, 890[[940, 1020[314 MustHaveRegister 316 MustHaveRegister 334 MustHaveRegister 346 MustHaveRegister 390 MustHaveRegister 1020 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d -1 [316, 320[316 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q v27|d [320, 323[320 MustHaveRegister 322 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q -1 [318, 321[318 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d -1 [390, 422[[434, 476[[510, 552[[848, 890[[940, 1018[390 MustHaveRegister 392 MustHaveRegister 410 MustHaveRegister 422 MustHaveRegister 466 MustHaveRegister 1018 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d -1 [392, 396[392 MustHaveRegister 396 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q v31|d [396, 399[396 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q -1 [394, 397[394 MustHaveRegister 396 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d -1 [466, 498[[510, 552[[848, 890[[940, 1016[466 MustHaveRegister 468 MustHaveRegister 486 MustHaveRegister 498 MustHaveRegister 542 MustHaveRegister 1016 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[v35|d]" v35|d -1 [468, 472[468 MustHaveRegister 472 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q v35|d [472, 475[472 MustHaveRegister 474 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q -1 [470, 473[470 MustHaveRegister 472 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[v38|d]" v38|d -1 [542, 574[[848, 890[[940, 1014[542 MustHaveRegister 544 MustHaveRegister 562 MustHaveRegister 574 MustHaveRegister 880 MustHaveRegister 1014 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d -1 [544, 548[544 MustHaveRegister 548 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q v39|d [548, 551[548 MustHaveRegister 550 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q -1 [546, 549[546 MustHaveRegister 548 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d -1 [880, 912[[940, 1012[880 MustHaveRegister 882 MustHaveRegister 900 MustHaveRegister 912 MustHaveRegister 1008 MustHaveRegister 1012 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[v43|d]" v43|d -1 [882, 886[882 MustHaveRegister 886 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q v43|d [886, 889[886 MustHaveRegister 888 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q -1 [884, 887[884 MustHaveRegister 886 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[v46|d]" v46|d -1 [1008, 1024[1008 MustHaveRegister 1010 MustHaveRegister 1024 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[v47|d]" v47|d -1 [1012, 1036[1012 MustHaveRegister 1036 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[v48|d]" v48|d -1 [1014, 1034[1014 MustHaveRegister 1034 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[v49|d]" v49|d -1 [1016, 1032[1016 MustHaveRegister 1032 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[v50|d]" v50|d -1 [1018, 1030[1018 MustHaveRegister 1030 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[v51|d]" v51|d -1 [1020, 1028[1020 MustHaveRegister 1028 MustHaveRegister  "NoSpillStore"
  v52|d DWORD "[v52|d]" v52|d -1 [1022, 1026[1022 MustHaveRegister 1026 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q v46|d [1024, 1038[1024 MustHaveRegister 1038 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q v52|d [1026, 1048[[1398, 1419[1026 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q v51|d [1028, 1048[[1398, 1419[1028 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[v56|q]" v56|q v50|d [1030, 1048[[1398, 1419[1030 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q v49|d [1032, 1048[[1398, 1419[1032 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[v58|q]" v58|q v48|d [1034, 1048[[1398, 1419[1034 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q v47|d [1036, 1048[[1398, 1419[1036 MustHaveRegister  "NoSpillStore"
  v60|d DWORD "[v60|d]" v60|d rax|d [1044, 1046[1044 MustHaveRegister 1046 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[v61|d]" v61|d v22|d [1058, 1083[[1086, 1137[1068 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[v62|q]" v62|q -1 [1082, 1083[1082 MustHaveRegister  "NoDefinitionFound"
  v63|d DWORD "[v63|d]" v63|d -1 [1134, 1146[1134 MustHaveRegister 1136 MustHaveRegister 1146 MustHaveRegister  "NoSpillStore"
  v64|d DWORD "[v64|d]" v64|d -1 [1136, 1140[1136 MustHaveRegister 1140 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[v65|q]" v65|q v64|d [1140, 1142[1140 MustHaveRegister 1142 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[v66|q]" v66|q -1 [1138, 1141[1138 MustHaveRegister 1140 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[v67|q]" v67|q -1 [1142, 1156[1142 MustHaveRegister 1144 MustHaveRegister 1156 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[v68|q]" v68|q -1 [1144, 1158[1144 MustHaveRegister 1158 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[v69|q]" v69|q v63|d [1146, 1148[1146 MustHaveRegister 1148 ShouldHaveRegister  "NoSpillStore"
  v70|d DWORD "[v70|d]" v70|d rax|d [1162, 1164[1162 MustHaveRegister 1164 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[v71|d]" v71|d v78|d [596, 692[[696, 737[[1302, 1326[606 ShouldHaveRegister 662 ShouldHaveRegister 692 ShouldHaveRegister 716 ShouldHaveRegister 736 ShouldHaveRegister  "NoSpillStore"
  v72|d DWORD "[v72|d]" v72|d v77|d [596, 690[[696, 737[[1302, 1326[690 ShouldHaveRegister 736 ShouldHaveRegister  "NoSpillStore"
  v73|d DWORD "[v73|d]" v73|d -1 [654, 658[654 MustHaveRegister 656 MustHaveRegister 658 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[v74|q]" v74|q v73|d [658, 668[658 MustHaveRegister 668 ShouldHaveRegister  "NoSpillStore"
  v75|d DWORD "[v75|d]" v75|d rax|d [666, 670[666 MustHaveRegister 670 ShouldHaveRegister  "NoSpillStore"
  v76|d DWORD "[v76|d]" v76|d rax|d [674, 676[674 MustHaveRegister 676 MustHaveRegister  "NoSpillStore"
  v77|d DWORD "[v77|d]" v77|d v72|d [690, 695[690 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v78|d DWORD "[v78|d]" v78|d v71|d [692, 695[692 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v79|d DWORD "[v79|d]" v79|d v71|d [738, 844[816 ShouldHaveRegister 844 ShouldHaveRegister  "NoSpillStore"
  v80|d DWORD "[v80|d]" v80|d v72|d [738, 842[748 MustHaveRegister 842 ShouldHaveRegister  "NoSpillStore"
  v81|d DWORD "[v81|d]" v81|d -1 [798, 810[798 MustHaveRegister 800 MustHaveRegister 810 MustHaveRegister  "NoSpillStore"
  v82|d DWORD "[v82|d]" v82|d -1 [800, 804[800 MustHaveRegister 804 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[v83|q]" v83|q v82|d [804, 806[804 MustHaveRegister 806 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[v84|q]" v84|q -1 [802, 805[802 MustHaveRegister 804 MustHaveRegister  "NoSpillStore"
  v85|q QWORD "[v85|q]" v85|q -1 [806, 820[806 MustHaveRegister 808 MustHaveRegister 820 ShouldHaveRegister  "NoSpillStore"
  v86|q QWORD "[v86|q]" v86|q -1 [808, 822[808 MustHaveRegister 822 ShouldHaveRegister  "NoSpillStore"
  v87|q QWORD "[v87|q]" v87|q v81|d [810, 812[810 MustHaveRegister 812 ShouldHaveRegister  "NoSpillStore"
  v88|d DWORD "[v88|d]" v88|d rax|d [826, 828[826 MustHaveRegister 828 MustHaveRegister  "NoSpillStore"
  v89|d DWORD "[v89|d]" v89|d v80|d [842, 847[842 MustHaveRegister 846 ShouldHaveRegister  "NoSpillStore"
  v90|d DWORD "[v90|d]" v90|d v79|d [844, 847[844 MustHaveRegister 846 ShouldHaveRegister  "NoSpillStore"
  v91|q QWORD "[v91|q]" v91|q -1 [936, 937[936 MustHaveRegister  "NoDefinitionFound"
  v92|d DWORD "[v92|d]" v92|d -1 [1198, 1234[1198 MustHaveRegister 1200 MustHaveRegister 1230 MustHaveRegister 1234 MustHaveRegister  "NoSpillStore"
  v93|d DWORD "[v93|d]" v93|d -1 [1232, 1234[1232 MustHaveRegister 1234 MustHaveRegister  "NoSpillStore"
  v94|d DWORD "[v94|d]" v94|d -1 [1624, 1640[1640 MustHaveRegister  "NoSpillStore"
  v95|q QWORD "[v95|q]" v95|q -1 [1624, 1642[1642 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v86|q [0, 1[[664, 666[[672, 674[[822, 826[[1042, 1044[[1158, 1162[[1236, 1238[[1272, 1274[[1298, 1300[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v79|d [0, 34[[664, 665[[672, 673[[816, 825[[1042, 1043[[1152, 1161[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v71|d [0, 32[[662, 665[[670, 673[[814, 825[[1040, 1043[[1150, 1161[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v85|q [0, 1[[664, 665[[672, 673[[820, 825[[1042, 1043[[1156, 1161[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 26[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v3|q [0, 30[[660, 665[[668, 673[[812, 825[[1038, 1043[[1148, 1161[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v3|q [0, 36[[664, 665[[672, 673[[818, 825[[1042, 1043[[1154, 1161[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [30, 596[30 MustHaveRegister 40 MustHaveRegister 118 MustHaveRegister  "SpillInDominator"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [32, 596[32 MustHaveRegister 38 MustHaveRegister 122 MustHaveRegister  "SpillInDominator"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [34, 65[[1572, 1593[34 MustHaveRegister 42 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[r8|q]" v3|q r8|- [36, 663[36 MustHaveRegister 54 MustHaveRegister 146 MustHaveRegister 180 MustHaveRegister 660 ShouldHaveRegister  "SpillInDominator"
  v4|d DWORD "[r10|d]" v4|d -1 [38, 40[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r10|d]" v5|d v4|d [40, 596[40 MustHaveRegister 42 ShouldHaveRegister 76 ShouldHaveRegister  "SpillInDominator"
  v6|d DWORD "[r11|d]" v6|d v13|d [66, 596[76 MustHaveRegister 130 ShouldHaveRegister 148 MustHaveRegister 168 ShouldHaveRegister 214 MustHaveRegister 594 ShouldHaveRegister  "SpillInDominator"
  v7|d DWORD "[r9|d]" v7|d -1 [118, 663[118 MustHaveRegister 120 MustHaveRegister 128 MustHaveRegister 164 MustHaveRegister 654 MustHaveRegister  "SpillInDominator"
  v8|d DWORD "[rcx|d]" v8|d -1 [120, 126[120 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rbx|d]" v9|d -1 [122, 168[[586, 608[122 MustHaveRegister 168 MustHaveRegister 606 MustHaveRegister  "SpillInDominator"
  v10|q QWORD "[rcx|q]" v10|q v8|d [126, 133[126 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rdi|q]" v11|q -1 [124, 127[124 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rdi|q]" v12|q v7|d [128, 596[128 MustHaveRegister  "SpillInDominator"
  v13|d DWORD "[rax|d]" v13|d v6|d [130, 596[130 MustHaveRegister  "SpillInDominator"
  v14|d DWORD "[rcx|d]" v14|d -1 [146, 214[146 MustHaveRegister 148 MustHaveRegister 214 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[rbp|d]" v15|d -1 [164, 240[[248, 260[[282, 324[164 MustHaveRegister 166 MustHaveRegister 240 MustHaveRegister 260 MustHaveRegister 314 MustHaveRegister  "OneSpillStore"
  v16|d DWORD "[r13|d]" v16|d -1 [166, 220[166 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rcx|d]" v17|d -1 [214, 224[[248, 276[214 MustHaveRegister 216 ShouldHaveRegister 276 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[rbx|d]" v18|d -1 [216, 242[[248, 262[[282, 346[[358, 422[[434, 498[[510, 574[[848, 912[[940, 1041[216 MustHaveRegister 242 ShouldHaveRegister 262 MustHaveRegister 334 MustHaveRegister 346 MustHaveRegister 410 MustHaveRegister 422 MustHaveRegister 486 MustHaveRegister 498 MustHaveRegister 562 MustHaveRegister 574 MustHaveRegister 900 MustHaveRegister 912 MustHaveRegister 1040 ShouldHaveRegister  "OneSpillStore"
  v19|q QWORD "[r13|q]" v19|q v16|d [220, 223[220 MustHaveRegister 222 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[r14|q]" v20|q -1 [218, 221[218 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rcx|d]" v21|d -1 [240, 242[240 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rcx|d]" v22|d v61|d [244, 247[244 MustHaveRegister 246 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rbp|d]" v23|d -1 [260, 278[260 MustHaveRegister 262 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[rcx|q]" v24|q -1 [276, 278[276 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rcx|d]" v25|d -1 [278, 281[278 MustHaveRegister 280 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rcx|d]" v26|d -1 [314, 346[[358, 400[314 MustHaveRegister 316 MustHaveRegister 334 MustHaveRegister 346 MustHaveRegister 390 MustHaveRegister  "OneSpillStore"
  v27|d DWORD "[r13|d]" v27|d -1 [316, 320[316 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[r13|q]" v28|q v27|d [320, 323[320 MustHaveRegister 322 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[r14|q]" v29|q -1 [318, 321[318 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[r13|d]" v30|d -1 [390, 422[[434, 476[390 MustHaveRegister 392 MustHaveRegister 410 MustHaveRegister 422 MustHaveRegister 466 MustHaveRegister  "OneSpillStore"
  v31|d DWORD "[r14|d]" v31|d -1 [392, 396[392 MustHaveRegister 396 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[r14|q]" v32|q v31|d [396, 399[396 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rbp|q]" v33|q -1 [394, 397[394 MustHaveRegister 396 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[rbp|d]" v34|d -1 [466, 498[[510, 552[[848, 890[[940, 1016[466 MustHaveRegister 468 MustHaveRegister 486 MustHaveRegister 498 MustHaveRegister 542 MustHaveRegister 1016 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[r14|d]" v35|d -1 [468, 472[468 MustHaveRegister 472 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[r14|q]" v36|q v35|d [472, 475[472 MustHaveRegister 474 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rcx|q]" v37|q -1 [470, 473[470 MustHaveRegister 472 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[rcx|d]" v38|d -1 [542, 574[[848, 890[[940, 1014[542 MustHaveRegister 544 MustHaveRegister 562 MustHaveRegister 574 MustHaveRegister 880 MustHaveRegister 1014 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[r14|d]" v39|d -1 [544, 548[544 MustHaveRegister 548 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[r14|q]" v40|q v39|d [548, 551[548 MustHaveRegister 550 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[r13|q]" v41|q -1 [546, 549[546 MustHaveRegister 548 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rsi|d]" v42|d -1 [880, 912[[940, 1012[880 MustHaveRegister 882 MustHaveRegister 900 MustHaveRegister 912 MustHaveRegister 1008 MustHaveRegister 1012 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[rdx|d]" v43|d -1 [882, 886[882 MustHaveRegister 886 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rdx|q]" v44|q v43|d [886, 889[886 MustHaveRegister 888 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[r10|q]" v45|q -1 [884, 887[884 MustHaveRegister 886 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[r11|d]" v46|d -1 [1008, 1024[1008 MustHaveRegister 1010 MustHaveRegister 1024 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rsi|d]" v47|d -1 [1012, 1036[1012 MustHaveRegister 1036 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[r8|d]" v48|d -1 [1014, 1034[1014 MustHaveRegister 1034 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[r9|d]" v49|d -1 [1016, 1032[1016 MustHaveRegister 1032 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[rcx|d]" v50|d -1 [1018, 1030[1018 MustHaveRegister 1030 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[rdx|d]" v51|d -1 [1020, 1028[1020 MustHaveRegister 1028 MustHaveRegister  "NoSpillStore"
  v52|d DWORD "[r10|d]" v52|d -1 [1022, 1026[1022 MustHaveRegister 1026 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[r11|q]" v53|q v46|d [1024, 1038[1024 MustHaveRegister 1038 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[r10|q]" v54|q v52|d [1026, 1041[1026 MustHaveRegister  "OneSpillStore"
  v55|q QWORD "[rdx|q]" v55|q v51|d [1028, 1039[1028 MustHaveRegister  "OneSpillStore"
  v56|q QWORD "[rcx|q]" v56|q v50|d [1030, 1041[1030 MustHaveRegister  "OneSpillStore"
  v57|q QWORD "[r9|q]" v57|q v49|d [1032, 1041[1032 MustHaveRegister  "OneSpillStore"
  v58|q QWORD "[r8|q]" v58|q v48|d [1034, 1041[1034 MustHaveRegister  "OneSpillStore"
  v59|q QWORD "[rsi|q]" v59|q v47|d [1036, 1037[1036 MustHaveRegister  "OneSpillStore"
  v60|d DWORD "[rax|d]" v60|d rax|d [1044, 1046[1044 MustHaveRegister 1046 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[rcx|d]" v61|d v22|d [1058, 1083[[1086, 1137[1068 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rsi|q]" v62|q -1 [1082, 1083[1082 MustHaveRegister  "NoDefinitionFound"
  v63|d DWORD "[rsi|d]" v63|d -1 [1134, 1146[1134 MustHaveRegister 1136 MustHaveRegister 1146 MustHaveRegister  "NoSpillStore"
  v64|d DWORD "[rdx|d]" v64|d -1 [1136, 1140[1136 MustHaveRegister 1140 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rdx|q]" v65|q v64|d [1140, 1142[1140 MustHaveRegister 1142 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rcx|q]" v66|q -1 [1138, 1141[1138 MustHaveRegister 1140 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rbx|q]" v67|q -1 [1142, 1156[1142 MustHaveRegister 1144 MustHaveRegister 1156 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[rax|q]" v68|q -1 [1144, 1158[1144 MustHaveRegister 1158 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[rsi|q]" v69|q v63|d [1146, 1148[1146 MustHaveRegister 1148 ShouldHaveRegister  "NoSpillStore"
  v70|d DWORD "[rax|d]" v70|d rax|d [1162, 1164[1162 MustHaveRegister 1164 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[r10|d]" v71|d v78|d [596, 663[606 ShouldHaveRegister 662 ShouldHaveRegister  "OneSpillStore"
  v72|d DWORD "[vstack:6|d]" v72|d v77|d [596, 608[ "OneSpillStore"
  v73|d DWORD "[r13|d]" v73|d -1 [654, 658[654 MustHaveRegister 656 MustHaveRegister 658 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[r13|q]" v74|q v73|d [658, 663[658 MustHaveRegister  "OneSpillStore"
  v75|d DWORD "[rax|d]" v75|d rax|d [666, 670[666 MustHaveRegister 670 ShouldHaveRegister  "NoSpillStore"
  v76|d DWORD "[rax|d]" v76|d rax|d [674, 676[674 MustHaveRegister 676 MustHaveRegister  "NoSpillStore"
  v77|d DWORD "[rsi|d]" v77|d v72|d [690, 695[690 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v78|d DWORD "[r10|d]" v78|d v71|d [692, 695[692 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v79|d DWORD "[r10|d]" v79|d v71|d [738, 823[816 ShouldHaveRegister  "OneSpillStore"
  v80|d DWORD "[r11|d]" v80|d v72|d [738, 750[748 MustHaveRegister  "OneSpillStore"
  v81|d DWORD "[rsi|d]" v81|d -1 [798, 810[798 MustHaveRegister 800 MustHaveRegister 810 MustHaveRegister  "NoSpillStore"
  v82|d DWORD "[rcx|d]" v82|d -1 [800, 804[800 MustHaveRegister 804 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rcx|q]" v83|q v82|d [804, 806[804 MustHaveRegister 806 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[r8|q]" v84|q -1 [802, 805[802 MustHaveRegister 804 MustHaveRegister  "NoSpillStore"
  v85|q QWORD "[rbx|q]" v85|q -1 [806, 820[806 MustHaveRegister 808 MustHaveRegister 820 ShouldHaveRegister  "NoSpillStore"
  v86|q QWORD "[rax|q]" v86|q -1 [808, 822[808 MustHaveRegister 822 ShouldHaveRegister  "NoSpillStore"
  v87|q QWORD "[rsi|q]" v87|q v81|d [810, 812[810 MustHaveRegister 812 ShouldHaveRegister  "NoSpillStore"
  v88|d DWORD "[rax|d]" v88|d rax|d [826, 828[826 MustHaveRegister 828 MustHaveRegister  "NoSpillStore"
  v89|d DWORD "[r11|d]" v89|d v80|d [842, 847[842 MustHaveRegister 846 ShouldHaveRegister  "NoSpillStore"
  v90|d DWORD "[r10|d]" v90|d v79|d [844, 847[844 MustHaveRegister 846 ShouldHaveRegister  "NoSpillStore"
  v91|q QWORD "[rsi|q]" v91|q -1 [936, 937[936 MustHaveRegister  "NoDefinitionFound"
  v92|d DWORD "[rax|d]" v92|d -1 [1198, 1234[1198 MustHaveRegister 1200 MustHaveRegister 1230 MustHaveRegister 1234 MustHaveRegister  "NoSpillStore"
  v93|d DWORD "[r10|d]" v93|d -1 [1232, 1234[1232 MustHaveRegister 1234 MustHaveRegister  "NoSpillStore"
  v94|d DWORD "[r10|d]" v94|d -1 [1624, 1640[1640 MustHaveRegister  "NoSpillStore"
  v95|q QWORD "[r8|q]" v95|q -1 [1624, 1642[1642 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[vstack:12|q]" v0|q v0|q [596, 608[ "SpillInDominator"
  v97|q QWORD "[vstack:3|q]" v1|q v1|q [596, 608[ "SpillInDominator"
  v98|q QWORD "[vstack:10|q]" v3|q v3|q [663, 1166[[1302, 1367[[1368, 1419[[1420, 1520[[1542, 1593[[1594, 1624[695 LiveAtLoopEnd 818 ShouldHaveRegister 847 LiveAtLoopEnd 939 LiveAtLoopEnd 1085 LiveAtLoopEnd 1154 ShouldHaveRegister  "SpillInDominator"
  v99|d DWORD "[vstack:13|d]" v5|d v5|d [596, 608[ "SpillInDominator"
  v100|d DWORD "[vstack:14|d]" v6|d v6|d [596, 608[ "SpillInDominator"
  v101|d DWORD "[vstack:9|d]" v7|d v7|d [663, 738[695 LiveAtLoopEnd  "SpillInDominator"
  v102|d DWORD "[vstack:8|d]" v9|d v9|d [608, 663[ "SpillInDominator"
  v103|q QWORD "[vstack:15|q]" v12|q v12|q [596, 608[ "SpillInDominator"
  v104|d DWORD "[vstack:11|d]" v13|d v13|d [596, 608[ "SpillInDominator"
  v105|d DWORD "[vstack:25|d]" v18|d v18|d [1041, 1048[ "OneSpillStore"
  v106|d DWORD "[r10|d]" v15|d v15|d [940, 1022[1022 MustHaveRegister  "OneSpillStore"
  v107|d DWORD "[vstack:0|d]" v15|d v15|d [358, 400[[434, 476[[510, 552[[848, 890[ "OneSpillStore"
  v108|d DWORD "[rdx|d]" v26|d v26|d [940, 1020[1020 MustHaveRegister  "OneSpillStore"
  v109|d DWORD "[vstack:1|d]" v26|d v26|d [434, 476[[510, 552[[848, 890[ "OneSpillStore"
  v110|d DWORD "[r13|d]" v30|d v30|d [940, 1018[1018 MustHaveRegister  "OneSpillStore"
  v111|d DWORD "[vstack:2|d]" v30|d v30|d [510, 552[[848, 890[ "OneSpillStore"
  v112|d DWORD "[vstack:7|d]" v71|d v71|d [663, 692[[696, 737[692 ShouldHaveRegister 716 ShouldHaveRegister 736 ShouldHaveRegister  "OneSpillStore"
  v113|d DWORD "[vstack:6|d]" v72|d v72|d [608, 663[ "OneSpillStore"
  v114|q QWORD "[vstack:3|q]" v1|q v1|q [608, 661[ "SpillInDominator"
  v115|d DWORD "[vstack:11|d]" v13|d v13|d [608, 663[ "SpillInDominator"
  v116|d DWORD "[vstack:13|d]" v5|d v5|d [608, 663[ "SpillInDominator"
  v117|q QWORD "[vstack:12|q]" v0|q v0|q [608, 659[ "SpillInDominator"
  v118|d DWORD "[vstack:14|d]" v6|d v6|d [608, 663[ "SpillInDominator"
  v119|q QWORD "[vstack:15|q]" v12|q v12|q [608, 663[ "SpillInDominator"
  v120|d DWORD "[vstack:6|d]" v72|d v72|d [663, 690[[696, 737[690 ShouldHaveRegister 736 ShouldHaveRegister  "OneSpillStore"
  v121|d DWORD "[vstack:8|d]" v9|d v9|d [663, 706[695 LiveAtLoopEnd  "SpillInDominator"
  v122|q QWORD "[vstack:3|q]" v1|q v1|q [661, 738[ "SpillInDominator"
  v123|d DWORD "[vstack:11|d]" v13|d v13|d [663, 939[[940, 1085[[1086, 1152[938 ShouldHaveRegister 1084 ShouldHaveRegister 1152 ShouldHaveRegister  "SpillInDominator"
  v124|q QWORD "[vstack:12|q]" v0|q v0|q [659, 663[ "SpillInDominator"
  v125|d DWORD "[vstack:13|d]" v5|d v5|d [663, 1166[[1302, 1367[[1368, 1419[[1420, 1520[[1542, 1572[[1594, 1624[939 LiveAtLoopEnd 1085 LiveAtLoopEnd  "SpillInDominator"
  v126|d DWORD "[vstack:14|d]" v6|d v6|d [663, 937[[940, 1083[[1086, 1202[ "SpillInDominator"
  v127|q QWORD "[vstack:15|q]" v12|q v12|q [663, 924[[940, 1083[[1086, 1137[[1302, 1326[ "SpillInDominator"
  v128|q QWORD "[vstack:4|q]" v74|q v74|q [663, 668[668 ShouldHaveRegister  "OneSpillStore"
  v129|q QWORD "[vstack:12|q]" v0|q v0|q [663, 1166[[1302, 1367[[1368, 1419[[1420, 1520[[1542, 1593[[1594, 1624[939 LiveAtLoopEnd 1085 LiveAtLoopEnd  "SpillInDominator"
  v130|q QWORD "[rdx|q]" v1|q v1|q [738, 813[ "SpillInDominator"
  v131|d DWORD "[r8|d]" v72|d v72|d [1302, 1326[ "OneSpillStore"
  v132|d DWORD "[r10|d]" v71|d v71|d [1302, 1326[ "OneSpillStore"
  v133|d DWORD "[rbx|d]" v9|d v9|d [706, 716[[1302, 1312[716 MustHaveRegister  "SpillInDominator"
  v134|d DWORD "[r9|d]" v7|d v7|d [738, 823[748 MustHaveRegister 798 MustHaveRegister  "SpillInDominator"
  v135|q QWORD "[rcx|q]" v3|q v3|q [1624, 1645[ "SpillInDominator"
  v136|d DWORD "[rax|d]" v13|d v13|d [1302, 1326[ "SpillInDominator"
  v137|q QWORD "[rsi|q]" v0|q v0|q [1624, 1645[ "SpillInDominator"
  v138|d DWORD "[r9|d]" v5|d v5|d [1624, 1645[ "SpillInDominator"
  v139|d DWORD "[r11|d]" v6|d v6|d [1202, 1230[[1240, 1250[[1302, 1367[[1368, 1419[[1420, 1541[[1542, 1572[[1594, 1645[1228 MustHaveRegister 1230 MustHaveRegister  "SpillInDominator"
  v140|q QWORD "[rax|q]" v12|q v12|q [1398, 1419[ "SpillInDominator"
  v141|d DWORD "[vstack:9|d]" v7|d v7|d [823, 924[[940, 1070[847 LiveAtLoopEnd  "SpillInDominator"
  v142|q QWORD "[rdi|q]" v1|q v1|q [813, 823[814 ShouldHaveRegister  "SpillInDominator"
  v143|d DWORD "[vstack:18|d]" v79|d v79|d [823, 830[ "OneSpillStore"
  v144|d DWORD "[vstack:17|d]" v80|d v80|d [750, 823[ "OneSpillStore"
  v145|d DWORD "[vstack:17|d]" v80|d v80|d [823, 830[ "OneSpillStore"
  v146|q QWORD "[vstack:3|q]" v1|q v1|q [823, 1186[847 LiveAtLoopEnd 939 LiveAtLoopEnd 1085 LiveAtLoopEnd 1150 ShouldHaveRegister  "SpillInDominator"
  v147|d DWORD "[r11|d]" v80|d v80|d [830, 842[842 ShouldHaveRegister  "OneSpillStore"
  v148|d DWORD "[r10|d]" v79|d v79|d [830, 844[844 ShouldHaveRegister  "OneSpillStore"
  v149|q QWORD "[rdx|q]" v1|q v1|q [1186, 1232[[1240, 1270[[1276, 1296[[1302, 1367[[1368, 1419[[1420, 1541[[1542, 1593[[1594, 1645[1198 MustHaveRegister 1228 MustHaveRegister 1232 MustHaveRegister 1270 MustHaveRegister 1296 MustHaveRegister 1322 MustHaveRegister  "SpillInDominator"
  v150|d DWORD "[r9|d]" v7|d v7|d [1086, 1134[[1302, 1326[1134 MustHaveRegister  "SpillInDominator"
  v151|q QWORD "[vstack:24|q]" v54|q v54|q [1041, 1048[ "OneSpillStore"
  v152|q QWORD "[vstack:19|q]" v55|q v55|q [1039, 1048[ "OneSpillStore"
  v153|q QWORD "[vstack:23|q]" v56|q v56|q [1041, 1048[ "OneSpillStore"
  v154|q QWORD "[vstack:22|q]" v57|q v57|q [1041, 1048[ "OneSpillStore"
  v155|q QWORD "[vstack:21|q]" v58|q v58|q [1041, 1048[ "OneSpillStore"
  v156|q QWORD "[vstack:20|q]" v59|q v59|q [1037, 1041[ "OneSpillStore"
  v157|q QWORD "[vstack:20|q]" v59|q v59|q [1041, 1048[ "OneSpillStore"
  v158|q QWORD "[rdi|q]" v55|q v55|q [1398, 1419[ "OneSpillStore"
  v159|q QWORD "[rsi|q]" v59|q v59|q [1398, 1419[ "OneSpillStore"
  v160|q QWORD "[r8|q]" v58|q v58|q [1398, 1419[ "OneSpillStore"
  v161|q QWORD "[r9|q]" v57|q v57|q [1398, 1419[ "OneSpillStore"
  v162|q QWORD "[rcx|q]" v56|q v56|q [1398, 1419[ "OneSpillStore"
  v163|q QWORD "[r10|q]" v54|q v54|q [1398, 1419[ "OneSpillStore"
  v164|d DWORD "[rbx|d]" v18|d v18|d [1398, 1419[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e1bc5ac slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction v5|DWORD = SUB (x: v4|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v5|DWORD) trueDestinationProbability: 9.93051617825813E-7 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B83" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B83 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [v2|DWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B48" "B75" 
    successors "B78" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612642046083831603
    begin_IR
      LIR
      nr   66  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v5|DWORD) trueDestinationProbability: 8.983968413646328E-4 condition: > trueDestination: B4 -> B78 falseDestination: B4 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B61" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612637141171924796
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v8|DWORD = MOV input: [v7|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  122  <|@ instruction v9|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction v11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  126  <|@ instruction v10|QWORD = UNCOMPRESSPOINTER (input: v8|DWORD, ~baseRegister: v11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  128  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr  130  <|@ instruction v13|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v10|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}] keyTargets: [B5 -> B6, B5 -> B61] defaultTarget: B5 -> B81 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction v14|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v14|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B60 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction v15|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v16|DWORD = MOV input: [v15|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  168  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B58 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" "B14" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction v17|DWORD = MOVSXB input: [v6|DWORD + v14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  216  <|@ instruction v18|DWORD = MOVZXB value: v17|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction v20|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  220  <|@ instruction v19|QWORD = UNCOMPRESSPOINTER (input: v16|DWORD, ~baseRegister: v20|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  222  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v19|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B9 -> B10, B9 -> B11, B9 -> B14] defaultTarget: B9 -> B57 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609027637273029927
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction v21|DWORD = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  242  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction v22|DWORD = SETCC condition: = <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B10 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction v23|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v23|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction v24|QWORD = MOVZXB value: v17|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction v25|DWORD = MOVZXB input: [v24|QWORD + v23|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B12 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" "B20" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602373890597978734
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction v26|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  316  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v27|DWORD = MOV input: [v26|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  318  <|@ instruction v29|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  320  <|@ instruction v28|QWORD = UNCOMPRESSPOINTER (input: v27|DWORD, ~baseRegister: v29|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  322  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v28|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B14 -> B15, B14 -> B20] defaultTarget: B14 -> B56 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v26|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v26|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B19 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B26" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870269280122293
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction v30|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v31|DWORD = MOV input: [v30|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  394  <|@ instruction v33|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  396  <|@ instruction v32|QWORD = UNCOMPRESSPOINTER (input: v31|DWORD, ~baseRegister: v33|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  398  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v32|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B20 -> B21, B20 -> B26] defaultTarget: B20 -> B55 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v30|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v30|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" "B32" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366647962319916
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction v34|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v35|DWORD = MOV input: [v34|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  470  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  472  <|@ instruction v36|QWORD = UNCOMPRESSPOINTER (input: v35|DWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  474  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v36|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B26 -> B27, B26 -> B32] defaultTarget: B26 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v34|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v34|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B31 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B38" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863026644571602
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction v38|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  544  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v39|DWORD = MOV input: [v38|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  546  <|@ instruction v41|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  548  <|@ instruction v40|QWORD = UNCOMPRESSPOINTER (input: v39|DWORD, ~baseRegister: v41|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  550  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v40|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B32 -> B33, B32 -> B38] defaultTarget: B32 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v38|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v38|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084642
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, int[0|0x0]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors "B63" "B66" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4590333408894431376
    begin_IR
      LIR
      nr  596  <|@ instruction [v71|DWORD, v72|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9999997723712406 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590333407604006618
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction v73|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  656  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction NULLCHECK address: [v73|DWORD[_] * 8] state [bci:9, 44] <|@ <|@
      nr  658  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE input: v117|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  660  <|@ instruction rsi|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = STACKMOVE (input: v114|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  662  <|@ instruction rdx|DWORD = MOVE input: v71|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = STACKMOVE (input: v119|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = STACKMOVE (input: v118|DWORD, ~backupSlot: vstack:16|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = STACKMOVE (input: v116|DWORD, ~backupSlot: vstack:16|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = STACKMOVE (input: v124|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = STACKMOVE (input: v115|DWORD, ~backupSlot: vstack:16|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v101|DWORD[_] = MOVE input: v7|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = STACKMOVE (input: v102|DWORD, ~backupSlot: vstack:16|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVE input: v71|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = STACKMOVE (input: v113|DWORD, ~backupSlot: vstack:16|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  664  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stack: v74|QWORD[.] 
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<CharSequence.charAt(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:21, 44] <|@ <|@
      nr  666  <|@ instruction v75|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction rsi|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction rdx|DWORD = MOVE input: v75|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:26, 44] <|@ <|@
      nr  674  <|@ instruction v76|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction TESTBRANCH (x: v76|DWORD, y: v76|DWORD) trueDestinationProbability: 0.5908646161430428 condition: = trueDestination: B63 -> B65 falseDestination: B63 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584799587332037117
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction v77|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr  692  <|@ instruction v78|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [v78|DWORD, v77|DWORD] destination: B64 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621235127
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9999996147864973 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621458430
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" "B69" 
    successors "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [v71|DWORD, v72|DWORD] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B73" 
    successors "B75" "B72" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4588886804909642497
    begin_IR
      LIR
      nr  738  <|@ instruction [v79|DWORD, v80|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction CMPBRANCH (x: v80|DWORD, y: [v7|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.2596988928056022 condition: < trueDestination: B71 -> B75 falseDestination: B71 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4586620676558964615
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction v81|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  800  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v12|QWORD[.] v1|QWORD[.] v79|DWORD v3|QWORD[.] v80|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v82|DWORD = MOV input: [v81|DWORD[_] * 8 + 8] size: DWORD state [bci:54, 44] <|@ <|@
      nr  802  <|@ instruction v84|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  804  <|@ instruction v83|QWORD = UNCOMPRESSPOINTER (input: v82|DWORD, ~baseRegister: v84|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  806  <|@ instruction v85|QWORD = MOV input: [v83|QWORD + 496] size: QWORD <|@ <|@
      nr  808  <|@ instruction v86|QWORD = MOV input: [v85|QWORD + 64] size: QWORD <|@ <|@
      nr  810  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v81|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr  812  <|@ instruction rsi|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = MOVE input: v130|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  814  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction rcx|DWORD = MOVE input: v79|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rbx|QWORD = MOVE input: v85|QWORD moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction rax|QWORD = MOVE input: v86|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|DWORD[_] = MOVE input: v134|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|QWORD[.] = MOVE input: v142|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = MOVE input: v79|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = STACKMOVE (input: v144|DWORD, ~backupSlot: vstack:16|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v12|QWORD[.] v1|QWORD[.] v79|DWORD v3|QWORD[.] v80|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70, 44] <|@ <|@
      nr  826  <|@ instruction v88|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: v88|DWORD, y: v88|DWORD) trueDestinationProbability: 0.31374907693960497 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B71" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4579260716611284855
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction v89|DWORD = DEC value: v80|DWORD size: DWORD <|@ <|@
      nr  844  <|@ instruction v90|DWORD = DEC value: v79|DWORD size: DWORD <|@ <|@
      nr  846  <|@ instruction JUMP ~outgoingValues: [v90|DWORD, v89|DWORD] destination: B73 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B44" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359405326877352
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction v42|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  882  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v43|DWORD = MOV input: [v42|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  884  <|@ instruction v45|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  886  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  888  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v44|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B38 -> B39, B38 -> B44] defaultTarget: B38 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v42|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v42|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580189478109779700
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
locals: - - - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction SAFEPOINT temp: v91|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:87, 44] <|@ <|@
      nr  938  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B75 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction v46|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1010  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction NULLCHECK address: [v46|DWORD[_] * 8] state [bci:31] <|@ <|@
      nr 1012  <|@ instruction v47|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction v48|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1016  <|@ instruction v49|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1018  <|@ instruction v50|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1020  <|@ instruction v51|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction v52|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1024  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1026  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1028  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1030  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1032  <|@ instruction v57|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1038  <|@ instruction rsi|QWORD[.] = MOVE input: v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1040  <|@ instruction rdx|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVE input: v18|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = STACKMOVE (input: v156|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1042  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v59|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v58|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v57|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v56|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v55|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v54|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
      nr 1044  <|@ instruction v60|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1046  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B19" "B31" "B43" "B46" "B37" "B25" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr 1058  <|@ instruction [v61|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction TESTBRANCH (x: v61|DWORD, y: v61|DWORD) trueDestinationProbability: 0.5929707392225225 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609023662074253018
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v61|DWORD 
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction SAFEPOINT temp: v62|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:24, 44] <|@ <|@
      nr 1084  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B48 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction v63|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1136  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v61|DWORD 
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v64|DWORD = MOV input: [v63|DWORD[_] * 8 + 8] size: DWORD state [bci:24, 44] <|@ <|@
      nr 1138  <|@ instruction v66|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1140  <|@ instruction v65|QWORD = UNCOMPRESSPOINTER (input: v64|DWORD, ~baseRegister: v66|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1142  <|@ instruction v67|QWORD = MOV input: [v65|QWORD + 496] size: QWORD <|@ <|@
      nr 1144  <|@ instruction v68|QWORD = MOV input: [v67|QWORD + 64] size: QWORD <|@ <|@
      nr 1146  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1148  <|@ instruction rsi|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1150  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1152  <|@ instruction rcx|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr 1154  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction rbx|QWORD = MOVE input: v67|QWORD moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction rax|QWORD = MOVE input: v68|QWORD moveKind: QWORD <|@ <|@
      nr 1160  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36, 44] <|@ <|@
      nr 1162  <|@ instruction v70|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B51" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction v92|DWORD[_] = MOV input: [v1|QWORD[.] + 56] size: DWORD <|@ <|@
      nr 1200  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v1|QWORD[.] v6|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v92|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B77 -> B79 falseDestination: B77 -> B80 y: 2 size: DWORD inlinedY: null state [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction MOV (x: [v1|QWORD[.] + 28], y: v6|DWORD) size: DWORD <|@ <|@
      nr 1230  <|@ instruction MOV (x: [v92|DWORD[_] * 8 + 16], y: v6|DWORD) size: DWORD <|@ <|@
      nr 1232  <|@ instruction v93|DWORD = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV (x: [v92|DWORD[_] * 8 + 20], y: v93|DWORD) size: DWORD <|@ <|@
      nr 1236  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1238  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4584523385039648594
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4567169052318882655
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1272  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1274  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4517296380301017088
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1298  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997662585697696
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997194285186786
    begin_IR
      LIR
      nr 1312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1324  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction JUMP ~outgoingValues: [int[-192531|0xfffffffffffd0fed], long[9620|0x2594]] destination: B24 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [int[-187411|0xfffffffffffd23ed], long[660|0x294]] destination: B59 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -200723 size: DWORD <|@ <|@
      nr 1364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1366  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:39, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction JUMP ~outgoingValues: [int[-38195|0xffffffffffff6acd], long[8980|0x2314]] destination: B56 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction JUMP ~outgoingValues: [int[-197651|0xfffffffffffcfbed], long[9620|0x2594]] destination: B40 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction JUMP ~outgoingValues: [int[-97820|0xfffffffffffe81e4], long[0|0x0]] destination: B60 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction MOV x: [r15|QWORD + 1156] y: -199699 size: DWORD <|@ <|@
      nr 1416  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1418  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v59|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v58|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v57|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v56|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v55|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v54|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction JUMP ~outgoingValues: [int[-196627|0xfffffffffffcffed], long[9620|0x2594]] destination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction JUMP ~outgoingValues: [int[-52787|0xffffffffffff31cd], long[8980|0x2314]] destination: B53 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction JUMP ~outgoingValues: [int[-33331|0xffffffffffff7dcd], long[7700|0x1e14]] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction JUMP ~outgoingValues: [int[-194579|0xfffffffffffd07ed], long[9620|0x2594]] destination: B30 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction JUMP ~outgoingValues: [int[-47923|0xffffffffffff44cd], long[8980|0x2314]] destination: B54 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction JUMP ~outgoingValues: [int[-188435|0xfffffffffffd1fed], long[2580|0xa14]] destination: B58 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction JUMP ~outgoingValues: [int[-43059|0xffffffffffff57cd], long[8980|0x2314]] destination: B55 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [int[-191507|0xfffffffffffd13ed], long[9620|0x2594]] destination: B22 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction JUMP ~outgoingValues: [int[-198675|0xfffffffffffcf7ed], long[9620|0x2594]] destination: B42 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction JUMP ~outgoingValues: [int[-189459|0xfffffffffffd1bed], long[9620|0x2594]] destination: B16 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction MOV x: [r15|QWORD + 1156] y: -147483 size: DWORD <|@ <|@
      nr 1538  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1540  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v1|QWORD[.] v6|DWORD - - 
>@ <|@ instruction DEOPT info [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction JUMP ~outgoingValues: [int[-18483|0xffffffffffffb7cd], long[20|0x14]] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [int[-193555|0xfffffffffffd0bed], long[9620|0x2594]] destination: B28 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction JUMP ~outgoingValues: [int[-57651|0xffffffffffff1ecd], long[8980|0x2314]] destination: B52 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction MOV x: [r15|QWORD + 1156] y: -94515 size: DWORD <|@ <|@
      nr 1590  <|@ instruction MOV x: [r15|QWORD + 1168] y: 12952 size: QWORD <|@ <|@
      nr 1592  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction JUMP ~outgoingValues: [int[-195603|0xfffffffffffd03ed], long[9620|0x2594]] destination: B34 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction JUMP ~outgoingValues: [int[-190483|0xfffffffffffd17ed], long[9620|0x2594]] destination: B18 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction JUMP ~outgoingValues: [int[-103707|0xfffffffffffe6ae5], long[0|0x0]] destination: B13 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B60" "B59" "B58" "B57" "B16" "B13" "B56" "B18" "B22" "B55" "B24" "B28" "B54" "B30" "B34" "B53" "B36" "B40" "B52" "B42" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1624  <|@ instruction [v94|DWORD, v95|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v94|DWORD) size: DWORD <|@ <|@
      nr 1642  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v95|QWORD) size: QWORD <|@ <|@
      nr 1644  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #6          // java.util.regex.Matcher.to:int
     5: aload_0       
     6: getfield      #5          // minLength:int
     9: isub          
    10: if_icmple     20
    13: aload_1       
    14: iconst_1      
    15: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    18: iconst_0      
    19: ireturn       
    20: aload_1       
    21: getfield      #6          // java.util.regex.Matcher.to:int
    24: aload_0       
    25: getfield      #5          // minLength:int
    28: isub          
    29: istore        4
    31: iload_2       
    32: iload         4
    34: if_icmpgt     83
    37: aload_0       
    38: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    41: aload_1       
    42: iload_2       
    43: aload_3       
    44: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    47: ifeq          77
    50: aload_1       
    51: iload_2       
    52: putfield      #9          // java.util.regex.Matcher.first:int
    55: aload_1       
    56: getfield      #10         // java.util.regex.Matcher.groups:int[]
    59: iconst_0      
    60: aload_1       
    61: getfield      #9          // java.util.regex.Matcher.first:int
    64: iastore       
    65: aload_1       
    66: getfield      #10         // java.util.regex.Matcher.groups:int[]
    69: iconst_1      
    70: aload_1       
    71: getfield      #11         // java.util.regex.Matcher.last:int
    74: iastore       
    75: iconst_1      
    76: ireturn       
    77: iinc          
    80: goto          31
    83: aload_1       
    84: iconst_1      
    85: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    88: iconst_0      
    89: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v86|q [0, 1[[664, 666[[672, 674[[822, 826[[1042, 1044[[1158, 1162[[1236, 1238[[1272, 1274[[1298, 1300[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v79|d [0, 34[[664, 665[[672, 673[[816, 825[[1042, 1043[[1152, 1161[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v71|d [0, 32[[662, 665[[670, 673[[814, 825[[1040, 1043[[1150, 1161[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v85|q [0, 1[[664, 665[[672, 673[[820, 825[[1042, 1043[[1156, 1161[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 26[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v3|q [0, 30[[660, 665[[668, 673[[812, 825[[1038, 1043[[1148, 1161[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v3|q [0, 36[[664, 665[[672, 673[[818, 825[[1042, 1043[[1154, 1161[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [30, 596[30 MustHaveRegister 40 MustHaveRegister 118 MustHaveRegister  "SpillInDominator"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [32, 596[32 MustHaveRegister 38 MustHaveRegister 122 MustHaveRegister  "SpillInDominator"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [34, 65[[1572, 1593[34 MustHaveRegister 42 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[r8|q]" v3|q r8|- [36, 663[36 MustHaveRegister 54 MustHaveRegister 146 MustHaveRegister 180 MustHaveRegister 660 ShouldHaveRegister  "SpillInDominator"
  v4|d DWORD "[r10|d]" v4|d -1 [38, 40[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r10|d]" v5|d v4|d [40, 596[40 MustHaveRegister 42 ShouldHaveRegister 76 ShouldHaveRegister  "SpillInDominator"
  v6|d DWORD "[r11|d]" v6|d v13|d [66, 596[76 MustHaveRegister 130 ShouldHaveRegister 148 MustHaveRegister 168 ShouldHaveRegister 214 MustHaveRegister 594 ShouldHaveRegister  "SpillInDominator"
  v7|d DWORD "[r9|d]" v7|d -1 [118, 663[118 MustHaveRegister 120 MustHaveRegister 128 MustHaveRegister 164 MustHaveRegister 654 MustHaveRegister  "StoreAtDefinition"
  v8|d DWORD "[rcx|d]" v8|d -1 [120, 126[120 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rbx|d]" v9|d -1 [122, 168[[586, 608[122 MustHaveRegister 168 MustHaveRegister 606 MustHaveRegister  "SpillInDominator"
  v10|q QWORD "[rcx|q]" v10|q v8|d [126, 133[126 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rdi|q]" v11|q -1 [124, 127[124 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rdi|q]" v12|q v7|d [128, 596[128 MustHaveRegister  "StoreAtDefinition"
  v13|d DWORD "[rax|d]" v13|d v6|d [130, 596[130 MustHaveRegister  "StoreAtDefinition"
  v14|d DWORD "[rcx|d]" v14|d -1 [146, 214[146 MustHaveRegister 148 MustHaveRegister 214 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[rbp|d]" v15|d -1 [164, 240[[248, 260[[282, 324[164 MustHaveRegister 166 MustHaveRegister 240 MustHaveRegister 260 MustHaveRegister 314 MustHaveRegister  "OneSpillStore"
  v16|d DWORD "[r13|d]" v16|d -1 [166, 220[166 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rcx|d]" v17|d -1 [214, 224[[248, 276[214 MustHaveRegister 216 ShouldHaveRegister 276 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[rbx|d]" v18|d -1 [216, 242[[248, 262[[282, 346[[358, 422[[434, 498[[510, 574[[848, 912[[940, 1041[216 MustHaveRegister 242 ShouldHaveRegister 262 MustHaveRegister 334 MustHaveRegister 346 MustHaveRegister 410 MustHaveRegister 422 MustHaveRegister 486 MustHaveRegister 498 MustHaveRegister 562 MustHaveRegister 574 MustHaveRegister 900 MustHaveRegister 912 MustHaveRegister 1040 ShouldHaveRegister  "OneSpillStore"
  v19|q QWORD "[r13|q]" v19|q v16|d [220, 223[220 MustHaveRegister 222 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[r14|q]" v20|q -1 [218, 221[218 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rcx|d]" v21|d -1 [240, 242[240 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rcx|d]" v22|d v61|d [244, 247[244 MustHaveRegister 246 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rbp|d]" v23|d -1 [260, 278[260 MustHaveRegister 262 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[rcx|q]" v24|q -1 [276, 278[276 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rcx|d]" v25|d -1 [278, 281[278 MustHaveRegister 280 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rcx|d]" v26|d -1 [314, 346[[358, 400[314 MustHaveRegister 316 MustHaveRegister 334 MustHaveRegister 346 MustHaveRegister 390 MustHaveRegister  "OneSpillStore"
  v27|d DWORD "[r13|d]" v27|d -1 [316, 320[316 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[r13|q]" v28|q v27|d [320, 323[320 MustHaveRegister 322 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[r14|q]" v29|q -1 [318, 321[318 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[r13|d]" v30|d -1 [390, 422[[434, 476[390 MustHaveRegister 392 MustHaveRegister 410 MustHaveRegister 422 MustHaveRegister 466 MustHaveRegister  "OneSpillStore"
  v31|d DWORD "[r14|d]" v31|d -1 [392, 396[392 MustHaveRegister 396 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[r14|q]" v32|q v31|d [396, 399[396 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rbp|q]" v33|q -1 [394, 397[394 MustHaveRegister 396 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[rbp|d]" v34|d -1 [466, 498[[510, 552[[848, 890[[940, 1016[466 MustHaveRegister 468 MustHaveRegister 486 MustHaveRegister 498 MustHaveRegister 542 MustHaveRegister 1016 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[r14|d]" v35|d -1 [468, 472[468 MustHaveRegister 472 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[r14|q]" v36|q v35|d [472, 475[472 MustHaveRegister 474 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rcx|q]" v37|q -1 [470, 473[470 MustHaveRegister 472 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[rcx|d]" v38|d -1 [542, 574[[848, 890[[940, 1014[542 MustHaveRegister 544 MustHaveRegister 562 MustHaveRegister 574 MustHaveRegister 880 MustHaveRegister 1014 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[r14|d]" v39|d -1 [544, 548[544 MustHaveRegister 548 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[r14|q]" v40|q v39|d [548, 551[548 MustHaveRegister 550 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[r13|q]" v41|q -1 [546, 549[546 MustHaveRegister 548 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rsi|d]" v42|d -1 [880, 912[[940, 1012[880 MustHaveRegister 882 MustHaveRegister 900 MustHaveRegister 912 MustHaveRegister 1008 MustHaveRegister 1012 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[rdx|d]" v43|d -1 [882, 886[882 MustHaveRegister 886 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rdx|q]" v44|q v43|d [886, 889[886 MustHaveRegister 888 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[r10|q]" v45|q -1 [884, 887[884 MustHaveRegister 886 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[r11|d]" v46|d -1 [1008, 1024[1008 MustHaveRegister 1010 MustHaveRegister 1024 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rsi|d]" v47|d -1 [1012, 1036[1012 MustHaveRegister 1036 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[r8|d]" v48|d -1 [1014, 1034[1014 MustHaveRegister 1034 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[r9|d]" v49|d -1 [1016, 1032[1016 MustHaveRegister 1032 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[rcx|d]" v50|d -1 [1018, 1030[1018 MustHaveRegister 1030 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[rdx|d]" v51|d -1 [1020, 1028[1020 MustHaveRegister 1028 MustHaveRegister  "NoSpillStore"
  v52|d DWORD "[r10|d]" v52|d -1 [1022, 1026[1022 MustHaveRegister 1026 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[r11|q]" v53|q v46|d [1024, 1038[1024 MustHaveRegister 1038 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[r10|q]" v54|q v52|d [1026, 1041[1026 MustHaveRegister  "OneSpillStore"
  v55|q QWORD "[rdx|q]" v55|q v51|d [1028, 1039[1028 MustHaveRegister  "OneSpillStore"
  v56|q QWORD "[rcx|q]" v56|q v50|d [1030, 1041[1030 MustHaveRegister  "OneSpillStore"
  v57|q QWORD "[r9|q]" v57|q v49|d [1032, 1041[1032 MustHaveRegister  "OneSpillStore"
  v58|q QWORD "[r8|q]" v58|q v48|d [1034, 1041[1034 MustHaveRegister  "OneSpillStore"
  v59|q QWORD "[rsi|q]" v59|q v47|d [1036, 1037[1036 MustHaveRegister  "OneSpillStore"
  v60|d DWORD "[rax|d]" v60|d rax|d [1044, 1046[1044 MustHaveRegister 1046 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[rcx|d]" v61|d v22|d [1058, 1083[[1086, 1137[1068 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rsi|q]" v62|q -1 [1082, 1083[1082 MustHaveRegister  "NoDefinitionFound"
  v63|d DWORD "[rsi|d]" v63|d -1 [1134, 1146[1134 MustHaveRegister 1136 MustHaveRegister 1146 MustHaveRegister  "NoSpillStore"
  v64|d DWORD "[rdx|d]" v64|d -1 [1136, 1140[1136 MustHaveRegister 1140 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rdx|q]" v65|q v64|d [1140, 1142[1140 MustHaveRegister 1142 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rcx|q]" v66|q -1 [1138, 1141[1138 MustHaveRegister 1140 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rbx|q]" v67|q -1 [1142, 1156[1142 MustHaveRegister 1144 MustHaveRegister 1156 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[rax|q]" v68|q -1 [1144, 1158[1144 MustHaveRegister 1158 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[rsi|q]" v69|q v63|d [1146, 1148[1146 MustHaveRegister 1148 ShouldHaveRegister  "NoSpillStore"
  v70|d DWORD "[rax|d]" v70|d rax|d [1162, 1164[1162 MustHaveRegister 1164 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[r10|d]" v71|d v78|d [596, 663[606 ShouldHaveRegister 662 ShouldHaveRegister  "OneSpillStore"
  v72|d DWORD "[vstack:6|d]" v72|d v77|d [596, 608[ "OneSpillStore"
  v73|d DWORD "[r13|d]" v73|d -1 [654, 658[654 MustHaveRegister 656 MustHaveRegister 658 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[r13|q]" v74|q v73|d [658, 663[658 MustHaveRegister  "OneSpillStore"
  v75|d DWORD "[rax|d]" v75|d rax|d [666, 670[666 MustHaveRegister 670 ShouldHaveRegister  "NoSpillStore"
  v76|d DWORD "[rax|d]" v76|d rax|d [674, 676[674 MustHaveRegister 676 MustHaveRegister  "NoSpillStore"
  v77|d DWORD "[rsi|d]" v77|d v72|d [690, 695[690 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v78|d DWORD "[r10|d]" v78|d v71|d [692, 695[692 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v79|d DWORD "[r10|d]" v79|d v71|d [738, 823[816 ShouldHaveRegister  "OneSpillStore"
  v80|d DWORD "[r11|d]" v80|d v72|d [738, 750[748 MustHaveRegister  "OneSpillStore"
  v81|d DWORD "[rsi|d]" v81|d -1 [798, 810[798 MustHaveRegister 800 MustHaveRegister 810 MustHaveRegister  "NoSpillStore"
  v82|d DWORD "[rcx|d]" v82|d -1 [800, 804[800 MustHaveRegister 804 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rcx|q]" v83|q v82|d [804, 806[804 MustHaveRegister 806 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[r8|q]" v84|q -1 [802, 805[802 MustHaveRegister 804 MustHaveRegister  "NoSpillStore"
  v85|q QWORD "[rbx|q]" v85|q -1 [806, 820[806 MustHaveRegister 808 MustHaveRegister 820 ShouldHaveRegister  "NoSpillStore"
  v86|q QWORD "[rax|q]" v86|q -1 [808, 822[808 MustHaveRegister 822 ShouldHaveRegister  "NoSpillStore"
  v87|q QWORD "[rsi|q]" v87|q v81|d [810, 812[810 MustHaveRegister 812 ShouldHaveRegister  "NoSpillStore"
  v88|d DWORD "[rax|d]" v88|d rax|d [826, 828[826 MustHaveRegister 828 MustHaveRegister  "NoSpillStore"
  v89|d DWORD "[r11|d]" v89|d v80|d [842, 847[842 MustHaveRegister 846 ShouldHaveRegister  "NoSpillStore"
  v90|d DWORD "[r10|d]" v90|d v79|d [844, 847[844 MustHaveRegister 846 ShouldHaveRegister  "NoSpillStore"
  v91|q QWORD "[rsi|q]" v91|q -1 [936, 937[936 MustHaveRegister  "NoDefinitionFound"
  v92|d DWORD "[rax|d]" v92|d -1 [1198, 1234[1198 MustHaveRegister 1200 MustHaveRegister 1230 MustHaveRegister 1234 MustHaveRegister  "NoSpillStore"
  v93|d DWORD "[r10|d]" v93|d -1 [1232, 1234[1232 MustHaveRegister 1234 MustHaveRegister  "NoSpillStore"
  v94|d DWORD "[r10|d]" v94|d -1 [1624, 1640[1640 MustHaveRegister  "NoSpillStore"
  v95|q QWORD "[r8|q]" v95|q -1 [1624, 1642[1642 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[vstack:12|q]" v0|q v0|q [596, 608[ "SpillInDominator"
  v97|q QWORD "[vstack:3|q]" v1|q v1|q [596, 608[ "SpillInDominator"
  v98|q QWORD "[vstack:10|q]" v3|q v3|q [663, 1166[[1302, 1367[[1368, 1419[[1420, 1520[[1542, 1593[[1594, 1624[695 LiveAtLoopEnd 818 ShouldHaveRegister 847 LiveAtLoopEnd 939 LiveAtLoopEnd 1085 LiveAtLoopEnd 1154 ShouldHaveRegister  "SpillInDominator"
  v99|d DWORD "[vstack:13|d]" v5|d v5|d [596, 608[ "SpillInDominator"
  v100|d DWORD "[vstack:14|d]" v6|d v6|d [596, 608[ "SpillInDominator"
  v101|d DWORD "[vstack:9|d]" v7|d v7|d [663, 738[695 LiveAtLoopEnd  "StoreAtDefinition"
  v102|d DWORD "[vstack:8|d]" v9|d v9|d [608, 663[ "SpillInDominator"
  v103|q QWORD "[vstack:15|q]" v12|q v12|q [596, 608[ "StoreAtDefinition"
  v104|d DWORD "[vstack:11|d]" v13|d v13|d [596, 608[ "StoreAtDefinition"
  v105|d DWORD "[vstack:25|d]" v18|d v18|d [1041, 1048[ "OneSpillStore"
  v106|d DWORD "[r10|d]" v15|d v15|d [940, 1022[1022 MustHaveRegister  "OneSpillStore"
  v107|d DWORD "[vstack:0|d]" v15|d v15|d [358, 400[[434, 476[[510, 552[[848, 890[ "OneSpillStore"
  v108|d DWORD "[rdx|d]" v26|d v26|d [940, 1020[1020 MustHaveRegister  "OneSpillStore"
  v109|d DWORD "[vstack:1|d]" v26|d v26|d [434, 476[[510, 552[[848, 890[ "OneSpillStore"
  v110|d DWORD "[r13|d]" v30|d v30|d [940, 1018[1018 MustHaveRegister  "OneSpillStore"
  v111|d DWORD "[vstack:2|d]" v30|d v30|d [510, 552[[848, 890[ "OneSpillStore"
  v112|d DWORD "[vstack:7|d]" v71|d v71|d [663, 692[[696, 737[692 ShouldHaveRegister 716 ShouldHaveRegister 736 ShouldHaveRegister  "OneSpillStore"
  v113|d DWORD "[vstack:6|d]" v72|d v72|d [608, 663[ "OneSpillStore"
  v114|q QWORD "[vstack:3|q]" v1|q v1|q [608, 661[ "SpillInDominator"
  v115|d DWORD "[vstack:11|d]" v13|d v13|d [608, 663[ "StoreAtDefinition"
  v116|d DWORD "[vstack:13|d]" v5|d v5|d [608, 663[ "SpillInDominator"
  v117|q QWORD "[vstack:12|q]" v0|q v0|q [608, 659[ "SpillInDominator"
  v118|d DWORD "[vstack:14|d]" v6|d v6|d [608, 663[ "SpillInDominator"
  v119|q QWORD "[vstack:15|q]" v12|q v12|q [608, 663[ "StoreAtDefinition"
  v120|d DWORD "[vstack:6|d]" v72|d v72|d [663, 690[[696, 737[690 ShouldHaveRegister 736 ShouldHaveRegister  "OneSpillStore"
  v121|d DWORD "[vstack:8|d]" v9|d v9|d [663, 706[695 LiveAtLoopEnd  "SpillInDominator"
  v122|q QWORD "[vstack:3|q]" v1|q v1|q [661, 738[ "SpillInDominator"
  v123|d DWORD "[vstack:11|d]" v13|d v13|d [663, 939[[940, 1085[[1086, 1152[938 ShouldHaveRegister 1084 ShouldHaveRegister 1152 ShouldHaveRegister  "StoreAtDefinition"
  v124|q QWORD "[vstack:12|q]" v0|q v0|q [659, 663[ "SpillInDominator"
  v125|d DWORD "[vstack:13|d]" v5|d v5|d [663, 1166[[1302, 1367[[1368, 1419[[1420, 1520[[1542, 1572[[1594, 1624[939 LiveAtLoopEnd 1085 LiveAtLoopEnd  "SpillInDominator"
  v126|d DWORD "[vstack:14|d]" v6|d v6|d [663, 937[[940, 1083[[1086, 1202[ "SpillInDominator"
  v127|q QWORD "[vstack:15|q]" v12|q v12|q [663, 924[[940, 1083[[1086, 1137[[1302, 1326[ "StoreAtDefinition"
  v128|q QWORD "[vstack:4|q]" v74|q v74|q [663, 668[668 ShouldHaveRegister  "OneSpillStore"
  v129|q QWORD "[vstack:12|q]" v0|q v0|q [663, 1166[[1302, 1367[[1368, 1419[[1420, 1520[[1542, 1593[[1594, 1624[939 LiveAtLoopEnd 1085 LiveAtLoopEnd  "SpillInDominator"
  v130|q QWORD "[rdx|q]" v1|q v1|q [738, 813[ "SpillInDominator"
  v131|d DWORD "[r8|d]" v72|d v72|d [1302, 1326[ "OneSpillStore"
  v132|d DWORD "[r10|d]" v71|d v71|d [1302, 1326[ "OneSpillStore"
  v133|d DWORD "[rbx|d]" v9|d v9|d [706, 716[[1302, 1312[716 MustHaveRegister  "SpillInDominator"
  v134|d DWORD "[r9|d]" v7|d v7|d [738, 823[748 MustHaveRegister 798 MustHaveRegister  "StoreAtDefinition"
  v135|q QWORD "[rcx|q]" v3|q v3|q [1624, 1645[ "SpillInDominator"
  v136|d DWORD "[rax|d]" v13|d v13|d [1302, 1326[ "StoreAtDefinition"
  v137|q QWORD "[rsi|q]" v0|q v0|q [1624, 1645[ "SpillInDominator"
  v138|d DWORD "[r9|d]" v5|d v5|d [1624, 1645[ "SpillInDominator"
  v139|d DWORD "[r11|d]" v6|d v6|d [1202, 1230[[1240, 1250[[1302, 1367[[1368, 1419[[1420, 1541[[1542, 1572[[1594, 1645[1228 MustHaveRegister 1230 MustHaveRegister  "SpillInDominator"
  v140|q QWORD "[rax|q]" v12|q v12|q [1398, 1419[ "StoreAtDefinition"
  v141|d DWORD "[vstack:9|d]" v7|d v7|d [823, 924[[940, 1070[847 LiveAtLoopEnd  "StoreAtDefinition"
  v142|q QWORD "[rdi|q]" v1|q v1|q [813, 823[814 ShouldHaveRegister  "SpillInDominator"
  v143|d DWORD "[vstack:18|d]" v79|d v79|d [823, 830[ "OneSpillStore"
  v144|d DWORD "[vstack:17|d]" v80|d v80|d [750, 823[ "OneSpillStore"
  v145|d DWORD "[vstack:17|d]" v80|d v80|d [823, 830[ "OneSpillStore"
  v146|q QWORD "[vstack:3|q]" v1|q v1|q [823, 1186[847 LiveAtLoopEnd 939 LiveAtLoopEnd 1085 LiveAtLoopEnd 1150 ShouldHaveRegister  "SpillInDominator"
  v147|d DWORD "[r11|d]" v80|d v80|d [830, 842[842 ShouldHaveRegister  "OneSpillStore"
  v148|d DWORD "[r10|d]" v79|d v79|d [830, 844[844 ShouldHaveRegister  "OneSpillStore"
  v149|q QWORD "[rdx|q]" v1|q v1|q [1186, 1232[[1240, 1270[[1276, 1296[[1302, 1367[[1368, 1419[[1420, 1541[[1542, 1593[[1594, 1645[1198 MustHaveRegister 1228 MustHaveRegister 1232 MustHaveRegister 1270 MustHaveRegister 1296 MustHaveRegister 1322 MustHaveRegister  "SpillInDominator"
  v150|d DWORD "[r9|d]" v7|d v7|d [1086, 1134[[1302, 1326[1134 MustHaveRegister  "StoreAtDefinition"
  v151|q QWORD "[vstack:24|q]" v54|q v54|q [1041, 1048[ "OneSpillStore"
  v152|q QWORD "[vstack:19|q]" v55|q v55|q [1039, 1048[ "OneSpillStore"
  v153|q QWORD "[vstack:23|q]" v56|q v56|q [1041, 1048[ "OneSpillStore"
  v154|q QWORD "[vstack:22|q]" v57|q v57|q [1041, 1048[ "OneSpillStore"
  v155|q QWORD "[vstack:21|q]" v58|q v58|q [1041, 1048[ "OneSpillStore"
  v156|q QWORD "[vstack:20|q]" v59|q v59|q [1037, 1041[ "OneSpillStore"
  v157|q QWORD "[vstack:20|q]" v59|q v59|q [1041, 1048[ "OneSpillStore"
  v158|q QWORD "[rdi|q]" v55|q v55|q [1398, 1419[ "OneSpillStore"
  v159|q QWORD "[rsi|q]" v59|q v59|q [1398, 1419[ "OneSpillStore"
  v160|q QWORD "[r8|q]" v58|q v58|q [1398, 1419[ "OneSpillStore"
  v161|q QWORD "[r9|q]" v57|q v57|q [1398, 1419[ "OneSpillStore"
  v162|q QWORD "[rcx|q]" v56|q v56|q [1398, 1419[ "OneSpillStore"
  v163|q QWORD "[r10|q]" v54|q v54|q [1398, 1419[ "OneSpillStore"
  v164|d DWORD "[rbx|d]" v18|d v18|d [1398, 1419[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e1bc5ac slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction v5|DWORD = SUB (x: v4|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v5|DWORD) trueDestinationProbability: 9.93051617825813E-7 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B83" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:12|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -2  <|@ instruction vstack:10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B83 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:3|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -2  <|@ instruction vstack:13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [v2|DWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B48" "B75" 
    successors "B78" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612642046083831603
    begin_IR
      LIR
      nr   66  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v5|DWORD) trueDestinationProbability: 8.983968413646328E-4 condition: > trueDestination: B4 -> B78 falseDestination: B4 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B61" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612637141171924796
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v8|DWORD = MOV input: [v7|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  122  <|@ instruction v9|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction v11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  126  <|@ instruction v10|QWORD = UNCOMPRESSPOINTER (input: v8|DWORD, ~baseRegister: v11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  128  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr  130  <|@ instruction v13|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v10|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}] keyTargets: [B5 -> B6, B5 -> B61] defaultTarget: B5 -> B81 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction v14|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v14|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B60 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction v15|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v16|DWORD = MOV input: [v15|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  168  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B58 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" "B14" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction v17|DWORD = MOVSXB input: [v6|DWORD + v14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  216  <|@ instruction v18|DWORD = MOVZXB value: v17|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction v20|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  220  <|@ instruction v19|QWORD = UNCOMPRESSPOINTER (input: v16|DWORD, ~baseRegister: v20|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  222  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v19|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B9 -> B10, B9 -> B11, B9 -> B14] defaultTarget: B9 -> B57 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609027637273029927
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction v21|DWORD = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  242  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction v22|DWORD = SETCC condition: = <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B10 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction v23|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v23|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction v24|QWORD = MOVZXB value: v17|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction v25|DWORD = MOVZXB input: [v24|QWORD + v23|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [v25|DWORD] destination: B12 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" "B20" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602373890597978734
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction v26|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  316  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v27|DWORD = MOV input: [v26|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  318  <|@ instruction v29|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  320  <|@ instruction v28|QWORD = UNCOMPRESSPOINTER (input: v27|DWORD, ~baseRegister: v29|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  322  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v28|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B14 -> B15, B14 -> B20] defaultTarget: B14 -> B56 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v26|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v26|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B19 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B26" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870269280122293
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction v30|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v31|DWORD = MOV input: [v30|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  394  <|@ instruction v33|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  396  <|@ instruction v32|QWORD = UNCOMPRESSPOINTER (input: v31|DWORD, ~baseRegister: v33|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  398  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v32|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B20 -> B21, B20 -> B26] defaultTarget: B20 -> B55 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v30|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v30|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" "B32" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366647962319916
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction v34|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v35|DWORD = MOV input: [v34|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  470  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  472  <|@ instruction v36|QWORD = UNCOMPRESSPOINTER (input: v35|DWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  474  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v36|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B26 -> B27, B26 -> B32] defaultTarget: B26 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v34|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v34|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B31 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B38" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863026644571602
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction v38|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  544  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v39|DWORD = MOV input: [v38|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  546  <|@ instruction v41|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  548  <|@ instruction v40|QWORD = UNCOMPRESSPOINTER (input: v39|DWORD, ~baseRegister: v41|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  550  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v40|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B32 -> B33, B32 -> B38] defaultTarget: B32 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v38|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v38|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B37 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084642
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:8|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [v6|DWORD, int[0|0x0]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors "B63" "B66" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4590333408894431376
    begin_IR
      LIR
      nr  596  <|@ instruction [v71|DWORD, v72|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9999997723712406 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590333407604006618
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction v73|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  656  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction NULLCHECK address: [v73|DWORD[_] * 8] state [bci:9, 44] <|@ <|@
      nr  658  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE input: v117|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  660  <|@ instruction rsi|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = STACKMOVE (input: v114|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  662  <|@ instruction rdx|DWORD = MOVE input: v71|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = STACKMOVE (input: v119|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = STACKMOVE (input: v118|DWORD, ~backupSlot: vstack:16|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = STACKMOVE (input: v116|DWORD, ~backupSlot: vstack:16|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = STACKMOVE (input: v124|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = STACKMOVE (input: v115|DWORD, ~backupSlot: vstack:16|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v101|DWORD[_] = MOVE input: v7|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = STACKMOVE (input: v102|DWORD, ~backupSlot: vstack:16|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVE input: v71|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = STACKMOVE (input: v113|DWORD, ~backupSlot: vstack:16|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  664  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stack: v74|QWORD[.] 
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<CharSequence.charAt(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:21, 44] <|@ <|@
      nr  666  <|@ instruction v75|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction rsi|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction rdx|DWORD = MOVE input: v75|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:26, 44] <|@ <|@
      nr  674  <|@ instruction v76|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction TESTBRANCH (x: v76|DWORD, y: v76|DWORD) trueDestinationProbability: 0.5908646161430428 condition: = trueDestination: B63 -> B65 falseDestination: B63 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584799587332037117
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction v77|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr  692  <|@ instruction v78|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [v78|DWORD, v77|DWORD] destination: B64 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621235127
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9999996147864973 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621458430
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" "B69" 
    successors "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [v71|DWORD, v72|DWORD] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B73" 
    successors "B75" "B72" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4588886804909642497
    begin_IR
      LIR
      nr  738  <|@ instruction [v79|DWORD, v80|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction CMPBRANCH (x: v80|DWORD, y: [v7|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.2596988928056022 condition: < trueDestination: B71 -> B75 falseDestination: B71 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4586620676558964615
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction v81|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  800  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v12|QWORD[.] v1|QWORD[.] v79|DWORD v3|QWORD[.] v80|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v82|DWORD = MOV input: [v81|DWORD[_] * 8 + 8] size: DWORD state [bci:54, 44] <|@ <|@
      nr  802  <|@ instruction v84|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  804  <|@ instruction v83|QWORD = UNCOMPRESSPOINTER (input: v82|DWORD, ~baseRegister: v84|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  806  <|@ instruction v85|QWORD = MOV input: [v83|QWORD + 496] size: QWORD <|@ <|@
      nr  808  <|@ instruction v86|QWORD = MOV input: [v85|QWORD + 64] size: QWORD <|@ <|@
      nr  810  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v81|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr  812  <|@ instruction rsi|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = MOVE input: v130|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  814  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction rcx|DWORD = MOVE input: v79|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rbx|QWORD = MOVE input: v85|QWORD moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction rax|QWORD = MOVE input: v86|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|DWORD[_] = MOVE input: v134|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|QWORD[.] = MOVE input: v142|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = MOVE input: v79|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = STACKMOVE (input: v144|DWORD, ~backupSlot: vstack:16|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v12|QWORD[.] v1|QWORD[.] v79|DWORD v3|QWORD[.] v80|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70, 44] <|@ <|@
      nr  826  <|@ instruction v88|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: v88|DWORD, y: v88|DWORD) trueDestinationProbability: 0.31374907693960497 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B71" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4579260716611284855
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction v89|DWORD = DEC value: v80|DWORD size: DWORD <|@ <|@
      nr  844  <|@ instruction v90|DWORD = DEC value: v79|DWORD size: DWORD <|@ <|@
      nr  846  <|@ instruction JUMP ~outgoingValues: [v90|DWORD, v89|DWORD] destination: B73 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B44" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359405326877352
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction v42|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  882  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v43|DWORD = MOV input: [v42|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  884  <|@ instruction v45|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  886  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  888  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v44|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B38 -> B39, B38 -> B44] defaultTarget: B38 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v42|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v42|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580189478109779700
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
locals: - - - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction SAFEPOINT temp: v91|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:87, 44] <|@ <|@
      nr  938  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B75 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction v46|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1010  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction NULLCHECK address: [v46|DWORD[_] * 8] state [bci:31] <|@ <|@
      nr 1012  <|@ instruction v47|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction v48|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1016  <|@ instruction v49|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1018  <|@ instruction v50|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1020  <|@ instruction v51|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction v52|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1024  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1026  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1028  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1030  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1032  <|@ instruction v57|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1038  <|@ instruction rsi|QWORD[.] = MOVE input: v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1040  <|@ instruction rdx|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVE input: v18|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = STACKMOVE (input: v156|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1042  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v59|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v58|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v57|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v56|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v55|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v54|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
      nr 1044  <|@ instruction v60|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1046  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B19" "B31" "B43" "B46" "B37" "B25" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr 1058  <|@ instruction [v61|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction TESTBRANCH (x: v61|DWORD, y: v61|DWORD) trueDestinationProbability: 0.5929707392225225 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609023662074253018
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v61|DWORD 
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction SAFEPOINT temp: v62|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:24, 44] <|@ <|@
      nr 1084  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B48 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction v63|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1136  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v61|DWORD 
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v64|DWORD = MOV input: [v63|DWORD[_] * 8 + 8] size: DWORD state [bci:24, 44] <|@ <|@
      nr 1138  <|@ instruction v66|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1140  <|@ instruction v65|QWORD = UNCOMPRESSPOINTER (input: v64|DWORD, ~baseRegister: v66|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1142  <|@ instruction v67|QWORD = MOV input: [v65|QWORD + 496] size: QWORD <|@ <|@
      nr 1144  <|@ instruction v68|QWORD = MOV input: [v67|QWORD + 64] size: QWORD <|@ <|@
      nr 1146  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1148  <|@ instruction rsi|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1150  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1152  <|@ instruction rcx|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr 1154  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction rbx|QWORD = MOVE input: v67|QWORD moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction rax|QWORD = MOVE input: v68|QWORD moveKind: QWORD <|@ <|@
      nr 1160  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36, 44] <|@ <|@
      nr 1162  <|@ instruction v70|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B51" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction v92|DWORD[_] = MOV input: [v1|QWORD[.] + 56] size: DWORD <|@ <|@
      nr 1200  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v1|QWORD[.] v6|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v92|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B77 -> B79 falseDestination: B77 -> B80 y: 2 size: DWORD inlinedY: null state [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction MOV (x: [v1|QWORD[.] + 28], y: v6|DWORD) size: DWORD <|@ <|@
      nr 1230  <|@ instruction MOV (x: [v92|DWORD[_] * 8 + 16], y: v6|DWORD) size: DWORD <|@ <|@
      nr 1232  <|@ instruction v93|DWORD = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV (x: [v92|DWORD[_] * 8 + 20], y: v93|DWORD) size: DWORD <|@ <|@
      nr 1236  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1238  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4584523385039648594
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4567169052318882655
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1272  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1274  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4517296380301017088
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1298  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997662585697696
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997194285186786
    begin_IR
      LIR
      nr 1312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1324  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction JUMP ~outgoingValues: [int[-192531|0xfffffffffffd0fed], long[9620|0x2594]] destination: B24 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [int[-187411|0xfffffffffffd23ed], long[660|0x294]] destination: B59 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -200723 size: DWORD <|@ <|@
      nr 1364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1366  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:39, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction JUMP ~outgoingValues: [int[-38195|0xffffffffffff6acd], long[8980|0x2314]] destination: B56 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction JUMP ~outgoingValues: [int[-197651|0xfffffffffffcfbed], long[9620|0x2594]] destination: B40 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction JUMP ~outgoingValues: [int[-97820|0xfffffffffffe81e4], long[0|0x0]] destination: B60 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction MOV x: [r15|QWORD + 1156] y: -199699 size: DWORD <|@ <|@
      nr 1416  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1418  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v59|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v58|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v57|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v56|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v55|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v54|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction JUMP ~outgoingValues: [int[-196627|0xfffffffffffcffed], long[9620|0x2594]] destination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction JUMP ~outgoingValues: [int[-52787|0xffffffffffff31cd], long[8980|0x2314]] destination: B53 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction JUMP ~outgoingValues: [int[-33331|0xffffffffffff7dcd], long[7700|0x1e14]] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction JUMP ~outgoingValues: [int[-194579|0xfffffffffffd07ed], long[9620|0x2594]] destination: B30 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction JUMP ~outgoingValues: [int[-47923|0xffffffffffff44cd], long[8980|0x2314]] destination: B54 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction JUMP ~outgoingValues: [int[-188435|0xfffffffffffd1fed], long[2580|0xa14]] destination: B58 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction JUMP ~outgoingValues: [int[-43059|0xffffffffffff57cd], long[8980|0x2314]] destination: B55 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [int[-191507|0xfffffffffffd13ed], long[9620|0x2594]] destination: B22 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction JUMP ~outgoingValues: [int[-198675|0xfffffffffffcf7ed], long[9620|0x2594]] destination: B42 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction JUMP ~outgoingValues: [int[-189459|0xfffffffffffd1bed], long[9620|0x2594]] destination: B16 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction MOV x: [r15|QWORD + 1156] y: -147483 size: DWORD <|@ <|@
      nr 1538  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1540  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v1|QWORD[.] v6|DWORD - - 
>@ <|@ instruction DEOPT info [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction JUMP ~outgoingValues: [int[-18483|0xffffffffffffb7cd], long[20|0x14]] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [int[-193555|0xfffffffffffd0bed], long[9620|0x2594]] destination: B28 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction JUMP ~outgoingValues: [int[-57651|0xffffffffffff1ecd], long[8980|0x2314]] destination: B52 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction MOV x: [r15|QWORD + 1156] y: -94515 size: DWORD <|@ <|@
      nr 1590  <|@ instruction MOV x: [r15|QWORD + 1168] y: 12952 size: QWORD <|@ <|@
      nr 1592  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction JUMP ~outgoingValues: [int[-195603|0xfffffffffffd03ed], long[9620|0x2594]] destination: B34 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction JUMP ~outgoingValues: [int[-190483|0xfffffffffffd17ed], long[9620|0x2594]] destination: B18 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction JUMP ~outgoingValues: [int[-103707|0xfffffffffffe6ae5], long[0|0x0]] destination: B13 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B60" "B59" "B58" "B57" "B16" "B13" "B56" "B18" "B22" "B55" "B24" "B28" "B54" "B30" "B34" "B53" "B36" "B40" "B52" "B42" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1624  <|@ instruction [v94|DWORD, v95|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v94|DWORD) size: DWORD <|@ <|@
      nr 1642  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v95|QWORD) size: QWORD <|@ <|@
      nr 1644  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #6          // java.util.regex.Matcher.to:int
     5: aload_0       
     6: getfield      #5          // minLength:int
     9: isub          
    10: if_icmple     20
    13: aload_1       
    14: iconst_1      
    15: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    18: iconst_0      
    19: ireturn       
    20: aload_1       
    21: getfield      #6          // java.util.regex.Matcher.to:int
    24: aload_0       
    25: getfield      #5          // minLength:int
    28: isub          
    29: istore        4
    31: iload_2       
    32: iload         4
    34: if_icmpgt     83
    37: aload_0       
    38: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    41: aload_1       
    42: iload_2       
    43: aload_3       
    44: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    47: ifeq          77
    50: aload_1       
    51: iload_2       
    52: putfield      #9          // java.util.regex.Matcher.first:int
    55: aload_1       
    56: getfield      #10         // java.util.regex.Matcher.groups:int[]
    59: iconst_0      
    60: aload_1       
    61: getfield      #9          // java.util.regex.Matcher.first:int
    64: iastore       
    65: aload_1       
    66: getfield      #10         // java.util.regex.Matcher.groups:int[]
    69: iconst_1      
    70: aload_1       
    71: getfield      #11         // java.util.regex.Matcher.last:int
    74: iastore       
    75: iconst_1      
    76: ireturn       
    77: iinc          
    80: goto          31
    83: aload_1       
    84: iconst_1      
    85: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    88: iconst_0      
    89: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v86|q [0, 1[[664, 666[[672, 674[[822, 826[[1042, 1044[[1158, 1162[[1236, 1238[[1272, 1274[[1298, 1300[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v79|d [0, 34[[664, 665[[672, 673[[816, 825[[1042, 1043[[1152, 1161[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v71|d [0, 32[[662, 665[[670, 673[[814, 825[[1040, 1043[[1150, 1161[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v85|q [0, 1[[664, 665[[672, 673[[820, 825[[1042, 1043[[1156, 1161[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 26[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v3|q [0, 30[[660, 665[[668, 673[[812, 825[[1038, 1043[[1148, 1161[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v3|q [0, 36[[664, 665[[672, 673[[818, 825[[1042, 1043[[1154, 1161[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[664, 665[[672, 673[[824, 825[[1042, 1043[[1160, 1161[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [30, 596[30 MustHaveRegister 40 MustHaveRegister 118 MustHaveRegister  "SpillInDominator"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [32, 596[32 MustHaveRegister 38 MustHaveRegister 122 MustHaveRegister  "SpillInDominator"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [34, 65[[1572, 1593[34 MustHaveRegister 42 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[r8|q]" v3|q r8|- [36, 663[36 MustHaveRegister 54 MustHaveRegister 146 MustHaveRegister 180 MustHaveRegister 660 ShouldHaveRegister  "SpillInDominator"
  v4|d DWORD "[r10|d]" v4|d -1 [38, 40[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r10|d]" v5|d v4|d [40, 596[40 MustHaveRegister 42 ShouldHaveRegister 76 ShouldHaveRegister  "SpillInDominator"
  v6|d DWORD "[r11|d]" v6|d v13|d [66, 596[76 MustHaveRegister 130 ShouldHaveRegister 148 MustHaveRegister 168 ShouldHaveRegister 214 MustHaveRegister 594 ShouldHaveRegister  "SpillInDominator"
  v7|d DWORD "[r9|d]" v7|d -1 [118, 663[118 MustHaveRegister 120 MustHaveRegister 128 MustHaveRegister 164 MustHaveRegister 654 MustHaveRegister  "StoreAtDefinition"
  v8|d DWORD "[rcx|d]" v8|d -1 [120, 126[120 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rbx|d]" v9|d -1 [122, 168[[586, 608[122 MustHaveRegister 168 MustHaveRegister 606 MustHaveRegister  "SpillInDominator"
  v10|q QWORD "[rcx|q]" v10|q v8|d [126, 133[126 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rdi|q]" v11|q -1 [124, 127[124 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rdi|q]" v12|q v7|d [128, 596[128 MustHaveRegister  "StoreAtDefinition"
  v13|d DWORD "[rax|d]" v13|d v6|d [130, 596[130 MustHaveRegister  "StoreAtDefinition"
  v14|d DWORD "[rcx|d]" v14|d -1 [146, 214[146 MustHaveRegister 148 MustHaveRegister 214 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[rbp|d]" v15|d -1 [164, 240[[248, 260[[282, 324[164 MustHaveRegister 166 MustHaveRegister 240 MustHaveRegister 260 MustHaveRegister 314 MustHaveRegister  "OneSpillStore"
  v16|d DWORD "[r13|d]" v16|d -1 [166, 220[166 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rcx|d]" v17|d -1 [214, 224[[248, 276[214 MustHaveRegister 216 ShouldHaveRegister 276 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[rbx|d]" v18|d -1 [216, 242[[248, 262[[282, 346[[358, 422[[434, 498[[510, 574[[848, 912[[940, 1041[216 MustHaveRegister 242 ShouldHaveRegister 262 MustHaveRegister 334 MustHaveRegister 346 MustHaveRegister 410 MustHaveRegister 422 MustHaveRegister 486 MustHaveRegister 498 MustHaveRegister 562 MustHaveRegister 574 MustHaveRegister 900 MustHaveRegister 912 MustHaveRegister 1040 ShouldHaveRegister  "OneSpillStore"
  v19|q QWORD "[r13|q]" v19|q v16|d [220, 223[220 MustHaveRegister 222 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[r14|q]" v20|q -1 [218, 221[218 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rcx|d]" v21|d -1 [240, 242[240 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rcx|d]" v22|d v61|d [244, 247[244 MustHaveRegister 246 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rbp|d]" v23|d -1 [260, 278[260 MustHaveRegister 262 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[rcx|q]" v24|q -1 [276, 278[276 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rcx|d]" v25|d -1 [278, 281[278 MustHaveRegister 280 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rcx|d]" v26|d -1 [314, 346[[358, 400[314 MustHaveRegister 316 MustHaveRegister 334 MustHaveRegister 346 MustHaveRegister 390 MustHaveRegister  "OneSpillStore"
  v27|d DWORD "[r13|d]" v27|d -1 [316, 320[316 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[r13|q]" v28|q v27|d [320, 323[320 MustHaveRegister 322 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[r14|q]" v29|q -1 [318, 321[318 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[r13|d]" v30|d -1 [390, 422[[434, 476[390 MustHaveRegister 392 MustHaveRegister 410 MustHaveRegister 422 MustHaveRegister 466 MustHaveRegister  "OneSpillStore"
  v31|d DWORD "[r14|d]" v31|d -1 [392, 396[392 MustHaveRegister 396 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[r14|q]" v32|q v31|d [396, 399[396 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rbp|q]" v33|q -1 [394, 397[394 MustHaveRegister 396 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[rbp|d]" v34|d -1 [466, 498[[510, 552[[848, 890[[940, 1016[466 MustHaveRegister 468 MustHaveRegister 486 MustHaveRegister 498 MustHaveRegister 542 MustHaveRegister 1016 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[r14|d]" v35|d -1 [468, 472[468 MustHaveRegister 472 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[r14|q]" v36|q v35|d [472, 475[472 MustHaveRegister 474 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rcx|q]" v37|q -1 [470, 473[470 MustHaveRegister 472 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[rcx|d]" v38|d -1 [542, 574[[848, 890[[940, 1014[542 MustHaveRegister 544 MustHaveRegister 562 MustHaveRegister 574 MustHaveRegister 880 MustHaveRegister 1014 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[r14|d]" v39|d -1 [544, 548[544 MustHaveRegister 548 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[r14|q]" v40|q v39|d [548, 551[548 MustHaveRegister 550 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[r13|q]" v41|q -1 [546, 549[546 MustHaveRegister 548 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rsi|d]" v42|d -1 [880, 912[[940, 1012[880 MustHaveRegister 882 MustHaveRegister 900 MustHaveRegister 912 MustHaveRegister 1008 MustHaveRegister 1012 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[rdx|d]" v43|d -1 [882, 886[882 MustHaveRegister 886 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rdx|q]" v44|q v43|d [886, 889[886 MustHaveRegister 888 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[r10|q]" v45|q -1 [884, 887[884 MustHaveRegister 886 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[r11|d]" v46|d -1 [1008, 1024[1008 MustHaveRegister 1010 MustHaveRegister 1024 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rsi|d]" v47|d -1 [1012, 1036[1012 MustHaveRegister 1036 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[r8|d]" v48|d -1 [1014, 1034[1014 MustHaveRegister 1034 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[r9|d]" v49|d -1 [1016, 1032[1016 MustHaveRegister 1032 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[rcx|d]" v50|d -1 [1018, 1030[1018 MustHaveRegister 1030 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[rdx|d]" v51|d -1 [1020, 1028[1020 MustHaveRegister 1028 MustHaveRegister  "NoSpillStore"
  v52|d DWORD "[r10|d]" v52|d -1 [1022, 1026[1022 MustHaveRegister 1026 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[r11|q]" v53|q v46|d [1024, 1038[1024 MustHaveRegister 1038 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[r10|q]" v54|q v52|d [1026, 1041[1026 MustHaveRegister  "OneSpillStore"
  v55|q QWORD "[rdx|q]" v55|q v51|d [1028, 1039[1028 MustHaveRegister  "OneSpillStore"
  v56|q QWORD "[rcx|q]" v56|q v50|d [1030, 1041[1030 MustHaveRegister  "OneSpillStore"
  v57|q QWORD "[r9|q]" v57|q v49|d [1032, 1041[1032 MustHaveRegister  "OneSpillStore"
  v58|q QWORD "[r8|q]" v58|q v48|d [1034, 1041[1034 MustHaveRegister  "OneSpillStore"
  v59|q QWORD "[rsi|q]" v59|q v47|d [1036, 1037[1036 MustHaveRegister  "OneSpillStore"
  v60|d DWORD "[rax|d]" v60|d rax|d [1044, 1046[1044 MustHaveRegister 1046 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[rcx|d]" v61|d v22|d [1058, 1083[[1086, 1137[1068 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rsi|q]" v62|q -1 [1082, 1083[1082 MustHaveRegister  "NoDefinitionFound"
  v63|d DWORD "[rsi|d]" v63|d -1 [1134, 1146[1134 MustHaveRegister 1136 MustHaveRegister 1146 MustHaveRegister  "NoSpillStore"
  v64|d DWORD "[rdx|d]" v64|d -1 [1136, 1140[1136 MustHaveRegister 1140 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rdx|q]" v65|q v64|d [1140, 1142[1140 MustHaveRegister 1142 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rcx|q]" v66|q -1 [1138, 1141[1138 MustHaveRegister 1140 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rbx|q]" v67|q -1 [1142, 1156[1142 MustHaveRegister 1144 MustHaveRegister 1156 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[rax|q]" v68|q -1 [1144, 1158[1144 MustHaveRegister 1158 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[rsi|q]" v69|q v63|d [1146, 1148[1146 MustHaveRegister 1148 ShouldHaveRegister  "NoSpillStore"
  v70|d DWORD "[rax|d]" v70|d rax|d [1162, 1164[1162 MustHaveRegister 1164 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[r10|d]" v71|d v78|d [596, 663[606 ShouldHaveRegister 662 ShouldHaveRegister  "OneSpillStore"
  v72|d DWORD "[vstack:6|d]" v72|d v77|d [596, 608[ "OneSpillStore"
  v73|d DWORD "[r13|d]" v73|d -1 [654, 658[654 MustHaveRegister 656 MustHaveRegister 658 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[r13|q]" v74|q v73|d [658, 663[658 MustHaveRegister  "OneSpillStore"
  v75|d DWORD "[rax|d]" v75|d rax|d [666, 670[666 MustHaveRegister 670 ShouldHaveRegister  "NoSpillStore"
  v76|d DWORD "[rax|d]" v76|d rax|d [674, 676[674 MustHaveRegister 676 MustHaveRegister  "NoSpillStore"
  v77|d DWORD "[rsi|d]" v77|d v72|d [690, 695[690 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v78|d DWORD "[r10|d]" v78|d v71|d [692, 695[692 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v79|d DWORD "[r10|d]" v79|d v71|d [738, 823[816 ShouldHaveRegister  "OneSpillStore"
  v80|d DWORD "[r11|d]" v80|d v72|d [738, 750[748 MustHaveRegister  "OneSpillStore"
  v81|d DWORD "[rsi|d]" v81|d -1 [798, 810[798 MustHaveRegister 800 MustHaveRegister 810 MustHaveRegister  "NoSpillStore"
  v82|d DWORD "[rcx|d]" v82|d -1 [800, 804[800 MustHaveRegister 804 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rcx|q]" v83|q v82|d [804, 806[804 MustHaveRegister 806 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[r8|q]" v84|q -1 [802, 805[802 MustHaveRegister 804 MustHaveRegister  "NoSpillStore"
  v85|q QWORD "[rbx|q]" v85|q -1 [806, 820[806 MustHaveRegister 808 MustHaveRegister 820 ShouldHaveRegister  "NoSpillStore"
  v86|q QWORD "[rax|q]" v86|q -1 [808, 822[808 MustHaveRegister 822 ShouldHaveRegister  "NoSpillStore"
  v87|q QWORD "[rsi|q]" v87|q v81|d [810, 812[810 MustHaveRegister 812 ShouldHaveRegister  "NoSpillStore"
  v88|d DWORD "[rax|d]" v88|d rax|d [826, 828[826 MustHaveRegister 828 MustHaveRegister  "NoSpillStore"
  v89|d DWORD "[r11|d]" v89|d v80|d [842, 847[842 MustHaveRegister 846 ShouldHaveRegister  "NoSpillStore"
  v90|d DWORD "[r10|d]" v90|d v79|d [844, 847[844 MustHaveRegister 846 ShouldHaveRegister  "NoSpillStore"
  v91|q QWORD "[rsi|q]" v91|q -1 [936, 937[936 MustHaveRegister  "NoDefinitionFound"
  v92|d DWORD "[rax|d]" v92|d -1 [1198, 1234[1198 MustHaveRegister 1200 MustHaveRegister 1230 MustHaveRegister 1234 MustHaveRegister  "NoSpillStore"
  v93|d DWORD "[r10|d]" v93|d -1 [1232, 1234[1232 MustHaveRegister 1234 MustHaveRegister  "NoSpillStore"
  v94|d DWORD "[r10|d]" v94|d -1 [1624, 1640[1640 MustHaveRegister  "NoSpillStore"
  v95|q QWORD "[r8|q]" v95|q -1 [1624, 1642[1642 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[vstack:12|q]" v0|q v0|q [596, 608[ "SpillInDominator"
  v97|q QWORD "[vstack:3|q]" v1|q v1|q [596, 608[ "SpillInDominator"
  v98|q QWORD "[vstack:10|q]" v3|q v3|q [663, 1166[[1302, 1367[[1368, 1419[[1420, 1520[[1542, 1593[[1594, 1624[695 LiveAtLoopEnd 818 ShouldHaveRegister 847 LiveAtLoopEnd 939 LiveAtLoopEnd 1085 LiveAtLoopEnd 1154 ShouldHaveRegister  "SpillInDominator"
  v99|d DWORD "[vstack:13|d]" v5|d v5|d [596, 608[ "SpillInDominator"
  v100|d DWORD "[vstack:14|d]" v6|d v6|d [596, 608[ "SpillInDominator"
  v101|d DWORD "[vstack:9|d]" v7|d v7|d [663, 738[695 LiveAtLoopEnd  "StoreAtDefinition"
  v102|d DWORD "[vstack:8|d]" v9|d v9|d [608, 663[ "SpillInDominator"
  v103|q QWORD "[vstack:15|q]" v12|q v12|q [596, 608[ "StoreAtDefinition"
  v104|d DWORD "[vstack:11|d]" v13|d v13|d [596, 608[ "StoreAtDefinition"
  v105|d DWORD "[vstack:25|d]" v18|d v18|d [1041, 1048[ "OneSpillStore"
  v106|d DWORD "[r10|d]" v15|d v15|d [940, 1022[1022 MustHaveRegister  "OneSpillStore"
  v107|d DWORD "[vstack:0|d]" v15|d v15|d [358, 400[[434, 476[[510, 552[[848, 890[ "OneSpillStore"
  v108|d DWORD "[rdx|d]" v26|d v26|d [940, 1020[1020 MustHaveRegister  "OneSpillStore"
  v109|d DWORD "[vstack:1|d]" v26|d v26|d [434, 476[[510, 552[[848, 890[ "OneSpillStore"
  v110|d DWORD "[r13|d]" v30|d v30|d [940, 1018[1018 MustHaveRegister  "OneSpillStore"
  v111|d DWORD "[vstack:2|d]" v30|d v30|d [510, 552[[848, 890[ "OneSpillStore"
  v112|d DWORD "[vstack:7|d]" v71|d v71|d [663, 692[[696, 737[692 ShouldHaveRegister 716 ShouldHaveRegister 736 ShouldHaveRegister  "OneSpillStore"
  v113|d DWORD "[vstack:6|d]" v72|d v72|d [608, 663[ "OneSpillStore"
  v114|q QWORD "[vstack:3|q]" v1|q v1|q [608, 661[ "SpillInDominator"
  v115|d DWORD "[vstack:11|d]" v13|d v13|d [608, 663[ "StoreAtDefinition"
  v116|d DWORD "[vstack:13|d]" v5|d v5|d [608, 663[ "SpillInDominator"
  v117|q QWORD "[vstack:12|q]" v0|q v0|q [608, 659[ "SpillInDominator"
  v118|d DWORD "[vstack:14|d]" v6|d v6|d [608, 663[ "SpillInDominator"
  v119|q QWORD "[vstack:15|q]" v12|q v12|q [608, 663[ "StoreAtDefinition"
  v120|d DWORD "[vstack:6|d]" v72|d v72|d [663, 690[[696, 737[690 ShouldHaveRegister 736 ShouldHaveRegister  "OneSpillStore"
  v121|d DWORD "[vstack:8|d]" v9|d v9|d [663, 706[695 LiveAtLoopEnd  "SpillInDominator"
  v122|q QWORD "[vstack:3|q]" v1|q v1|q [661, 738[ "SpillInDominator"
  v123|d DWORD "[vstack:11|d]" v13|d v13|d [663, 939[[940, 1085[[1086, 1152[938 ShouldHaveRegister 1084 ShouldHaveRegister 1152 ShouldHaveRegister  "StoreAtDefinition"
  v124|q QWORD "[vstack:12|q]" v0|q v0|q [659, 663[ "SpillInDominator"
  v125|d DWORD "[vstack:13|d]" v5|d v5|d [663, 1166[[1302, 1367[[1368, 1419[[1420, 1520[[1542, 1572[[1594, 1624[939 LiveAtLoopEnd 1085 LiveAtLoopEnd  "SpillInDominator"
  v126|d DWORD "[vstack:14|d]" v6|d v6|d [663, 937[[940, 1083[[1086, 1202[ "SpillInDominator"
  v127|q QWORD "[vstack:15|q]" v12|q v12|q [663, 924[[940, 1083[[1086, 1137[[1302, 1326[ "StoreAtDefinition"
  v128|q QWORD "[vstack:4|q]" v74|q v74|q [663, 668[668 ShouldHaveRegister  "OneSpillStore"
  v129|q QWORD "[vstack:12|q]" v0|q v0|q [663, 1166[[1302, 1367[[1368, 1419[[1420, 1520[[1542, 1593[[1594, 1624[939 LiveAtLoopEnd 1085 LiveAtLoopEnd  "SpillInDominator"
  v130|q QWORD "[rdx|q]" v1|q v1|q [738, 813[ "SpillInDominator"
  v131|d DWORD "[r8|d]" v72|d v72|d [1302, 1326[ "OneSpillStore"
  v132|d DWORD "[r10|d]" v71|d v71|d [1302, 1326[ "OneSpillStore"
  v133|d DWORD "[rbx|d]" v9|d v9|d [706, 716[[1302, 1312[716 MustHaveRegister  "SpillInDominator"
  v134|d DWORD "[r9|d]" v7|d v7|d [738, 823[748 MustHaveRegister 798 MustHaveRegister  "StoreAtDefinition"
  v135|q QWORD "[rcx|q]" v3|q v3|q [1624, 1645[ "SpillInDominator"
  v136|d DWORD "[rax|d]" v13|d v13|d [1302, 1326[ "StoreAtDefinition"
  v137|q QWORD "[rsi|q]" v0|q v0|q [1624, 1645[ "SpillInDominator"
  v138|d DWORD "[r9|d]" v5|d v5|d [1624, 1645[ "SpillInDominator"
  v139|d DWORD "[r11|d]" v6|d v6|d [1202, 1230[[1240, 1250[[1302, 1367[[1368, 1419[[1420, 1541[[1542, 1572[[1594, 1645[1228 MustHaveRegister 1230 MustHaveRegister  "SpillInDominator"
  v140|q QWORD "[rax|q]" v12|q v12|q [1398, 1419[ "StoreAtDefinition"
  v141|d DWORD "[vstack:9|d]" v7|d v7|d [823, 924[[940, 1070[847 LiveAtLoopEnd  "StoreAtDefinition"
  v142|q QWORD "[rdi|q]" v1|q v1|q [813, 823[814 ShouldHaveRegister  "SpillInDominator"
  v143|d DWORD "[vstack:18|d]" v79|d v79|d [823, 830[ "OneSpillStore"
  v144|d DWORD "[vstack:17|d]" v80|d v80|d [750, 823[ "OneSpillStore"
  v145|d DWORD "[vstack:17|d]" v80|d v80|d [823, 830[ "OneSpillStore"
  v146|q QWORD "[vstack:3|q]" v1|q v1|q [823, 1186[847 LiveAtLoopEnd 939 LiveAtLoopEnd 1085 LiveAtLoopEnd 1150 ShouldHaveRegister  "SpillInDominator"
  v147|d DWORD "[r11|d]" v80|d v80|d [830, 842[842 ShouldHaveRegister  "OneSpillStore"
  v148|d DWORD "[r10|d]" v79|d v79|d [830, 844[844 ShouldHaveRegister  "OneSpillStore"
  v149|q QWORD "[rdx|q]" v1|q v1|q [1186, 1232[[1240, 1270[[1276, 1296[[1302, 1367[[1368, 1419[[1420, 1541[[1542, 1593[[1594, 1645[1198 MustHaveRegister 1228 MustHaveRegister 1232 MustHaveRegister 1270 MustHaveRegister 1296 MustHaveRegister 1322 MustHaveRegister  "SpillInDominator"
  v150|d DWORD "[r9|d]" v7|d v7|d [1086, 1134[[1302, 1326[1134 MustHaveRegister  "StoreAtDefinition"
  v151|q QWORD "[vstack:24|q]" v54|q v54|q [1041, 1048[ "OneSpillStore"
  v152|q QWORD "[vstack:19|q]" v55|q v55|q [1039, 1048[ "OneSpillStore"
  v153|q QWORD "[vstack:23|q]" v56|q v56|q [1041, 1048[ "OneSpillStore"
  v154|q QWORD "[vstack:22|q]" v57|q v57|q [1041, 1048[ "OneSpillStore"
  v155|q QWORD "[vstack:21|q]" v58|q v58|q [1041, 1048[ "OneSpillStore"
  v156|q QWORD "[vstack:20|q]" v59|q v59|q [1037, 1041[ "OneSpillStore"
  v157|q QWORD "[vstack:20|q]" v59|q v59|q [1041, 1048[ "OneSpillStore"
  v158|q QWORD "[rdi|q]" v55|q v55|q [1398, 1419[ "OneSpillStore"
  v159|q QWORD "[rsi|q]" v59|q v59|q [1398, 1419[ "OneSpillStore"
  v160|q QWORD "[r8|q]" v58|q v58|q [1398, 1419[ "OneSpillStore"
  v161|q QWORD "[r9|q]" v57|q v57|q [1398, 1419[ "OneSpillStore"
  v162|q QWORD "[rcx|q]" v56|q v56|q [1398, 1419[ "OneSpillStore"
  v163|q QWORD "[r10|q]" v54|q v54|q [1398, 1419[ "OneSpillStore"
  v164|d DWORD "[rbx|d]" v18|d v18|d [1398, 1419[ "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e1bc5ac slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction v5|DWORD = SUB (x: v4|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v5|DWORD) trueDestinationProbability: 9.93051617825813E-7 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B83" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:12|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr   -2  <|@ instruction vstack:10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B83 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:3|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr   -2  <|@ instruction vstack:13|DWORD = MOVE input: r10|DWORD moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B48" "B75" 
    successors "B78" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612642046083831603
    begin_IR
      LIR
      nr   66  <|@ instruction [v6|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v5|DWORD) trueDestinationProbability: 8.983968413646328E-4 condition: > trueDestination: B4 -> B78 falseDestination: B4 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B61" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612637141171924796
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:14|DWORD = MOVE input: r11|DWORD moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v8|DWORD = MOV input: [v7|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  122  <|@ instruction v9|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction v11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  126  <|@ instruction v10|QWORD = UNCOMPRESSPOINTER (input: v8|DWORD, ~baseRegister: v11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  128  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr  130  <|@ instruction v13|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v10|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}] keyTargets: [B5 -> B6, B5 -> B61] defaultTarget: B5 -> B81 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction v14|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v14|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B60 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction v15|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v16|DWORD = MOV input: [v15|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  168  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B58 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" "B14" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction v17|DWORD = MOVSXB input: [v6|DWORD + v14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  216  <|@ instruction v18|DWORD = MOVZXB value: v17|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction v20|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  220  <|@ instruction v19|QWORD = UNCOMPRESSPOINTER (input: v16|DWORD, ~baseRegister: v20|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  222  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v19|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B9 -> B10, B9 -> B11, B9 -> B14] defaultTarget: B9 -> B57 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609027637273029927
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction v21|DWORD = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  242  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction v22|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|DWORD[_] = MOVE input: v7|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction v23|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v23|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction v24|QWORD = MOVZXB value: v17|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction v25|DWORD = MOVZXB input: [v24|QWORD + v23|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|DWORD[_] = MOVE input: v7|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" "B20" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602373890597978734
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction v26|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  316  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v27|DWORD = MOV input: [v26|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  318  <|@ instruction v29|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  320  <|@ instruction v28|QWORD = UNCOMPRESSPOINTER (input: v27|DWORD, ~baseRegister: v29|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  322  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v28|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B14 -> B15, B14 -> B20] defaultTarget: B14 -> B56 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v26|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v26|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|DWORD[_] = MOVE input: v7|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B26" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870269280122293
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|DWORD[_] = MOVE input: v15|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction v30|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v31|DWORD = MOV input: [v30|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  394  <|@ instruction v33|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  396  <|@ instruction v32|QWORD = UNCOMPRESSPOINTER (input: v31|DWORD, ~baseRegister: v33|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  398  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v32|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B20 -> B21, B20 -> B26] defaultTarget: B20 -> B55 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v30|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v30|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|DWORD[_] = MOVE input: v7|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" "B32" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366647962319916
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD[_] = MOVE input: v26|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction v34|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v35|DWORD = MOV input: [v34|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  470  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  472  <|@ instruction v36|QWORD = UNCOMPRESSPOINTER (input: v35|DWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  474  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v36|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B26 -> B27, B26 -> B32] defaultTarget: B26 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v34|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v34|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|DWORD[_] = MOVE input: v7|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B38" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863026644571602
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD[_] = MOVE input: v30|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction v38|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  544  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v39|DWORD = MOV input: [v38|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  546  <|@ instruction v41|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  548  <|@ instruction v40|QWORD = UNCOMPRESSPOINTER (input: v39|DWORD, ~baseRegister: v41|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  550  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v40|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B32 -> B33, B32 -> B38] defaultTarget: B32 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v38|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v38|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|DWORD[_] = MOVE input: v7|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084642
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:8|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors "B63" "B66" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4590333408894431376
    begin_IR
      LIR
      nr  596  <|@ instruction [v71|DWORD, v72|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9999997723712406 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590333407604006618
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: v9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction v73|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  656  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction NULLCHECK address: [v73|DWORD[_] * 8] state [bci:9, 44] <|@ <|@
      nr  658  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE input: v117|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  660  <|@ instruction rsi|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = STACKMOVE (input: v114|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  662  <|@ instruction rdx|DWORD = MOVE input: v71|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = STACKMOVE (input: v119|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = STACKMOVE (input: v118|DWORD, ~backupSlot: vstack:16|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = STACKMOVE (input: v116|DWORD, ~backupSlot: vstack:16|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = STACKMOVE (input: v124|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = STACKMOVE (input: v115|DWORD, ~backupSlot: vstack:16|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v101|DWORD[_] = MOVE input: v7|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = STACKMOVE (input: v102|DWORD, ~backupSlot: vstack:16|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVE input: v71|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = STACKMOVE (input: v113|DWORD, ~backupSlot: vstack:16|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  664  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stack: v74|QWORD[.] 
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<CharSequence.charAt(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:21, 44] <|@ <|@
      nr  666  <|@ instruction v75|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction rsi|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction rdx|DWORD = MOVE input: v75|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:26, 44] <|@ <|@
      nr  674  <|@ instruction v76|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction TESTBRANCH (x: v76|DWORD, y: v76|DWORD) trueDestinationProbability: 0.5908646161430428 condition: = trueDestination: B63 -> B65 falseDestination: B63 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584799587332037117
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction v77|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr  692  <|@ instruction v78|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: v121|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOVE input: v101|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621235127
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE input: v121|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9999996147864973 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621458430
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" "B69" 
    successors "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOVE input: v120|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE input: v112|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|DWORD[_] = MOVE input: v101|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B73" 
    successors "B75" "B72" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4588886804909642497
    begin_IR
      LIR
      nr  738  <|@ instruction [v79|DWORD, v80|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction CMPBRANCH (x: v80|DWORD, y: [v7|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.2596988928056022 condition: < trueDestination: B71 -> B75 falseDestination: B71 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4586620676558964615
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = MOVE input: v80|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction v81|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  800  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v12|QWORD[.] v1|QWORD[.] v79|DWORD v3|QWORD[.] v80|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v82|DWORD = MOV input: [v81|DWORD[_] * 8 + 8] size: DWORD state [bci:54, 44] <|@ <|@
      nr  802  <|@ instruction v84|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  804  <|@ instruction v83|QWORD = UNCOMPRESSPOINTER (input: v82|DWORD, ~baseRegister: v84|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  806  <|@ instruction v85|QWORD = MOV input: [v83|QWORD + 496] size: QWORD <|@ <|@
      nr  808  <|@ instruction v86|QWORD = MOV input: [v85|QWORD + 64] size: QWORD <|@ <|@
      nr  810  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v81|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr  812  <|@ instruction rsi|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = MOVE input: v130|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  814  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction rcx|DWORD = MOVE input: v79|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rbx|QWORD = MOVE input: v85|QWORD moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction rax|QWORD = MOVE input: v86|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|DWORD[_] = MOVE input: v134|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|QWORD[.] = MOVE input: v142|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = MOVE input: v79|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = STACKMOVE (input: v144|DWORD, ~backupSlot: vstack:16|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v12|QWORD[.] v1|QWORD[.] v79|DWORD v3|QWORD[.] v80|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70, 44] <|@ <|@
      nr  826  <|@ instruction v88|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: v88|DWORD, y: v88|DWORD) trueDestinationProbability: 0.31374907693960497 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B71" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4579260716611284855
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOVE input: v145|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = MOVE input: v143|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction v89|DWORD = DEC value: v80|DWORD size: DWORD <|@ <|@
      nr  844  <|@ instruction v90|DWORD = DEC value: v79|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v134|DWORD[_] = MOVE input: v141|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = MOVE input: v146|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  846  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B44" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359405326877352
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|DWORD[_] = MOVE input: v7|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction v42|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  882  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v43|DWORD = MOV input: [v42|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  884  <|@ instruction v45|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  886  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  888  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v44|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B38 -> B39, B38 -> B44] defaultTarget: B38 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v42|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v42|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580189478109779700
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v146|QWORD[.] = MOVE input: v130|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
locals: - - - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction SAFEPOINT temp: v91|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:87, 44] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v146|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  938  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD[_] = MOVE input: v111|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v108|DWORD[_] = MOVE input: v109|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v106|DWORD[_] = MOVE input: v107|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction v46|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1010  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction NULLCHECK address: [v46|DWORD[_] * 8] state [bci:31] <|@ <|@
      nr 1012  <|@ instruction v47|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction v48|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1016  <|@ instruction v49|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1018  <|@ instruction v50|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1020  <|@ instruction v51|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction v52|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1024  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1026  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1028  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1030  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1032  <|@ instruction v57|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1038  <|@ instruction rsi|QWORD[.] = MOVE input: v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1040  <|@ instruction rdx|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVE input: v18|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = STACKMOVE (input: v156|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1042  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v59|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v58|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v57|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v56|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v55|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v54|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
      nr 1044  <|@ instruction v60|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1046  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B19" "B31" "B43" "B46" "B37" "B25" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr 1058  <|@ instruction [v61|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction TESTBRANCH (x: v61|DWORD, y: v61|DWORD) trueDestinationProbability: 0.5929707392225225 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609023662074253018
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v61|DWORD 
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction SAFEPOINT temp: v62|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:24, 44] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v146|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1084  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v150|DWORD[_] = MOVE input: v141|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction v63|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1136  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v61|DWORD 
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v64|DWORD = MOV input: [v63|DWORD[_] * 8 + 8] size: DWORD state [bci:24, 44] <|@ <|@
      nr 1138  <|@ instruction v66|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1140  <|@ instruction v65|QWORD = UNCOMPRESSPOINTER (input: v64|DWORD, ~baseRegister: v66|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1142  <|@ instruction v67|QWORD = MOV input: [v65|QWORD + 496] size: QWORD <|@ <|@
      nr 1144  <|@ instruction v68|QWORD = MOV input: [v67|QWORD + 64] size: QWORD <|@ <|@
      nr 1146  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1148  <|@ instruction rsi|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1150  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1152  <|@ instruction rcx|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr 1154  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction rbx|QWORD = MOVE input: v67|QWORD moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction rax|QWORD = MOVE input: v68|QWORD moveKind: QWORD <|@ <|@
      nr 1160  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36, 44] <|@ <|@
      nr 1162  <|@ instruction v70|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B51" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v146|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction v92|DWORD[_] = MOV input: [v1|QWORD[.] + 56] size: DWORD <|@ <|@
      nr 1200  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v1|QWORD[.] v6|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v92|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B77 -> B79 falseDestination: B77 -> B80 y: 2 size: DWORD inlinedY: null state [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction MOV (x: [v1|QWORD[.] + 28], y: v6|DWORD) size: DWORD <|@ <|@
      nr 1230  <|@ instruction MOV (x: [v92|DWORD[_] * 8 + 16], y: v6|DWORD) size: DWORD <|@ <|@
      nr 1232  <|@ instruction v93|DWORD = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV (x: [v92|DWORD[_] * 8 + 20], y: v93|DWORD) size: DWORD <|@ <|@
      nr 1236  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1238  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4584523385039648594
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v146|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOVE input: v139|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|QWORD[.] = MOVE input: v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4567169052318882655
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1272  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1274  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4517296380301017088
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1298  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997662585697696
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = MOVE input: v104|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: v100|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v97|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = MOVE input: v72|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = MOVE input: v131|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVE input: v132|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v136|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v101|DWORD[_] = MOVE input: v150|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOVE input: v139|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE input: v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1310  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997194285186786
    begin_IR
      LIR
      nr 1312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = MOVE input: v120|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOVE input: v112|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|DWORD[_] = MOVE input: v101|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = MOVE input: v131|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVE input: v132|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v136|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v101|DWORD[_] = MOVE input: v150|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOVE input: v139|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE input: v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1324  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-192531|0xfffffffffffd0fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1334  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-187411|0xfffffffffffd23ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v146|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -200723 size: DWORD <|@ <|@
      nr 1364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1366  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:39, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[8980|0x2314] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-38195|0xffffffffffff6acd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1376  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v146|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-197651|0xfffffffffffcfbed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1386  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-97820|0xfffffffffffe81e4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1396  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE input: v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = MOVE input: v155|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = MOVE input: v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = MOVE input: v153|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v158|QWORD[.] = MOVE input: v152|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE input: v151|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v164|DWORD = MOVE input: v105|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v146|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction MOV x: [r15|QWORD + 1156] y: -199699 size: DWORD <|@ <|@
      nr 1416  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1418  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v59|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v58|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v57|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v56|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v55|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v54|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-196627|0xfffffffffffcffed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1428  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[8980|0x2314] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-52787|0xffffffffffff31cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1438  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[7700|0x1e14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-33331|0xffffffffffff7dcd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1448  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1458  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[8980|0x2314] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-47923|0xffffffffffff44cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1468  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-188435|0xfffffffffffd1fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1478  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[8980|0x2314] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-43059|0xffffffffffff57cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1488  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-191507|0xfffffffffffd13ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v146|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-198675|0xfffffffffffcf7ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1508  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-189459|0xfffffffffffd1bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1518  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction MOV x: [r15|QWORD + 1156] y: -147483 size: DWORD <|@ <|@
      nr 1538  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1540  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v1|QWORD[.] v6|DWORD - - 
>@ <|@ instruction DEOPT info [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1550  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-193555|0xfffffffffffd0bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v146|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[8980|0x2314] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-57651|0xffffffffffff1ecd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1570  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction MOV x: [r15|QWORD + 1156] y: -94515 size: DWORD <|@ <|@
      nr 1590  <|@ instruction MOV x: [r15|QWORD + 1168] y: 12952 size: QWORD <|@ <|@
      nr 1592  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-195603|0xfffffffffffd03ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1602  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-190483|0xfffffffffffd17ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1612  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-103707|0xfffffffffffe6ae5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1622  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B60" "B59" "B58" "B57" "B16" "B13" "B56" "B18" "B22" "B55" "B24" "B28" "B54" "B30" "B34" "B53" "B36" "B40" "B52" "B42" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1624  <|@ instruction [v94|DWORD, v95|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v94|DWORD) size: DWORD <|@ <|@
      nr 1642  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v95|QWORD) size: QWORD <|@ <|@
      nr 1644  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #6          // java.util.regex.Matcher.to:int
     5: aload_0       
     6: getfield      #5          // minLength:int
     9: isub          
    10: if_icmple     20
    13: aload_1       
    14: iconst_1      
    15: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    18: iconst_0      
    19: ireturn       
    20: aload_1       
    21: getfield      #6          // java.util.regex.Matcher.to:int
    24: aload_0       
    25: getfield      #5          // minLength:int
    28: isub          
    29: istore        4
    31: iload_2       
    32: iload         4
    34: if_icmpgt     83
    37: aload_0       
    38: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    41: aload_1       
    42: iload_2       
    43: aload_3       
    44: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    47: ifeq          77
    50: aload_1       
    51: iload_2       
    52: putfield      #9          // java.util.regex.Matcher.first:int
    55: aload_1       
    56: getfield      #10         // java.util.regex.Matcher.groups:int[]
    59: iconst_0      
    60: aload_1       
    61: getfield      #9          // java.util.regex.Matcher.first:int
    64: iastore       
    65: aload_1       
    66: getfield      #10         // java.util.regex.Matcher.groups:int[]
    69: iconst_1      
    70: aload_1       
    71: getfield      #11         // java.util.regex.Matcher.last:int
    74: iastore       
    75: iconst_1      
    76: ireturn       
    77: iinc          
    80: goto          31
    83: aload_1       
    84: iconst_1      
    85: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    88: iconst_0      
    89: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e1bc5ac slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction v5|DWORD = SUB (x: v4|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v5|DWORD) trueDestinationProbability: 9.93051617825813E-7 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B83" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:12|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr   -2  <|@ instruction vstack:10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B83 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:3|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr   -2  <|@ instruction vstack:13|DWORD = MOVE input: r10|DWORD moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B48" "B75" 
    successors "B78" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612642046083831603
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v5|DWORD) trueDestinationProbability: 8.983968413646328E-4 condition: > trueDestination: B4 -> B78 falseDestination: B4 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B61" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612637141171924796
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:14|DWORD = MOVE input: r11|DWORD moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v8|DWORD = MOV input: [v7|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  122  <|@ instruction v9|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction v11|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  126  <|@ instruction v10|QWORD = UNCOMPRESSPOINTER (input: v8|DWORD, ~baseRegister: v11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  128  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:15|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  130  <|@ instruction v13|DWORD = INC value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  132  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v10|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}] keyTargets: [B5 -> B6, B5 -> B61] defaultTarget: B5 -> B81 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction v14|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v14|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B60 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction v15|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v16|DWORD = MOV input: [v15|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  168  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH x: [v3|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B58 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" "B14" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction v17|DWORD = MOVSXB input: [v6|DWORD + v14|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  216  <|@ instruction v18|DWORD = MOVZXB value: v17|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction v20|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  220  <|@ instruction v19|QWORD = UNCOMPRESSPOINTER (input: v16|DWORD, ~baseRegister: v20|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  222  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v19|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B9 -> B10, B9 -> B11, B9 -> B14] defaultTarget: B9 -> B57 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609027637273029927
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction v21|DWORD = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  242  <|@ instruction CMP (x: v21|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction v22|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction v23|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v23|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction v24|QWORD = MOVZXB value: v17|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction v25|DWORD = MOVZXB input: [v24|QWORD + v23|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" "B20" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602373890597978734
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction v26|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  316  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v27|DWORD = MOV input: [v26|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  318  <|@ instruction v29|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  320  <|@ instruction v28|QWORD = UNCOMPRESSPOINTER (input: v27|DWORD, ~baseRegister: v29|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  322  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v28|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B14 -> B15, B14 -> B20] defaultTarget: B14 -> B56 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v26|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v26|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B26" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870269280122293
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|DWORD[_] = MOVE input: v15|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction v30|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v31|DWORD = MOV input: [v30|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  394  <|@ instruction v33|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  396  <|@ instruction v32|QWORD = UNCOMPRESSPOINTER (input: v31|DWORD, ~baseRegister: v33|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  398  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v32|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B20 -> B21, B20 -> B26] defaultTarget: B20 -> B55 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v30|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v30|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" "B32" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366647962319916
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD[_] = MOVE input: v26|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction v34|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v35|DWORD = MOV input: [v34|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  470  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  472  <|@ instruction v36|QWORD = UNCOMPRESSPOINTER (input: v35|DWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  474  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v36|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B26 -> B27, B26 -> B32] defaultTarget: B26 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v34|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v34|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B38" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863026644571602
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD[_] = MOVE input: v30|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction v38|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  544  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v39|DWORD = MOV input: [v38|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  546  <|@ instruction v41|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  548  <|@ instruction v40|QWORD = UNCOMPRESSPOINTER (input: v39|DWORD, ~baseRegister: v41|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  550  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v40|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B32 -> B33, B32 -> B38] defaultTarget: B32 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v38|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v38|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084642
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:8|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors "B63" "B66" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4590333408894431376
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9999997723712406 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590333407604006618
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction v73|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  656  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction NULLCHECK address: [v73|DWORD[_] * 8] state [bci:9, 44] <|@ <|@
      nr  658  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  660  <|@ instruction rsi|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  662  <|@ instruction rdx|DWORD = MOVE input: v71|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVE input: v71|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = STACKMOVE (input: v113|DWORD, ~backupSlot: vstack:16|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  664  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stack: v74|QWORD[.] 
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<CharSequence.charAt(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:21, 44] <|@ <|@
      nr  666  <|@ instruction v75|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction rsi|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction rdx|DWORD = MOVE input: v75|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
locals: v12|QWORD[.] v1|QWORD[.] v71|DWORD v3|QWORD[.] v72|DWORD v9|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:26, 44] <|@ <|@
      nr  674  <|@ instruction v76|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction TESTBRANCH (x: v76|DWORD, y: v76|DWORD) trueDestinationProbability: 0.5908646161430428 condition: = trueDestination: B63 -> B65 falseDestination: B63 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584799587332037117
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction v77|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr  692  <|@ instruction v78|DWORD = INC value: v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v77|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: v121|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOVE input: v101|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621235127
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE input: v121|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v71|DWORD) trueDestinationProbability: 0.9999996147864973 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621458430
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" "B69" 
    successors "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOVE input: v120|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE input: v112|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|DWORD[_] = MOVE input: v101|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B73" 
    successors "B75" "B72" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4588886804909642497
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction CMPBRANCH (x: v80|DWORD, y: [v7|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.2596988928056022 condition: < trueDestination: B71 -> B75 falseDestination: B71 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4586620676558964615
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = MOVE input: v80|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction v81|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  800  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: v12|QWORD[.] v1|QWORD[.] v79|DWORD v3|QWORD[.] v80|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v82|DWORD = MOV input: [v81|DWORD[_] * 8 + 8] size: DWORD state [bci:54, 44] <|@ <|@
      nr  802  <|@ instruction v84|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  804  <|@ instruction v83|QWORD = UNCOMPRESSPOINTER (input: v82|DWORD, ~baseRegister: v84|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  806  <|@ instruction v85|QWORD = MOV input: [v83|QWORD + 496] size: QWORD <|@ <|@
      nr  808  <|@ instruction v86|QWORD = MOV input: [v85|QWORD + 64] size: QWORD <|@ <|@
      nr  810  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v81|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr  812  <|@ instruction rsi|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = MOVE input: v130|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  814  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction rcx|DWORD = MOVE input: v79|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rbx|QWORD = MOVE input: v85|QWORD moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction rax|QWORD = MOVE input: v86|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = MOVE input: v79|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = STACKMOVE (input: v144|DWORD, ~backupSlot: vstack:16|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: v12|QWORD[.] v1|QWORD[.] v79|DWORD v3|QWORD[.] v80|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70, 44] <|@ <|@
      nr  826  <|@ instruction v88|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: v88|DWORD, y: v88|DWORD) trueDestinationProbability: 0.31374907693960497 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B71" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4579260716611284855
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOVE input: v145|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = MOVE input: v143|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction v89|DWORD = DEC value: v80|DWORD size: DWORD <|@ <|@
      nr  844  <|@ instruction v90|DWORD = DEC value: v79|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v134|DWORD[_] = MOVE input: v141|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = MOVE input: v146|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  846  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B44" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359405326877352
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction v42|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  882  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v43|DWORD = MOV input: [v42|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  884  <|@ instruction v45|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  886  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  888  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v44|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B38 -> B39, B38 -> B44] defaultTarget: B38 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v42|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction CMPBRANCH (x: v18|DWORD, y: [v42|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580189478109779700
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
locals: - - - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction SAFEPOINT temp: v91|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:87, 44] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v146|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  938  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD[_] = MOVE input: v111|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v108|DWORD[_] = MOVE input: v109|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v106|DWORD[_] = MOVE input: v107|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction v46|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1010  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction NULLCHECK address: [v46|DWORD[_] * 8] state [bci:31] <|@ <|@
      nr 1012  <|@ instruction v47|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction v48|DWORD[_] = MOV input: [v38|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1016  <|@ instruction v49|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1018  <|@ instruction v50|DWORD[_] = MOV input: [v30|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1020  <|@ instruction v51|DWORD[_] = MOV input: [v26|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction v52|DWORD[_] = MOV input: [v15|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1024  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1026  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1028  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1030  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1032  <|@ instruction v57|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1038  <|@ instruction rsi|QWORD[.] = MOVE input: v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1040  <|@ instruction rdx|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVE input: v18|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = STACKMOVE (input: v156|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1042  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v59|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v58|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v57|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v56|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v55|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v54|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
      nr 1044  <|@ instruction v60|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1046  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B19" "B31" "B43" "B46" "B37" "B25" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction TESTBRANCH (x: v61|DWORD, y: v61|DWORD) trueDestinationProbability: 0.5929707392225225 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609023662074253018
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v61|DWORD 
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction SAFEPOINT temp: v62|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:24, 44] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v146|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1084  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v150|DWORD[_] = MOVE input: v141|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction v63|DWORD[_] = MOV input: [v7|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1136  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: v61|DWORD 
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v64|DWORD = MOV input: [v63|DWORD[_] * 8 + 8] size: DWORD state [bci:24, 44] <|@ <|@
      nr 1138  <|@ instruction v66|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1140  <|@ instruction v65|QWORD = UNCOMPRESSPOINTER (input: v64|DWORD, ~baseRegister: v66|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1142  <|@ instruction v67|QWORD = MOV input: [v65|QWORD + 496] size: QWORD <|@ <|@
      nr 1144  <|@ instruction v68|QWORD = MOV input: [v67|QWORD + 64] size: QWORD <|@ <|@
      nr 1146  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1148  <|@ instruction rsi|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1150  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1152  <|@ instruction rcx|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr 1154  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction rbx|QWORD = MOVE input: v67|QWORD moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction rax|QWORD = MOVE input: v68|QWORD moveKind: QWORD <|@ <|@
      nr 1160  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36, 44] <|@ <|@
      nr 1162  <|@ instruction v70|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B51" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v146|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction v92|DWORD[_] = MOV input: [v1|QWORD[.] + 56] size: DWORD <|@ <|@
      nr 1200  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v1|QWORD[.] v6|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v92|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B77 -> B79 falseDestination: B77 -> B80 y: 2 size: DWORD inlinedY: null state [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction MOV (x: [v1|QWORD[.] + 28], y: v6|DWORD) size: DWORD <|@ <|@
      nr 1230  <|@ instruction MOV (x: [v92|DWORD[_] * 8 + 16], y: v6|DWORD) size: DWORD <|@ <|@
      nr 1232  <|@ instruction v93|DWORD = MOV input: [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV (x: [v92|DWORD[_] * 8 + 20], y: v93|DWORD) size: DWORD <|@ <|@
      nr 1236  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1238  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4584523385039648594
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v146|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4567169052318882655
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1272  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1274  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4517296380301017088
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1298  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997662585697696
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = MOVE input: v104|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: v100|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v97|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = MOVE input: v72|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = MOVE input: v131|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVE input: v132|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1310  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997194285186786
    begin_IR
      LIR
      nr 1312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = MOVE input: v120|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOVE input: v112|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|DWORD[_] = MOVE input: v101|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction MOVB x: [v1|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = MOVE input: v131|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVE input: v132|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1324  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-192531|0xfffffffffffd0fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1334  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-187411|0xfffffffffffd23ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v146|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -200723 size: DWORD <|@ <|@
      nr 1364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1366  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:39, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[8980|0x2314] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-38195|0xffffffffffff6acd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1376  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v146|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-197651|0xfffffffffffcfbed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1386  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-97820|0xfffffffffffe81e4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1396  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE input: v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = MOVE input: v155|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = MOVE input: v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = MOVE input: v153|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v158|QWORD[.] = MOVE input: v152|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE input: v151|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v164|DWORD = MOVE input: v105|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v146|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction MOV x: [r15|QWORD + 1156] y: -199699 size: DWORD <|@ <|@
      nr 1416  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1418  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - v59|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v58|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v57|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v56|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v55|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - v54|QWORD[.] v18|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: v12|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-196627|0xfffffffffffcffed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1428  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[8980|0x2314] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-52787|0xffffffffffff31cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1438  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[7700|0x1e14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-33331|0xffffffffffff7dcd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1448  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1458  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[8980|0x2314] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-47923|0xffffffffffff44cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1468  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-188435|0xfffffffffffd1fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1478  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[8980|0x2314] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-43059|0xffffffffffff57cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1488  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-191507|0xfffffffffffd13ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v146|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-198675|0xfffffffffffcf7ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1508  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-189459|0xfffffffffffd1bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1518  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction MOV x: [r15|QWORD + 1156] y: -147483 size: DWORD <|@ <|@
      nr 1538  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1540  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v1|QWORD[.] v6|DWORD - - 
>@ <|@ instruction DEOPT info [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1550  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-193555|0xfffffffffffd0bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v146|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[8980|0x2314] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-57651|0xffffffffffff1ecd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1570  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction MOV x: [r15|QWORD + 1156] y: -94515 size: DWORD <|@ <|@
      nr 1590  <|@ instruction MOV x: [r15|QWORD + 1168] y: 12952 size: QWORD <|@ <|@
      nr 1592  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-195603|0xfffffffffffd03ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1602  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-190483|0xfffffffffffd17ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1612  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: int[-103707|0xfffffffffffe6ae5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1622  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B60" "B59" "B58" "B57" "B16" "B13" "B56" "B18" "B22" "B55" "B24" "B28" "B54" "B30" "B34" "B53" "B36" "B40" "B52" "B42" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v94|DWORD) size: DWORD <|@ <|@
      nr 1642  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v95|QWORD) size: QWORD <|@ <|@
      nr 1644  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v6|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #6          // java.util.regex.Matcher.to:int
     5: aload_0       
     6: getfield      #5          // minLength:int
     9: isub          
    10: if_icmple     20
    13: aload_1       
    14: iconst_1      
    15: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    18: iconst_0      
    19: ireturn       
    20: aload_1       
    21: getfield      #6          // java.util.regex.Matcher.to:int
    24: aload_0       
    25: getfield      #5          // minLength:int
    28: isub          
    29: istore        4
    31: iload_2       
    32: iload         4
    34: if_icmpgt     83
    37: aload_0       
    38: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    41: aload_1       
    42: iload_2       
    43: aload_3       
    44: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    47: ifeq          77
    50: aload_1       
    51: iload_2       
    52: putfield      #9          // java.util.regex.Matcher.first:int
    55: aload_1       
    56: getfield      #10         // java.util.regex.Matcher.groups:int[]
    59: iconst_0      
    60: aload_1       
    61: getfield      #9          // java.util.regex.Matcher.first:int
    64: iastore       
    65: aload_1       
    66: getfield      #10         // java.util.regex.Matcher.groups:int[]
    69: iconst_1      
    70: aload_1       
    71: getfield      #11         // java.util.regex.Matcher.last:int
    74: iastore       
    75: iconst_1      
    76: ireturn       
    77: iinc          
    80: goto          31
    83: aload_1       
    84: iconst_1      
    85: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    88: iconst_0      
    89: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e1bc5ac slotKind: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 9.93051617825813E-7 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B83" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:12|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr   -2  <|@ instruction vstack:10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B83 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:3|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr   -2  <|@ instruction vstack:13|DWORD = MOVE input: r10|DWORD moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B48" "B75" 
    successors "B78" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612642046083831603
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 8.983968413646328E-4 condition: > trueDestination: B4 -> B78 falseDestination: B4 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B61" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612637141171924796
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:14|DWORD = MOVE input: r11|DWORD moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  122  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  126  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  128  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:15|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  130  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  132  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}] keyTargets: [B5 -> B6, B5 -> B61] defaultTarget: B5 -> B81 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B60 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rbp|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  168  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B58 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" "B14" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rcx|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  216  <|@ instruction rbx|DWORD = MOVZXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  220  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  222  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B9 -> B10, B9 -> B11, B9 -> B14] defaultTarget: B9 -> B57 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609027637273029927
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction rcx|DWORD = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  242  <|@ instruction CMP (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = SETCC condition: = <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rcx|QWORD = MOVZXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction rcx|DWORD = MOVZXB input: [rcx|QWORD + rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" "B20" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602373890597978734
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  316  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r13|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  318  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  320  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  322  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B14 -> B15, B14 -> B20] defaultTarget: B14 -> B56 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B26" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870269280122293
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD[_] = MOVE input: rbp|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r13|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  394  <|@ instruction rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  396  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  398  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B20 -> B21, B20 -> B26] defaultTarget: B20 -> B55 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" "B32" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366647962319916
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction rbp|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  470  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  472  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  474  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B26 -> B27, B26 -> B32] defaultTarget: B26 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B38" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863026644571602
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD[_] = MOVE input: r13|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  544  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  546  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  548  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  550  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B32 -> B33, B32 -> B38] defaultTarget: B32 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084642
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:8|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors "B63" "B66" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4590333408894431376
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999997723712406 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590333407604006618
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction r13|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  656  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: vstack:15|QWORD[.] vstack:3|QWORD[.] r10|DWORD r8|QWORD[.] vstack:6|DWORD vstack:8|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD r8|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction NULLCHECK address: [r13|DWORD[_] * 8] state [bci:9, 44] <|@ <|@
      nr  658  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr  660  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  664  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stack: vstack:4|QWORD[.] 
locals: vstack:15|QWORD[.] vstack:3|QWORD[.] vstack:7|DWORD vstack:10|QWORD[.] vstack:6|DWORD vstack:8|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<CharSequence.charAt(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:21, 44] <|@ <|@
      nr  668  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
locals: vstack:15|QWORD[.] vstack:3|QWORD[.] vstack:7|DWORD vstack:10|QWORD[.] vstack:6|DWORD vstack:8|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:26, 44] <|@ <|@
      nr  676  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5908646161430428 condition: = trueDestination: B63 -> B65 falseDestination: B63 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584799587332037117
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction rsi|DWORD = INC value: vstack:6|DWORD size: DWORD <|@ <|@
      nr  692  <|@ instruction r10|DWORD = INC value: vstack:7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD[_] = MOVE input: vstack:9|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621235127
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: vstack:7|DWORD) trueDestinationProbability: 0.9999996147864973 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621458430
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" "B69" 
    successors "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD[_] = MOVE input: vstack:9|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B73" 
    successors "B75" "B72" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4588886804909642497
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.2596988928056022 condition: < trueDestination: B71 -> B75 falseDestination: B71 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4586620676558964615
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:17|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  800  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: vstack:15|QWORD[.] rdx|QWORD[.] r10|DWORD vstack:10|QWORD[.] vstack:17|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] rdx|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:54, 44] <|@ <|@
      nr  802  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  804  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  806  <|@ instruction rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD <|@ <|@
      nr  808  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  810  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  814  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction r8|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:18|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: vstack:15|QWORD[.] vstack:3|QWORD[.] vstack:18|DWORD vstack:10|QWORD[.] vstack:17|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70, 44] <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.31374907693960497 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B71" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4579260716611284855
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:17|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:18|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  844  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD[_] = MOVE input: vstack:9|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  846  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B44" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359405326877352
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  882  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  884  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  886  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  888  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B38 -> B39, B38 -> B44] defaultTarget: B38 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580189478109779700
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
locals: - - - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:87, 44] <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  938  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|DWORD[_] = MOVE input: vstack:2|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD[_] = MOVE input: vstack:1|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE input: vstack:0|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction r11|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1010  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:31] <|@ <|@
      nr 1012  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction r8|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1016  <|@ instruction r9|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1018  <|@ instruction rcx|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1020  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1024  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1026  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1028  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1030  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1032  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:20|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1038  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:19|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1040  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:25|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:24|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:23|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:22|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:21|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1042  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:20|QWORD[.] vstack:25|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:21|QWORD[.] vstack:25|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:22|QWORD[.] vstack:25|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:23|QWORD[.] vstack:25|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:19|QWORD[.] vstack:25|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:24|QWORD[.] vstack:25|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: vstack:15|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
      nr 1046  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B19" "B31" "B43" "B46" "B37" "B25" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5929707392225225 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609023662074253018
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: rcx|DWORD 
locals: vstack:15|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:24, 44] <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1084  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|DWORD[_] = MOVE input: vstack:9|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1136  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: rcx|DWORD 
locals: vstack:15|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:24, 44] <|@ <|@
      nr 1138  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1140  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1142  <|@ instruction rbx|QWORD = MOV input: [rdx|QWORD + 496] size: QWORD <|@ <|@
      nr 1144  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1146  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1150  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1152  <|@ instruction rcx|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD <|@ <|@
      nr 1154  <|@ instruction r8|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1160  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36, 44] <|@ <|@
      nr 1164  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B51" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD <|@ <|@
      nr 1200  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rdx|QWORD[.] vstack:14|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B77 -> B79 falseDestination: B77 -> B80 y: 2 size: DWORD inlinedY: null state [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction MOV (x: [rdx|QWORD[.] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1230  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1232  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1236  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1238  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4584523385039648594
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4567169052318882655
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1272  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1274  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4517296380301017088
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1298  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997662585697696
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1310  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997194285186786
    begin_IR
      LIR
      nr 1312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD[_] = MOVE input: vstack:9|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1324  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-192531|0xfffffffffffd0fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1334  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-187411|0xfffffffffffd23ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -200723 size: DWORD <|@ <|@
      nr 1364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1366  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] rdx|QWORD[.] r11|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction DEOPT info [bci:39, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-38195|0xffffffffffff6acd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1376  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-197651|0xfffffffffffcfbed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1386  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-97820|0xfffffffffffe81e4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1396  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:20|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:21|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:22|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:23|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:19|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:24|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:25|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:15|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction MOV x: [r15|QWORD + 1156] y: -199699 size: DWORD <|@ <|@
      nr 1416  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1418  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rsi|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r8|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rcx|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rdi|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: rax|QWORD[.] rdx|QWORD[.] r11|DWORD vstack:10|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] rdx|QWORD[.] r11|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-196627|0xfffffffffffcffed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1428  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-52787|0xffffffffffff31cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1438  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[7700|0x1e14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33331|0xffffffffffff7dcd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1448  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1458  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-47923|0xffffffffffff44cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1468  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-188435|0xfffffffffffd1fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1478  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-43059|0xffffffffffff57cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1488  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-191507|0xfffffffffffd13ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-198675|0xfffffffffffcf7ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1508  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-189459|0xfffffffffffd1bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1518  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction MOV x: [r15|QWORD + 1156] y: -147483 size: DWORD <|@ <|@
      nr 1538  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1540  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rdx|QWORD[.] r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1550  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-193555|0xfffffffffffd0bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-57651|0xffffffffffff1ecd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1570  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction MOV x: [r15|QWORD + 1156] y: -94515 size: DWORD <|@ <|@
      nr 1590  <|@ instruction MOV x: [r15|QWORD + 1168] y: 12952 size: QWORD <|@ <|@
      nr 1592  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: vstack:12|QWORD[.] rdx|QWORD[.] rcx|DWORD vstack:10|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-195603|0xfffffffffffd03ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1602  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-190483|0xfffffffffffd17ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1612  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-103707|0xfffffffffffe6ae5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1622  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B60" "B59" "B58" "B57" "B16" "B13" "B56" "B18" "B22" "B55" "B24" "B28" "B54" "B30" "B34" "B53" "B36" "B40" "B52" "B42" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1642  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1644  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD rcx|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #6          // java.util.regex.Matcher.to:int
     5: aload_0       
     6: getfield      #5          // minLength:int
     9: isub          
    10: if_icmple     20
    13: aload_1       
    14: iconst_1      
    15: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    18: iconst_0      
    19: ireturn       
    20: aload_1       
    21: getfield      #6          // java.util.regex.Matcher.to:int
    24: aload_0       
    25: getfield      #5          // minLength:int
    28: isub          
    29: istore        4
    31: iload_2       
    32: iload         4
    34: if_icmpgt     83
    37: aload_0       
    38: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    41: aload_1       
    42: iload_2       
    43: aload_3       
    44: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    47: ifeq          77
    50: aload_1       
    51: iload_2       
    52: putfield      #9          // java.util.regex.Matcher.first:int
    55: aload_1       
    56: getfield      #10         // java.util.regex.Matcher.groups:int[]
    59: iconst_0      
    60: aload_1       
    61: getfield      #9          // java.util.regex.Matcher.first:int
    64: iastore       
    65: aload_1       
    66: getfield      #10         // java.util.regex.Matcher.groups:int[]
    69: iconst_1      
    70: aload_1       
    71: getfield      #11         // java.util.regex.Matcher.last:int
    74: iastore       
    75: iconst_1      
    76: ireturn       
    77: iinc          
    80: goto          31
    83: aload_1       
    84: iconst_1      
    85: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    88: iconst_0      
    89: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e1bc5ac slotKind: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 9.93051617825813E-7 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B83" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:12|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr   -2  <|@ instruction vstack:10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B83 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:3|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr   -2  <|@ instruction vstack:13|DWORD = MOVE input: r10|DWORD moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B48" "B75" 
    successors "B78" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612642046083831603
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 8.983968413646328E-4 condition: > trueDestination: B4 -> B78 falseDestination: B4 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B61" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612637141171924796
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:14|DWORD = MOVE input: r11|DWORD moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  122  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  126  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  128  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:15|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  130  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  132  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}] keyTargets: [B5 -> B6, B5 -> B61] defaultTarget: B5 -> B81 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B60 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rbp|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  168  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B58 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" "B14" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction rcx|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  216  <|@ instruction rbx|DWORD = MOVZXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  220  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  222  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B9 -> B10, B9 -> B11, B9 -> B14] defaultTarget: B9 -> B57 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609027637273029927
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction rcx|DWORD = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  242  <|@ instruction CMP (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = SETCC condition: = <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rcx|QWORD = MOVZXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction rcx|DWORD = MOVZXB input: [rcx|QWORD + rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" "B20" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602373890597978734
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  316  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r13|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  318  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  320  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  322  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B14 -> B15, B14 -> B20] defaultTarget: B14 -> B56 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B26" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870269280122293
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD[_] = MOVE input: rbp|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r13|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  394  <|@ instruction rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  396  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  398  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B20 -> B21, B20 -> B26] defaultTarget: B20 -> B55 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" "B32" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366647962319916
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction rbp|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  468  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  470  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  472  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  474  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B26 -> B27, B26 -> B32] defaultTarget: B26 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B38" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863026644571602
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD[_] = MOVE input: r13|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  544  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  546  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  548  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  550  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B32 -> B33, B32 -> B38] defaultTarget: B32 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084642
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:8|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  594  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors "B63" "B66" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4590333408894431376
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999997723712406 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590333407604006618
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction r13|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  656  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: vstack:15|QWORD[.] vstack:3|QWORD[.] r10|DWORD r8|QWORD[.] vstack:6|DWORD vstack:8|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD r8|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction NULLCHECK address: [r13|DWORD[_] * 8] state [bci:9, 44] <|@ <|@
      nr  658  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr  660  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  664  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stack: vstack:4|QWORD[.] 
locals: vstack:15|QWORD[.] vstack:3|QWORD[.] vstack:7|DWORD vstack:10|QWORD[.] vstack:6|DWORD vstack:8|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<CharSequence.charAt(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:21, 44] <|@ <|@
      nr  668  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
locals: vstack:15|QWORD[.] vstack:3|QWORD[.] vstack:7|DWORD vstack:10|QWORD[.] vstack:6|DWORD vstack:8|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:26, 44] <|@ <|@
      nr  676  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5908646161430428 condition: = trueDestination: B63 -> B65 falseDestination: B63 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584799587332037117
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction rsi|DWORD = INC value: vstack:6|DWORD size: DWORD <|@ <|@
      nr  692  <|@ instruction r10|DWORD = INC value: vstack:7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD[_] = MOVE input: vstack:9|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621235127
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: vstack:7|DWORD) trueDestinationProbability: 0.9999996147864973 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621458430
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" "B69" 
    successors "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD[_] = MOVE input: vstack:9|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B73" 
    successors "B75" "B72" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4588886804909642497
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.2596988928056022 condition: < trueDestination: B71 -> B75 falseDestination: B71 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4586620676558964615
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:17|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  800  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: vstack:15|QWORD[.] rdx|QWORD[.] r10|DWORD vstack:10|QWORD[.] vstack:17|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] rdx|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:54, 44] <|@ <|@
      nr  802  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  804  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  806  <|@ instruction rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD <|@ <|@
      nr  808  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  810  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  814  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction r8|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:18|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: vstack:15|QWORD[.] vstack:3|QWORD[.] vstack:18|DWORD vstack:10|QWORD[.] vstack:17|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70, 44] <|@ <|@
      nr  828  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.31374907693960497 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B71" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4579260716611284855
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:17|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:18|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  844  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD[_] = MOVE input: vstack:9|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  846  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B44" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359405326877352
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  882  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  884  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  886  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  888  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B38 -> B39, B38 -> B44] defaultTarget: B38 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580189478109779700
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
locals: - - - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:87, 44] <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  938  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|DWORD[_] = MOVE input: vstack:2|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD[_] = MOVE input: vstack:1|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE input: vstack:0|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction r11|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1010  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:31] <|@ <|@
      nr 1012  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1014  <|@ instruction r8|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1016  <|@ instruction r9|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1018  <|@ instruction rcx|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1020  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1024  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1026  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1028  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1030  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1032  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:20|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1038  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:19|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1040  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:25|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:24|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:23|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:22|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:21|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1042  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:20|QWORD[.] vstack:25|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:21|QWORD[.] vstack:25|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:22|QWORD[.] vstack:25|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:23|QWORD[.] vstack:25|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:19|QWORD[.] vstack:25|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:24|QWORD[.] vstack:25|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: vstack:15|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
      nr 1046  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr 1056  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B19" "B31" "B43" "B46" "B37" "B25" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5929707392225225 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609023662074253018
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: rcx|DWORD 
locals: vstack:15|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:24, 44] <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1084  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|DWORD[_] = MOVE input: vstack:9|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1136  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: rcx|DWORD 
locals: vstack:15|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:24, 44] <|@ <|@
      nr 1138  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1140  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1142  <|@ instruction rbx|QWORD = MOV input: [rdx|QWORD + 496] size: QWORD <|@ <|@
      nr 1144  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1146  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1150  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1152  <|@ instruction rcx|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD <|@ <|@
      nr 1154  <|@ instruction r8|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1160  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36, 44] <|@ <|@
      nr 1164  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B51" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD <|@ <|@
      nr 1200  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rdx|QWORD[.] vstack:14|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B77 -> B79 falseDestination: B77 -> B80 y: 2 size: DWORD inlinedY: null state [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction MOV (x: [rdx|QWORD[.] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1230  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1232  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1234  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1236  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1238  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4584523385039648594
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4567169052318882655
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1272  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1274  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4517296380301017088
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1298  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997662585697696
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1310  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997194285186786
    begin_IR
      LIR
      nr 1312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD[_] = MOVE input: vstack:9|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1324  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-192531|0xfffffffffffd0fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1334  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-187411|0xfffffffffffd23ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1344  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -200723 size: DWORD <|@ <|@
      nr 1364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1366  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] rdx|QWORD[.] r11|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction DEOPT info [bci:39, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-38195|0xffffffffffff6acd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1376  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-197651|0xfffffffffffcfbed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1386  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-97820|0xfffffffffffe81e4] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1396  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:20|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:21|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:22|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:23|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:19|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:24|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:25|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:15|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction MOV x: [r15|QWORD + 1156] y: -199699 size: DWORD <|@ <|@
      nr 1416  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1418  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rsi|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r8|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rcx|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rdi|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: rax|QWORD[.] rdx|QWORD[.] r11|DWORD vstack:10|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] rdx|QWORD[.] r11|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-196627|0xfffffffffffcffed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1428  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-52787|0xffffffffffff31cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1438  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[7700|0x1e14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33331|0xffffffffffff7dcd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1448  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1458  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-47923|0xffffffffffff44cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1468  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-188435|0xfffffffffffd1fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1478  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-43059|0xffffffffffff57cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1488  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-191507|0xfffffffffffd13ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-198675|0xfffffffffffcf7ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1508  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-189459|0xfffffffffffd1bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1518  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction MOV x: [r15|QWORD + 1156] y: -147483 size: DWORD <|@ <|@
      nr 1538  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1540  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rdx|QWORD[.] r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1550  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-193555|0xfffffffffffd0bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-57651|0xffffffffffff1ecd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1570  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction MOV x: [r15|QWORD + 1156] y: -94515 size: DWORD <|@ <|@
      nr 1590  <|@ instruction MOV x: [r15|QWORD + 1168] y: 12952 size: QWORD <|@ <|@
      nr 1592  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: vstack:12|QWORD[.] rdx|QWORD[.] rcx|DWORD vstack:10|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-195603|0xfffffffffffd03ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1602  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-190483|0xfffffffffffd17ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1612  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-103707|0xfffffffffffe6ae5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1622  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B60" "B59" "B58" "B57" "B16" "B13" "B56" "B18" "B22" "B55" "B24" "B28" "B54" "B30" "B34" "B53" "B36" "B40" "B52" "B42" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1642  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1644  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD rcx|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #6          // java.util.regex.Matcher.to:int
     5: aload_0       
     6: getfield      #5          // minLength:int
     9: isub          
    10: if_icmple     20
    13: aload_1       
    14: iconst_1      
    15: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    18: iconst_0      
    19: ireturn       
    20: aload_1       
    21: getfield      #6          // java.util.regex.Matcher.to:int
    24: aload_0       
    25: getfield      #5          // minLength:int
    28: isub          
    29: istore        4
    31: iload_2       
    32: iload         4
    34: if_icmpgt     83
    37: aload_0       
    38: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    41: aload_1       
    42: iload_2       
    43: aload_3       
    44: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    47: ifeq          77
    50: aload_1       
    51: iload_2       
    52: putfield      #9          // java.util.regex.Matcher.first:int
    55: aload_1       
    56: getfield      #10         // java.util.regex.Matcher.groups:int[]
    59: iconst_0      
    60: aload_1       
    61: getfield      #9          // java.util.regex.Matcher.first:int
    64: iastore       
    65: aload_1       
    66: getfield      #10         // java.util.regex.Matcher.groups:int[]
    69: iconst_1      
    70: aload_1       
    71: getfield      #11         // java.util.regex.Matcher.last:int
    74: iastore       
    75: iconst_1      
    76: ireturn       
    77: iinc          
    80: goto          31
    83: aload_1       
    84: iconst_1      
    85: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    88: iconst_0      
    89: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e1bc5ac slotKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 9.93051617825813E-7 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B83" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction vstack:12|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction vstack:10|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B83 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction vstack:3|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction vstack:13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B48" "B75" 
    successors "B78" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612642046083831603
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 8.983968413646328E-4 condition: > trueDestination: B4 -> B78 falseDestination: B4 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B61" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612637141171924796
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction vstack:14|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  150  <|@ instruction vstack:9|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  154  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  156  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  158  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  160  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction vstack:15|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction vstack:11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}] keyTargets: [B5 -> B6, B5 -> B61] defaultTarget: B5 -> B81 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B60 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rbp|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B58 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" "B14" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rcx|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction rbx|DWORD = MOVZXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  256  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  258  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B9 -> B10, B9 -> B11, B9 -> B14] defaultTarget: B9 -> B57 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609027637273029927
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction CMP (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  280  <|@ instruction rcx|DWORD = SETCC condition: = <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|QWORD = MOVZXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVZXB input: [rcx|QWORD + rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" "B20" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602373890597978734
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r13|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  374  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  376  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  378  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B14 -> B15, B14 -> B20] defaultTarget: B14 -> B56 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B26" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870269280122293
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction vstack:0|DWORD[_] = MOVE input: rbp|DWORD[_] moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction r13|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  494  <|@ instruction rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B20 -> B21, B20 -> B26] defaultTarget: B20 -> B55 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" "B32" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366647962319916
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction vstack:1|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction rbp|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  612  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  614  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  616  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  618  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B26 -> B27, B26 -> B32] defaultTarget: B26 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B38" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863026644571602
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction vstack:2|DWORD[_] = MOVE input: r13|DWORD[_] moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  734  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  736  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  738  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B32 -> B33, B32 -> B38] defaultTarget: B32 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084642
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction vstack:8|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction vstack:6|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1466  <|@ instruction r10|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1468  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors "B63" "B66" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4590333408894431376
    begin_IR
      LIR
      nr 1470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999997723712406 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590333407604006618
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction r13|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1530  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: vstack:15|QWORD[.] vstack:3|QWORD[.] r10|DWORD r8|QWORD[.] vstack:6|DWORD vstack:8|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD r8|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction NULLCHECK address: [r13|DWORD[_] * 8] state [bci:9, 44] <|@ <|@
      nr 1532  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1534  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1536  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1538  <|@ instruction vstack:7|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1540  <|@ instruction vstack:4|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1542  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stack: vstack:4|QWORD[.] 
locals: vstack:15|QWORD[.] vstack:3|QWORD[.] vstack:7|DWORD vstack:10|QWORD[.] vstack:6|DWORD vstack:8|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<CharSequence.charAt(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:21, 44] <|@ <|@
      nr 1544  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1548  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
locals: vstack:15|QWORD[.] vstack:3|QWORD[.] vstack:7|DWORD vstack:10|QWORD[.] vstack:6|DWORD vstack:8|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:26, 44] <|@ <|@
      nr 1550  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5908646161430428 condition: = trueDestination: B63 -> B65 falseDestination: B63 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584799587332037117
    begin_IR
      LIR
      nr 1552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction rsi|DWORD = INC value: vstack:6|DWORD size: DWORD <|@ <|@
      nr 1566  <|@ instruction r10|DWORD = INC value: vstack:7|DWORD size: DWORD <|@ <|@
      nr 1568  <|@ instruction vstack:6|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ instruction rbx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr 1572  <|@ instruction r9|DWORD[_] = MOVE input: vstack:9|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1574  <|@ instruction r8|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1576  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621235127
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction rbx|DWORD = MOVE input: vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: vstack:7|DWORD) trueDestinationProbability: 0.9999996147864973 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621458430
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" "B69" 
    successors "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr 1664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction r11|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction r10|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr 1676  <|@ instruction r9|DWORD[_] = MOVE input: vstack:9|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1678  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B73" 
    successors "B75" "B72" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4588886804909642497
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.2596988928056022 condition: < trueDestination: B71 -> B75 falseDestination: B71 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4586620676558964615
    begin_IR
      LIR
      nr 1694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1696  <|@ instruction vstack:17|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1746  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: vstack:15|QWORD[.] rdx|QWORD[.] r10|DWORD vstack:10|QWORD[.] vstack:17|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] rdx|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:54, 44] <|@ <|@
      nr 1748  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1750  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1752  <|@ instruction rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD <|@ <|@
      nr 1754  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1756  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1758  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1760  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1762  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1764  <|@ instruction r8|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1766  <|@ instruction vstack:18|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1768  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: vstack:15|QWORD[.] vstack:3|QWORD[.] vstack:18|DWORD vstack:10|QWORD[.] vstack:17|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70, 44] <|@ <|@
      nr 1770  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.31374907693960497 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B71" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4579260716611284855
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction r11|DWORD = MOVE input: vstack:17|DWORD moveKind: DWORD <|@ <|@
      nr 1776  <|@ instruction r10|DWORD = MOVE input: vstack:18|DWORD moveKind: DWORD <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1790  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr 1792  <|@ instruction r9|DWORD[_] = MOVE input: vstack:9|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1794  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B44" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359405326877352
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  850  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  852  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  854  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  856  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B38 -> B39, B38 -> B44] defaultTarget: B38 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580189478109779700
    begin_IR
      LIR
      nr 1812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
locals: - - - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:87, 44] <|@ <|@
      nr 1826  <|@ instruction r11|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD <|@ <|@
      nr 1828  <|@ instruction r10|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr 1830  <|@ instruction r8|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1832  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1834  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1836  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction r13|DWORD[_] = MOVE input: vstack:2|DWORD[_] moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction rdx|DWORD[_] = MOVE input: vstack:1|DWORD[_] moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction r10|DWORD[_] = MOVE input: vstack:0|DWORD[_] moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction r11|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:31] <|@ <|@
      nr 1020  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction r8|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1024  <|@ instruction r9|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1026  <|@ instruction rcx|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1028  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1030  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1032  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1038  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1040  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1046  <|@ instruction vstack:20|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction vstack:19|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction vstack:25|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction vstack:24|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction vstack:23|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction vstack:22|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction vstack:21|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:20|QWORD[.] vstack:25|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:21|QWORD[.] vstack:25|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:22|QWORD[.] vstack:25|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:23|QWORD[.] vstack:25|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:19|QWORD[.] vstack:25|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - vstack:24|QWORD[.] vstack:25|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: vstack:15|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
      nr 1066  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1120  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B19" "B31" "B43" "B46" "B37" "B25" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5929707392225225 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609023662074253018
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: rcx|DWORD 
locals: vstack:15|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:24, 44] <|@ <|@
      nr 1148  <|@ instruction r11|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction r10|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction r8|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1154  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ instruction r9|DWORD[_] = MOVE input: vstack:9|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1212  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: rcx|DWORD 
locals: vstack:15|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:24, 44] <|@ <|@
      nr 1214  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1216  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1218  <|@ instruction rbx|QWORD = MOV input: [rdx|QWORD + 496] size: QWORD <|@ <|@
      nr 1220  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1222  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1224  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction rcx|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction r8|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1230  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] vstack:3|QWORD[.] vstack:14|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36, 44] <|@ <|@
      nr 1232  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B51" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1848  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD <|@ <|@
      nr 1864  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rdx|QWORD[.] vstack:14|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B77 -> B79 falseDestination: B77 -> B80 y: 2 size: DWORD inlinedY: null state [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1918  <|@ instruction r11|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction MOV (x: [rdx|QWORD[.] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1946  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1948  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1950  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1952  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1954  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4584523385039648594
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction r11|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD <|@ <|@
      nr 1802  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4567169052318882655
    begin_IR
      LIR
      nr 1866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1888  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1890  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4517296380301017088
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997662585697696
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction rax|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD <|@ <|@
      nr 1594  <|@ instruction r11|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD <|@ <|@
      nr 1596  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1598  <|@ instruction r8|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction vstack:6|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1608  <|@ instruction vstack:7|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997194285186786
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1636  <|@ instruction r8|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr 1638  <|@ instruction r10|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr 1640  <|@ instruction rax|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction r9|DWORD[_] = MOVE input: vstack:9|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1644  <|@ instruction r11|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD <|@ <|@
      nr 1646  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1658  <|@ instruction vstack:6|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1660  <|@ instruction vstack:7|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1662  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  554  <|@ instruction r10|DWORD = MOVE input: int[-192531|0xfffffffffffd0fed] <|@ <|@
      nr  556  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1424  <|@ instruction r10|DWORD = MOVE input: int[-187411|0xfffffffffffd23ed] <|@ <|@
      nr 1426  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr 1428  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1430  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1432  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction r11|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD <|@ <|@
      nr 1238  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction MOV x: [r15|QWORD + 1156] y: -200723 size: DWORD <|@ <|@
      nr 1256  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1258  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] rdx|QWORD[.] r11|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction DEOPT info [bci:39, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1364  <|@ instruction r10|DWORD = MOVE input: int[-38195|0xffffffffffff6acd] <|@ <|@
      nr 1366  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr 1368  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1370  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction r11|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  884  <|@ instruction r10|DWORD = MOVE input: int[-197651|0xfffffffffffcfbed] <|@ <|@
      nr  886  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr  888  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1444  <|@ instruction r10|DWORD = MOVE input: int[-97820|0xfffffffffffe81e4] <|@ <|@
      nr 1446  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr 1448  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1450  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:20|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction r8|QWORD[.] = MOVE input: vstack:21|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ instruction r9|QWORD[.] = MOVE input: vstack:22|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:23|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:19|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: vstack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction rbx|DWORD = MOVE input: vstack:25|DWORD moveKind: DWORD <|@ <|@
      nr 1084  <|@ instruction rax|QWORD[.] = MOVE input: vstack:15|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction r11|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD <|@ <|@
      nr 1088  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction MOV x: [r15|QWORD + 1156] y: -199699 size: DWORD <|@ <|@
      nr 1106  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1108  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rsi|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r8|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rcx|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rdi|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: rax|QWORD[.] rdx|QWORD[.] r11|DWORD vstack:10|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:12|QWORD[.] rdx|QWORD[.] r11|DWORD vstack:10|QWORD[.] vstack:13|DWORD 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  794  <|@ instruction r10|DWORD = MOVE input: int[-196627|0xfffffffffffcffed] <|@ <|@
      nr  796  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr  798  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1304  <|@ instruction r10|DWORD = MOVE input: int[-52787|0xffffffffffff31cd] <|@ <|@
      nr 1306  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr 1308  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1310  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1312  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction r8|QWORD = MOVE input: long[7700|0x1e14] <|@ <|@
      nr 1384  <|@ instruction r10|DWORD = MOVE input: int[-33331|0xffffffffffff7dcd] <|@ <|@
      nr 1386  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr 1388  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1390  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] <|@ <|@
      nr  676  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1324  <|@ instruction r10|DWORD = MOVE input: int[-47923|0xffffffffffff44cd] <|@ <|@
      nr 1326  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr 1328  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1330  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1404  <|@ instruction r10|DWORD = MOVE input: int[-188435|0xfffffffffffd1fed] <|@ <|@
      nr 1406  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr 1408  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1410  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1412  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1344  <|@ instruction r10|DWORD = MOVE input: int[-43059|0xffffffffffff57cd] <|@ <|@
      nr 1346  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr 1348  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1350  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1352  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  522  <|@ instruction r10|DWORD = MOVE input: int[-191507|0xfffffffffffd13ed] <|@ <|@
      nr  524  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction r11|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  920  <|@ instruction r10|DWORD = MOVE input: int[-198675|0xfffffffffffcf7ed] <|@ <|@
      nr  922  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr  924  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  402  <|@ instruction r10|DWORD = MOVE input: int[-189459|0xfffffffffffd1bed] <|@ <|@
      nr  404  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1894  <|@ instruction r11|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD <|@ <|@
      nr 1896  <|@ instruction NOP <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction MOV x: [r15|QWORD + 1156] y: -147483 size: DWORD <|@ <|@
      nr 1912  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1914  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rdx|QWORD[.] r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1966  <|@ instruction r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] <|@ <|@
      nr 1968  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr 1970  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1972  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1974  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  642  <|@ instruction r10|DWORD = MOVE input: int[-193555|0xfffffffffffd0bed] <|@ <|@
      nr  644  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr  646  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction r11|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1284  <|@ instruction r10|DWORD = MOVE input: int[-57651|0xffffffffffff1ecd] <|@ <|@
      nr 1286  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr 1288  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1290  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1292  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction MOV x: [r15|QWORD + 1156] y: -94515 size: DWORD <|@ <|@
      nr 2016  <|@ instruction MOV x: [r15|QWORD + 1168] y: 12952 size: QWORD <|@ <|@
      nr 2018  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: vstack:12|QWORD[.] rdx|QWORD[.] rcx|DWORD vstack:10|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  762  <|@ instruction r10|DWORD = MOVE input: int[-195603|0xfffffffffffd03ed] <|@ <|@
      nr  764  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  434  <|@ instruction r10|DWORD = MOVE input: int[-190483|0xfffffffffffd17ed] <|@ <|@
      nr  436  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  328  <|@ instruction r10|DWORD = MOVE input: int[-103707|0xfffffffffffe6ae5] <|@ <|@
      nr  330  <|@ instruction r9|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B60" "B59" "B58" "B57" "B16" "B13" "B56" "B18" "B22" "B55" "B24" "B28" "B54" "B30" "B34" "B53" "B36" "B40" "B52" "B42" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction NOP <|@ <|@
      nr 1990  <|@ instruction NOP <|@ <|@
      nr 1992  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1994  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1996  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD rcx|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #6          // java.util.regex.Matcher.to:int
     5: aload_0       
     6: getfield      #5          // minLength:int
     9: isub          
    10: if_icmple     20
    13: aload_1       
    14: iconst_1      
    15: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    18: iconst_0      
    19: ireturn       
    20: aload_1       
    21: getfield      #6          // java.util.regex.Matcher.to:int
    24: aload_0       
    25: getfield      #5          // minLength:int
    28: isub          
    29: istore        4
    31: iload_2       
    32: iload         4
    34: if_icmpgt     83
    37: aload_0       
    38: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    41: aload_1       
    42: iload_2       
    43: aload_3       
    44: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    47: ifeq          77
    50: aload_1       
    51: iload_2       
    52: putfield      #9          // java.util.regex.Matcher.first:int
    55: aload_1       
    56: getfield      #10         // java.util.regex.Matcher.groups:int[]
    59: iconst_0      
    60: aload_1       
    61: getfield      #9          // java.util.regex.Matcher.first:int
    64: iastore       
    65: aload_1       
    66: getfield      #10         // java.util.regex.Matcher.groups:int[]
    69: iconst_1      
    70: aload_1       
    71: getfield      #11         // java.util.regex.Matcher.last:int
    74: iastore       
    75: iconst_1      
    76: ireturn       
    77: iinc          
    80: goto          31
    83: aload_1       
    84: iconst_1      
    85: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    88: iconst_0      
    89: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|d DWORD "[vstack:0|d]" vstack:0|d -1 [458, 948[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[vstack:1|d]" vstack:1|d -1 [578, 946[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[vstack:2|d]" vstack:2|d -1 [698, 944[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[vstack:3|q]" vstack:3|q -1 [80, 1846[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[vstack:4|q]" vstack:4|q -1 [1540, 1544[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[vstack:6|d]" vstack:6|d -1 [1464, 1672[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[vstack:7|d]" vstack:7|d -1 [1538, 1674[ "NOT_SUPPORTED"
  vstack:8|d DWORD "[vstack:8|d]" vstack:8|d -1 [1456, 1586[ "NOT_SUPPORTED"
  vstack:9|d DWORD "[vstack:9|d]" vstack:9|d -1 [150, 1797[ "NOT_SUPPORTED"
  vstack:10|q QWORD "[vstack:10|q]" vstack:10|q -1 [66, 2018[ "NOT_SUPPORTED"
  vstack:11|d DWORD "[vstack:11|d]" vstack:11|d -1 [166, 1826[ "NOT_SUPPORTED"
  vstack:12|q QWORD "[vstack:12|q]" vstack:12|q -1 [64, 2018[ "NOT_SUPPORTED"
  vstack:13|d DWORD "[vstack:13|d]" vstack:13|d -1 [82, 1968[ "NOT_SUPPORTED"
  vstack:14|d DWORD "[vstack:14|d]" vstack:14|d -1 [108, 1918[ "NOT_SUPPORTED"
  vstack:15|q QWORD "[vstack:15|q]" vstack:15|q -1 [162, 1797[ "NOT_SUPPORTED"
  vstack:17|d DWORD "[vstack:17|d]" vstack:17|d -1 [1696, 1774[ "NOT_SUPPORTED"
  vstack:18|d DWORD "[vstack:18|d]" vstack:18|d -1 [1766, 1776[ "NOT_SUPPORTED"
  vstack:19|q QWORD "[vstack:19|q]" vstack:19|q -1 [1050, 1078[ "NOT_SUPPORTED"
  vstack:20|q QWORD "[vstack:20|q]" vstack:20|q -1 [1046, 1070[ "NOT_SUPPORTED"
  vstack:21|q QWORD "[vstack:21|q]" vstack:21|q -1 [1062, 1072[ "NOT_SUPPORTED"
  vstack:22|q QWORD "[vstack:22|q]" vstack:22|q -1 [1060, 1074[ "NOT_SUPPORTED"
  vstack:23|q QWORD "[vstack:23|q]" vstack:23|q -1 [1058, 1076[ "NOT_SUPPORTED"
  vstack:24|q QWORD "[vstack:24|q]" vstack:24|q -1 [1056, 1080[ "NOT_SUPPORTED"
  vstack:25|d DWORD "[vstack:25|d]" vstack:25|d -1 [1054, 1082[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|d DWORD "[stack:92|d]" vstack:0|d -1 [458, 948[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[stack:96|d]" vstack:1|d -1 [578, 946[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[stack:100|d]" vstack:2|d -1 [698, 944[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[stack:72|q]" vstack:3|q -1 [80, 1846[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[stack:128|q]" vstack:4|q -1 [1540, 1544[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[stack:44|d]" vstack:6|d -1 [1464, 1672[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[stack:48|d]" vstack:7|d -1 [1538, 1674[ "NOT_SUPPORTED"
  vstack:8|d DWORD "[stack:40|d]" vstack:8|d -1 [1456, 1586[ "NOT_SUPPORTED"
  vstack:9|d DWORD "[stack:76|d]" vstack:9|d -1 [150, 1797[ "NOT_SUPPORTED"
  vstack:10|q QWORD "[stack:64|q]" vstack:10|q -1 [66, 2018[ "NOT_SUPPORTED"
  vstack:11|d DWORD "[stack:36|d]" vstack:11|d -1 [166, 1826[ "NOT_SUPPORTED"
  vstack:12|q QWORD "[stack:56|q]" vstack:12|q -1 [64, 2018[ "NOT_SUPPORTED"
  vstack:13|d DWORD "[stack:28|d]" vstack:13|d -1 [82, 1968[ "NOT_SUPPORTED"
  vstack:14|d DWORD "[stack:32|d]" vstack:14|d -1 [108, 1918[ "NOT_SUPPORTED"
  vstack:15|q QWORD "[stack:88|q]" vstack:15|q -1 [162, 1797[ "NOT_SUPPORTED"
  vstack:17|d DWORD "[stack:48|d]" vstack:17|d -1 [1696, 1774[ "NOT_SUPPORTED"
  vstack:18|d DWORD "[stack:44|d]" vstack:18|d -1 [1766, 1776[ "NOT_SUPPORTED"
  vstack:19|q QWORD "[stack:120|q]" vstack:19|q -1 [1050, 1078[ "NOT_SUPPORTED"
  vstack:20|q QWORD "[stack:112|q]" vstack:20|q -1 [1046, 1070[ "NOT_SUPPORTED"
  vstack:21|q QWORD "[stack:152|q]" vstack:21|q -1 [1062, 1072[ "NOT_SUPPORTED"
  vstack:22|q QWORD "[stack:144|q]" vstack:22|q -1 [1060, 1074[ "NOT_SUPPORTED"
  vstack:23|q QWORD "[stack:136|q]" vstack:23|q -1 [1058, 1076[ "NOT_SUPPORTED"
  vstack:24|q QWORD "[stack:128|q]" vstack:24|q -1 [1056, 1080[ "NOT_SUPPORTED"
  vstack:25|d DWORD "[stack:40|d]" vstack:25|d -1 [1054, 1082[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e1bc5ac slotKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 9.93051617825813E-7 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B83" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B83 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B48" "B75" 
    successors "B78" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612642046083831603
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 8.983968413646328E-4 condition: > trueDestination: B4 -> B78 falseDestination: B4 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B61" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612637141171924796
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  150  <|@ instruction stack:76|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  154  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  156  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  158  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  160  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction stack:88|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}] keyTargets: [B5 -> B6, B5 -> B61] defaultTarget: B5 -> B81 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B60 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rbp|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B58 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" "B14" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rcx|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction rbx|DWORD = MOVZXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  256  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  258  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B9 -> B10, B9 -> B11, B9 -> B14] defaultTarget: B9 -> B57 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609027637273029927
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction CMP (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  280  <|@ instruction rcx|DWORD = SETCC condition: = <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|QWORD = MOVZXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVZXB input: [rcx|QWORD + rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" "B20" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602373890597978734
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r13|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  374  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  376  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  378  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B14 -> B15, B14 -> B20] defaultTarget: B14 -> B56 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B26" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870269280122293
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction stack:92|DWORD[_] = MOVE input: rbp|DWORD[_] moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction r13|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  494  <|@ instruction rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B20 -> B21, B20 -> B26] defaultTarget: B20 -> B55 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" "B32" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366647962319916
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction stack:96|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction rbp|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  612  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  614  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  616  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  618  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B26 -> B27, B26 -> B32] defaultTarget: B26 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B38" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863026644571602
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction stack:100|DWORD[_] = MOVE input: r13|DWORD[_] moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  734  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  736  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  738  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B32 -> B33, B32 -> B38] defaultTarget: B32 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084642
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction stack:44|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1466  <|@ instruction r10|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1468  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors "B63" "B66" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4590333408894431376
    begin_IR
      LIR
      nr 1470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999997723712406 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590333407604006618
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction r13|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1530  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: stack:88|QWORD[.] stack:72|QWORD[.] r10|DWORD r8|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD r8|QWORD[.] stack:28|DWORD 
>@ <|@ instruction NULLCHECK address: [r13|DWORD[_] * 8] state [bci:9, 44] <|@ <|@
      nr 1532  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1534  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1536  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1538  <|@ instruction stack:48|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1540  <|@ instruction stack:128|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1542  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stack: stack:128|QWORD[.] 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:48|DWORD stack:64|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<CharSequence.charAt(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:21, 44] <|@ <|@
      nr 1544  <|@ instruction rsi|QWORD[.] = MOVE input: stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1548  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:48|DWORD stack:64|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:26, 44] <|@ <|@
      nr 1550  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5908646161430428 condition: = trueDestination: B63 -> B65 falseDestination: B63 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584799587332037117
    begin_IR
      LIR
      nr 1552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction rsi|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr 1566  <|@ instruction r10|DWORD = INC value: stack:48|DWORD size: DWORD <|@ <|@
      nr 1568  <|@ instruction stack:44|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1572  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1574  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1576  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621235127
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: stack:48|DWORD) trueDestinationProbability: 0.9999996147864973 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621458430
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" "B69" 
    successors "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr 1664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction r10|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1676  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1678  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B73" 
    successors "B75" "B72" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4588886804909642497
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.2596988928056022 condition: < trueDestination: B71 -> B75 falseDestination: B71 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4586620676558964615
    begin_IR
      LIR
      nr 1694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1696  <|@ instruction stack:48|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1746  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: stack:88|QWORD[.] rdx|QWORD[.] r10|DWORD stack:64|QWORD[.] stack:48|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:54, 44] <|@ <|@
      nr 1748  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1750  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1752  <|@ instruction rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD <|@ <|@
      nr 1754  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1756  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1758  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1760  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1762  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1764  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1766  <|@ instruction stack:44|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1768  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:44|DWORD stack:64|QWORD[.] stack:48|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70, 44] <|@ <|@
      nr 1770  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.31374907693960497 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B71" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4579260716611284855
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction r11|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1776  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1790  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr 1792  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1794  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B44" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359405326877352
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  850  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  852  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  854  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  856  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B38 -> B39, B38 -> B44] defaultTarget: B38 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580189478109779700
    begin_IR
      LIR
      nr 1812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
locals: - - - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:87, 44] <|@ <|@
      nr 1826  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1828  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1830  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1832  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1834  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1836  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction r13|DWORD[_] = MOVE input: stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction rdx|DWORD[_] = MOVE input: stack:96|DWORD[_] moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction r10|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction r11|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:31] <|@ <|@
      nr 1020  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction r8|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1024  <|@ instruction r9|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1026  <|@ instruction rcx|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1028  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1030  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1032  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1038  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1040  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1046  <|@ instruction stack:112|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction stack:120|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction stack:128|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction stack:136|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction stack:144|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction stack:152|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:112|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:152|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:144|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:136|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:120|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:128|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
      nr 1066  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1120  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B19" "B31" "B43" "B46" "B37" "B25" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5929707392225225 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609023662074253018
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: rcx|DWORD 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:24, 44] <|@ <|@
      nr 1148  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1154  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1212  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: rcx|DWORD 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:24, 44] <|@ <|@
      nr 1214  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1216  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1218  <|@ instruction rbx|QWORD = MOV input: [rdx|QWORD + 496] size: QWORD <|@ <|@
      nr 1220  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1222  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1224  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1230  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36, 44] <|@ <|@
      nr 1232  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B51" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1848  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD <|@ <|@
      nr 1864  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rdx|QWORD[.] stack:32|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B77 -> B79 falseDestination: B77 -> B80 y: 2 size: DWORD inlinedY: null state [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1918  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction MOV (x: [rdx|QWORD[.] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1946  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1948  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1950  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1952  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1954  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4584523385039648594
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1802  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4567169052318882655
    begin_IR
      LIR
      nr 1866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1888  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1890  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4517296380301017088
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997662585697696
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1594  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1596  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1598  <|@ instruction r8|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction stack:44|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1608  <|@ instruction stack:48|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997194285186786
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1636  <|@ instruction r8|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1638  <|@ instruction r10|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1640  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1644  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1646  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1658  <|@ instruction stack:44|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1660  <|@ instruction stack:48|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1662  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  554  <|@ instruction r10|DWORD = MOVE input: int[-192531|0xfffffffffffd0fed] <|@ <|@
      nr  556  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1424  <|@ instruction r10|DWORD = MOVE input: int[-187411|0xfffffffffffd23ed] <|@ <|@
      nr 1426  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1428  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1430  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1432  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1238  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction MOV x: [r15|QWORD + 1156] y: -200723 size: DWORD <|@ <|@
      nr 1256  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1258  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:39, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1364  <|@ instruction r10|DWORD = MOVE input: int[-38195|0xffffffffffff6acd] <|@ <|@
      nr 1366  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1368  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1370  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  884  <|@ instruction r10|DWORD = MOVE input: int[-197651|0xfffffffffffcfbed] <|@ <|@
      nr  886  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  888  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1444  <|@ instruction r10|DWORD = MOVE input: int[-97820|0xfffffffffffe81e4] <|@ <|@
      nr 1446  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1448  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1450  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction rsi|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction r8|QWORD[.] = MOVE input: stack:152|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ instruction r9|QWORD[.] = MOVE input: stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rcx|QWORD[.] = MOVE input: stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction rdi|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1084  <|@ instruction rax|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1088  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction MOV x: [r15|QWORD + 1156] y: -199699 size: DWORD <|@ <|@
      nr 1106  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1108  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rsi|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r8|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rcx|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rdi|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: rax|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  794  <|@ instruction r10|DWORD = MOVE input: int[-196627|0xfffffffffffcffed] <|@ <|@
      nr  796  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  798  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1304  <|@ instruction r10|DWORD = MOVE input: int[-52787|0xffffffffffff31cd] <|@ <|@
      nr 1306  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1308  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1310  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1312  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction r8|QWORD = MOVE input: long[7700|0x1e14] <|@ <|@
      nr 1384  <|@ instruction r10|DWORD = MOVE input: int[-33331|0xffffffffffff7dcd] <|@ <|@
      nr 1386  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1388  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1390  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] <|@ <|@
      nr  676  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1324  <|@ instruction r10|DWORD = MOVE input: int[-47923|0xffffffffffff44cd] <|@ <|@
      nr 1326  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1328  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1330  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1404  <|@ instruction r10|DWORD = MOVE input: int[-188435|0xfffffffffffd1fed] <|@ <|@
      nr 1406  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1408  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1410  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1412  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1344  <|@ instruction r10|DWORD = MOVE input: int[-43059|0xffffffffffff57cd] <|@ <|@
      nr 1346  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1348  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1350  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1352  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  522  <|@ instruction r10|DWORD = MOVE input: int[-191507|0xfffffffffffd13ed] <|@ <|@
      nr  524  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  920  <|@ instruction r10|DWORD = MOVE input: int[-198675|0xfffffffffffcf7ed] <|@ <|@
      nr  922  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  924  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  402  <|@ instruction r10|DWORD = MOVE input: int[-189459|0xfffffffffffd1bed] <|@ <|@
      nr  404  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1894  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1896  <|@ instruction NOP <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction MOV x: [r15|QWORD + 1156] y: -147483 size: DWORD <|@ <|@
      nr 1912  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1914  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rdx|QWORD[.] r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1966  <|@ instruction r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] <|@ <|@
      nr 1968  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1970  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1972  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1974  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  642  <|@ instruction r10|DWORD = MOVE input: int[-193555|0xfffffffffffd0bed] <|@ <|@
      nr  644  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  646  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1284  <|@ instruction r10|DWORD = MOVE input: int[-57651|0xffffffffffff1ecd] <|@ <|@
      nr 1286  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1288  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1290  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1292  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction MOV x: [r15|QWORD + 1156] y: -94515 size: DWORD <|@ <|@
      nr 2016  <|@ instruction MOV x: [r15|QWORD + 1168] y: 12952 size: QWORD <|@ <|@
      nr 2018  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: stack:56|QWORD[.] rdx|QWORD[.] rcx|DWORD stack:64|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  762  <|@ instruction r10|DWORD = MOVE input: int[-195603|0xfffffffffffd03ed] <|@ <|@
      nr  764  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  434  <|@ instruction r10|DWORD = MOVE input: int[-190483|0xfffffffffffd17ed] <|@ <|@
      nr  436  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  328  <|@ instruction r10|DWORD = MOVE input: int[-103707|0xfffffffffffe6ae5] <|@ <|@
      nr  330  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B60" "B59" "B58" "B57" "B16" "B13" "B56" "B18" "B22" "B55" "B24" "B28" "B54" "B30" "B34" "B53" "B36" "B40" "B52" "B42" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction NOP <|@ <|@
      nr 1990  <|@ instruction NOP <|@ <|@
      nr 1992  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1994  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1996  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD rcx|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #6          // java.util.regex.Matcher.to:int
     5: aload_0       
     6: getfield      #5          // minLength:int
     9: isub          
    10: if_icmple     20
    13: aload_1       
    14: iconst_1      
    15: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    18: iconst_0      
    19: ireturn       
    20: aload_1       
    21: getfield      #6          // java.util.regex.Matcher.to:int
    24: aload_0       
    25: getfield      #5          // minLength:int
    28: isub          
    29: istore        4
    31: iload_2       
    32: iload         4
    34: if_icmpgt     83
    37: aload_0       
    38: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    41: aload_1       
    42: iload_2       
    43: aload_3       
    44: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    47: ifeq          77
    50: aload_1       
    51: iload_2       
    52: putfield      #9          // java.util.regex.Matcher.first:int
    55: aload_1       
    56: getfield      #10         // java.util.regex.Matcher.groups:int[]
    59: iconst_0      
    60: aload_1       
    61: getfield      #9          // java.util.regex.Matcher.first:int
    64: iastore       
    65: aload_1       
    66: getfield      #10         // java.util.regex.Matcher.groups:int[]
    69: iconst_1      
    70: aload_1       
    71: getfield      #11         // java.util.regex.Matcher.last:int
    74: iastore       
    75: iconst_1      
    76: ireturn       
    77: iinc          
    80: goto          31
    83: aload_1       
    84: iconst_1      
    85: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    88: iconst_0      
    89: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e1bc5ac slotKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 9.93051617825813E-7 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B83" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B83 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B48" "B75" 
    successors "B78" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612642046083831603
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 8.983968413646328E-4 condition: > trueDestination: B4 -> B78 falseDestination: B4 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B61" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612637141171924796
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  150  <|@ instruction stack:76|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  154  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  156  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  158  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  160  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction stack:88|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}] keyTargets: [B5 -> B6, B5 -> B61] defaultTarget: B5 -> B81 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B60 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rbp|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B58 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" "B14" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rcx|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction rbx|DWORD = MOVZXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  256  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  258  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B9 -> B10, B9 -> B11, B9 -> B14] defaultTarget: B9 -> B57 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609027637273029927
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction CMP (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  280  <|@ instruction rcx|DWORD = SETCC condition: = <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|QWORD = MOVZXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVZXB input: [rcx|QWORD + rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" "B20" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602373890597978734
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r13|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  374  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  376  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  378  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B14 -> B15, B14 -> B20] defaultTarget: B14 -> B56 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B26" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870269280122293
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction stack:92|DWORD[_] = MOVE input: rbp|DWORD[_] moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction r13|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  494  <|@ instruction rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B20 -> B21, B20 -> B26] defaultTarget: B20 -> B55 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" "B32" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366647962319916
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction stack:96|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction rbp|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  612  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  614  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  616  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  618  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B26 -> B27, B26 -> B32] defaultTarget: B26 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B38" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863026644571602
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction stack:100|DWORD[_] = MOVE input: r13|DWORD[_] moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  734  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  736  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  738  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B32 -> B33, B32 -> B38] defaultTarget: B32 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084642
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction stack:44|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1466  <|@ instruction r10|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1468  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors "B63" "B66" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4590333408894431376
    begin_IR
      LIR
      nr 1470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999997723712406 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590333407604006618
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction r13|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1530  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: stack:88|QWORD[.] stack:72|QWORD[.] r10|DWORD r8|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD r8|QWORD[.] stack:28|DWORD 
>@ <|@ instruction NULLCHECK address: [r13|DWORD[_] * 8] state [bci:9, 44] <|@ <|@
      nr 1532  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1534  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1536  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1538  <|@ instruction stack:48|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1540  <|@ instruction stack:128|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1542  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stack: stack:128|QWORD[.] 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:48|DWORD stack:64|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<CharSequence.charAt(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:21, 44] <|@ <|@
      nr 1544  <|@ instruction rsi|QWORD[.] = MOVE input: stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1548  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:48|DWORD stack:64|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:26, 44] <|@ <|@
      nr 1550  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5908646161430428 condition: = trueDestination: B63 -> B65 falseDestination: B63 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584799587332037117
    begin_IR
      LIR
      nr 1552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction rsi|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr 1566  <|@ instruction r10|DWORD = INC value: stack:48|DWORD size: DWORD <|@ <|@
      nr 1568  <|@ instruction stack:44|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1572  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1574  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1576  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621235127
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: stack:48|DWORD) trueDestinationProbability: 0.9999996147864973 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621458430
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" "B69" 
    successors "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr 1664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction r10|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1676  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1678  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B73" 
    successors "B75" "B72" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4588886804909642497
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.2596988928056022 condition: < trueDestination: B71 -> B75 falseDestination: B71 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4586620676558964615
    begin_IR
      LIR
      nr 1694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1696  <|@ instruction stack:48|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1746  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: stack:88|QWORD[.] rdx|QWORD[.] r10|DWORD stack:64|QWORD[.] stack:48|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:54, 44] <|@ <|@
      nr 1748  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1750  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1752  <|@ instruction rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD <|@ <|@
      nr 1754  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1756  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1758  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1760  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1762  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1764  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1766  <|@ instruction stack:44|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1768  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:44|DWORD stack:64|QWORD[.] stack:48|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70, 44] <|@ <|@
      nr 1770  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.31374907693960497 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B71" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4579260716611284855
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction r11|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1776  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1790  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr 1792  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1794  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B44" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359405326877352
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  850  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  852  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  854  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  856  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B38 -> B39, B38 -> B44] defaultTarget: B38 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580189478109779700
    begin_IR
      LIR
      nr 1812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
locals: - - - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:87, 44] <|@ <|@
      nr 1826  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1828  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1830  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1832  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1834  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1836  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction r13|DWORD[_] = MOVE input: stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction rdx|DWORD[_] = MOVE input: stack:96|DWORD[_] moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction r10|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction r11|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:31] <|@ <|@
      nr 1020  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction r8|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1024  <|@ instruction r9|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1026  <|@ instruction rcx|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1028  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1030  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1032  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1038  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1040  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1046  <|@ instruction stack:112|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction stack:120|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction stack:128|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction stack:136|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction stack:144|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction stack:152|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:112|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:152|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:144|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:136|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:120|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:128|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
      nr 1066  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1120  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B19" "B31" "B43" "B46" "B37" "B25" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5929707392225225 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609023662074253018
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: rcx|DWORD 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:24, 44] <|@ <|@
      nr 1148  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1154  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1212  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: rcx|DWORD 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:24, 44] <|@ <|@
      nr 1214  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1216  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1218  <|@ instruction rbx|QWORD = MOV input: [rdx|QWORD + 496] size: QWORD <|@ <|@
      nr 1220  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1222  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1224  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1230  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36, 44] <|@ <|@
      nr 1232  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B51" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1848  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD <|@ <|@
      nr 1864  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rdx|QWORD[.] stack:32|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B77 -> B79 falseDestination: B77 -> B80 y: 2 size: DWORD inlinedY: null state [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1918  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction MOV (x: [rdx|QWORD[.] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1946  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1948  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1950  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1952  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1954  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4584523385039648594
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1802  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4567169052318882655
    begin_IR
      LIR
      nr 1866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1888  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1890  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4517296380301017088
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997662585697696
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1594  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1596  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1598  <|@ instruction r8|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction stack:44|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1608  <|@ instruction stack:48|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997194285186786
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1636  <|@ instruction r8|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1638  <|@ instruction r10|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1640  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1644  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1646  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1658  <|@ instruction stack:44|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1660  <|@ instruction stack:48|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1662  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  554  <|@ instruction r10|DWORD = MOVE input: int[-192531|0xfffffffffffd0fed] <|@ <|@
      nr  556  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1424  <|@ instruction r10|DWORD = MOVE input: int[-187411|0xfffffffffffd23ed] <|@ <|@
      nr 1426  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1428  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1430  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1432  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1238  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction MOV x: [r15|QWORD + 1156] y: -200723 size: DWORD <|@ <|@
      nr 1256  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1258  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:39, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1364  <|@ instruction r10|DWORD = MOVE input: int[-38195|0xffffffffffff6acd] <|@ <|@
      nr 1366  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1368  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1370  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  884  <|@ instruction r10|DWORD = MOVE input: int[-197651|0xfffffffffffcfbed] <|@ <|@
      nr  886  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  888  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1444  <|@ instruction r10|DWORD = MOVE input: int[-97820|0xfffffffffffe81e4] <|@ <|@
      nr 1446  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1448  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1450  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction rsi|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction r8|QWORD[.] = MOVE input: stack:152|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ instruction r9|QWORD[.] = MOVE input: stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rcx|QWORD[.] = MOVE input: stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction rdi|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1084  <|@ instruction rax|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1088  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction MOV x: [r15|QWORD + 1156] y: -199699 size: DWORD <|@ <|@
      nr 1106  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1108  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rsi|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r8|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rcx|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rdi|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: rax|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  794  <|@ instruction r10|DWORD = MOVE input: int[-196627|0xfffffffffffcffed] <|@ <|@
      nr  796  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  798  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1304  <|@ instruction r10|DWORD = MOVE input: int[-52787|0xffffffffffff31cd] <|@ <|@
      nr 1306  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1308  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1310  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1312  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction r8|QWORD = MOVE input: long[7700|0x1e14] <|@ <|@
      nr 1384  <|@ instruction r10|DWORD = MOVE input: int[-33331|0xffffffffffff7dcd] <|@ <|@
      nr 1386  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1388  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1390  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] <|@ <|@
      nr  676  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1324  <|@ instruction r10|DWORD = MOVE input: int[-47923|0xffffffffffff44cd] <|@ <|@
      nr 1326  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1328  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1330  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1404  <|@ instruction r10|DWORD = MOVE input: int[-188435|0xfffffffffffd1fed] <|@ <|@
      nr 1406  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1408  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1410  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1412  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1344  <|@ instruction r10|DWORD = MOVE input: int[-43059|0xffffffffffff57cd] <|@ <|@
      nr 1346  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1348  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1350  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1352  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  522  <|@ instruction r10|DWORD = MOVE input: int[-191507|0xfffffffffffd13ed] <|@ <|@
      nr  524  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  920  <|@ instruction r10|DWORD = MOVE input: int[-198675|0xfffffffffffcf7ed] <|@ <|@
      nr  922  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  924  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  402  <|@ instruction r10|DWORD = MOVE input: int[-189459|0xfffffffffffd1bed] <|@ <|@
      nr  404  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1894  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1896  <|@ instruction NOP <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction MOV x: [r15|QWORD + 1156] y: -147483 size: DWORD <|@ <|@
      nr 1912  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1914  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rdx|QWORD[.] r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1966  <|@ instruction r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] <|@ <|@
      nr 1968  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1970  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1972  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1974  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  642  <|@ instruction r10|DWORD = MOVE input: int[-193555|0xfffffffffffd0bed] <|@ <|@
      nr  644  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  646  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1284  <|@ instruction r10|DWORD = MOVE input: int[-57651|0xffffffffffff1ecd] <|@ <|@
      nr 1286  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1288  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1290  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1292  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction MOV x: [r15|QWORD + 1156] y: -94515 size: DWORD <|@ <|@
      nr 2016  <|@ instruction MOV x: [r15|QWORD + 1168] y: 12952 size: QWORD <|@ <|@
      nr 2018  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: stack:56|QWORD[.] rdx|QWORD[.] rcx|DWORD stack:64|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  762  <|@ instruction r10|DWORD = MOVE input: int[-195603|0xfffffffffffd03ed] <|@ <|@
      nr  764  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  434  <|@ instruction r10|DWORD = MOVE input: int[-190483|0xfffffffffffd17ed] <|@ <|@
      nr  436  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  328  <|@ instruction r10|DWORD = MOVE input: int[-103707|0xfffffffffffe6ae5] <|@ <|@
      nr  330  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B60" "B59" "B58" "B57" "B16" "B13" "B56" "B18" "B22" "B55" "B24" "B28" "B54" "B30" "B34" "B53" "B36" "B40" "B52" "B42" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction NOP <|@ <|@
      nr 1990  <|@ instruction NOP <|@ <|@
      nr 1992  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1994  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1996  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD rcx|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #6          // java.util.regex.Matcher.to:int
     5: aload_0       
     6: getfield      #5          // minLength:int
     9: isub          
    10: if_icmple     20
    13: aload_1       
    14: iconst_1      
    15: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    18: iconst_0      
    19: ireturn       
    20: aload_1       
    21: getfield      #6          // java.util.regex.Matcher.to:int
    24: aload_0       
    25: getfield      #5          // minLength:int
    28: isub          
    29: istore        4
    31: iload_2       
    32: iload         4
    34: if_icmpgt     83
    37: aload_0       
    38: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    41: aload_1       
    42: iload_2       
    43: aload_3       
    44: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    47: ifeq          77
    50: aload_1       
    51: iload_2       
    52: putfield      #9          // java.util.regex.Matcher.first:int
    55: aload_1       
    56: getfield      #10         // java.util.regex.Matcher.groups:int[]
    59: iconst_0      
    60: aload_1       
    61: getfield      #9          // java.util.regex.Matcher.first:int
    64: iastore       
    65: aload_1       
    66: getfield      #10         // java.util.regex.Matcher.groups:int[]
    69: iconst_1      
    70: aload_1       
    71: getfield      #11         // java.util.regex.Matcher.last:int
    74: iastore       
    75: iconst_1      
    76: ireturn       
    77: iinc          
    80: goto          31
    83: aload_1       
    84: iconst_1      
    85: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    88: iconst_0      
    89: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e1bc5ac slotKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 9.93051617825813E-7 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B83" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B83 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B48" "B75" 
    successors "B78" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612642046083831603
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 8.983968413646328E-4 condition: > trueDestination: B4 -> B78 falseDestination: B4 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B61" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612637141171924796
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  150  <|@ instruction stack:76|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  154  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  156  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  158  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  160  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction stack:88|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}] keyTargets: [B5 -> B6, B5 -> B61] defaultTarget: B5 -> B81 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B60 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rbp|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B58 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" "B14" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rcx|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction rbx|DWORD = MOVZXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  256  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  258  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B9 -> B10, B9 -> B11, B9 -> B14] defaultTarget: B9 -> B57 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609027637273029927
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction CMP (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  280  <|@ instruction rcx|DWORD = SETCC condition: = <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|QWORD = MOVZXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVZXB input: [rcx|QWORD + rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" "B20" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602373890597978734
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r13|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  374  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  376  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  378  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B14 -> B15, B14 -> B20] defaultTarget: B14 -> B56 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B26" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870269280122293
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction stack:92|DWORD[_] = MOVE input: rbp|DWORD[_] moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction r13|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  494  <|@ instruction rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B20 -> B21, B20 -> B26] defaultTarget: B20 -> B55 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" "B32" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366647962319916
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction stack:96|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction rbp|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  612  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  614  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  616  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  618  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B26 -> B27, B26 -> B32] defaultTarget: B26 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B38" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863026644571602
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction stack:100|DWORD[_] = MOVE input: r13|DWORD[_] moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  734  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  736  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  738  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B32 -> B33, B32 -> B38] defaultTarget: B32 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084642
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction stack:44|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1466  <|@ instruction r10|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1468  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors "B63" "B66" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4590333408894431376
    begin_IR
      LIR
      nr 1470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999997723712406 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590333407604006618
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction r13|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1530  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: stack:88|QWORD[.] stack:72|QWORD[.] r10|DWORD r8|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD r8|QWORD[.] stack:28|DWORD 
>@ <|@ instruction NULLCHECK address: [r13|DWORD[_] * 8] state [bci:9, 44] <|@ <|@
      nr 1532  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1534  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1536  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1538  <|@ instruction stack:48|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1540  <|@ instruction stack:128|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1542  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stack: stack:128|QWORD[.] 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:48|DWORD stack:64|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<CharSequence.charAt(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:21, 44] <|@ <|@
      nr 1544  <|@ instruction rsi|QWORD[.] = MOVE input: stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1548  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:48|DWORD stack:64|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:26, 44] <|@ <|@
      nr 1550  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5908646161430428 condition: = trueDestination: B63 -> B65 falseDestination: B63 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584799587332037117
    begin_IR
      LIR
      nr 1552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction rsi|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr 1566  <|@ instruction r10|DWORD = INC value: stack:48|DWORD size: DWORD <|@ <|@
      nr 1568  <|@ instruction stack:44|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1572  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1574  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1576  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621235127
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: stack:48|DWORD) trueDestinationProbability: 0.9999996147864973 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621458430
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" "B69" 
    successors "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr 1664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction r10|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B73" 
    successors "B75" "B72" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4588886804909642497
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1676  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1678  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.2596988928056022 condition: < trueDestination: B71 -> B75 falseDestination: B71 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4586620676558964615
    begin_IR
      LIR
      nr 1694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1696  <|@ instruction stack:48|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1746  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: stack:88|QWORD[.] rdx|QWORD[.] r10|DWORD stack:64|QWORD[.] stack:48|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:54, 44] <|@ <|@
      nr 1748  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1750  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1752  <|@ instruction rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD <|@ <|@
      nr 1754  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1756  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1758  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1760  <|@ instruction rdx|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1762  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1764  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1766  <|@ instruction stack:44|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1768  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:44|DWORD stack:64|QWORD[.] stack:48|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70, 44] <|@ <|@
      nr 1770  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.31374907693960497 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B71" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4579260716611284855
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction r11|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1776  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1790  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B44" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359405326877352
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  850  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  852  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  854  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  856  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B38 -> B39, B38 -> B44] defaultTarget: B38 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580189478109779700
    begin_IR
      LIR
      nr 1812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
locals: - - - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:87, 44] <|@ <|@
      nr 1826  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1828  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1830  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1832  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1834  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1836  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction r13|DWORD[_] = MOVE input: stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction rdx|DWORD[_] = MOVE input: stack:96|DWORD[_] moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction r10|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction r11|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:31] <|@ <|@
      nr 1020  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction r8|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1024  <|@ instruction r9|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1026  <|@ instruction rcx|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1028  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1030  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1032  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1038  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1040  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1046  <|@ instruction stack:112|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction stack:120|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction stack:128|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction stack:136|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction stack:144|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction stack:152|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:112|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:152|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:144|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:136|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:120|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:128|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
      nr 1066  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1120  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B19" "B31" "B43" "B46" "B37" "B25" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5929707392225225 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609023662074253018
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: rcx|DWORD 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:24, 44] <|@ <|@
      nr 1148  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1154  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1212  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: rcx|DWORD 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:24, 44] <|@ <|@
      nr 1214  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1216  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1218  <|@ instruction rbx|QWORD = MOV input: [rdx|QWORD + 496] size: QWORD <|@ <|@
      nr 1220  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1222  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1224  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1230  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36, 44] <|@ <|@
      nr 1232  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B51" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1848  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD <|@ <|@
      nr 1864  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rdx|QWORD[.] stack:32|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B77 -> B79 falseDestination: B77 -> B80 y: 2 size: DWORD inlinedY: null state [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1918  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction MOV (x: [rdx|QWORD[.] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1946  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1948  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1950  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1952  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1954  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4584523385039648594
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1802  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4567169052318882655
    begin_IR
      LIR
      nr 1866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1888  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1890  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4517296380301017088
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997662585697696
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1594  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1596  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1598  <|@ instruction r8|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction stack:44|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1608  <|@ instruction stack:48|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997194285186786
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1636  <|@ instruction r8|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1638  <|@ instruction r10|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1640  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1644  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1646  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1658  <|@ instruction stack:44|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1660  <|@ instruction stack:48|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1662  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  554  <|@ instruction r10|DWORD = MOVE input: int[-192531|0xfffffffffffd0fed] <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1424  <|@ instruction r10|DWORD = MOVE input: int[-187411|0xfffffffffffd23ed] <|@ <|@
      nr 1432  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1238  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction MOV x: [r15|QWORD + 1156] y: -200723 size: DWORD <|@ <|@
      nr 1256  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1258  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:39, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1364  <|@ instruction r10|DWORD = MOVE input: int[-38195|0xffffffffffff6acd] <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  884  <|@ instruction r10|DWORD = MOVE input: int[-197651|0xfffffffffffcfbed] <|@ <|@
      nr  892  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1444  <|@ instruction r10|DWORD = MOVE input: int[-97820|0xfffffffffffe81e4] <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction rsi|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction r8|QWORD[.] = MOVE input: stack:152|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ instruction r9|QWORD[.] = MOVE input: stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rcx|QWORD[.] = MOVE input: stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction rdi|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1084  <|@ instruction rax|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1088  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction MOV x: [r15|QWORD + 1156] y: -199699 size: DWORD <|@ <|@
      nr 1106  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1108  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rsi|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r8|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rcx|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rdi|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: rax|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  794  <|@ instruction r10|DWORD = MOVE input: int[-196627|0xfffffffffffcffed] <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1304  <|@ instruction r10|DWORD = MOVE input: int[-52787|0xffffffffffff31cd] <|@ <|@
      nr 1312  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction r8|QWORD = MOVE input: long[7700|0x1e14] <|@ <|@
      nr 1384  <|@ instruction r10|DWORD = MOVE input: int[-33331|0xffffffffffff7dcd] <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1324  <|@ instruction r10|DWORD = MOVE input: int[-47923|0xffffffffffff44cd] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1404  <|@ instruction r10|DWORD = MOVE input: int[-188435|0xfffffffffffd1fed] <|@ <|@
      nr 1412  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1344  <|@ instruction r10|DWORD = MOVE input: int[-43059|0xffffffffffff57cd] <|@ <|@
      nr 1352  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  522  <|@ instruction r10|DWORD = MOVE input: int[-191507|0xfffffffffffd13ed] <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  920  <|@ instruction r10|DWORD = MOVE input: int[-198675|0xfffffffffffcf7ed] <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  402  <|@ instruction r10|DWORD = MOVE input: int[-189459|0xfffffffffffd1bed] <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1894  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1896  <|@ instruction NOP <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction MOV x: [r15|QWORD + 1156] y: -147483 size: DWORD <|@ <|@
      nr 1912  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1914  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rdx|QWORD[.] r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1966  <|@ instruction r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] <|@ <|@
      nr 1974  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  642  <|@ instruction r10|DWORD = MOVE input: int[-193555|0xfffffffffffd0bed] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1284  <|@ instruction r10|DWORD = MOVE input: int[-57651|0xffffffffffff1ecd] <|@ <|@
      nr 1292  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction MOV x: [r15|QWORD + 1156] y: -94515 size: DWORD <|@ <|@
      nr 2016  <|@ instruction MOV x: [r15|QWORD + 1168] y: 12952 size: QWORD <|@ <|@
      nr 2018  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: stack:56|QWORD[.] rdx|QWORD[.] rcx|DWORD stack:64|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  762  <|@ instruction r10|DWORD = MOVE input: int[-195603|0xfffffffffffd03ed] <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  434  <|@ instruction r10|DWORD = MOVE input: int[-190483|0xfffffffffffd17ed] <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  328  <|@ instruction r10|DWORD = MOVE input: int[-103707|0xfffffffffffe6ae5] <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B60" "B59" "B58" "B57" "B16" "B13" "B56" "B18" "B22" "B55" "B24" "B28" "B54" "B30" "B34" "B53" "B36" "B40" "B52" "B42" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1968  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1970  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1972  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction NOP <|@ <|@
      nr 1990  <|@ instruction NOP <|@ <|@
      nr 1992  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1994  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1996  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD rcx|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #6          // java.util.regex.Matcher.to:int
     5: aload_0       
     6: getfield      #5          // minLength:int
     9: isub          
    10: if_icmple     20
    13: aload_1       
    14: iconst_1      
    15: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    18: iconst_0      
    19: ireturn       
    20: aload_1       
    21: getfield      #6          // java.util.regex.Matcher.to:int
    24: aload_0       
    25: getfield      #5          // minLength:int
    28: isub          
    29: istore        4
    31: iload_2       
    32: iload         4
    34: if_icmpgt     83
    37: aload_0       
    38: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    41: aload_1       
    42: iload_2       
    43: aload_3       
    44: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    47: ifeq          77
    50: aload_1       
    51: iload_2       
    52: putfield      #9          // java.util.regex.Matcher.first:int
    55: aload_1       
    56: getfield      #10         // java.util.regex.Matcher.groups:int[]
    59: iconst_0      
    60: aload_1       
    61: getfield      #9          // java.util.regex.Matcher.first:int
    64: iastore       
    65: aload_1       
    66: getfield      #10         // java.util.regex.Matcher.groups:int[]
    69: iconst_1      
    70: aload_1       
    71: getfield      #11         // java.util.regex.Matcher.last:int
    74: iastore       
    75: iconst_1      
    76: ireturn       
    77: iinc          
    80: goto          31
    83: aload_1       
    84: iconst_1      
    85: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    88: iconst_0      
    89: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e1bc5ac slotKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 9.93051617825813E-7 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B83" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B83 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B48" "B75" 
    successors "B78" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612642046083831603
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 8.983968413646328E-4 condition: > trueDestination: B4 -> B78 falseDestination: B4 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B61" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612637141171924796
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  150  <|@ instruction stack:76|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  154  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  156  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  158  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  160  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction stack:88|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}] keyTargets: [B5 -> B6, B5 -> B61] defaultTarget: B5 -> B81 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B60 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rbp|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B58 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" "B14" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rcx|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction rbx|DWORD = MOVZXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  256  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  258  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B9 -> B10, B9 -> B11, B9 -> B14] defaultTarget: B9 -> B57 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609027637273029927
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction CMP (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  280  <|@ instruction rcx|DWORD = SETCC condition: = <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|QWORD = MOVZXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVZXB input: [rcx|QWORD + rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" "B20" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602373890597978734
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r13|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  374  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  376  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  378  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B14 -> B15, B14 -> B20] defaultTarget: B14 -> B56 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B26" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870269280122293
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction stack:92|DWORD[_] = MOVE input: rbp|DWORD[_] moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction r13|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  494  <|@ instruction rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B20 -> B21, B20 -> B26] defaultTarget: B20 -> B55 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" "B32" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366647962319916
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction stack:96|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction rbp|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  612  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  614  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  616  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  618  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B26 -> B27, B26 -> B32] defaultTarget: B26 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B38" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863026644571602
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction stack:100|DWORD[_] = MOVE input: r13|DWORD[_] moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  734  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  736  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  738  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B32 -> B33, B32 -> B38] defaultTarget: B32 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084642
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction stack:44|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1466  <|@ instruction r10|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1468  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors "B63" "B66" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4590333408894431376
    begin_IR
      LIR
      nr 1470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999997723712406 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590333407604006618
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction r13|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1530  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: stack:88|QWORD[.] stack:72|QWORD[.] r10|DWORD r8|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD r8|QWORD[.] stack:28|DWORD 
>@ <|@ instruction NULLCHECK address: [r13|DWORD[_] * 8] state [bci:9, 44] <|@ <|@
      nr 1532  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1534  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1536  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1538  <|@ instruction stack:48|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1540  <|@ instruction stack:128|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1542  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stack: stack:128|QWORD[.] 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:48|DWORD stack:64|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<CharSequence.charAt(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:21, 44] <|@ <|@
      nr 1544  <|@ instruction rsi|QWORD[.] = MOVE input: stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1548  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:48|DWORD stack:64|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:26, 44] <|@ <|@
      nr 1550  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5908646161430428 condition: = trueDestination: B63 -> B65 falseDestination: B63 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584799587332037117
    begin_IR
      LIR
      nr 1552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction rsi|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr 1566  <|@ instruction r10|DWORD = INC value: stack:48|DWORD size: DWORD <|@ <|@
      nr 1568  <|@ instruction stack:44|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1572  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1574  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1576  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621235127
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: stack:48|DWORD) trueDestinationProbability: 0.9999996147864973 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621458430
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" "B69" 
    successors "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr 1664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction r10|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B73" 
    successors "B75" "B72" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4588886804909642497
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1676  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1678  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.2596988928056022 condition: < trueDestination: B71 -> B75 falseDestination: B71 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4586620676558964615
    begin_IR
      LIR
      nr 1694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1696  <|@ instruction stack:48|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1746  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: stack:88|QWORD[.] rdx|QWORD[.] r10|DWORD stack:64|QWORD[.] stack:48|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:54, 44] <|@ <|@
      nr 1748  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1750  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1752  <|@ instruction rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD <|@ <|@
      nr 1754  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1756  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1758  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1762  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1764  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1766  <|@ instruction stack:44|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1768  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:44|DWORD stack:64|QWORD[.] stack:48|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70, 44] <|@ <|@
      nr 1770  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.31374907693960497 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B71" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4579260716611284855
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction r11|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1776  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1790  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B44" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359405326877352
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  850  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  852  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  854  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  856  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B38 -> B39, B38 -> B44] defaultTarget: B38 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580189478109779700
    begin_IR
      LIR
      nr 1812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
locals: - - - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:87, 44] <|@ <|@
      nr 1826  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1828  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1830  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1832  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1834  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1836  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction r13|DWORD[_] = MOVE input: stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction rdx|DWORD[_] = MOVE input: stack:96|DWORD[_] moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction r10|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction r11|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:31] <|@ <|@
      nr 1020  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction r8|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1024  <|@ instruction r9|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1026  <|@ instruction rcx|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1028  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1030  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1032  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1038  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1040  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1046  <|@ instruction stack:112|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction stack:120|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction stack:128|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction stack:136|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction stack:144|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction stack:152|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:112|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:152|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:144|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:136|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:120|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:128|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
      nr 1066  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1120  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B19" "B31" "B43" "B46" "B37" "B25" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5929707392225225 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609023662074253018
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: rcx|DWORD 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:24, 44] <|@ <|@
      nr 1148  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1154  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1212  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: rcx|DWORD 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:24, 44] <|@ <|@
      nr 1214  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1216  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1218  <|@ instruction rbx|QWORD = MOV input: [rdx|QWORD + 496] size: QWORD <|@ <|@
      nr 1220  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1222  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1224  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1230  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36, 44] <|@ <|@
      nr 1232  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B51" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1848  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD <|@ <|@
      nr 1864  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rdx|QWORD[.] stack:32|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B77 -> B79 falseDestination: B77 -> B80 y: 2 size: DWORD inlinedY: null state [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1918  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction MOV (x: [rdx|QWORD[.] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1946  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1948  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1950  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1952  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1954  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4584523385039648594
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1802  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4567169052318882655
    begin_IR
      LIR
      nr 1866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1888  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1890  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4517296380301017088
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997662585697696
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1594  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1596  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1598  <|@ instruction r8|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction stack:48|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997194285186786
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1636  <|@ instruction r8|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1638  <|@ instruction r10|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1640  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1644  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1646  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1662  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  554  <|@ instruction r10|DWORD = MOVE input: int[-192531|0xfffffffffffd0fed] <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1424  <|@ instruction r10|DWORD = MOVE input: int[-187411|0xfffffffffffd23ed] <|@ <|@
      nr 1432  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1238  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction MOV x: [r15|QWORD + 1156] y: -200723 size: DWORD <|@ <|@
      nr 1256  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1258  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:39, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1364  <|@ instruction r10|DWORD = MOVE input: int[-38195|0xffffffffffff6acd] <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  884  <|@ instruction r10|DWORD = MOVE input: int[-197651|0xfffffffffffcfbed] <|@ <|@
      nr  892  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1444  <|@ instruction r10|DWORD = MOVE input: int[-97820|0xfffffffffffe81e4] <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction rsi|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction r8|QWORD[.] = MOVE input: stack:152|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ instruction r9|QWORD[.] = MOVE input: stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rcx|QWORD[.] = MOVE input: stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction rdi|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1084  <|@ instruction rax|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1088  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction MOV x: [r15|QWORD + 1156] y: -199699 size: DWORD <|@ <|@
      nr 1106  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1108  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rsi|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r8|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rcx|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rdi|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: rax|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  794  <|@ instruction r10|DWORD = MOVE input: int[-196627|0xfffffffffffcffed] <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1304  <|@ instruction r10|DWORD = MOVE input: int[-52787|0xffffffffffff31cd] <|@ <|@
      nr 1312  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction r8|QWORD = MOVE input: long[7700|0x1e14] <|@ <|@
      nr 1384  <|@ instruction r10|DWORD = MOVE input: int[-33331|0xffffffffffff7dcd] <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1324  <|@ instruction r10|DWORD = MOVE input: int[-47923|0xffffffffffff44cd] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1404  <|@ instruction r10|DWORD = MOVE input: int[-188435|0xfffffffffffd1fed] <|@ <|@
      nr 1412  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1344  <|@ instruction r10|DWORD = MOVE input: int[-43059|0xffffffffffff57cd] <|@ <|@
      nr 1352  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  522  <|@ instruction r10|DWORD = MOVE input: int[-191507|0xfffffffffffd13ed] <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  920  <|@ instruction r10|DWORD = MOVE input: int[-198675|0xfffffffffffcf7ed] <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  402  <|@ instruction r10|DWORD = MOVE input: int[-189459|0xfffffffffffd1bed] <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1894  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1896  <|@ instruction NOP <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction MOV x: [r15|QWORD + 1156] y: -147483 size: DWORD <|@ <|@
      nr 1912  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1914  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rdx|QWORD[.] r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1966  <|@ instruction r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] <|@ <|@
      nr 1974  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  642  <|@ instruction r10|DWORD = MOVE input: int[-193555|0xfffffffffffd0bed] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1284  <|@ instruction r10|DWORD = MOVE input: int[-57651|0xffffffffffff1ecd] <|@ <|@
      nr 1292  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction MOV x: [r15|QWORD + 1156] y: -94515 size: DWORD <|@ <|@
      nr 2016  <|@ instruction MOV x: [r15|QWORD + 1168] y: 12952 size: QWORD <|@ <|@
      nr 2018  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: stack:56|QWORD[.] rdx|QWORD[.] rcx|DWORD stack:64|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  762  <|@ instruction r10|DWORD = MOVE input: int[-195603|0xfffffffffffd03ed] <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  434  <|@ instruction r10|DWORD = MOVE input: int[-190483|0xfffffffffffd17ed] <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  328  <|@ instruction r10|DWORD = MOVE input: int[-103707|0xfffffffffffe6ae5] <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B60" "B59" "B58" "B57" "B16" "B13" "B56" "B18" "B22" "B55" "B24" "B28" "B54" "B30" "B34" "B53" "B36" "B40" "B52" "B42" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1968  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1970  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1972  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction NOP <|@ <|@
      nr 1990  <|@ instruction NOP <|@ <|@
      nr 1992  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1994  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1996  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD rcx|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #6          // java.util.regex.Matcher.to:int
     5: aload_0       
     6: getfield      #5          // minLength:int
     9: isub          
    10: if_icmple     20
    13: aload_1       
    14: iconst_1      
    15: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    18: iconst_0      
    19: ireturn       
    20: aload_1       
    21: getfield      #6          // java.util.regex.Matcher.to:int
    24: aload_0       
    25: getfield      #5          // minLength:int
    28: isub          
    29: istore        4
    31: iload_2       
    32: iload         4
    34: if_icmpgt     83
    37: aload_0       
    38: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    41: aload_1       
    42: iload_2       
    43: aload_3       
    44: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    47: ifeq          77
    50: aload_1       
    51: iload_2       
    52: putfield      #9          // java.util.regex.Matcher.first:int
    55: aload_1       
    56: getfield      #10         // java.util.regex.Matcher.groups:int[]
    59: iconst_0      
    60: aload_1       
    61: getfield      #9          // java.util.regex.Matcher.first:int
    64: iastore       
    65: aload_1       
    66: getfield      #10         // java.util.regex.Matcher.groups:int[]
    69: iconst_1      
    70: aload_1       
    71: getfield      #11         // java.util.regex.Matcher.last:int
    74: iastore       
    75: iconst_1      
    76: ireturn       
    77: iinc          
    80: goto          31
    83: aload_1       
    84: iconst_1      
    85: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    88: iconst_0      
    89: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e1bc5ac slotKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 9.93051617825813E-7 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B83" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B83 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B48" "B75" 
    successors "B78" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612642046083831603
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 8.983968413646328E-4 condition: > trueDestination: B4 -> B78 falseDestination: B4 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B61" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612637141171924796
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  150  <|@ instruction stack:76|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  154  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  156  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  158  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  160  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction stack:88|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}] keyTargets: [B5 -> B6, B5 -> B61] defaultTarget: B5 -> B81 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B60 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rbp|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B58 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" "B14" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rcx|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction rbx|DWORD = MOVZXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  256  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  258  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B9 -> B10, B9 -> B11, B9 -> B14] defaultTarget: B9 -> B57 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609027637273029927
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction CMP (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  280  <|@ instruction rcx|DWORD = SETCC condition: = <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|QWORD = MOVZXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVZXB input: [rcx|QWORD + rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" "B20" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602373890597978734
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r13|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  374  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  376  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  378  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B14 -> B15, B14 -> B20] defaultTarget: B14 -> B56 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B26" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870269280122293
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction stack:92|DWORD[_] = MOVE input: rbp|DWORD[_] moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction r13|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  494  <|@ instruction rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B20 -> B21, B20 -> B26] defaultTarget: B20 -> B55 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" "B32" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366647962319916
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction stack:96|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction rbp|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  612  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  614  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  616  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  618  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B26 -> B27, B26 -> B32] defaultTarget: B26 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B38" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863026644571602
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction stack:100|DWORD[_] = MOVE input: r13|DWORD[_] moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  734  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  736  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  738  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B32 -> B33, B32 -> B38] defaultTarget: B32 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084642
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction stack:44|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1466  <|@ instruction r10|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1468  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors "B63" "B66" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4590333408894431376
    begin_IR
      LIR
      nr 1470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999997723712406 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590333407604006618
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction r13|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1530  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: stack:88|QWORD[.] stack:72|QWORD[.] r10|DWORD r8|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD r8|QWORD[.] stack:28|DWORD 
>@ <|@ instruction NULLCHECK address: [r13|DWORD[_] * 8] state [bci:9, 44] <|@ <|@
      nr 1532  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1534  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1536  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1538  <|@ instruction stack:48|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1540  <|@ instruction stack:128|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1542  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stack: stack:128|QWORD[.] 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:48|DWORD stack:64|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<CharSequence.charAt(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:21, 44] <|@ <|@
      nr 1544  <|@ instruction rsi|QWORD[.] = MOVE input: stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1548  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:48|DWORD stack:64|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:26, 44] <|@ <|@
      nr 1550  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5908646161430428 condition: = trueDestination: B63 -> B65 falseDestination: B63 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584799587332037117
    begin_IR
      LIR
      nr 1552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction rsi|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr 1566  <|@ instruction r10|DWORD = INC value: stack:48|DWORD size: DWORD <|@ <|@
      nr 1568  <|@ instruction stack:44|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1572  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1574  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1576  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621235127
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: stack:48|DWORD) trueDestinationProbability: 0.9999996147864973 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621458430
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" "B69" 
    successors "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr 1664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction r10|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B73" 
    successors "B75" "B72" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4588886804909642497
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1676  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1678  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.2596988928056022 condition: < trueDestination: B71 -> B75 falseDestination: B71 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4586620676558964615
    begin_IR
      LIR
      nr 1694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1696  <|@ instruction stack:48|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1746  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: stack:88|QWORD[.] rdx|QWORD[.] r10|DWORD stack:64|QWORD[.] stack:48|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:54, 44] <|@ <|@
      nr 1748  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1750  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1752  <|@ instruction rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD <|@ <|@
      nr 1754  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1756  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1758  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1762  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1764  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1766  <|@ instruction stack:44|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1768  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:44|DWORD stack:64|QWORD[.] stack:48|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70, 44] <|@ <|@
      nr 1770  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.31374907693960497 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B71" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4579260716611284855
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction r11|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1776  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1790  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B44" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359405326877352
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  850  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  852  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  854  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  856  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B38 -> B39, B38 -> B44] defaultTarget: B38 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580189478109779700
    begin_IR
      LIR
      nr 1812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
locals: - - - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:87, 44] <|@ <|@
      nr 1826  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1828  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1830  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1832  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1834  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1836  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction r13|DWORD[_] = MOVE input: stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction rdx|DWORD[_] = MOVE input: stack:96|DWORD[_] moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction r10|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction r11|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:31] <|@ <|@
      nr 1020  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction r8|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1024  <|@ instruction r9|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1026  <|@ instruction rcx|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1028  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1030  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1032  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1038  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1040  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1046  <|@ instruction stack:112|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction stack:120|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction stack:128|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction stack:136|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction stack:144|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction stack:152|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:112|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:152|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:144|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:136|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:120|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:128|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
      nr 1066  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1120  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B19" "B31" "B43" "B46" "B37" "B25" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5929707392225225 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609023662074253018
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: rcx|DWORD 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:24, 44] <|@ <|@
      nr 1148  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1154  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1212  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: rcx|DWORD 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:24, 44] <|@ <|@
      nr 1214  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1216  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1218  <|@ instruction rbx|QWORD = MOV input: [rdx|QWORD + 496] size: QWORD <|@ <|@
      nr 1220  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1222  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1224  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1230  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36, 44] <|@ <|@
      nr 1232  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B51" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1848  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD <|@ <|@
      nr 1864  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rdx|QWORD[.] stack:32|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B77 -> B79 falseDestination: B77 -> B80 y: 2 size: DWORD inlinedY: null state [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1918  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction MOV (x: [rdx|QWORD[.] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1946  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1948  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1950  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1952  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1954  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4584523385039648594
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1802  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4567169052318882655
    begin_IR
      LIR
      nr 1866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1888  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1890  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4517296380301017088
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997662585697696
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1594  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1596  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1598  <|@ instruction r8|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction stack:48|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997194285186786
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1636  <|@ instruction r8|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1638  <|@ instruction r10|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1640  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1644  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1646  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1662  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  554  <|@ instruction r10|DWORD = MOVE input: int[-192531|0xfffffffffffd0fed] <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1424  <|@ instruction r10|DWORD = MOVE input: int[-187411|0xfffffffffffd23ed] <|@ <|@
      nr 1432  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1238  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction MOV x: [r15|QWORD + 1156] y: -200723 size: DWORD <|@ <|@
      nr 1256  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1258  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:39, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1364  <|@ instruction r10|DWORD = MOVE input: int[-38195|0xffffffffffff6acd] <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  884  <|@ instruction r10|DWORD = MOVE input: int[-197651|0xfffffffffffcfbed] <|@ <|@
      nr  892  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1444  <|@ instruction r10|DWORD = MOVE input: int[-97820|0xfffffffffffe81e4] <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction rsi|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction r8|QWORD[.] = MOVE input: stack:152|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ instruction r9|QWORD[.] = MOVE input: stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rcx|QWORD[.] = MOVE input: stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction rdi|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1084  <|@ instruction rax|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1088  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction MOV x: [r15|QWORD + 1156] y: -199699 size: DWORD <|@ <|@
      nr 1106  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1108  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rsi|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r8|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rcx|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rdi|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: rax|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  794  <|@ instruction r10|DWORD = MOVE input: int[-196627|0xfffffffffffcffed] <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1304  <|@ instruction r10|DWORD = MOVE input: int[-52787|0xffffffffffff31cd] <|@ <|@
      nr 1312  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction r8|QWORD = MOVE input: long[7700|0x1e14] <|@ <|@
      nr 1384  <|@ instruction r10|DWORD = MOVE input: int[-33331|0xffffffffffff7dcd] <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1324  <|@ instruction r10|DWORD = MOVE input: int[-47923|0xffffffffffff44cd] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1404  <|@ instruction r10|DWORD = MOVE input: int[-188435|0xfffffffffffd1fed] <|@ <|@
      nr 1412  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1344  <|@ instruction r10|DWORD = MOVE input: int[-43059|0xffffffffffff57cd] <|@ <|@
      nr 1352  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  522  <|@ instruction r10|DWORD = MOVE input: int[-191507|0xfffffffffffd13ed] <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  920  <|@ instruction r10|DWORD = MOVE input: int[-198675|0xfffffffffffcf7ed] <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  402  <|@ instruction r10|DWORD = MOVE input: int[-189459|0xfffffffffffd1bed] <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1894  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1896  <|@ instruction NOP <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction MOV x: [r15|QWORD + 1156] y: -147483 size: DWORD <|@ <|@
      nr 1912  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1914  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rdx|QWORD[.] r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1966  <|@ instruction r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] <|@ <|@
      nr 1974  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  642  <|@ instruction r10|DWORD = MOVE input: int[-193555|0xfffffffffffd0bed] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1284  <|@ instruction r10|DWORD = MOVE input: int[-57651|0xffffffffffff1ecd] <|@ <|@
      nr 1292  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction MOV x: [r15|QWORD + 1156] y: -94515 size: DWORD <|@ <|@
      nr 2016  <|@ instruction MOV x: [r15|QWORD + 1168] y: 12952 size: QWORD <|@ <|@
      nr 2018  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: stack:56|QWORD[.] rdx|QWORD[.] rcx|DWORD stack:64|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  762  <|@ instruction r10|DWORD = MOVE input: int[-195603|0xfffffffffffd03ed] <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  434  <|@ instruction r10|DWORD = MOVE input: int[-190483|0xfffffffffffd17ed] <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  328  <|@ instruction r10|DWORD = MOVE input: int[-103707|0xfffffffffffe6ae5] <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B60" "B59" "B58" "B57" "B16" "B13" "B56" "B18" "B22" "B55" "B24" "B28" "B54" "B30" "B34" "B53" "B36" "B40" "B52" "B42" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1968  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1970  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1972  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction NOP <|@ <|@
      nr 1990  <|@ instruction NOP <|@ <|@
      nr 1992  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1994  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1996  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD rcx|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #6          // java.util.regex.Matcher.to:int
     5: aload_0       
     6: getfield      #5          // minLength:int
     9: isub          
    10: if_icmple     20
    13: aload_1       
    14: iconst_1      
    15: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    18: iconst_0      
    19: ireturn       
    20: aload_1       
    21: getfield      #6          // java.util.regex.Matcher.to:int
    24: aload_0       
    25: getfield      #5          // minLength:int
    28: isub          
    29: istore        4
    31: iload_2       
    32: iload         4
    34: if_icmpgt     83
    37: aload_0       
    38: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    41: aload_1       
    42: iload_2       
    43: aload_3       
    44: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    47: ifeq          77
    50: aload_1       
    51: iload_2       
    52: putfield      #9          // java.util.regex.Matcher.first:int
    55: aload_1       
    56: getfield      #10         // java.util.regex.Matcher.groups:int[]
    59: iconst_0      
    60: aload_1       
    61: getfield      #9          // java.util.regex.Matcher.first:int
    64: iastore       
    65: aload_1       
    66: getfield      #10         // java.util.regex.Matcher.groups:int[]
    69: iconst_1      
    70: aload_1       
    71: getfield      #11         // java.util.regex.Matcher.last:int
    74: iastore       
    75: iconst_1      
    76: ireturn       
    77: iinc          
    80: goto          31
    83: aload_1       
    84: iconst_1      
    85: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    88: iconst_0      
    89: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e1bc5ac slotKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 9.93051617825813E-7 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B83" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B83 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B48" "B75" 
    successors "B78" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612642046083831603
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 8.983968413646328E-4 condition: > trueDestination: B4 -> B78 falseDestination: B4 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B61" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612637141171924796
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  150  <|@ instruction stack:76|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  154  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  156  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  158  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  160  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction stack:88|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}] keyTargets: [B5 -> B6, B5 -> B61] defaultTarget: B5 -> B81 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B60 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rbp|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B58 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" "B14" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rcx|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction rbx|DWORD = MOVZXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  256  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  258  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B9 -> B10, B9 -> B11, B9 -> B14] defaultTarget: B9 -> B57 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609027637273029927
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction CMP (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  280  <|@ instruction rcx|DWORD = SETCC condition: = <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|QWORD = MOVZXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVZXB input: [rcx|QWORD + rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" "B20" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602373890597978734
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r13|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  374  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  376  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  378  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B14 -> B15, B14 -> B20] defaultTarget: B14 -> B56 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B26" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870269280122293
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction stack:92|DWORD[_] = MOVE input: rbp|DWORD[_] moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction r13|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  494  <|@ instruction rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B20 -> B21, B20 -> B26] defaultTarget: B20 -> B55 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" "B32" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366647962319916
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction stack:96|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction rbp|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  612  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  614  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  616  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  618  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B26 -> B27, B26 -> B32] defaultTarget: B26 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B38" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863026644571602
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction stack:100|DWORD[_] = MOVE input: r13|DWORD[_] moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  734  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  736  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  738  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B32 -> B33, B32 -> B38] defaultTarget: B32 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084642
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction stack:44|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1466  <|@ instruction r10|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1468  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors "B63" "B66" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4590333408894431376
    begin_IR
      LIR
      nr 1470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999997723712406 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590333407604006618
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction r13|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1530  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: stack:88|QWORD[.] stack:72|QWORD[.] r10|DWORD r8|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD r8|QWORD[.] stack:28|DWORD 
>@ <|@ instruction NULLCHECK address: [r13|DWORD[_] * 8] state [bci:9, 44] <|@ <|@
      nr 1532  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1534  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1536  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1538  <|@ instruction stack:48|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1540  <|@ instruction stack:128|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1542  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stack: stack:128|QWORD[.] 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:48|DWORD stack:64|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<CharSequence.charAt(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:21, 44] <|@ <|@
      nr 1544  <|@ instruction rsi|QWORD[.] = MOVE input: stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1548  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:48|DWORD stack:64|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:26, 44] <|@ <|@
      nr 1550  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5908646161430428 condition: = trueDestination: B63 -> B65 falseDestination: B63 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584799587332037117
    begin_IR
      LIR
      nr 1552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction rsi|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr 1566  <|@ instruction r10|DWORD = INC value: stack:48|DWORD size: DWORD <|@ <|@
      nr 1568  <|@ instruction stack:44|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1572  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1574  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1576  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621235127
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: stack:48|DWORD) trueDestinationProbability: 0.9999996147864973 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621458430
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" "B69" 
    successors "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr 1664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction r10|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B73" 
    successors "B75" "B72" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4588886804909642497
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1676  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1678  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.2596988928056022 condition: < trueDestination: B71 -> B75 falseDestination: B71 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4586620676558964615
    begin_IR
      LIR
      nr 1694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1696  <|@ instruction stack:48|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1746  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: stack:88|QWORD[.] rdx|QWORD[.] r10|DWORD stack:64|QWORD[.] stack:48|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:54, 44] <|@ <|@
      nr 1748  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1750  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1752  <|@ instruction rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD <|@ <|@
      nr 1754  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1756  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1758  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1762  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1764  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1766  <|@ instruction stack:44|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1768  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:44|DWORD stack:64|QWORD[.] stack:48|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70, 44] <|@ <|@
      nr 1770  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.31374907693960497 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B71" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4579260716611284855
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction r11|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1776  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1790  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B44" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359405326877352
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  850  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  852  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  854  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  856  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B38 -> B39, B38 -> B44] defaultTarget: B38 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580189478109779700
    begin_IR
      LIR
      nr 1812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
locals: - - - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:87, 44] <|@ <|@
      nr 1826  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1828  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1830  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1832  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1834  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1836  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction r13|DWORD[_] = MOVE input: stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction rdx|DWORD[_] = MOVE input: stack:96|DWORD[_] moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction r10|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction r11|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:31] <|@ <|@
      nr 1020  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction r8|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1024  <|@ instruction r9|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1026  <|@ instruction rcx|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1028  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1030  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1032  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1038  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1040  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1046  <|@ instruction stack:112|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction stack:120|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction stack:128|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction stack:136|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction stack:144|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction stack:152|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:112|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:152|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:144|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:136|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:120|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:128|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
      nr 1066  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1120  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B19" "B31" "B43" "B46" "B37" "B25" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5929707392225225 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609023662074253018
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: rcx|DWORD 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:24, 44] <|@ <|@
      nr 1148  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1154  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1212  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: rcx|DWORD 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:24, 44] <|@ <|@
      nr 1214  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1216  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1218  <|@ instruction rbx|QWORD = MOV input: [rdx|QWORD + 496] size: QWORD <|@ <|@
      nr 1220  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1222  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1224  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1230  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36, 44] <|@ <|@
      nr 1232  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B51" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1848  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD <|@ <|@
      nr 1864  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rdx|QWORD[.] stack:32|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B77 -> B79 falseDestination: B77 -> B80 y: 2 size: DWORD inlinedY: null state [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1918  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction MOV (x: [rdx|QWORD[.] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1946  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1948  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1950  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1952  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1954  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4584523385039648594
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1802  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4567169052318882655
    begin_IR
      LIR
      nr 1866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1888  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1890  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4517296380301017088
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997662585697696
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1594  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1596  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1598  <|@ instruction r8|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction stack:48|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997194285186786
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1636  <|@ instruction r8|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1638  <|@ instruction r10|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1640  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1644  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1646  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1662  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  554  <|@ instruction r10|DWORD = MOVE input: int[-192531|0xfffffffffffd0fed] <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1424  <|@ instruction r10|DWORD = MOVE input: int[-187411|0xfffffffffffd23ed] <|@ <|@
      nr 1432  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1238  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction MOV x: [r15|QWORD + 1156] y: -200723 size: DWORD <|@ <|@
      nr 1256  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1258  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:39, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1364  <|@ instruction r10|DWORD = MOVE input: int[-38195|0xffffffffffff6acd] <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  884  <|@ instruction r10|DWORD = MOVE input: int[-197651|0xfffffffffffcfbed] <|@ <|@
      nr  892  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1444  <|@ instruction r10|DWORD = MOVE input: int[-97820|0xfffffffffffe81e4] <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction rsi|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction r8|QWORD[.] = MOVE input: stack:152|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ instruction r9|QWORD[.] = MOVE input: stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rcx|QWORD[.] = MOVE input: stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction rdi|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1084  <|@ instruction rax|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1088  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction MOV x: [r15|QWORD + 1156] y: -199699 size: DWORD <|@ <|@
      nr 1106  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1108  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rsi|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r8|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rcx|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rdi|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: rax|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  794  <|@ instruction r10|DWORD = MOVE input: int[-196627|0xfffffffffffcffed] <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1304  <|@ instruction r10|DWORD = MOVE input: int[-52787|0xffffffffffff31cd] <|@ <|@
      nr 1312  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction r8|QWORD = MOVE input: long[7700|0x1e14] <|@ <|@
      nr 1384  <|@ instruction r10|DWORD = MOVE input: int[-33331|0xffffffffffff7dcd] <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1324  <|@ instruction r10|DWORD = MOVE input: int[-47923|0xffffffffffff44cd] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1404  <|@ instruction r10|DWORD = MOVE input: int[-188435|0xfffffffffffd1fed] <|@ <|@
      nr 1412  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1344  <|@ instruction r10|DWORD = MOVE input: int[-43059|0xffffffffffff57cd] <|@ <|@
      nr 1352  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  522  <|@ instruction r10|DWORD = MOVE input: int[-191507|0xfffffffffffd13ed] <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  920  <|@ instruction r10|DWORD = MOVE input: int[-198675|0xfffffffffffcf7ed] <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  402  <|@ instruction r10|DWORD = MOVE input: int[-189459|0xfffffffffffd1bed] <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1894  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1896  <|@ instruction NOP <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction MOV x: [r15|QWORD + 1156] y: -147483 size: DWORD <|@ <|@
      nr 1912  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1914  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rdx|QWORD[.] r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1966  <|@ instruction r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] <|@ <|@
      nr 1974  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  642  <|@ instruction r10|DWORD = MOVE input: int[-193555|0xfffffffffffd0bed] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1284  <|@ instruction r10|DWORD = MOVE input: int[-57651|0xffffffffffff1ecd] <|@ <|@
      nr 1292  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction MOV x: [r15|QWORD + 1156] y: -94515 size: DWORD <|@ <|@
      nr 2016  <|@ instruction MOV x: [r15|QWORD + 1168] y: 12952 size: QWORD <|@ <|@
      nr 2018  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: stack:56|QWORD[.] rdx|QWORD[.] rcx|DWORD stack:64|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  762  <|@ instruction r10|DWORD = MOVE input: int[-195603|0xfffffffffffd03ed] <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  434  <|@ instruction r10|DWORD = MOVE input: int[-190483|0xfffffffffffd17ed] <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  328  <|@ instruction r10|DWORD = MOVE input: int[-103707|0xfffffffffffe6ae5] <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B60" "B59" "B58" "B57" "B16" "B13" "B56" "B18" "B22" "B55" "B24" "B28" "B54" "B30" "B34" "B53" "B36" "B40" "B52" "B42" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1968  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1970  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1972  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction NOP <|@ <|@
      nr 1990  <|@ instruction NOP <|@ <|@
      nr 1992  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1994  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1996  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD rcx|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #6          // java.util.regex.Matcher.to:int
     5: aload_0       
     6: getfield      #5          // minLength:int
     9: isub          
    10: if_icmple     20
    13: aload_1       
    14: iconst_1      
    15: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    18: iconst_0      
    19: ireturn       
    20: aload_1       
    21: getfield      #6          // java.util.regex.Matcher.to:int
    24: aload_0       
    25: getfield      #5          // minLength:int
    28: isub          
    29: istore        4
    31: iload_2       
    32: iload         4
    34: if_icmpgt     83
    37: aload_0       
    38: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    41: aload_1       
    42: iload_2       
    43: aload_3       
    44: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    47: ifeq          77
    50: aload_1       
    51: iload_2       
    52: putfield      #9          // java.util.regex.Matcher.first:int
    55: aload_1       
    56: getfield      #10         // java.util.regex.Matcher.groups:int[]
    59: iconst_0      
    60: aload_1       
    61: getfield      #9          // java.util.regex.Matcher.first:int
    64: iastore       
    65: aload_1       
    66: getfield      #10         // java.util.regex.Matcher.groups:int[]
    69: iconst_1      
    70: aload_1       
    71: getfield      #11         // java.util.regex.Matcher.last:int
    74: iastore       
    75: iconst_1      
    76: ireturn       
    77: iinc          
    80: goto          31
    83: aload_1       
    84: iconst_1      
    85: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    88: iconst_0      
    89: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e1bc5ac slotKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 9.93051617825813E-7 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B83" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B83 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B48" "B75" 
    successors "B78" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612642046083831603
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 8.983968413646328E-4 condition: > trueDestination: B4 -> B78 falseDestination: B4 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B61" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612637141171924796
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  150  <|@ instruction stack:76|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  154  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  156  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  158  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  160  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction stack:88|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}] keyTargets: [B5 -> B6, B5 -> B61] defaultTarget: B5 -> B81 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B60 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rbp|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B58 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" "B14" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rcx|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction rbx|DWORD = MOVZXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  256  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  258  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B9 -> B10, B9 -> B11, B9 -> B14] defaultTarget: B9 -> B57 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609027637273029927
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction CMP (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  280  <|@ instruction rcx|DWORD = SETCC condition: = <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B19" "B31" "B43" "B46" "B37" "B25" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5929707392225225 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609023662074253018
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: rcx|DWORD 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:24, 44] <|@ <|@
      nr 1148  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1154  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|QWORD = MOVZXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVZXB input: [rcx|QWORD + rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" "B20" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602373890597978734
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r13|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  374  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  376  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  378  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B14 -> B15, B14 -> B20] defaultTarget: B14 -> B56 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B26" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870269280122293
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction stack:92|DWORD[_] = MOVE input: rbp|DWORD[_] moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction r13|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  494  <|@ instruction rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B20 -> B21, B20 -> B26] defaultTarget: B20 -> B55 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" "B32" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366647962319916
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction stack:96|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction rbp|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  612  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  614  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  616  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  618  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B26 -> B27, B26 -> B32] defaultTarget: B26 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B38" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863026644571602
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction stack:100|DWORD[_] = MOVE input: r13|DWORD[_] moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  734  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  736  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  738  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B32 -> B33, B32 -> B38] defaultTarget: B32 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084642
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction stack:44|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1466  <|@ instruction r10|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1468  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590333407604006618
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction r13|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1530  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: stack:88|QWORD[.] stack:72|QWORD[.] r10|DWORD r8|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD r8|QWORD[.] stack:28|DWORD 
>@ <|@ instruction NULLCHECK address: [r13|DWORD[_] * 8] state [bci:9, 44] <|@ <|@
      nr 1532  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1534  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1536  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1538  <|@ instruction stack:48|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1540  <|@ instruction stack:128|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1542  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stack: stack:128|QWORD[.] 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:48|DWORD stack:64|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<CharSequence.charAt(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:21, 44] <|@ <|@
      nr 1544  <|@ instruction rsi|QWORD[.] = MOVE input: stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1548  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:48|DWORD stack:64|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:26, 44] <|@ <|@
      nr 1550  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5908646161430428 condition: = trueDestination: B63 -> B65 falseDestination: B63 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584799587332037117
    begin_IR
      LIR
      nr 1552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction rsi|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr 1566  <|@ instruction r10|DWORD = INC value: stack:48|DWORD size: DWORD <|@ <|@
      nr 1568  <|@ instruction stack:44|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1572  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1574  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1576  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors "B63" "B66" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4590333408894431376
    begin_IR
      LIR
      nr 1470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999997723712406 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621235127
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: stack:48|DWORD) trueDestinationProbability: 0.9999996147864973 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621458430
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" "B69" 
    successors "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr 1664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction r10|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4586620676558964615
    begin_IR
      LIR
      nr 1694  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1696  <|@ instruction stack:48|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1746  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: stack:88|QWORD[.] rdx|QWORD[.] r10|DWORD stack:64|QWORD[.] stack:48|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:54, 44] <|@ <|@
      nr 1748  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1750  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1752  <|@ instruction rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD <|@ <|@
      nr 1754  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1756  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1758  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1762  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1764  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1766  <|@ instruction stack:44|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1768  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:44|DWORD stack:64|QWORD[.] stack:48|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70, 44] <|@ <|@
      nr 1770  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.31374907693960497 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B71" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4579260716611284855
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction r11|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1776  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1790  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B73" 
    successors "B75" "B72" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4588886804909642497
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1676  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1678  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.2596988928056022 condition: < trueDestination: B71 -> B75 falseDestination: B71 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B44" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359405326877352
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  850  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  852  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  854  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  856  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B38 -> B39, B38 -> B44] defaultTarget: B38 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580189478109779700
    begin_IR
      LIR
      nr 1812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
locals: - - - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:87, 44] <|@ <|@
      nr 1826  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1828  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1830  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1832  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1834  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1836  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction r13|DWORD[_] = MOVE input: stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction rdx|DWORD[_] = MOVE input: stack:96|DWORD[_] moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction r10|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction r11|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:31] <|@ <|@
      nr 1020  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction r8|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1024  <|@ instruction r9|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1026  <|@ instruction rcx|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1028  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1030  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1032  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1038  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1040  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1046  <|@ instruction stack:112|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction stack:120|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction stack:128|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction stack:136|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction stack:144|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction stack:152|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:112|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:152|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:144|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:136|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:120|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:128|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
      nr 1066  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1120  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1212  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: rcx|DWORD 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:24, 44] <|@ <|@
      nr 1214  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1216  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1218  <|@ instruction rbx|QWORD = MOV input: [rdx|QWORD + 496] size: QWORD <|@ <|@
      nr 1220  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1222  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1224  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1230  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36, 44] <|@ <|@
      nr 1232  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B51" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1848  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD <|@ <|@
      nr 1864  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rdx|QWORD[.] stack:32|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B77 -> B79 falseDestination: B77 -> B80 y: 2 size: DWORD inlinedY: null state [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1918  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction MOV (x: [rdx|QWORD[.] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1946  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1948  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1950  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1952  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1954  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4584523385039648594
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1802  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4567169052318882655
    begin_IR
      LIR
      nr 1866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1888  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1890  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4517296380301017088
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997662585697696
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1594  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1596  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1598  <|@ instruction r8|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction stack:48|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997194285186786
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1636  <|@ instruction r8|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1638  <|@ instruction r10|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1640  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1644  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1646  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1662  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1424  <|@ instruction r10|DWORD = MOVE input: int[-187411|0xfffffffffffd23ed] <|@ <|@
      nr 1432  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B60" "B59" "B58" "B57" "B16" "B13" "B56" "B18" "B22" "B55" "B24" "B28" "B54" "B30" "B34" "B53" "B36" "B40" "B52" "B42" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1968  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1970  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1972  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction NOP <|@ <|@
      nr 1990  <|@ instruction NOP <|@ <|@
      nr 1992  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1994  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1996  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD rcx|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  554  <|@ instruction r10|DWORD = MOVE input: int[-192531|0xfffffffffffd0fed] <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1284  <|@ instruction r10|DWORD = MOVE input: int[-57651|0xffffffffffff1ecd] <|@ <|@
      nr 1292  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1364  <|@ instruction r10|DWORD = MOVE input: int[-38195|0xffffffffffff6acd] <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1238  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction MOV x: [r15|QWORD + 1156] y: -200723 size: DWORD <|@ <|@
      nr 1256  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1258  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:39, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  434  <|@ instruction r10|DWORD = MOVE input: int[-190483|0xfffffffffffd17ed] <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1894  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1896  <|@ instruction NOP <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction MOV x: [r15|QWORD + 1156] y: -147483 size: DWORD <|@ <|@
      nr 1912  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1914  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rdx|QWORD[.] r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1304  <|@ instruction r10|DWORD = MOVE input: int[-52787|0xffffffffffff31cd] <|@ <|@
      nr 1312  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1966  <|@ instruction r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] <|@ <|@
      nr 1974  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  642  <|@ instruction r10|DWORD = MOVE input: int[-193555|0xfffffffffffd0bed] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  328  <|@ instruction r10|DWORD = MOVE input: int[-103707|0xfffffffffffe6ae5] <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  522  <|@ instruction r10|DWORD = MOVE input: int[-191507|0xfffffffffffd13ed] <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  402  <|@ instruction r10|DWORD = MOVE input: int[-189459|0xfffffffffffd1bed] <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1344  <|@ instruction r10|DWORD = MOVE input: int[-43059|0xffffffffffff57cd] <|@ <|@
      nr 1352  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  884  <|@ instruction r10|DWORD = MOVE input: int[-197651|0xfffffffffffcfbed] <|@ <|@
      nr  892  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction rsi|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction r8|QWORD[.] = MOVE input: stack:152|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ instruction r9|QWORD[.] = MOVE input: stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rcx|QWORD[.] = MOVE input: stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction rdi|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1084  <|@ instruction rax|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1088  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction MOV x: [r15|QWORD + 1156] y: -199699 size: DWORD <|@ <|@
      nr 1106  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1108  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rsi|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r8|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rcx|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rdi|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: rax|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  794  <|@ instruction r10|DWORD = MOVE input: int[-196627|0xfffffffffffcffed] <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction r8|QWORD = MOVE input: long[7700|0x1e14] <|@ <|@
      nr 1384  <|@ instruction r10|DWORD = MOVE input: int[-33331|0xffffffffffff7dcd] <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1324  <|@ instruction r10|DWORD = MOVE input: int[-47923|0xffffffffffff44cd] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  920  <|@ instruction r10|DWORD = MOVE input: int[-198675|0xfffffffffffcf7ed] <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1404  <|@ instruction r10|DWORD = MOVE input: int[-188435|0xfffffffffffd1fed] <|@ <|@
      nr 1412  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  762  <|@ instruction r10|DWORD = MOVE input: int[-195603|0xfffffffffffd03ed] <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1444  <|@ instruction r10|DWORD = MOVE input: int[-97820|0xfffffffffffe81e4] <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction MOV x: [r15|QWORD + 1156] y: -94515 size: DWORD <|@ <|@
      nr 2016  <|@ instruction MOV x: [r15|QWORD + 1168] y: 12952 size: QWORD <|@ <|@
      nr 2018  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: stack:56|QWORD[.] rdx|QWORD[.] rcx|DWORD stack:64|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #6          // java.util.regex.Matcher.to:int
     5: aload_0       
     6: getfield      #5          // minLength:int
     9: isub          
    10: if_icmple     20
    13: aload_1       
    14: iconst_1      
    15: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    18: iconst_0      
    19: ireturn       
    20: aload_1       
    21: getfield      #6          // java.util.regex.Matcher.to:int
    24: aload_0       
    25: getfield      #5          // minLength:int
    28: isub          
    29: istore        4
    31: iload_2       
    32: iload         4
    34: if_icmpgt     83
    37: aload_0       
    38: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    41: aload_1       
    42: iload_2       
    43: aload_3       
    44: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    47: ifeq          77
    50: aload_1       
    51: iload_2       
    52: putfield      #9          // java.util.regex.Matcher.first:int
    55: aload_1       
    56: getfield      #10         // java.util.regex.Matcher.groups:int[]
    59: iconst_0      
    60: aload_1       
    61: getfield      #9          // java.util.regex.Matcher.first:int
    64: iastore       
    65: aload_1       
    66: getfield      #10         // java.util.regex.Matcher.groups:int[]
    69: iconst_1      
    70: aload_1       
    71: getfield      #11         // java.util.regex.Matcher.last:int
    74: iastore       
    75: iconst_1      
    76: ireturn       
    77: iinc          
    80: goto          31
    83: aload_1       
    84: iconst_1      
    85: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    88: iconst_0      
    89: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e1bc5ac slotKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 9.93051617825813E-7 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B83" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B83 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B48" "B75" 
    successors "B78" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612642046083831603
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 8.983968413646328E-4 condition: > trueDestination: B4 -> B78 falseDestination: B4 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B61" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612637141171924796
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  150  <|@ instruction stack:76|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  154  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  156  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  158  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  160  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction stack:88|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}] keyTargets: [B5 -> B6, B5 -> B61] defaultTarget: B5 -> B81 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B60 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rbp|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B58 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" "B14" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rcx|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction rbx|DWORD = MOVZXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  256  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  258  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B9 -> B10, B9 -> B11, B9 -> B14] defaultTarget: B9 -> B57 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609027637273029927
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction CMP (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  280  <|@ instruction rcx|DWORD = SETCC condition: = <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B19" "B31" "B43" "B46" "B37" "B25" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5929707392225225 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609023662074253018
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: rcx|DWORD 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:24, 44] <|@ <|@
      nr 1148  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1154  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|QWORD = MOVZXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVZXB input: [rcx|QWORD + rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" "B20" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602373890597978734
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r13|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  374  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  376  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  378  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B14 -> B15, B14 -> B20] defaultTarget: B14 -> B56 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B26" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870269280122293
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction stack:92|DWORD[_] = MOVE input: rbp|DWORD[_] moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction r13|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  494  <|@ instruction rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B20 -> B21, B20 -> B26] defaultTarget: B20 -> B55 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" "B32" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366647962319916
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction stack:96|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction rbp|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  612  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  614  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  616  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  618  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B26 -> B27, B26 -> B32] defaultTarget: B26 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B38" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863026644571602
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction stack:100|DWORD[_] = MOVE input: r13|DWORD[_] moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  734  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  736  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  738  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B32 -> B33, B32 -> B38] defaultTarget: B32 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084642
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction stack:44|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1466  <|@ instruction r10|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1468  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590333407604006618
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction r13|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1530  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: stack:88|QWORD[.] stack:72|QWORD[.] r10|DWORD r8|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD r8|QWORD[.] stack:28|DWORD 
>@ <|@ instruction NULLCHECK address: [r13|DWORD[_] * 8] state [bci:9, 44] <|@ <|@
      nr 1532  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1534  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1536  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1538  <|@ instruction stack:48|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1540  <|@ instruction stack:128|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1542  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stack: stack:128|QWORD[.] 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:48|DWORD stack:64|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<CharSequence.charAt(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:21, 44] <|@ <|@
      nr 1544  <|@ instruction rsi|QWORD[.] = MOVE input: stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1548  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:48|DWORD stack:64|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:26, 44] <|@ <|@
      nr 1550  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5908646161430428 condition: = trueDestination: B63 -> B65 falseDestination: B63 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584799587332037117
    begin_IR
      LIR
      nr 1552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction rsi|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr 1566  <|@ instruction r10|DWORD = INC value: stack:48|DWORD size: DWORD <|@ <|@
      nr 1568  <|@ instruction stack:44|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1572  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1574  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1576  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors "B63" "B66" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4590333408894431376
    begin_IR
      LIR
      nr 1470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999997723712406 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621235127
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: stack:48|DWORD) trueDestinationProbability: 0.9999996147864973 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621458430
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" "B69" 
    successors "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr 1664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction r10|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4586620676558964615
    begin_IR
      LIR
      nr 1694  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1696  <|@ instruction stack:48|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1746  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: stack:88|QWORD[.] rdx|QWORD[.] r10|DWORD stack:64|QWORD[.] stack:48|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:54, 44] <|@ <|@
      nr 1748  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1750  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1752  <|@ instruction rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD <|@ <|@
      nr 1754  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1756  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1758  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1762  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1764  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1766  <|@ instruction stack:44|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1768  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:44|DWORD stack:64|QWORD[.] stack:48|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70, 44] <|@ <|@
      nr 1770  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.31374907693960497 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B71" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4579260716611284855
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction r11|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1776  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1790  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B73" 
    successors "B75" "B72" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4588886804909642497
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1676  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1678  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.2596988928056022 condition: < trueDestination: B71 -> B75 falseDestination: B71 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B44" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359405326877352
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  850  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  852  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  854  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  856  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B38 -> B39, B38 -> B44] defaultTarget: B38 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580189478109779700
    begin_IR
      LIR
      nr 1812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
locals: - - - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:87, 44] <|@ <|@
      nr 1826  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1828  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1830  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1832  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1834  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1836  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction r13|DWORD[_] = MOVE input: stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction rdx|DWORD[_] = MOVE input: stack:96|DWORD[_] moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction r10|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction r11|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:31] <|@ <|@
      nr 1020  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction r8|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1024  <|@ instruction r9|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1026  <|@ instruction rcx|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1028  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1030  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1032  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1038  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1040  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1046  <|@ instruction stack:112|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction stack:120|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction stack:128|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction stack:136|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction stack:144|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction stack:152|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:112|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:152|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:144|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:136|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:120|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:128|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
      nr 1066  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1120  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1212  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: rcx|DWORD 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:24, 44] <|@ <|@
      nr 1214  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1216  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1218  <|@ instruction rbx|QWORD = MOV input: [rdx|QWORD + 496] size: QWORD <|@ <|@
      nr 1220  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1222  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1224  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1230  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36, 44] <|@ <|@
      nr 1232  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B51" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1848  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD <|@ <|@
      nr 1864  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rdx|QWORD[.] stack:32|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B77 -> B79 falseDestination: B77 -> B80 y: 2 size: DWORD inlinedY: null state [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1918  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction MOV (x: [rdx|QWORD[.] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1946  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1948  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1950  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1952  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1954  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4584523385039648594
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1802  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4567169052318882655
    begin_IR
      LIR
      nr 1866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1888  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1890  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4517296380301017088
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997662585697696
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1594  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1596  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1598  <|@ instruction r8|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction stack:48|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997194285186786
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1636  <|@ instruction r8|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1638  <|@ instruction r10|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1640  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1644  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1646  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1662  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1424  <|@ instruction r10|DWORD = MOVE input: int[-187411|0xfffffffffffd23ed] <|@ <|@
      nr 1432  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B60" "B59" "B58" "B57" "B16" "B13" "B56" "B18" "B22" "B55" "B24" "B28" "B54" "B30" "B34" "B53" "B36" "B40" "B52" "B42" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1968  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1970  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1972  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction NOP <|@ <|@
      nr 1990  <|@ instruction NOP <|@ <|@
      nr 1992  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1994  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1996  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD rcx|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  554  <|@ instruction r10|DWORD = MOVE input: int[-192531|0xfffffffffffd0fed] <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1284  <|@ instruction r10|DWORD = MOVE input: int[-57651|0xffffffffffff1ecd] <|@ <|@
      nr 1292  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1364  <|@ instruction r10|DWORD = MOVE input: int[-38195|0xffffffffffff6acd] <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1238  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction MOV x: [r15|QWORD + 1156] y: -200723 size: DWORD <|@ <|@
      nr 1256  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1258  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:39, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  434  <|@ instruction r10|DWORD = MOVE input: int[-190483|0xfffffffffffd17ed] <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1894  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1896  <|@ instruction NOP <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction MOV x: [r15|QWORD + 1156] y: -147483 size: DWORD <|@ <|@
      nr 1912  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1914  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rdx|QWORD[.] r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1304  <|@ instruction r10|DWORD = MOVE input: int[-52787|0xffffffffffff31cd] <|@ <|@
      nr 1312  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1966  <|@ instruction r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] <|@ <|@
      nr 1974  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  642  <|@ instruction r10|DWORD = MOVE input: int[-193555|0xfffffffffffd0bed] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  328  <|@ instruction r10|DWORD = MOVE input: int[-103707|0xfffffffffffe6ae5] <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  522  <|@ instruction r10|DWORD = MOVE input: int[-191507|0xfffffffffffd13ed] <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  402  <|@ instruction r10|DWORD = MOVE input: int[-189459|0xfffffffffffd1bed] <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1344  <|@ instruction r10|DWORD = MOVE input: int[-43059|0xffffffffffff57cd] <|@ <|@
      nr 1352  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  884  <|@ instruction r10|DWORD = MOVE input: int[-197651|0xfffffffffffcfbed] <|@ <|@
      nr  892  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction rsi|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction r8|QWORD[.] = MOVE input: stack:152|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ instruction r9|QWORD[.] = MOVE input: stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rcx|QWORD[.] = MOVE input: stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction rdi|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1084  <|@ instruction rax|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1088  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction MOV x: [r15|QWORD + 1156] y: -199699 size: DWORD <|@ <|@
      nr 1106  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1108  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rsi|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r8|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rcx|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rdi|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: rax|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  794  <|@ instruction r10|DWORD = MOVE input: int[-196627|0xfffffffffffcffed] <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction r8|QWORD = MOVE input: long[7700|0x1e14] <|@ <|@
      nr 1384  <|@ instruction r10|DWORD = MOVE input: int[-33331|0xffffffffffff7dcd] <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1324  <|@ instruction r10|DWORD = MOVE input: int[-47923|0xffffffffffff44cd] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  920  <|@ instruction r10|DWORD = MOVE input: int[-198675|0xfffffffffffcf7ed] <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1404  <|@ instruction r10|DWORD = MOVE input: int[-188435|0xfffffffffffd1fed] <|@ <|@
      nr 1412  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  762  <|@ instruction r10|DWORD = MOVE input: int[-195603|0xfffffffffffd03ed] <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1444  <|@ instruction r10|DWORD = MOVE input: int[-97820|0xfffffffffffe81e4] <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction MOV x: [r15|QWORD + 1156] y: -94515 size: DWORD <|@ <|@
      nr 2016  <|@ instruction MOV x: [r15|QWORD + 1168] y: 12952 size: QWORD <|@ <|@
      nr 2018  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: stack:56|QWORD[.] rdx|QWORD[.] rcx|DWORD stack:64|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #6          // java.util.regex.Matcher.to:int
     5: aload_0       
     6: getfield      #5          // minLength:int
     9: isub          
    10: if_icmple     20
    13: aload_1       
    14: iconst_1      
    15: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    18: iconst_0      
    19: ireturn       
    20: aload_1       
    21: getfield      #6          // java.util.regex.Matcher.to:int
    24: aload_0       
    25: getfield      #5          // minLength:int
    28: isub          
    29: istore        4
    31: iload_2       
    32: iload         4
    34: if_icmpgt     83
    37: aload_0       
    38: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    41: aload_1       
    42: iload_2       
    43: aload_3       
    44: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    47: ifeq          77
    50: aload_1       
    51: iload_2       
    52: putfield      #9          // java.util.regex.Matcher.first:int
    55: aload_1       
    56: getfield      #10         // java.util.regex.Matcher.groups:int[]
    59: iconst_0      
    60: aload_1       
    61: getfield      #9          // java.util.regex.Matcher.first:int
    64: iastore       
    65: aload_1       
    66: getfield      #10         // java.util.regex.Matcher.groups:int[]
    69: iconst_1      
    70: aload_1       
    71: getfield      #11         // java.util.regex.Matcher.last:int
    74: iastore       
    75: iconst_1      
    76: ireturn       
    77: iinc          
    80: goto          31
    83: aload_1       
    84: iconst_1      
    85: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    88: iconst_0      
    89: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e1bc5ac slotKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 9.93051617825813E-7 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B83" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B83 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B48" "B75" 
    successors "B78" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612642046083831603
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 8.983968413646328E-4 condition: > trueDestination: B4 -> B78 falseDestination: B4 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B61" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612637141171924796
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  150  <|@ instruction stack:76|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  154  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  156  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  158  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  160  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction stack:88|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}] keyTargets: [B5 -> B6, B5 -> B61] defaultTarget: B5 -> B81 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B60 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rbp|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B58 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" "B14" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rcx|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction rbx|DWORD = MOVZXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  256  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  258  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B9 -> B10, B9 -> B11, B9 -> B14] defaultTarget: B9 -> B57 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609027637273029927
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction CMP (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  280  <|@ instruction rcx|DWORD = SETCC condition: = <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B19" "B31" "B43" "B46" "B37" "B25" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5929707392225225 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609023662074253018
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: rcx|DWORD 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:24, 44] <|@ <|@
      nr 1148  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1154  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|QWORD = MOVZXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVZXB input: [rcx|QWORD + rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" "B20" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602373890597978734
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r13|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  374  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  376  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  378  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B14 -> B15, B14 -> B20] defaultTarget: B14 -> B56 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B26" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870269280122293
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction stack:92|DWORD[_] = MOVE input: rbp|DWORD[_] moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction r13|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  494  <|@ instruction rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B20 -> B21, B20 -> B26] defaultTarget: B20 -> B55 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" "B32" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366647962319916
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction stack:96|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction rbp|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  612  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  614  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  616  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  618  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B26 -> B27, B26 -> B32] defaultTarget: B26 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B38" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863026644571602
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction stack:100|DWORD[_] = MOVE input: r13|DWORD[_] moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  734  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  736  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  738  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B32 -> B33, B32 -> B38] defaultTarget: B32 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084642
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction stack:44|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1466  <|@ instruction r10|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1468  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590333407604006618
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction r13|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1530  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: stack:88|QWORD[.] stack:72|QWORD[.] r10|DWORD r8|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD r8|QWORD[.] stack:28|DWORD 
>@ <|@ instruction NULLCHECK address: [r13|DWORD[_] * 8] state [bci:9, 44] <|@ <|@
      nr 1532  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1534  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1536  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1538  <|@ instruction stack:48|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1540  <|@ instruction stack:128|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1542  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stack: stack:128|QWORD[.] 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:48|DWORD stack:64|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<CharSequence.charAt(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:21, 44] <|@ <|@
      nr 1544  <|@ instruction rsi|QWORD[.] = MOVE input: stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1548  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:48|DWORD stack:64|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:26, 44] <|@ <|@
      nr 1550  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5908646161430428 condition: = trueDestination: B63 -> B65 falseDestination: B63 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584799587332037117
    begin_IR
      LIR
      nr 1552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction rsi|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr 1566  <|@ instruction r10|DWORD = INC value: stack:48|DWORD size: DWORD <|@ <|@
      nr 1568  <|@ instruction stack:44|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1572  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1574  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1576  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors "B63" "B66" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4590333408894431376
    begin_IR
      LIR
      nr 1470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999997723712406 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621235127
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: stack:48|DWORD) trueDestinationProbability: 0.9999996147864973 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621458430
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" "B69" 
    successors "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr 1664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction r10|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4586620676558964615
    begin_IR
      LIR
      nr 1694  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1696  <|@ instruction stack:48|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1746  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: stack:88|QWORD[.] rdx|QWORD[.] r10|DWORD stack:64|QWORD[.] stack:48|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:54, 44] <|@ <|@
      nr 1748  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1750  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1752  <|@ instruction rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD <|@ <|@
      nr 1754  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1756  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1758  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1762  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1764  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1766  <|@ instruction stack:44|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1768  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:44|DWORD stack:64|QWORD[.] stack:48|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70, 44] <|@ <|@
      nr 1770  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.31374907693960497 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B71" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4579260716611284855
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction r11|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1776  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1790  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B73" 
    successors "B75" "B72" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4588886804909642497
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1676  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1678  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.2596988928056022 condition: < trueDestination: B71 -> B75 falseDestination: B71 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B44" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359405326877352
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  850  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  852  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  854  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  856  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B38 -> B39, B38 -> B44] defaultTarget: B38 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580189478109779700
    begin_IR
      LIR
      nr 1812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
locals: - - - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:87, 44] <|@ <|@
      nr 1826  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1828  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1830  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1832  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1834  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1836  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction r13|DWORD[_] = MOVE input: stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction rdx|DWORD[_] = MOVE input: stack:96|DWORD[_] moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction r10|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction r11|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:31] <|@ <|@
      nr 1020  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction r8|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1024  <|@ instruction r9|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1026  <|@ instruction rcx|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1028  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1030  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1032  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1038  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1040  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1046  <|@ instruction stack:112|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction stack:120|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction stack:128|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction stack:136|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction stack:144|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction stack:152|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:112|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:152|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:144|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:136|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:120|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:128|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
      nr 1066  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1120  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1212  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: rcx|DWORD 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:24, 44] <|@ <|@
      nr 1214  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1216  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1218  <|@ instruction rbx|QWORD = MOV input: [rdx|QWORD + 496] size: QWORD <|@ <|@
      nr 1220  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1222  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1224  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1230  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36, 44] <|@ <|@
      nr 1232  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B51" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1848  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD <|@ <|@
      nr 1864  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rdx|QWORD[.] stack:32|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B77 -> B79 falseDestination: B77 -> B80 y: 2 size: DWORD inlinedY: null state [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1918  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction MOV (x: [rdx|QWORD[.] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1946  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1948  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1950  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1952  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1954  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4584523385039648594
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1802  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4567169052318882655
    begin_IR
      LIR
      nr 1866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1888  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1890  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4517296380301017088
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997662585697696
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1594  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1596  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1598  <|@ instruction r8|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction stack:48|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997194285186786
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1636  <|@ instruction r8|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1638  <|@ instruction r10|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1640  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1644  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1646  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1662  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1424  <|@ instruction r10|DWORD = MOVE input: int[-187411|0xfffffffffffd23ed] <|@ <|@
      nr 1432  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B60" "B59" "B58" "B57" "B16" "B13" "B56" "B18" "B22" "B55" "B24" "B28" "B54" "B30" "B34" "B53" "B36" "B40" "B52" "B42" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1968  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1970  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1972  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction NOP <|@ <|@
      nr 1990  <|@ instruction NOP <|@ <|@
      nr 1992  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1994  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1996  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD rcx|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  554  <|@ instruction r10|DWORD = MOVE input: int[-192531|0xfffffffffffd0fed] <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1284  <|@ instruction r10|DWORD = MOVE input: int[-57651|0xffffffffffff1ecd] <|@ <|@
      nr 1292  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1364  <|@ instruction r10|DWORD = MOVE input: int[-38195|0xffffffffffff6acd] <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1238  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction MOV x: [r15|QWORD + 1156] y: -200723 size: DWORD <|@ <|@
      nr 1256  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1258  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:39, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  434  <|@ instruction r10|DWORD = MOVE input: int[-190483|0xfffffffffffd17ed] <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1894  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1896  <|@ instruction NOP <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction MOV x: [r15|QWORD + 1156] y: -147483 size: DWORD <|@ <|@
      nr 1912  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1914  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rdx|QWORD[.] r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1304  <|@ instruction r10|DWORD = MOVE input: int[-52787|0xffffffffffff31cd] <|@ <|@
      nr 1312  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1966  <|@ instruction r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] <|@ <|@
      nr 1974  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  642  <|@ instruction r10|DWORD = MOVE input: int[-193555|0xfffffffffffd0bed] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  328  <|@ instruction r10|DWORD = MOVE input: int[-103707|0xfffffffffffe6ae5] <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  522  <|@ instruction r10|DWORD = MOVE input: int[-191507|0xfffffffffffd13ed] <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  402  <|@ instruction r10|DWORD = MOVE input: int[-189459|0xfffffffffffd1bed] <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1344  <|@ instruction r10|DWORD = MOVE input: int[-43059|0xffffffffffff57cd] <|@ <|@
      nr 1352  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  884  <|@ instruction r10|DWORD = MOVE input: int[-197651|0xfffffffffffcfbed] <|@ <|@
      nr  892  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction rsi|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction r8|QWORD[.] = MOVE input: stack:152|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ instruction r9|QWORD[.] = MOVE input: stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rcx|QWORD[.] = MOVE input: stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction rdi|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1084  <|@ instruction rax|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1088  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction MOV x: [r15|QWORD + 1156] y: -199699 size: DWORD <|@ <|@
      nr 1106  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1108  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rsi|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r8|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rcx|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rdi|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: rax|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  794  <|@ instruction r10|DWORD = MOVE input: int[-196627|0xfffffffffffcffed] <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction r8|QWORD = MOVE input: long[7700|0x1e14] <|@ <|@
      nr 1384  <|@ instruction r10|DWORD = MOVE input: int[-33331|0xffffffffffff7dcd] <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1324  <|@ instruction r10|DWORD = MOVE input: int[-47923|0xffffffffffff44cd] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  920  <|@ instruction r10|DWORD = MOVE input: int[-198675|0xfffffffffffcf7ed] <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1404  <|@ instruction r10|DWORD = MOVE input: int[-188435|0xfffffffffffd1fed] <|@ <|@
      nr 1412  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  762  <|@ instruction r10|DWORD = MOVE input: int[-195603|0xfffffffffffd03ed] <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1444  <|@ instruction r10|DWORD = MOVE input: int[-97820|0xfffffffffffe81e4] <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction MOV x: [r15|QWORD + 1156] y: -94515 size: DWORD <|@ <|@
      nr 2016  <|@ instruction MOV x: [r15|QWORD + 1168] y: 12952 size: QWORD <|@ <|@
      nr 2018  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: stack:56|QWORD[.] rdx|QWORD[.] rcx|DWORD stack:64|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #6          // java.util.regex.Matcher.to:int
     5: aload_0       
     6: getfield      #5          // minLength:int
     9: isub          
    10: if_icmple     20
    13: aload_1       
    14: iconst_1      
    15: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    18: iconst_0      
    19: ireturn       
    20: aload_1       
    21: getfield      #6          // java.util.regex.Matcher.to:int
    24: aload_0       
    25: getfield      #5          // minLength:int
    28: isub          
    29: istore        4
    31: iload_2       
    32: iload         4
    34: if_icmpgt     83
    37: aload_0       
    38: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    41: aload_1       
    42: iload_2       
    43: aload_3       
    44: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    47: ifeq          77
    50: aload_1       
    51: iload_2       
    52: putfield      #9          // java.util.regex.Matcher.first:int
    55: aload_1       
    56: getfield      #10         // java.util.regex.Matcher.groups:int[]
    59: iconst_0      
    60: aload_1       
    61: getfield      #9          // java.util.regex.Matcher.first:int
    64: iastore       
    65: aload_1       
    66: getfield      #10         // java.util.regex.Matcher.groups:int[]
    69: iconst_1      
    70: aload_1       
    71: getfield      #11         // java.util.regex.Matcher.last:int
    74: iastore       
    75: iconst_1      
    76: ireturn       
    77: iinc          
    80: goto          31
    83: aload_1       
    84: iconst_1      
    85: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    88: iconst_0      
    89: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e1bc5ac slotKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 9.93051617825813E-7 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B83" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B83 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B48" "B75" 
    successors "B78" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612642046083831603
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 8.983968413646328E-4 condition: > trueDestination: B4 -> B78 falseDestination: B4 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B61" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612637141171924796
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  150  <|@ instruction stack:76|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  152  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  154  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  156  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  158  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  160  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction stack:88|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}] keyTargets: [B5 -> B6, B5 -> B61] defaultTarget: B5 -> B81 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  184  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0, r9:0, stack:72, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B60 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rbp|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbp:0, rsi:0, r8:0, stack:72, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B58 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" "B14" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rcx|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction rbx|DWORD = MOVZXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  256  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  258  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B9 -> B10, B9 -> B11, B9 -> B14] defaultTarget: B9 -> B57 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609027637273029927
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction CMP (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  280  <|@ instruction rcx|DWORD = SETCC condition: = <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B19" "B31" "B43" "B46" "B37" "B25" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5929707392225225 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609023662074253018
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ st <@st|@reference-map: [stack:72, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: rcx|DWORD 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:24, 44] <|@ <|@
      nr 1148  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1154  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  298  <|@ st <@st|@reference-map: [rdx:0, rbp:0, rsi:0, r8:0, stack:72, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|QWORD = MOVZXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVZXB input: [rcx|QWORD + rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" "B20" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602373890597978734
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  372  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbp:0, rsi:0, r8:0, stack:72, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r13|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  374  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  376  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  378  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B14 -> B15, B14 -> B20] defaultTarget: B14 -> B56 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B26" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870269280122293
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction stack:92|DWORD[_] = MOVE input: rbp|DWORD[_] moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction r13|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  492  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0, r13:0, stack:68, stack:72, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  494  <|@ instruction rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B20 -> B21, B20 -> B26] defaultTarget: B20 -> B55 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" "B32" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366647962319916
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction stack:96|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction rbp|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  612  <|@ st <@st|@reference-map: [rdx:0, rbp:0, rsi:0, r8:0, r13:0, stack:64, stack:68, stack:72, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  614  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  616  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  618  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B26 -> B27, B26 -> B32] defaultTarget: B26 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B38" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863026644571602
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction stack:100|DWORD[_] = MOVE input: r13|DWORD[_] moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  732  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbp:0, rsi:0, r8:0, stack:60, stack:64, stack:68, stack:72, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  734  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  736  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  738  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B32 -> B33, B32 -> B38] defaultTarget: B32 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084642
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction stack:44|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1466  <|@ instruction r10|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1468  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590333407604006618
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction r13|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1530  <|@ st <@st|@reference-map: [r8:0, r13:0, stack:72, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: stack:88|QWORD[.] stack:72|QWORD[.] r10|DWORD r8|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD r8|QWORD[.] stack:28|DWORD 
>@ <|@ instruction NULLCHECK address: [r13|DWORD[_] * 8] state [bci:9, 44] <|@ <|@
      nr 1532  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1534  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1536  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1538  <|@ instruction stack:48|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1540  <|@ instruction stack:128|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1542  <|@ st <@st|@reference-map: [stack:32, stack:72, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stack: stack:128|QWORD[.] 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:48|DWORD stack:64|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<CharSequence.charAt(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:21, 44] <|@ <|@
      nr 1544  <|@ instruction rsi|QWORD[.] = MOVE input: stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1548  <|@ st <@st|@reference-map: [stack:72, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:48|DWORD stack:64|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:26, 44] <|@ <|@
      nr 1550  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5908646161430428 condition: = trueDestination: B63 -> B65 falseDestination: B63 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584799587332037117
    begin_IR
      LIR
      nr 1552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction rsi|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr 1566  <|@ instruction r10|DWORD = INC value: stack:48|DWORD size: DWORD <|@ <|@
      nr 1568  <|@ instruction stack:44|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1572  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1574  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1576  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors "B63" "B66" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4590333408894431376
    begin_IR
      LIR
      nr 1470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999997723712406 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621235127
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: stack:48|DWORD) trueDestinationProbability: 0.9999996147864973 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621458430
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" "B69" 
    successors "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr 1664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction r10|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4586620676558964615
    begin_IR
      LIR
      nr 1694  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1696  <|@ instruction stack:48|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1746  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:72, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: stack:88|QWORD[.] rdx|QWORD[.] r10|DWORD stack:64|QWORD[.] stack:48|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:54, 44] <|@ <|@
      nr 1748  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1750  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1752  <|@ instruction rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD <|@ <|@
      nr 1754  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1756  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1758  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1762  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1764  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1766  <|@ instruction stack:44|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1768  <|@ st <@st|@reference-map: [stack:72, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:44|DWORD stack:64|QWORD[.] stack:48|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70, 44] <|@ <|@
      nr 1770  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.31374907693960497 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B71" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4579260716611284855
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction r11|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1776  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1790  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B73" 
    successors "B75" "B72" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4588886804909642497
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1676  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1678  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.2596988928056022 condition: < trueDestination: B71 -> B75 falseDestination: B71 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B44" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359405326877352
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  850  <|@ st <@st|@reference-map: [rcx:0, rbp:0, rsi:0, stack:60, stack:64, stack:68, stack:72, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  852  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  854  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  856  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B38 -> B39, B38 -> B44] defaultTarget: B38 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580189478109779700
    begin_IR
      LIR
      nr 1812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ st <@st|@reference-map: [stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
locals: - - - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:87, 44] <|@ <|@
      nr 1826  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1828  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1830  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1832  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1834  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1836  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction r13|DWORD[_] = MOVE input: stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction rdx|DWORD[_] = MOVE input: stack:96|DWORD[_] moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction r10|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction r11|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1018  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbp:0, rsi:0, r10:0, r11:0, r13:0, stack:72, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:31] <|@ <|@
      nr 1020  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction r8|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1024  <|@ instruction r9|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1026  <|@ instruction rcx|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1028  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1030  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1032  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1038  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1040  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1046  <|@ instruction stack:112|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction stack:120|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction stack:128|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction stack:136|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction stack:144|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction stack:152|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:72, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:112|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:152|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:144|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:136|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:120|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:128|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
      nr 1066  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1120  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1212  <|@ st <@st|@reference-map: [rsi:0, stack:72, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: rcx|DWORD 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:24, 44] <|@ <|@
      nr 1214  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1216  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1218  <|@ instruction rbx|QWORD = MOV input: [rdx|QWORD + 496] size: QWORD <|@ <|@
      nr 1220  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1222  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1224  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1230  <|@ st <@st|@reference-map: [stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36, 44] <|@ <|@
      nr 1232  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B51" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1848  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD <|@ <|@
      nr 1864  <|@ st <@st|@reference-map: [rax:0, rdx:0]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rdx|QWORD[.] stack:32|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B77 -> B79 falseDestination: B77 -> B80 y: 2 size: DWORD inlinedY: null state [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1918  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction MOV (x: [rdx|QWORD[.] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1946  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1948  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1950  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1952  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1954  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4584523385039648594
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1802  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4567169052318882655
    begin_IR
      LIR
      nr 1866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1888  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1890  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4517296380301017088
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997662585697696
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1594  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1596  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1598  <|@ instruction r8|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction stack:48|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997194285186786
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1636  <|@ instruction r8|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1638  <|@ instruction r10|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1640  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1644  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1646  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1662  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1424  <|@ instruction r10|DWORD = MOVE input: int[-187411|0xfffffffffffd23ed] <|@ <|@
      nr 1432  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B60" "B59" "B58" "B57" "B16" "B13" "B56" "B18" "B22" "B55" "B24" "B28" "B54" "B30" "B34" "B53" "B36" "B40" "B52" "B42" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1968  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1970  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1972  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction NOP <|@ <|@
      nr 1990  <|@ instruction NOP <|@ <|@
      nr 1992  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1994  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1996  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD rcx|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  554  <|@ instruction r10|DWORD = MOVE input: int[-192531|0xfffffffffffd0fed] <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1284  <|@ instruction r10|DWORD = MOVE input: int[-57651|0xffffffffffff1ecd] <|@ <|@
      nr 1292  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1364  <|@ instruction r10|DWORD = MOVE input: int[-38195|0xffffffffffff6acd] <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1238  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction MOV x: [r15|QWORD + 1156] y: -200723 size: DWORD <|@ <|@
      nr 1256  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1258  <|@ st <@st|@reference-map: [rdx:0, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:39, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  434  <|@ instruction r10|DWORD = MOVE input: int[-190483|0xfffffffffffd17ed] <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1894  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1896  <|@ instruction NOP <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction MOV x: [r15|QWORD + 1156] y: -147483 size: DWORD <|@ <|@
      nr 1912  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1914  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rdx|QWORD[.] r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1304  <|@ instruction r10|DWORD = MOVE input: int[-52787|0xffffffffffff31cd] <|@ <|@
      nr 1312  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1966  <|@ instruction r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] <|@ <|@
      nr 1974  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  642  <|@ instruction r10|DWORD = MOVE input: int[-193555|0xfffffffffffd0bed] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  328  <|@ instruction r10|DWORD = MOVE input: int[-103707|0xfffffffffffe6ae5] <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  522  <|@ instruction r10|DWORD = MOVE input: int[-191507|0xfffffffffffd13ed] <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  402  <|@ instruction r10|DWORD = MOVE input: int[-189459|0xfffffffffffd1bed] <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1344  <|@ instruction r10|DWORD = MOVE input: int[-43059|0xffffffffffff57cd] <|@ <|@
      nr 1352  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  884  <|@ instruction r10|DWORD = MOVE input: int[-197651|0xfffffffffffcfbed] <|@ <|@
      nr  892  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction rsi|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction r8|QWORD[.] = MOVE input: stack:152|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ instruction r9|QWORD[.] = MOVE input: stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rcx|QWORD[.] = MOVE input: stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction rdi|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1084  <|@ instruction rax|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1088  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction MOV x: [r15|QWORD + 1156] y: -199699 size: DWORD <|@ <|@
      nr 1106  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1108  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rsi|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r8|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rcx|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rdi|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: rax|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  794  <|@ instruction r10|DWORD = MOVE input: int[-196627|0xfffffffffffcffed] <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction r8|QWORD = MOVE input: long[7700|0x1e14] <|@ <|@
      nr 1384  <|@ instruction r10|DWORD = MOVE input: int[-33331|0xffffffffffff7dcd] <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1324  <|@ instruction r10|DWORD = MOVE input: int[-47923|0xffffffffffff44cd] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  920  <|@ instruction r10|DWORD = MOVE input: int[-198675|0xfffffffffffcf7ed] <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1404  <|@ instruction r10|DWORD = MOVE input: int[-188435|0xfffffffffffd1fed] <|@ <|@
      nr 1412  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  762  <|@ instruction r10|DWORD = MOVE input: int[-195603|0xfffffffffffd03ed] <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1444  <|@ instruction r10|DWORD = MOVE input: int[-97820|0xfffffffffffe81e4] <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction MOV x: [r15|QWORD + 1156] y: -94515 size: DWORD <|@ <|@
      nr 2016  <|@ instruction MOV x: [r15|QWORD + 1168] y: 12952 size: QWORD <|@ <|@
      nr 2018  <|@ st <@st|@reference-map: [rdx:0, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: stack:56|QWORD[.] rdx|QWORD[.] rcx|DWORD stack:64|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #6          // java.util.regex.Matcher.to:int
     5: aload_0       
     6: getfield      #5          // minLength:int
     9: isub          
    10: if_icmple     20
    13: aload_1       
    14: iconst_1      
    15: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    18: iconst_0      
    19: ireturn       
    20: aload_1       
    21: getfield      #6          // java.util.regex.Matcher.to:int
    24: aload_0       
    25: getfield      #5          // minLength:int
    28: isub          
    29: istore        4
    31: iload_2       
    32: iload         4
    34: if_icmpgt     83
    37: aload_0       
    38: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    41: aload_1       
    42: iload_2       
    43: aload_3       
    44: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    47: ifeq          77
    50: aload_1       
    51: iload_2       
    52: putfield      #9          // java.util.regex.Matcher.first:int
    55: aload_1       
    56: getfield      #10         // java.util.regex.Matcher.groups:int[]
    59: iconst_0      
    60: aload_1       
    61: getfield      #9          // java.util.regex.Matcher.first:int
    64: iastore       
    65: aload_1       
    66: getfield      #10         // java.util.regex.Matcher.groups:int[]
    69: iconst_1      
    70: aload_1       
    71: getfield      #11         // java.util.regex.Matcher.last:int
    74: iastore       
    75: iconst_1      
    76: ireturn       
    77: iinc          
    80: goto          31
    83: aload_1       
    84: iconst_1      
    85: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    88: iconst_0      
    89: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e1bc5ac slotKind: QWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 9.93051617825813E-7 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B83" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B83 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182409855403616
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B48" "B75" 
    successors "B78" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612642046083831603
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 8.983968413646328E-4 condition: > trueDestination: B4 -> B78 falseDestination: B4 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B61" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612637141171924796
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  150  <|@ instruction stack:76|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr  152  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  154  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  156  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  158  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  160  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction stack:88|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}] keyTargets: [B5 -> B6, B5 -> B61] defaultTarget: B5 -> B81 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  184  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0, r9:0, stack:72, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B60 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction rbp|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbp:0, rsi:0, r8:0, stack:72, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  204  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B58 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" "B14" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rcx|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction rbx|DWORD = MOVZXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  256  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  258  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B9 -> B10, B9 -> B11, B9 -> B14] defaultTarget: B9 -> B57 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609027637273029927
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction CMP (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  280  <|@ instruction rcx|DWORD = SETCC condition: = <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B19" "B31" "B43" "B46" "B37" "B25" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612532466013076511
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5929707392225225 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609023662074253018
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ st <@st|@reference-map: [stack:72, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: rcx|DWORD 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:24, 44] <|@ <|@
      nr 1148  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1154  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  298  <|@ st <@st|@reference-map: [rdx:0, rbp:0, rsi:0, r8:0, stack:72, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD state [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602374454540773869
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|QWORD = MOVZXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVZXB input: [rcx|QWORD + rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" "B20" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602373890597978734
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  372  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbp:0, rsi:0, r8:0, stack:72, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r13|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  374  <|@ instruction r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  376  <|@ instruction r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  378  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B14 -> B15, B14 -> B20] defaultTarget: B14 -> B56 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870312661094183
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B26" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597870269280122293
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction stack:92|DWORD[_] = MOVE input: rbp|DWORD[_] moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction r13|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  492  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0, r13:0, stack:68, stack:72, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  494  <|@ instruction rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  496  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  498  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B20 -> B21, B20 -> B26] defaultTarget: B20 -> B55 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366691343183678
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" "B32" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593366647962319916
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction stack:96|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction rbp|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  612  <|@ st <@st|@reference-map: [rdx:0, rbp:0, rsi:0, r8:0, r13:0, stack:64, stack:68, stack:72, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  614  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  616  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  618  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B26 -> B27, B26 -> B32] defaultTarget: B26 -> B54 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863070025327238
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B38" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588863026644571602
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction stack:100|DWORD[_] = MOVE input: r13|DWORD[_] moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  732  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbp:0, rsi:0, r8:0, stack:60, stack:64, stack:68, stack:72, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r14|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  734  <|@ instruction r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  736  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  738  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B32 -> B33, B32 -> B38] defaultTarget: B32 -> B53 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359448707524860
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084642
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction stack:44|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1466  <|@ instruction r10|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1468  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590333407604006618
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction r13|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1530  <|@ st <@st|@reference-map: [r8:0, r13:0, stack:72, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9]
locals: stack:88|QWORD[.] stack:72|QWORD[.] r10|DWORD r8|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD r8|QWORD[.] stack:28|DWORD 
>@ <|@ instruction NULLCHECK address: [r13|DWORD[_] * 8] state [bci:9, 44] <|@ <|@
      nr 1532  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1534  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1536  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1538  <|@ instruction stack:48|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1540  <|@ instruction stack:128|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1542  <|@ st <@st|@reference-map: [stack:32, stack:72, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21]
stack: stack:128|QWORD[.] 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:48|DWORD stack:64|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<CharSequence.charAt(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:21, 44] <|@ <|@
      nr 1544  <|@ instruction rsi|QWORD[.] = MOVE input: stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1548  <|@ st <@st|@reference-map: [stack:72, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:48|DWORD stack:64|QWORD[.] stack:44|DWORD stack:40|DWORD 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:26, 44] <|@ <|@
      nr 1550  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5908646161430428 condition: = trueDestination: B63 -> B65 falseDestination: B63 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584799587332037117
    begin_IR
      LIR
      nr 1552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction rsi|DWORD = INC value: stack:44|DWORD size: DWORD <|@ <|@
      nr 1566  <|@ instruction r10|DWORD = INC value: stack:48|DWORD size: DWORD <|@ <|@
      nr 1568  <|@ instruction stack:44|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1572  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1574  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1576  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors "B63" "B66" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4590333408894431376
    begin_IR
      LIR
      nr 1470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999997723712406 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621235127
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1588  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: stack:48|DWORD) trueDestinationProbability: 0.9999996147864973 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860028621458430
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" "B69" 
    successors "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586860031202084643
    begin_IR
      LIR
      nr 1664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction r10|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4586620676558964615
    begin_IR
      LIR
      nr 1694  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1696  <|@ instruction stack:48|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction NOP <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1746  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:72, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54]
locals: stack:88|QWORD[.] rdx|QWORD[.] r10|DWORD stack:64|QWORD[.] stack:48|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rcx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:54, 44] <|@ <|@
      nr 1748  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1750  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1752  <|@ instruction rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD <|@ <|@
      nr 1754  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1756  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1758  <|@ instruction rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1762  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1764  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1766  <|@ instruction stack:44|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1768  <|@ st <@st|@reference-map: [stack:72, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:44|DWORD stack:64|QWORD[.] stack:48|DWORD - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70, 44] <|@ <|@
      nr 1770  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.31374907693960497 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B71" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4579260716611284855
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction r11|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1776  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1790  <|@ instruction r10|DWORD = DEC value: r10|DWORD size: DWORD <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B73" 
    successors "B75" "B72" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4588886804909642497
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1676  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1678  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.2596988928056022 condition: < trueDestination: B71 -> B75 falseDestination: B71 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B44" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584359405326877352
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  850  <|@ st <@st|@reference-map: [rcx:0, rbp:0, rsi:0, stack:60, stack:64, stack:68, stack:72, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:31] <|@ <|@
      nr  852  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  854  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  856  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B38 -> B39, B38 -> B44] defaultTarget: B38 -> B52 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855827389776547
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580189478109779700
    begin_IR
      LIR
      nr 1812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ st <@st|@reference-map: [stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87]
locals: - - - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:87, 44] <|@ <|@
      nr 1826  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1828  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1830  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1832  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1834  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1836  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction r13|DWORD[_] = MOVE input: stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction rdx|DWORD[_] = MOVE input: stack:96|DWORD[_] moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction r10|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction r11|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1018  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbp:0, rsi:0, r10:0, r11:0, r13:0, stack:72, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:31] <|@ <|@
      nr 1020  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1022  <|@ instruction r8|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1024  <|@ instruction r9|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1026  <|@ instruction rcx|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1028  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1030  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1032  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1034  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1036  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1038  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1040  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1046  <|@ instruction stack:112|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction stack:120|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction stack:128|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction stack:136|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction stack:144|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction stack:152|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:72, stack:84, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:112|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:152|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:144|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:136|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:120|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - stack:128|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
      nr 1066  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579855784009237165
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1120  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1212  <|@ st <@st|@reference-map: [rsi:0, stack:72, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24]
stack: rcx|DWORD 
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:24, 44] <|@ <|@
      nr 1214  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1216  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1218  <|@ instruction rbx|QWORD = MOV input: [rdx|QWORD + 496] size: QWORD <|@ <|@
      nr 1220  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1222  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3 <|@ <|@
      nr 1224  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1230  <|@ st <@st|@reference-map: [stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36]
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36, 44] <|@ <|@
      nr 1232  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B76" 
    xhandlers
    flags 
    probability 4606885722594300617
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B51" "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1848  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD <|@ <|@
      nr 1864  <|@ st <@st|@reference-map: [rax:0, rdx:0]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rdx|QWORD[.] stack:32|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH x: [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B77 -> B79 falseDestination: B77 -> B80 y: 2 size: DWORD inlinedY: null state [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4607162790207776388
    begin_IR
      LIR
      nr 1916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1918  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction MOV (x: [rdx|QWORD[.] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1946  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1948  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1950  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1952  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1954  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    probability 4584523385039648594
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1802  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4567169052318882655
    begin_IR
      LIR
      nr 1866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1888  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1890  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4517296380301017088
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997662585697696
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1592  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1594  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1596  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1598  <|@ instruction r8|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction stack:48|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1610  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4490997194285186786
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1636  <|@ instruction r8|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1638  <|@ instruction r10|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1640  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1644  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1646  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr 1662  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction r8|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1424  <|@ instruction r10|DWORD = MOVE input: int[-187411|0xfffffffffffd23ed] <|@ <|@
      nr 1432  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B60" "B59" "B58" "B57" "B16" "B13" "B56" "B18" "B22" "B55" "B24" "B28" "B54" "B30" "B34" "B53" "B36" "B40" "B52" "B42" 
    successors 
    xhandlers
    flags 
    probability 2374804378507804672
    begin_IR
      LIR
      nr 1976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1968  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1970  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1972  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction NOP <|@ <|@
      nr 1990  <|@ instruction NOP <|@ <|@
      nr 1992  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1994  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1996  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD rcx|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  554  <|@ instruction r10|DWORD = MOVE input: int[-192531|0xfffffffffffd0fed] <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1284  <|@ instruction r10|DWORD = MOVE input: int[-57651|0xffffffffffff1ecd] <|@ <|@
      nr 1292  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1364  <|@ instruction r10|DWORD = MOVE input: int[-38195|0xffffffffffff6acd] <|@ <|@
      nr 1372  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1238  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction MOV x: [r15|QWORD + 1156] y: -200723 size: DWORD <|@ <|@
      nr 1256  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1258  <|@ st <@st|@reference-map: [rdx:0, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:39, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  434  <|@ instruction r10|DWORD = MOVE input: int[-190483|0xfffffffffffd17ed] <|@ <|@
      nr  442  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1894  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1896  <|@ instruction NOP <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction MOV x: [r15|QWORD + 1156] y: -147483 size: DWORD <|@ <|@
      nr 1912  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1914  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rdx|QWORD[.] r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1304  <|@ instruction r10|DWORD = MOVE input: int[-52787|0xffffffffffff31cd] <|@ <|@
      nr 1312  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1966  <|@ instruction r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd] <|@ <|@
      nr 1974  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  642  <|@ instruction r10|DWORD = MOVE input: int[-193555|0xfffffffffffd0bed] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  328  <|@ instruction r10|DWORD = MOVE input: int[-103707|0xfffffffffffe6ae5] <|@ <|@
      nr  336  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  522  <|@ instruction r10|DWORD = MOVE input: int[-191507|0xfffffffffffd13ed] <|@ <|@
      nr  530  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  402  <|@ instruction r10|DWORD = MOVE input: int[-189459|0xfffffffffffd1bed] <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1344  <|@ instruction r10|DWORD = MOVE input: int[-43059|0xffffffffffff57cd] <|@ <|@
      nr 1352  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  884  <|@ instruction r10|DWORD = MOVE input: int[-197651|0xfffffffffffcfbed] <|@ <|@
      nr  892  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction rsi|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction r8|QWORD[.] = MOVE input: stack:152|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ instruction r9|QWORD[.] = MOVE input: stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rcx|QWORD[.] = MOVE input: stack:136|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction rdi|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction r10|QWORD[.] = MOVE input: stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1084  <|@ instruction rax|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1088  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction MOV x: [r15|QWORD + 1156] y: -199699 size: DWORD <|@ <|@
      nr 1106  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD <|@ <|@
      nr 1108  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7]
stack: int[0|0x0] 
locals: - rsi|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r8|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r9|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rcx|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - rdi|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2]
locals: - r10|QWORD[.] rbx|DWORD 
java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9]
locals: - - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19]
locals: rax|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] 
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:56|QWORD[.] rdx|QWORD[.] r11|DWORD stack:64|QWORD[.] stack:28|DWORD 
>@ <|@ instruction DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  794  <|@ instruction r10|DWORD = MOVE input: int[-196627|0xfffffffffffcffed] <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction r8|QWORD = MOVE input: long[7700|0x1e14] <|@ <|@
      nr 1384  <|@ instruction r10|DWORD = MOVE input: int[-33331|0xffffffffffff7dcd] <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction r8|QWORD = MOVE input: long[8980|0x2314] <|@ <|@
      nr 1324  <|@ instruction r10|DWORD = MOVE input: int[-47923|0xffffffffffff44cd] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  920  <|@ instruction r10|DWORD = MOVE input: int[-198675|0xfffffffffffcf7ed] <|@ <|@
      nr  928  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction r8|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1404  <|@ instruction r10|DWORD = MOVE input: int[-188435|0xfffffffffffd1fed] <|@ <|@
      nr 1412  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction r8|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  762  <|@ instruction r10|DWORD = MOVE input: int[-195603|0xfffffffffffd03ed] <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B82" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1444  <|@ instruction r10|DWORD = MOVE input: int[-97820|0xfffffffffffe81e4] <|@ <|@
      nr 1452  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction MOV x: [r15|QWORD + 1156] y: -94515 size: DWORD <|@ <|@
      nr 2016  <|@ instruction MOV x: [r15|QWORD + 1168] y: 12952 size: QWORD <|@ <|@
      nr 2018  <|@ st <@st|@reference-map: [rdx:0, stack:96, stack:104]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0]
locals: stack:56|QWORD[.] rdx|QWORD[.] rcx|DWORD stack:64|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #6          // java.util.regex.Matcher.to:int
     5: aload_0       
     6: getfield      #5          // minLength:int
     9: isub          
    10: if_icmple     20
    13: aload_1       
    14: iconst_1      
    15: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    18: iconst_0      
    19: ireturn       
    20: aload_1       
    21: getfield      #6          // java.util.regex.Matcher.to:int
    24: aload_0       
    25: getfield      #5          // minLength:int
    28: isub          
    29: istore        4
    31: iload_2       
    32: iload         4
    34: if_icmpgt     83
    37: aload_0       
    38: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    41: aload_1       
    42: iload_2       
    43: aload_3       
    44: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    47: ifeq          77
    50: aload_1       
    51: iload_2       
    52: putfield      #9          // java.util.regex.Matcher.first:int
    55: aload_1       
    56: getfield      #10         // java.util.regex.Matcher.groups:int[]
    59: iconst_0      
    60: aload_1       
    61: getfield      #9          // java.util.regex.Matcher.first:int
    64: iastore       
    65: aload_1       
    66: getfield      #10         // java.util.regex.Matcher.groups:int[]
    69: iconst_1      
    70: aload_1       
    71: getfield      #11         // java.util.regex.Matcher.last:int
    74: iastore       
    75: iconst_1      
    76: ireturn       
    77: iinc          
    80: goto          31
    83: aload_1       
    84: iconst_1      
    85: putfield      #7          // java.util.regex.Matcher.hitEnd:boolean
    88: iconst_0      
    89: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4881ec98000000669041817f20000000000f85950b00009090909090909090909090904889ac2490000000448b5210442b5610413bca0f8ffa07000048897424684c894424609090909041817808addeadde0f852a0b000048895424584489942484000000909090448bd966660f1f8400000000006666669090909090453bda0f8f8107000044899c248000000090909090909090909090909090909090909090448b4e0c44894c2454428b0ccd080000008b5a1048bf0000002b787f0000488d0c0f418bf948c1e70348897c2448418bc3ffc08944247c483b0d000000000f8412000000483b0d000000000f8410030000e9d80800009090909090418b4814443b1ccd0c0000000f835f0a0000909090909090428b2ccd10000000448b2ced08000000413bdb0f8e880700009090909041807810000f85070a0000909090909090909090909090909090410fbe4ccb100fb6d949be0000002b787f00004f8d2c2e4c3b2d000000000f841f0000004c3b2d000000000f84630000004c3b2d000000000f847e000000e969090000909090909090908b0ced0c0000003bcb0f94c10fb6c99090909085c90f856e0500009090909090498bb7580400008506448b5c247c448b9424840000004c8b442460488b542458488b742468e99afeffff90909090908b2ced0c0000003b1ced0c0000000f831608000090909090900fb6c90fb64ce910eb9d9090909090909090909090909090908b0ced0c000000448b2ccd0800000049be0000002b787f00004f8d2c2e4c3b2d000000000f84120000004c3b2d000000000f8434000000e9d8060000909090903b1ccd0c0000000f8cd5070000909090903b1ccd100000000f8fff060000909090b901000000e923ffffff896c2444909090909090909090909090909090448b2ccd0c000000468b34ed0800000048bd0000002b787f00004e8d7435004c3b35000000000f84120000004c3b35000000000f8436000000e97b07000090909090423b1ced0c0000000f8c3f07000090909090423b1ced100000000f8f03060000909090b901000000e9a1feffff894c2440909090909090909090909090909090428b2ced0c000000448b34ed0800000048b90000002b787f00004e8d34314c3b35000000000f84120000004c3b35000000000f8434000000e9b9070000909090903b1ced0c0000000f8c80060000909090903b1ced100000000f8f84060000909090b901000000e922feffff44896c243c9090909090909090909090909090908b0ced0c000000448b34cd0800000049bd0000002b787f00004f8d7435004c3b35000000000f84120000004c3b35000000000f84cb010000e9e7050000909090903b1ccd0c0000000f8c74070000909090903b1ccd100000000f8fed060000909090b901000000e9a2fdffff895c2478909090c744247400000000458bd3e9a100000090909090909090909090909090909090909090909090468b2ccd14000000428504ed0000000049c1e503498bf0418bd244895424704c896c242066669048b8ffffffffffffffffe8000000000f1f840000000000488b7424208bd0669048b8ffffffffffffffffe8000000000f1f84000000000085c00f843700000090909090908b742474ffc6448b54247041ffc2897424748b5c2478448b4c24544c8b44246090909090413bda0f8f52ffffffe9990300009090908b5c2478909090903b5c24700f8ea7030000909090909090448b5c2474448b542470e98200000066669044895c24709090909090909090909090909090909090909090909090428b34cd0c0000008b0cf50800000049b80000002b787f0000498d0c08488b99f0010000488b434048c1e603488bfa418bca4c8b4424604489542474ffd00f1f84000000000085c00f8592020000448b5c2470448b542474909090909041ffcb41ffca448b4c2454488b54245890909090463b1ccd100000000f8d65ffffffe9790000009090909090909090909090909090908b34cd0c0000008b14f50800000049ba0000002b787f0000498d1412483b15000000000f8412000000483b15000000000f8463000000e928030000909090903b1cf50c0000000f8c6e040000909090903b1cf5100000000f8f1c050000909090b901000000e992fbffff9090909090498bb7580400008506448b5c247c448b9424840000004c8b442460488b542458488b742468e938faffff448b6c243c8b542440448b542444909090909090909090909090909090909090909090909090909090909090909090448b1cf50c000000428504dd000000008b34f510000000448b04cd10000000448b0ced10000000428b0ced100000008b14d510000000468b14d51000000049c1e30349c1e20348c1e20348c1e10349c1e10349c1e00348c1e6034889742430498bf348895424288bd3895c24784c8954242048894c24184c894c24104c894424089048b8ffffffffffffffffe8000000000f1f84000000000085c00f8473030000909090b901000000e986faffff448b4c24549090909090909090909090909090909090909090909090428b34cd0c0000008b14f50800000048b90000002b787f0000488d1411488b9af0010000488b434048c1e603488b5424588b4c247c4c8b442460ffd00f1f84000000000085c00f84b6010000909090909090488b54245890909090908b4238833cc50c000000020f82e1010000448b9c248000000090909090909090909090909044895a1c44891cc510000000448b5220448914c514000000b801000000488bac24900000004881c498000000493ba7500400000f87cb030000c3448b9c2480000000488b542458909090eb82909090909090909090c6423001b800000000488bac24900000004881c498000000493ba7500400000f879e030000c3909090909090909090c6423001b800000000488bac24900000004881c498000000493ba7500400000f8783030000c38b44247c448b9c2480000000488b542458448b4424749090904489542470e94bfcffff448b442474448b5424708b44247c448b4c2454448b9c2480000000488b54245890909090c6423001e92ffcffff90909049c7c09402000041baed23fdff448b8c2484000000488b4c2460488b74246890909090909090458997840400004d898790040000e8000000000f1f84000000000090909049c7c09425000041baed0ffdffebba448b9c2480000000488b54245890909049c7c01423000041bacd1effffeb9b90909049c7c01423000041bacd6affffeb89448b9c2480000000488b5424589090909090909041c78784040000edeffcff49c7879004000014050000e8000000000f1f84000000000090909049c7c09425000041baed17fdffe93dffffff448b9c24800000009090909090909041c78784040000e5bffdff49c7879004000000000000e8000000000f1f84000000000090909049c7c01423000041bacd31ffffe9f6feffff90909049c7c01400000041bacdb7ffffe9e1feffff90909049c7c09425000041baed0bfdffe9ccfeffff90909049c7c09425000041baed07fdffe9b7feffff90909049c7c00000000041bae56afeffe9a2feffff90909049c7c09425000041baed13fdffe98dfeffff90909049c7c09425000041baed1bfdffe978feffff90909049c7c01423000041bacd57ffffe963feffff448b9c2480000000488b54245890909049c7c09425000041baedfbfcffe941feffff488b7424304c8b4424084c8b4c2410488b4c2418488b7c24284c8b5424208b5c2478488b442448448b9c2480000000488b5424589090909090909041c78784040000edf3fcff49c7879004000094200000e8000000000f1f84000000000090909049c7c09425000041baedfffcffe9cefdffff90909049c7c0141e000041bacd7dffffe9b9fdffff90909049c7c01423000041bacd44ffffe9a4fdffff448b9c2480000000488b54245890909049c7c09425000041baedf7fcffe982fdffff90909049c7c0140a000041baed1ffdffe96dfdffff90909049c7c09425000041baed03fdffe958fdffff90909049c7c00000000041bae481feffe943fdffff9090909090909041c78784040000cd8efeff49c7879004000098320000e8000000000f1f8400000000004889ac2490000000e800000000e959f4fffff4488d0d21fcffff49898f68040000e907f4fffff4488d0d4efcffff49898f68040000e9f3f3fffff4488d0d69fcffff49898f68040000e9dff3fffff441c78784040000f5a3feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f58ffeff49c78790040000982f0000e8000000000f1f84000000000041c78784040000f594feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f585feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f576feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f56ffeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f55dfeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f552feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f547feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f53cfeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f501feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f531feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f51efeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5edfdff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 48 FRAME_COMPLETE  <||@
  Comment 48 ENTRY_BARRIER_PATCH  <||@
  Comment 62 block B0 null  <||@
  Comment 62 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 62 2 NOP  <||@
  Comment 63 4 NOP  <||@
  Comment 64 6 NOP  <||@
  Comment 65 8 NOP  <||@
  Comment 66 10 NOP  <||@
  Comment 67 12 NOP  <||@
  Comment 68 14 NOP  <||@
  Comment 69 16 NOP  <||@
  Comment 70 18 NOP  <||@
  Comment 71 20 NOP  <||@
  Comment 72 22 NOP  <||@
  Comment 73 24 NOP  <||@
  Comment 74 26 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 82 28 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e1bc5ac slotKind: QWORD  <||@
  Comment 82 30 r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0]  <||@
  Comment 82 [rdx:0, rsi:0, r8:0]at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 82 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 86 32 r10|DWORD = SUB (x: r10|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD  <||@
  Comment 90 34 CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 9.93051617825813E-7 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 99 block B2 null  <||@
  Comment 99 62 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 99 64 stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 104 66 stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 109 68 NOP  <||@
  Comment 110 70 NOP  <||@
  Comment 111 72 NOP  <||@
  Comment 112 74 NOP  <||@
  Comment 113 76 CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B83 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0]  <||@
  Comment 113 [rdx:0, rsi:0, r8:0, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 113 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 113 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 127 block B3 null  <||@
  Comment 127 78 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 127 80 stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 132 82 stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 140 84 NOP  <||@
  Comment 141 86 NOP  <||@
  Comment 142 88 NOP  <||@
  Comment 143 90 r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 146 92 JUMP ~outgoingValues: [] destination: B3 -> B4  <||@
  Comment 146 block B4 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 146 94 [] = LABEL alignment: 16 numbPhis: 1 label: ?  <||@
  Comment 160 96 NOP  <||@
  Comment 161 98 NOP  <||@
  Comment 162 100 NOP  <||@
  Comment 163 102 NOP  <||@
  Comment 164 104 CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 8.983968413646328E-4 condition: > trueDestination: B4 -> B78 falseDestination: B4 -> B5 size: DWORD  <||@
  Comment 173 block B5 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 173 106 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 173 108 stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 181 110 NOP  <||@
  Comment 182 112 NOP  <||@
  Comment 183 114 NOP  <||@
  Comment 184 116 NOP  <||@
  Comment 185 118 NOP  <||@
  Comment 186 120 NOP  <||@
  Comment 187 122 NOP  <||@
  Comment 188 124 NOP  <||@
  Comment 189 126 NOP  <||@
  Comment 190 128 NOP  <||@
  Comment 191 130 NOP  <||@
  Comment 192 132 NOP  <||@
  Comment 193 134 NOP  <||@
  Comment 194 136 NOP  <||@
  Comment 195 138 NOP  <||@
  Comment 196 140 NOP  <||@
  Comment 197 142 NOP  <||@
  Comment 198 144 NOP  <||@
  Comment 199 146 NOP  <||@
  Comment 200 148 r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 204 150 stack:76|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD  <||@
  Comment 209 152 rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:31]  <||@
  Comment 209 [rdx:0, rsi:0, r8:0, r9:0, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 209 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 217 154 rbx|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 220 156 rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 230 158 rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0  <||@
  Comment 234 160 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3  <||@
  Comment 241 162 stack:88|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 246 164 rax|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 251 166 stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 255 168 AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}] keyTargets: [B5 -> B6, B5 -> B61] defaultTarget: B5 -> B81 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 255 {DataSection[0x0]}  <||@
  Comment 268 {DataSection[0x8]}  <||@
  Comment 286 block B6 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 286 170 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 286 172 NOP  <||@
  Comment 287 174 NOP  <||@
  Comment 288 176 NOP  <||@
  Comment 289 178 NOP  <||@
  Comment 290 180 NOP  <||@
  Comment 291 182 rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD  <||@
  Comment 295 184 CMPBRANCH (x: r11|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B60 size: DWORD state [bci:31]  <||@
  Comment 295 [rcx:0, rdx:0, rsi:0, r8:0, r9:0, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 295 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 309 block B7 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 309 186 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 309 188 NOP  <||@
  Comment 310 190 NOP  <||@
  Comment 311 192 NOP  <||@
  Comment 312 194 NOP  <||@
  Comment 313 196 NOP  <||@
  Comment 314 198 NOP  <||@
  Comment 315 200 rbp|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 323 202 r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31]  <||@
  Comment 323 [rcx:0, rdx:0, rbp:0, rsi:0, r8:0, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 323 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 331 204 CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B59 size: DWORD  <||@
  Comment 340 block B8 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 340 206 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 340 208 NOP  <||@
  Comment 341 210 NOP  <||@
  Comment 342 212 NOP  <||@
  Comment 343 214 NOP  <||@
  Comment 344 216 CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B58 y: 0 size: BYTE inlinedY: null  <||@
  Comment 355 block B9 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 355 218 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 355 220 NOP  <||@
  Comment 356 222 NOP  <||@
  Comment 357 224 NOP  <||@
  Comment 358 226 NOP  <||@
  Comment 359 228 NOP  <||@
  Comment 360 230 NOP  <||@
  Comment 361 232 NOP  <||@
  Comment 362 234 NOP  <||@
  Comment 363 236 NOP  <||@
  Comment 364 238 NOP  <||@
  Comment 365 240 NOP  <||@
  Comment 366 242 NOP  <||@
  Comment 367 244 NOP  <||@
  Comment 368 246 NOP  <||@
  Comment 369 248 NOP  <||@
  Comment 370 250 rcx|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 376 252 rbx|DWORD = MOVZXB value: rcx|DWORD size: DWORD  <||@
  Comment 379 254 r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 389 256 r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0  <||@
  Comment 393 258 AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B9 -> B10, B9 -> B11, B9 -> B14] defaultTarget: B9 -> B57 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 393 {DataSection[0x10]}  <||@
  Comment 406 {DataSection[0x18]}  <||@
  Comment 419 {DataSection[0x20]}  <||@
  Comment 437 block B10 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 437 260 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 437 262 NOP  <||@
  Comment 438 264 NOP  <||@
  Comment 439 266 NOP  <||@
  Comment 440 268 NOP  <||@
  Comment 441 270 NOP  <||@
  Comment 442 272 NOP  <||@
  Comment 443 274 NOP  <||@
  Comment 444 276 rcx|DWORD = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 451 278 CMP (x: rcx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 453 280 rcx|DWORD = SETCC condition: =  <||@
  Comment 459 282 JUMP ~outgoingValues: [] destination: B10 -> B47  <||@
  Comment 459 block B47 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 459 1122 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 459 1124 NOP  <||@
  Comment 460 1126 NOP  <||@
  Comment 461 1128 NOP  <||@
  Comment 462 1130 NOP  <||@
  Comment 463 1132 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5929707392225225 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD  <||@
  Comment 471 block B48 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 471 1134 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 471 1136 NOP  <||@
  Comment 472 1138 NOP  <||@
  Comment 473 1140 NOP  <||@
  Comment 474 1142 NOP  <||@
  Comment 475 1144 NOP  <||@
  Comment 476 1146 SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:24, 44]  <||@
  Comment 483 [stack:72, stack:88, stack:96, stack:104]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3                 
     locals:  |stack:88|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.] 
     stack:   |rcx|DWORD          |                   |                |                  
  at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 483 {infopoint: SAFEPOINT}  <||@
  Comment 483 POLL_FAR  <||@
  Comment 485 1148 r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 490 1150 r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 498 1152 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 503 1154 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 508 1156 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 513 1158 JUMP ~outgoingValues: [] destination: B48 -> B4  <||@
  Comment 518 block B11 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 518 284 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 518 286 NOP  <||@
  Comment 519 288 NOP  <||@
  Comment 520 290 NOP  <||@
  Comment 521 292 NOP  <||@
  Comment 522 294 NOP  <||@
  Comment 523 296 rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 530 298 CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD state [bci:31]  <||@
  Comment 530 [rdx:0, rbp:0, rsi:0, r8:0, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 530 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 543 block B12 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 543 300 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 543 302 NOP  <||@
  Comment 544 304 NOP  <||@
  Comment 545 306 NOP  <||@
  Comment 546 308 NOP  <||@
  Comment 547 310 NOP  <||@
  Comment 548 312 rcx|QWORD = MOVZXB value: rcx|DWORD size: DWORD  <||@
  Comment 551 314 rcx|DWORD = MOVZXB input: [rcx|QWORD + rbp|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 556 316 JUMP ~outgoingValues: [] destination: B12 -> B47  <||@
  Comment 558 block B14 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 558 338 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 558 340 NOP  <||@
  Comment 559 342 NOP  <||@
  Comment 560 344 NOP  <||@
  Comment 561 346 NOP  <||@
  Comment 562 348 NOP  <||@
  Comment 563 350 NOP  <||@
  Comment 564 352 NOP  <||@
  Comment 565 354 NOP  <||@
  Comment 566 356 NOP  <||@
  Comment 567 358 NOP  <||@
  Comment 568 360 NOP  <||@
  Comment 569 362 NOP  <||@
  Comment 570 364 NOP  <||@
  Comment 571 366 NOP  <||@
  Comment 572 368 NOP  <||@
  Comment 573 370 rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 580 372 r13|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31]  <||@
  Comment 580 [rcx:0, rdx:0, rbp:0, rsi:0, r8:0, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 580 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 588 374 r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 598 376 r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0  <||@
  Comment 602 378 AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B14 -> B15, B14 -> B20] defaultTarget: B14 -> B56 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 602 {DataSection[0x28]}  <||@
  Comment 615 {DataSection[0x20]}  <||@
  Comment 633 block B15 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 633 380 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 633 382 NOP  <||@
  Comment 634 384 NOP  <||@
  Comment 635 386 NOP  <||@
  Comment 636 388 NOP  <||@
  Comment 637 390 CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 650 block B17 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 650 412 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 650 414 NOP  <||@
  Comment 651 416 NOP  <||@
  Comment 652 418 NOP  <||@
  Comment 653 420 NOP  <||@
  Comment 654 422 CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD  <||@
  Comment 667 block B19 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 667 444 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 667 446 NOP  <||@
  Comment 668 448 NOP  <||@
  Comment 669 450 NOP  <||@
  Comment 670 452 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 675 454 JUMP ~outgoingValues: [] destination: B19 -> B47  <||@
  Comment 680 block B20 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 680 456 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 680 458 stack:92|DWORD[_] = MOVE input: rbp|DWORD[_] moveKind: DWORD  <||@
  Comment 684 460 NOP  <||@
  Comment 685 462 NOP  <||@
  Comment 686 464 NOP  <||@
  Comment 687 466 NOP  <||@
  Comment 688 468 NOP  <||@
  Comment 689 470 NOP  <||@
  Comment 690 472 NOP  <||@
  Comment 691 474 NOP  <||@
  Comment 692 476 NOP  <||@
  Comment 693 478 NOP  <||@
  Comment 694 480 NOP  <||@
  Comment 695 482 NOP  <||@
  Comment 696 484 NOP  <||@
  Comment 697 486 NOP  <||@
  Comment 698 488 NOP  <||@
  Comment 699 490 r13|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 707 492 r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 8] size: DWORD state [bci:31]  <||@
  Comment 707 [rcx:0, rdx:0, rsi:0, r8:0, r13:0, stack:68, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 707 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 715 494 rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 725 496 r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0  <||@
  Comment 730 498 AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B20 -> B21, B20 -> B26] defaultTarget: B20 -> B55 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 730 {DataSection[0x28]}  <||@
  Comment 743 {DataSection[0x20]}  <||@
  Comment 761 block B21 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 761 500 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 761 502 NOP  <||@
  Comment 762 504 NOP  <||@
  Comment 763 506 NOP  <||@
  Comment 764 508 NOP  <||@
  Comment 765 510 CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD  <||@
  Comment 779 block B23 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 779 532 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 779 534 NOP  <||@
  Comment 780 536 NOP  <||@
  Comment 781 538 NOP  <||@
  Comment 782 540 NOP  <||@
  Comment 783 542 CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD  <||@
  Comment 797 block B25 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 797 564 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 797 566 NOP  <||@
  Comment 798 568 NOP  <||@
  Comment 799 570 NOP  <||@
  Comment 800 572 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 805 574 JUMP ~outgoingValues: [] destination: B25 -> B47  <||@
  Comment 810 block B26 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 810 576 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 810 578 stack:96|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD  <||@
  Comment 814 580 NOP  <||@
  Comment 815 582 NOP  <||@
  Comment 816 584 NOP  <||@
  Comment 817 586 NOP  <||@
  Comment 818 588 NOP  <||@
  Comment 819 590 NOP  <||@
  Comment 820 592 NOP  <||@
  Comment 821 594 NOP  <||@
  Comment 822 596 NOP  <||@
  Comment 823 598 NOP  <||@
  Comment 824 600 NOP  <||@
  Comment 825 602 NOP  <||@
  Comment 826 604 NOP  <||@
  Comment 827 606 NOP  <||@
  Comment 828 608 NOP  <||@
  Comment 829 610 rbp|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 837 612 r14|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31]  <||@
  Comment 837 [rdx:0, rbp:0, rsi:0, r8:0, r13:0, stack:64, stack:68, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 837 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 845 614 rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 855 616 r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0  <||@
  Comment 859 618 AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B26 -> B27, B26 -> B32] defaultTarget: B26 -> B54 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 859 {DataSection[0x28]}  <||@
  Comment 872 {DataSection[0x20]}  <||@
  Comment 890 block B27 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 890 620 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 890 622 NOP  <||@
  Comment 891 624 NOP  <||@
  Comment 892 626 NOP  <||@
  Comment 893 628 NOP  <||@
  Comment 894 630 CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD  <||@
  Comment 907 block B29 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 907 652 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 907 654 NOP  <||@
  Comment 908 656 NOP  <||@
  Comment 909 658 NOP  <||@
  Comment 910 660 NOP  <||@
  Comment 911 662 CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD  <||@
  Comment 924 block B31 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 924 684 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 924 686 NOP  <||@
  Comment 925 688 NOP  <||@
  Comment 926 690 NOP  <||@
  Comment 927 692 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 932 694 JUMP ~outgoingValues: [] destination: B31 -> B47  <||@
  Comment 937 block B32 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 937 696 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 937 698 stack:100|DWORD[_] = MOVE input: r13|DWORD[_] moveKind: DWORD  <||@
  Comment 942 700 NOP  <||@
  Comment 943 702 NOP  <||@
  Comment 944 704 NOP  <||@
  Comment 945 706 NOP  <||@
  Comment 946 708 NOP  <||@
  Comment 947 710 NOP  <||@
  Comment 948 712 NOP  <||@
  Comment 949 714 NOP  <||@
  Comment 950 716 NOP  <||@
  Comment 951 718 NOP  <||@
  Comment 952 720 NOP  <||@
  Comment 953 722 NOP  <||@
  Comment 954 724 NOP  <||@
  Comment 955 726 NOP  <||@
  Comment 956 728 NOP  <||@
  Comment 957 730 rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 964 732 r14|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31]  <||@
  Comment 964 [rcx:0, rdx:0, rbp:0, rsi:0, r8:0, stack:60, stack:64, stack:68, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 964 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 972 734 r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 982 736 r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0  <||@
  Comment 987 738 AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B32 -> B33, B32 -> B38] defaultTarget: B32 -> B53 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 987 {DataSection[0x28]}  <||@
  Comment 1000 {DataSection[0x20]}  <||@
  Comment 1018 block B33 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 1018 740 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1018 742 NOP  <||@
  Comment 1019 744 NOP  <||@
  Comment 1020 746 NOP  <||@
  Comment 1021 748 NOP  <||@
  Comment 1022 750 CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD  <||@
  Comment 1035 block B35 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 1035 772 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1035 774 NOP  <||@
  Comment 1036 776 NOP  <||@
  Comment 1037 778 NOP  <||@
  Comment 1038 780 NOP  <||@
  Comment 1039 782 CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD  <||@
  Comment 1052 block B37 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 1052 804 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1052 806 NOP  <||@
  Comment 1053 808 NOP  <||@
  Comment 1054 810 NOP  <||@
  Comment 1055 812 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1060 814 JUMP ~outgoingValues: [] destination: B37 -> B47  <||@
  Comment 1065 block B61 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 1065 1454 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1065 1456 stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1069 1458 NOP  <||@
  Comment 1070 1460 NOP  <||@
  Comment 1071 1462 NOP  <||@
  Comment 1072 1464 stack:44|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1080 1466 r10|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1083 1468 JUMP ~outgoingValues: [] destination: B61 -> B62  <||@
  Comment 1088 block B63 loop 1 depth 2 outer 0 header:267|LoopBegin  <||@
  Comment 1088 1482 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1088 1484 NOP  <||@
  Comment 1089 1486 NOP  <||@
  Comment 1090 1488 NOP  <||@
  Comment 1091 1490 NOP  <||@
  Comment 1092 1492 NOP  <||@
  Comment 1093 1494 NOP  <||@
  Comment 1094 1496 NOP  <||@
  Comment 1095 1498 NOP  <||@
  Comment 1096 1500 NOP  <||@
  Comment 1097 1502 NOP  <||@
  Comment 1098 1504 NOP  <||@
  Comment 1099 1506 NOP  <||@
  Comment 1100 1508 NOP  <||@
  Comment 1101 1510 NOP  <||@
  Comment 1102 1512 NOP  <||@
  Comment 1103 1514 NOP  <||@
  Comment 1104 1516 NOP  <||@
  Comment 1105 1518 NOP  <||@
  Comment 1106 1520 NOP  <||@
  Comment 1107 1522 NOP  <||@
  Comment 1108 1524 NOP  <||@
  Comment 1109 1526 NOP  <||@
  Comment 1110 1528 r13|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 1118 1530 NULLCHECK address: [r13|DWORD[_] * 8] state [bci:9, 44]  <||@
  Comment 1118 [r8:0, r13:0, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9, duringCall: false, rethrow: false]
              |0                  |1                  |2          |3            |4               |5              
     locals:  |stack:88|QWORD[.]  |stack:72|QWORD[.]  |r10|DWORD  |r8|QWORD[.]  |stack:44|DWORD  |stack:40|DWORD 
  at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3            |4              
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |r8|QWORD[.]  |stack:28|DWORD   <||@
  Comment 1118 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1126 1532 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3  <||@
  Comment 1130 1534 rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1133 1536 rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1136 1538 stack:48|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1141 1540 stack:128|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1146 1542 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<CharSequence.charAt(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:21, 44]  <||@
  Comment 1149 INVOKEINTERFACE  <||@
  Comment 1159 {HotSpotMethod<CharSequence.charAt(int)>}  <||@
  Comment 1164 [stack:32, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21, duringCall: true, rethrow: false]
              |0                   |1                  |2               |3                  |4               |5              
     locals:  |stack:88|QWORD[.]   |stack:72|QWORD[.]  |stack:48|DWORD  |stack:64|QWORD[.]  |stack:44|DWORD  |stack:40|DWORD 
     stack:   |stack:128|QWORD[.]  |                   |                |                   |                |               
  at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 1172 1544 rsi|QWORD[.] = MOVE input: stack:128|QWORD[.] moveKind: QWORD  <||@
  Comment 1177 1546 rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1179 1548 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:26, 44]  <||@
  Comment 1181 INVOKEINTERFACE  <||@
  Comment 1191 {HotSpotMethod<Pattern$CharPredicate.is(int)>}  <||@
  Comment 1196 [stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4               |5              
     locals:  |stack:88|QWORD[.]  |stack:72|QWORD[.]  |stack:48|DWORD  |stack:64|QWORD[.]  |stack:44|DWORD  |stack:40|DWORD 
  at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 1204 1550 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5908646161430428 condition: = trueDestination: B63 -> B65 falseDestination: B63 -> B64 size: DWORD  <||@
  Comment 1212 block B64 loop 1 depth 2 outer 0 header:267|LoopBegin  <||@
  Comment 1212 1552 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1212 1554 NOP  <||@
  Comment 1213 1556 NOP  <||@
  Comment 1214 1558 NOP  <||@
  Comment 1215 1560 NOP  <||@
  Comment 1216 1562 NOP  <||@
  Comment 1217 1564 rsi|DWORD = INC value: stack:44|DWORD size: DWORD  <||@
  Comment 1223 1566 r10|DWORD = INC value: stack:48|DWORD size: DWORD  <||@
  Comment 1231 1568 stack:44|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 1235 1570 rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1239 1572 r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD  <||@
  Comment 1244 1574 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1249 1576 JUMP ~outgoingValues: [] destination: B64 -> B62  <||@
  Comment 1249 block B62 loop 1 depth 2 outer 0 header:267|LoopBegin  <||@
  Comment 1249 1470 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1249 1472 NOP  <||@
  Comment 1250 1474 NOP  <||@
  Comment 1251 1476 NOP  <||@
  Comment 1252 1478 NOP  <||@
  Comment 1253 1480 CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999997723712406 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B66 size: DWORD  <||@
  Comment 1267 block B65 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 1267 1578 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1267 1580 NOP  <||@
  Comment 1268 1582 NOP  <||@
  Comment 1269 1584 NOP  <||@
  Comment 1270 1586 rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1274 1588 JUMP ~outgoingValues: [] destination: B65 -> B67  <||@
  Comment 1274 block B67 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 1274 1612 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1274 1614 NOP  <||@
  Comment 1275 1616 NOP  <||@
  Comment 1276 1618 NOP  <||@
  Comment 1277 1620 NOP  <||@
  Comment 1278 1622 CMPBRANCH (x: rbx|DWORD, y: stack:48|DWORD) trueDestinationProbability: 0.9999996147864973 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD  <||@
  Comment 1288 block B68 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 1288 1624 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1288 1626 NOP  <||@
  Comment 1289 1628 NOP  <||@
  Comment 1290 1630 NOP  <||@
  Comment 1291 1632 JUMP ~outgoingValues: [] destination: B68 -> B70  <||@
  Comment 1291 block B70 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 1291 1664 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1291 1666 NOP  <||@
  Comment 1292 1668 NOP  <||@
  Comment 1293 1670 NOP  <||@
  Comment 1294 1672 r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1299 1674 r10|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD  <||@
  Comment 1304 1680 JUMP ~outgoingValues: [] destination: B70 -> B71  <||@
  Comment 1309 block B72 loop 2 depth 2 outer 0 header:312|LoopBegin  <||@
  Comment 1309 1694 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1312 1696 stack:48|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1317 1698 NOP  <||@
  Comment 1318 1700 NOP  <||@
  Comment 1319 1702 NOP  <||@
  Comment 1320 1704 NOP  <||@
  Comment 1321 1706 NOP  <||@
  Comment 1322 1708 NOP  <||@
  Comment 1323 1710 NOP  <||@
  Comment 1324 1712 NOP  <||@
  Comment 1325 1714 NOP  <||@
  Comment 1326 1716 NOP  <||@
  Comment 1327 1718 NOP  <||@
  Comment 1328 1720 NOP  <||@
  Comment 1329 1722 NOP  <||@
  Comment 1330 1724 NOP  <||@
  Comment 1331 1726 NOP  <||@
  Comment 1332 1728 NOP  <||@
  Comment 1333 1730 NOP  <||@
  Comment 1334 1732 NOP  <||@
  Comment 1335 1734 NOP  <||@
  Comment 1336 1736 NOP  <||@
  Comment 1337 1738 NOP  <||@
  Comment 1338 1740 NOP  <||@
  Comment 1339 1742 NOP  <||@
  Comment 1340 1744 rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1348 1746 rcx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:54, 44]  <||@
  Comment 1348 [rdx:0, rsi:0, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54, duringCall: false, rethrow: false]
              |0                  |1             |2          |3                  |4               |5 
     locals:  |stack:88|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |stack:64|QWORD[.]  |stack:48|DWORD  |- 
  at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |rdx|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 1348 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1355 1748 r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 1365 1750 rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0  <||@
  Comment 1369 1752 rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD  <||@
  Comment 1376 1754 rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD  <||@
  Comment 1380 1756 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3  <||@
  Comment 1384 1758 rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1387 1762 rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1390 1764 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1395 1766 stack:44|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1400 1768 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70, 44]  <||@
  Comment 1400 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 1400 INLINE_INVOKE  <||@
  Comment 1402 [stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:72|QWORD[.]  |stack:44|DWORD  |stack:64|QWORD[.]  |stack:48|DWORD  |- 
  at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 1410 1770 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.31374907693960497 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 size: DWORD  <||@
  Comment 1418 block B73 loop 2 depth 2 outer 0 header:312|LoopBegin  <||@
  Comment 1418 1772 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1418 1774 r11|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD  <||@
  Comment 1423 1776 r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1428 1778 NOP  <||@
  Comment 1429 1780 NOP  <||@
  Comment 1430 1782 NOP  <||@
  Comment 1431 1784 NOP  <||@
  Comment 1432 1786 NOP  <||@
  Comment 1433 1788 r11|DWORD = DEC value: r11|DWORD size: DWORD  <||@
  Comment 1436 1790 r10|DWORD = DEC value: r10|DWORD size: DWORD  <||@
  Comment 1439 1796 JUMP ~outgoingValues: [] destination: B73 -> B71  <||@
  Comment 1439 block B71 loop 2 depth 2 outer 0 header:312|LoopBegin  <||@
  Comment 1439 1682 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1439 1676 r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD  <||@
  Comment 1444 1678 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1449 1684 NOP  <||@
  Comment 1450 1686 NOP  <||@
  Comment 1451 1688 NOP  <||@
  Comment 1452 1690 NOP  <||@
  Comment 1453 1692 CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.2596988928056022 condition: < trueDestination: B71 -> B75 falseDestination: B71 -> B72 size: DWORD  <||@
  Comment 1472 block B38 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 1472 816 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1472 818 NOP  <||@
  Comment 1473 820 NOP  <||@
  Comment 1474 822 NOP  <||@
  Comment 1475 824 NOP  <||@
  Comment 1476 826 NOP  <||@
  Comment 1477 828 NOP  <||@
  Comment 1478 830 NOP  <||@
  Comment 1479 832 NOP  <||@
  Comment 1480 834 NOP  <||@
  Comment 1481 836 NOP  <||@
  Comment 1482 838 NOP  <||@
  Comment 1483 840 NOP  <||@
  Comment 1484 842 NOP  <||@
  Comment 1485 844 NOP  <||@
  Comment 1486 846 NOP  <||@
  Comment 1487 848 rsi|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1494 850 rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:31]  <||@
  Comment 1494 [rcx:0, rbp:0, rsi:0, stack:60, stack:64, stack:68, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 1494 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1501 852 r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 1511 854 rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0  <||@
  Comment 1515 856 AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B38 -> B39, B38 -> B44] defaultTarget: B38 -> B52 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 1515 {DataSection[0x28]}  <||@
  Comment 1528 {DataSection[0x20]}  <||@
  Comment 1546 block B39 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 1546 858 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1546 860 NOP  <||@
  Comment 1547 862 NOP  <||@
  Comment 1548 864 NOP  <||@
  Comment 1549 866 NOP  <||@
  Comment 1550 868 CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD  <||@
  Comment 1563 block B41 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 1563 894 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1563 896 NOP  <||@
  Comment 1564 898 NOP  <||@
  Comment 1565 900 NOP  <||@
  Comment 1566 902 NOP  <||@
  Comment 1567 904 CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD  <||@
  Comment 1580 block B43 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 1580 930 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1580 932 NOP  <||@
  Comment 1581 934 NOP  <||@
  Comment 1582 936 NOP  <||@
  Comment 1583 938 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1588 940 JUMP ~outgoingValues: [] destination: B43 -> B47  <||@
  Comment 1593 block B75 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 1593 1812 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1593 1814 NOP  <||@
  Comment 1594 1816 NOP  <||@
  Comment 1595 1818 NOP  <||@
  Comment 1596 1820 NOP  <||@
  Comment 1597 1822 NOP  <||@
  Comment 1598 1824 SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:87, 44]  <||@
  Comment 1605 [stack:88, stack:96, stack:104]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 1605 {infopoint: SAFEPOINT}  <||@
  Comment 1605 POLL_FAR  <||@
  Comment 1607 1826 r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1612 1828 r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1620 1830 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1625 1832 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1630 1834 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1635 1836 JUMP ~outgoingValues: [] destination: B75 -> B4  <||@
  Comment 1640 block B44 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 1640 942 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1640 944 r13|DWORD[_] = MOVE input: stack:100|DWORD[_] moveKind: DWORD  <||@
  Comment 1645 946 rdx|DWORD[_] = MOVE input: stack:96|DWORD[_] moveKind: DWORD  <||@
  Comment 1649 948 r10|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD  <||@
  Comment 1654 950 NOP  <||@
  Comment 1655 952 NOP  <||@
  Comment 1656 954 NOP  <||@
  Comment 1657 956 NOP  <||@
  Comment 1658 958 NOP  <||@
  Comment 1659 960 NOP  <||@
  Comment 1660 962 NOP  <||@
  Comment 1661 964 NOP  <||@
  Comment 1662 966 NOP  <||@
  Comment 1663 968 NOP  <||@
  Comment 1664 970 NOP  <||@
  Comment 1665 972 NOP  <||@
  Comment 1666 974 NOP  <||@
  Comment 1667 976 NOP  <||@
  Comment 1668 978 NOP  <||@
  Comment 1669 980 NOP  <||@
  Comment 1670 982 NOP  <||@
  Comment 1671 984 NOP  <||@
  Comment 1672 986 NOP  <||@
  Comment 1673 988 NOP  <||@
  Comment 1674 990 NOP  <||@
  Comment 1675 992 NOP  <||@
  Comment 1676 994 NOP  <||@
  Comment 1677 996 NOP  <||@
  Comment 1678 998 NOP  <||@
  Comment 1679 1000 NOP  <||@
  Comment 1680 1002 NOP  <||@
  Comment 1681 1004 NOP  <||@
  Comment 1682 1006 NOP  <||@
  Comment 1683 1008 NOP  <||@
  Comment 1684 1010 NOP  <||@
  Comment 1685 1012 NOP  <||@
  Comment 1686 1014 NOP  <||@
  Comment 1687 1016 r11|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1695 1018 NULLCHECK address: [r11|DWORD[_] * 8] state [bci:31]  <||@
  Comment 1695 [rcx:0, rdx:0, rbp:0, rsi:0, r10:0, r11:0, r13:0, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 1695 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1703 1020 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1710 1022 r8|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1718 1024 r9|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1726 1026 rcx|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1734 1028 rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1741 1030 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1749 1032 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3  <||@
  Comment 1753 1034 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3  <||@
  Comment 1757 1036 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3  <||@
  Comment 1761 1038 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3  <||@
  Comment 1765 1040 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3  <||@
  Comment 1769 1042 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3  <||@
  Comment 1773 1044 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3  <||@
  Comment 1777 1046 stack:112|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1782 1048 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1785 1050 stack:120|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1790 1052 rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1792 1054 stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1796 1056 stack:128|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1801 1058 stack:136|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1806 1060 stack:144|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1811 1062 stack:152|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1816 1064 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44]  <||@
  Comment 1817 INVOKEINTERFACE  <||@
  Comment 1827 {HotSpotMethod<Pattern$CharPredicate.is(int)>}  <||@
  Comment 1832 [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                   |2              
     locals:  |-  |stack:112|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                   |2              
     locals:  |-  |stack:152|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                   |2              
     locals:  |-  |stack:144|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                   |2              
     locals:  |-  |stack:136|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                   |2              
     locals:  |-  |stack:120|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                   |2              
     locals:  |-  |stack:128|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                 
     locals:  |stack:88|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.] 
  at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 1840 1066 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD  <||@
  Comment 1848 block B46 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 1848 1110 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1848 1112 NOP  <||@
  Comment 1849 1114 NOP  <||@
  Comment 1850 1116 NOP  <||@
  Comment 1851 1118 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1856 1120 JUMP ~outgoingValues: [] destination: B46 -> B47  <||@
  Comment 1861 block B49 null  <||@
  Comment 1861 1160 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1861 1162 r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD  <||@
  Comment 1866 1164 NOP  <||@
  Comment 1867 1166 NOP  <||@
  Comment 1868 1168 NOP  <||@
  Comment 1869 1170 NOP  <||@
  Comment 1870 1172 NOP  <||@
  Comment 1871 1174 NOP  <||@
  Comment 1872 1176 NOP  <||@
  Comment 1873 1178 NOP  <||@
  Comment 1874 1180 NOP  <||@
  Comment 1875 1182 NOP  <||@
  Comment 1876 1184 NOP  <||@
  Comment 1877 1186 NOP  <||@
  Comment 1878 1188 NOP  <||@
  Comment 1879 1190 NOP  <||@
  Comment 1880 1192 NOP  <||@
  Comment 1881 1194 NOP  <||@
  Comment 1882 1196 NOP  <||@
  Comment 1883 1198 NOP  <||@
  Comment 1884 1200 NOP  <||@
  Comment 1885 1202 NOP  <||@
  Comment 1886 1204 NOP  <||@
  Comment 1887 1206 NOP  <||@
  Comment 1888 1208 NOP  <||@
  Comment 1889 1210 rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1897 1212 rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:24, 44]  <||@
  Comment 1897 [rsi:0, stack:72, stack:88, stack:96, stack:104]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3                 
     locals:  |stack:88|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.] 
     stack:   |rcx|DWORD          |                   |                |                  
  at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 1897 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1904 1214 rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 1914 1216 rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0  <||@
  Comment 1918 1218 rbx|QWORD = MOV input: [rdx|QWORD + 496] size: QWORD  <||@
  Comment 1925 1220 rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD  <||@
  Comment 1929 1222 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3  <||@
  Comment 1933 1224 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1938 1226 rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1942 1228 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1947 1230 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36, 44]  <||@
  Comment 1947 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 1947 INLINE_INVOKE  <||@
  Comment 1949 [stack:88, stack:96, stack:104]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 1957 1232 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD  <||@
  Comment 1965 block B51 null  <||@
  Comment 1965 1260 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1965 1262 NOP  <||@
  Comment 1966 1264 NOP  <||@
  Comment 1967 1266 NOP  <||@
  Comment 1968 1268 JUMP ~outgoingValues: [] destination: B51 -> B76  <||@
  Comment 1968 block B76 null  <||@
  Comment 1968 1838 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1968 1840 NOP  <||@
  Comment 1969 1842 NOP  <||@
  Comment 1970 1844 NOP  <||@
  Comment 1971 1846 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1976 1848 JUMP ~outgoingValues: [] destination: B76 -> B77  <||@
  Comment 1976 block B77 null  <||@
  Comment 1976 1850 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1976 1852 NOP  <||@
  Comment 1977 1854 NOP  <||@
  Comment 1978 1856 NOP  <||@
  Comment 1979 1858 NOP  <||@
  Comment 1980 1860 NOP  <||@
  Comment 1981 1862 rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD  <||@
  Comment 1984 1864 CMPCONSTBRANCH x: [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B77 -> B79 falseDestination: B77 -> B80 y: 2 size: DWORD inlinedY: null state [bci:50]  <||@
  Comment 1984 [rax:0, rdx:0]at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50, duringCall: false, rethrow: false]
              |0  |1             |2               |3  |4 
     locals:  |-  |rdx|QWORD[.]  |stack:32|DWORD  |-  |-   <||@
  Comment 1984 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1998 block B80 null  <||@
  Comment 1998 1916 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1998 1918 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2006 1920 NOP  <||@
  Comment 2007 1922 NOP  <||@
  Comment 2008 1924 NOP  <||@
  Comment 2009 1926 NOP  <||@
  Comment 2010 1928 NOP  <||@
  Comment 2011 1930 NOP  <||@
  Comment 2012 1932 NOP  <||@
  Comment 2013 1934 NOP  <||@
  Comment 2014 1936 NOP  <||@
  Comment 2015 1938 NOP  <||@
  Comment 2016 1940 NOP  <||@
  Comment 2017 1942 NOP  <||@
  Comment 2018 1944 MOV (x: [rdx|QWORD[.] + 28], y: r11|DWORD) size: DWORD  <||@
  Comment 2022 1946 MOV (x: [rax|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 2030 1948 r10|DWORD = MOV input: [rdx|QWORD[.] + 32] size: DWORD  <||@
  Comment 2034 1950 MOV (x: [rax|DWORD[_] * 8 + 20], y: r10|DWORD) size: DWORD  <||@
  Comment 2042 1952 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2047 1954 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 2062 POLL_RETURN_FAR  <||@
  Comment 2076 block B74 null  <||@
  Comment 2076 1798 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2076 1800 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2084 1802 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2089 1804 NOP  <||@
  Comment 2090 1806 NOP  <||@
  Comment 2091 1808 NOP  <||@
  Comment 2092 1810 JUMP ~outgoingValues: [] destination: B74 -> B76  <||@
  Comment 2094 block B78 null  <||@
  Comment 2094 1866 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2094 1868 NOP  <||@
  Comment 2095 1870 NOP  <||@
  Comment 2096 1872 NOP  <||@
  Comment 2097 1874 NOP  <||@
  Comment 2098 1876 NOP  <||@
  Comment 2099 1878 NOP  <||@
  Comment 2100 1880 NOP  <||@
  Comment 2101 1882 NOP  <||@
  Comment 2102 1884 NOP  <||@
  Comment 2103 1886 MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE  <||@
  Comment 2107 1888 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2112 1890 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 2127 POLL_RETURN_FAR  <||@
  Comment 2141 block B1 null  <||@
  Comment 2141 36 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2141 38 NOP  <||@
  Comment 2142 40 NOP  <||@
  Comment 2143 42 NOP  <||@
  Comment 2144 44 NOP  <||@
  Comment 2145 46 NOP  <||@
  Comment 2146 48 NOP  <||@
  Comment 2147 50 NOP  <||@
  Comment 2148 52 NOP  <||@
  Comment 2149 54 NOP  <||@
  Comment 2150 56 MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE  <||@
  Comment 2154 58 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2159 60 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 2174 POLL_RETURN_FAR  <||@
  Comment 2188 block B66 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 2188 1590 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2188 1592 rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 2192 1594 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2200 1596 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2205 1598 r8|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 2210 1600 NOP  <||@
  Comment 2211 1602 NOP  <||@
  Comment 2212 1604 NOP  <||@
  Comment 2213 1608 stack:48|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 2218 1610 JUMP ~outgoingValues: [] destination: B66 -> B67  <||@
  Comment 2223 block B69 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 2223 1634 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2223 1636 r8|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 2228 1638 r10|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD  <||@
  Comment 2233 1640 rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 2237 1642 r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD  <||@
  Comment 2242 1644 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2250 1646 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2255 1648 NOP  <||@
  Comment 2256 1650 NOP  <||@
  Comment 2257 1652 NOP  <||@
  Comment 2258 1654 NOP  <||@
  Comment 2259 1656 MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE  <||@
  Comment 2263 1662 JUMP ~outgoingValues: [] destination: B69 -> B70  <||@
  Comment 2268 block B59 null  <||@
  Comment 2268 1414 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2268 1416 NOP  <||@
  Comment 2269 1418 NOP  <||@
  Comment 2270 1420 NOP  <||@
  Comment 2271 1422 r8|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 2278 1424 r10|DWORD = MOVE input: int[-187411|0xfffffffffffd23ed]  <||@
  Comment 2284 1432 JUMP ~outgoingValues: [] destination: B59 -> B82  <||@
  Comment 2284 block B82 null  <||@
  Comment 2284 1976 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2284 1968 r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 2292 1970 rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2297 1972 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2302 1978 NOP  <||@
  Comment 2303 1980 NOP  <||@
  Comment 2304 1982 NOP  <||@
  Comment 2305 1984 NOP  <||@
  Comment 2306 1986 NOP  <||@
  Comment 2307 1988 NOP  <||@
  Comment 2308 1990 NOP  <||@
  Comment 2309 1992 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2316 1994 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 2323 1996 DEOPT info [bci:31]  <||@
  Comment 2323 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2328 [rcx:0, rdx:0, rsi:0]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3             |4        
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |rcx|QWORD[.]  |r9|DWORD   <||@
  Comment 2336 block B24 null  <||@
  Comment 2336 544 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2336 546 NOP  <||@
  Comment 2337 548 NOP  <||@
  Comment 2338 550 NOP  <||@
  Comment 2339 552 r8|QWORD = MOVE input: long[9620|0x2594]  <||@
  Comment 2346 554 r10|DWORD = MOVE input: int[-192531|0xfffffffffffd0fed]  <||@
  Comment 2352 562 JUMP ~outgoingValues: [] destination: B24 -> B82  <||@
  Comment 2354 block B52 null  <||@
  Comment 2354 1270 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2354 1272 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2362 1274 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2367 1276 NOP  <||@
  Comment 2368 1278 NOP  <||@
  Comment 2369 1280 NOP  <||@
  Comment 2370 1282 r8|QWORD = MOVE input: long[8980|0x2314]  <||@
  Comment 2377 1284 r10|DWORD = MOVE input: int[-57651|0xffffffffffff1ecd]  <||@
  Comment 2383 1292 JUMP ~outgoingValues: [] destination: B52 -> B82  <||@
  Comment 2385 block B56 null  <||@
  Comment 2385 1354 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2385 1356 NOP  <||@
  Comment 2386 1358 NOP  <||@
  Comment 2387 1360 NOP  <||@
  Comment 2388 1362 r8|QWORD = MOVE input: long[8980|0x2314]  <||@
  Comment 2395 1364 r10|DWORD = MOVE input: int[-38195|0xffffffffffff6acd]  <||@
  Comment 2401 1372 JUMP ~outgoingValues: [] destination: B56 -> B82  <||@
  Comment 2403 block B50 null  <||@
  Comment 2403 1234 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2403 1236 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2411 1238 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2416 1240 NOP  <||@
  Comment 2417 1242 NOP  <||@
  Comment 2418 1244 NOP  <||@
  Comment 2419 1246 NOP  <||@
  Comment 2420 1248 NOP  <||@
  Comment 2421 1250 NOP  <||@
  Comment 2422 1252 NOP  <||@
  Comment 2423 1254 MOV x: [r15|QWORD + 1156] y: -200723 size: DWORD  <||@
  Comment 2434 1256 MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD  <||@
  Comment 2445 1258 DEOPT info [bci:39, 44]  <||@
  Comment 2445 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2450 [rdx:0, stack:96, stack:104]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39, duringCall: false, rethrow: false]
              |0           |1  |2  |3 
     locals:  |-           |-  |-  |- 
     stack:   |int[0|0x0]  |   |   |  
  at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1             |2          |3                  |4              
     locals:  |stack:56|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 2458 block B18 null  <||@
  Comment 2458 424 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2458 426 NOP  <||@
  Comment 2459 428 NOP  <||@
  Comment 2460 430 NOP  <||@
  Comment 2461 432 r8|QWORD = MOVE input: long[9620|0x2594]  <||@
  Comment 2468 434 r10|DWORD = MOVE input: int[-190483|0xfffffffffffd17ed]  <||@
  Comment 2474 442 JUMP ~outgoingValues: [] destination: B18 -> B82  <||@
  Comment 2479 block B79 null  <||@
  Comment 2479 1892 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2479 1894 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2487 1896 NOP  <||@
  Comment 2488 1898 NOP  <||@
  Comment 2489 1900 NOP  <||@
  Comment 2490 1902 NOP  <||@
  Comment 2491 1904 NOP  <||@
  Comment 2492 1906 NOP  <||@
  Comment 2493 1908 NOP  <||@
  Comment 2494 1910 MOV x: [r15|QWORD + 1156] y: -147483 size: DWORD  <||@
  Comment 2505 1912 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2516 1914 DEOPT info [bci:50]  <||@
  Comment 2516 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2521 [rdx:0]at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50, duringCall: false, rethrow: false]
              |0  |1             |2          |3  |4 
     locals:  |-  |rdx|QWORD[.]  |r11|DWORD  |-  |-   <||@
  Comment 2529 block B53 null  <||@
  Comment 2529 1294 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2529 1296 NOP  <||@
  Comment 2530 1298 NOP  <||@
  Comment 2531 1300 NOP  <||@
  Comment 2532 1302 r8|QWORD = MOVE input: long[8980|0x2314]  <||@
  Comment 2539 1304 r10|DWORD = MOVE input: int[-52787|0xffffffffffff31cd]  <||@
  Comment 2545 1312 JUMP ~outgoingValues: [] destination: B53 -> B82  <||@
  Comment 2550 block B81 null  <||@
  Comment 2550 1956 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2550 1958 NOP  <||@
  Comment 2551 1960 NOP  <||@
  Comment 2552 1962 NOP  <||@
  Comment 2553 1964 r8|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 2560 1966 r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd]  <||@
  Comment 2566 1974 JUMP ~outgoingValues: [] destination: B81 -> B82  <||@
  Comment 2571 block B28 null  <||@
  Comment 2571 632 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2571 634 NOP  <||@
  Comment 2572 636 NOP  <||@
  Comment 2573 638 NOP  <||@
  Comment 2574 640 r8|QWORD = MOVE input: long[9620|0x2594]  <||@
  Comment 2581 642 r10|DWORD = MOVE input: int[-193555|0xfffffffffffd0bed]  <||@
  Comment 2587 650 JUMP ~outgoingValues: [] destination: B28 -> B82  <||@
  Comment 2592 block B30 null  <||@
  Comment 2592 664 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2592 666 NOP  <||@
  Comment 2593 668 NOP  <||@
  Comment 2594 670 NOP  <||@
  Comment 2595 672 r8|QWORD = MOVE input: long[9620|0x2594]  <||@
  Comment 2602 674 r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed]  <||@
  Comment 2608 682 JUMP ~outgoingValues: [] destination: B30 -> B82  <||@
  Comment 2613 block B13 null  <||@
  Comment 2613 318 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2613 320 NOP  <||@
  Comment 2614 322 NOP  <||@
  Comment 2615 324 NOP  <||@
  Comment 2616 326 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2623 328 r10|DWORD = MOVE input: int[-103707|0xfffffffffffe6ae5]  <||@
  Comment 2629 336 JUMP ~outgoingValues: [] destination: B13 -> B82  <||@
  Comment 2634 block B22 null  <||@
  Comment 2634 512 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2634 514 NOP  <||@
  Comment 2635 516 NOP  <||@
  Comment 2636 518 NOP  <||@
  Comment 2637 520 r8|QWORD = MOVE input: long[9620|0x2594]  <||@
  Comment 2644 522 r10|DWORD = MOVE input: int[-191507|0xfffffffffffd13ed]  <||@
  Comment 2650 530 JUMP ~outgoingValues: [] destination: B22 -> B82  <||@
  Comment 2655 block B16 null  <||@
  Comment 2655 392 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2655 394 NOP  <||@
  Comment 2656 396 NOP  <||@
  Comment 2657 398 NOP  <||@
  Comment 2658 400 r8|QWORD = MOVE input: long[9620|0x2594]  <||@
  Comment 2665 402 r10|DWORD = MOVE input: int[-189459|0xfffffffffffd1bed]  <||@
  Comment 2671 410 JUMP ~outgoingValues: [] destination: B16 -> B82  <||@
  Comment 2676 block B55 null  <||@
  Comment 2676 1334 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2676 1336 NOP  <||@
  Comment 2677 1338 NOP  <||@
  Comment 2678 1340 NOP  <||@
  Comment 2679 1342 r8|QWORD = MOVE input: long[8980|0x2314]  <||@
  Comment 2686 1344 r10|DWORD = MOVE input: int[-43059|0xffffffffffff57cd]  <||@
  Comment 2692 1352 JUMP ~outgoingValues: [] destination: B55 -> B82  <||@
  Comment 2697 block B40 null  <||@
  Comment 2697 870 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2697 872 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2705 874 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2710 876 NOP  <||@
  Comment 2711 878 NOP  <||@
  Comment 2712 880 NOP  <||@
  Comment 2713 882 r8|QWORD = MOVE input: long[9620|0x2594]  <||@
  Comment 2720 884 r10|DWORD = MOVE input: int[-197651|0xfffffffffffcfbed]  <||@
  Comment 2726 892 JUMP ~outgoingValues: [] destination: B40 -> B82  <||@
  Comment 2731 block B45 null  <||@
  Comment 2731 1068 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2731 1070 rsi|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2736 1072 r8|QWORD[.] = MOVE input: stack:152|QWORD[.] moveKind: QWORD  <||@
  Comment 2741 1074 r9|QWORD[.] = MOVE input: stack:144|QWORD[.] moveKind: QWORD  <||@
  Comment 2746 1076 rcx|QWORD[.] = MOVE input: stack:136|QWORD[.] moveKind: QWORD  <||@
  Comment 2751 1078 rdi|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2756 1080 r10|QWORD[.] = MOVE input: stack:128|QWORD[.] moveKind: QWORD  <||@
  Comment 2761 1082 rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 2765 1084 rax|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2770 1086 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2778 1088 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2783 1090 NOP  <||@
  Comment 2784 1092 NOP  <||@
  Comment 2785 1094 NOP  <||@
  Comment 2786 1096 NOP  <||@
  Comment 2787 1098 NOP  <||@
  Comment 2788 1100 NOP  <||@
  Comment 2789 1102 NOP  <||@
  Comment 2790 1104 MOV x: [r15|QWORD + 1156] y: -199699 size: DWORD  <||@
  Comment 2801 1106 MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD  <||@
  Comment 2812 1108 DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44]  <||@
  Comment 2812 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2817 [rax:0, rcx:0, rdx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, stack:96, stack:104]at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7, duringCall: false, rethrow: false]
              |0           |1             |2         
     locals:  |-           |rsi|QWORD[.]  |rbx|DWORD 
     stack:   |int[0|0x0]  |              |          
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1            |2         
     locals:  |-  |r8|QWORD[.]  |rbx|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1            |2         
     locals:  |-  |r9|QWORD[.]  |rbx|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1             |2         
     locals:  |-  |rcx|QWORD[.]  |rbx|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1             |2         
     locals:  |-  |rdi|QWORD[.]  |rbx|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1             |2         
     locals:  |-  |r10|QWORD[.]  |rbx|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19, duringCall: true, rethrow: false]
              |0             |1             |2          |3                 
     locals:  |rax|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |stack:64|QWORD[.] 
  at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1             |2          |3                  |4              
     locals:  |stack:56|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 2825 block B36 null  <||@
  Comment 2825 784 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2825 786 NOP  <||@
  Comment 2826 788 NOP  <||@
  Comment 2827 790 NOP  <||@
  Comment 2828 792 r8|QWORD = MOVE input: long[9620|0x2594]  <||@
  Comment 2835 794 r10|DWORD = MOVE input: int[-196627|0xfffffffffffcffed]  <||@
  Comment 2841 802 JUMP ~outgoingValues: [] destination: B36 -> B82  <||@
  Comment 2846 block B57 null  <||@
  Comment 2846 1374 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2846 1376 NOP  <||@
  Comment 2847 1378 NOP  <||@
  Comment 2848 1380 NOP  <||@
  Comment 2849 1382 r8|QWORD = MOVE input: long[7700|0x1e14]  <||@
  Comment 2856 1384 r10|DWORD = MOVE input: int[-33331|0xffffffffffff7dcd]  <||@
  Comment 2862 1392 JUMP ~outgoingValues: [] destination: B57 -> B82  <||@
  Comment 2867 block B54 null  <||@
  Comment 2867 1314 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2867 1316 NOP  <||@
  Comment 2868 1318 NOP  <||@
  Comment 2869 1320 NOP  <||@
  Comment 2870 1322 r8|QWORD = MOVE input: long[8980|0x2314]  <||@
  Comment 2877 1324 r10|DWORD = MOVE input: int[-47923|0xffffffffffff44cd]  <||@
  Comment 2883 1332 JUMP ~outgoingValues: [] destination: B54 -> B82  <||@
  Comment 2888 block B42 null  <||@
  Comment 2888 906 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2888 908 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2896 910 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2901 912 NOP  <||@
  Comment 2902 914 NOP  <||@
  Comment 2903 916 NOP  <||@
  Comment 2904 918 r8|QWORD = MOVE input: long[9620|0x2594]  <||@
  Comment 2911 920 r10|DWORD = MOVE input: int[-198675|0xfffffffffffcf7ed]  <||@
  Comment 2917 928 JUMP ~outgoingValues: [] destination: B42 -> B82  <||@
  Comment 2922 block B58 null  <||@
  Comment 2922 1394 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2922 1396 NOP  <||@
  Comment 2923 1398 NOP  <||@
  Comment 2924 1400 NOP  <||@
  Comment 2925 1402 r8|QWORD = MOVE input: long[2580|0xa14]  <||@
  Comment 2932 1404 r10|DWORD = MOVE input: int[-188435|0xfffffffffffd1fed]  <||@
  Comment 2938 1412 JUMP ~outgoingValues: [] destination: B58 -> B82  <||@
  Comment 2943 block B34 null  <||@
  Comment 2943 752 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2943 754 NOP  <||@
  Comment 2944 756 NOP  <||@
  Comment 2945 758 NOP  <||@
  Comment 2946 760 r8|QWORD = MOVE input: long[9620|0x2594]  <||@
  Comment 2953 762 r10|DWORD = MOVE input: int[-195603|0xfffffffffffd03ed]  <||@
  Comment 2959 770 JUMP ~outgoingValues: [] destination: B34 -> B82  <||@
  Comment 2964 block B60 null  <||@
  Comment 2964 1434 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2964 1436 NOP  <||@
  Comment 2965 1438 NOP  <||@
  Comment 2966 1440 NOP  <||@
  Comment 2967 1442 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2974 1444 r10|DWORD = MOVE input: int[-97820|0xfffffffffffe81e4]  <||@
  Comment 2980 1452 JUMP ~outgoingValues: [] destination: B60 -> B82  <||@
  Comment 2985 block B83 null  <||@
  Comment 2985 1998 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2985 2000 NOP  <||@
  Comment 2986 2002 NOP  <||@
  Comment 2987 2004 NOP  <||@
  Comment 2988 2006 NOP  <||@
  Comment 2989 2008 NOP  <||@
  Comment 2990 2010 NOP  <||@
  Comment 2991 2012 NOP  <||@
  Comment 2992 2014 MOV x: [r15|QWORD + 1156] y: -94515 size: DWORD  <||@
  Comment 3003 2016 MOV x: [r15|QWORD + 1168] y: 12952 size: QWORD  <||@
  Comment 3014 2018 DEOPT info [bci:0]  <||@
  Comment 3014 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3019 [rdx:0, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2          |3                  |4 
     locals:  |stack:56|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |stack:64|QWORD[.]  |-   <||@
  Comment 3035 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 3060 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 3080 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 3100 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 3128 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3133 [rdx:0, rsi:0, r8:0]at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 3163 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3168 [rdx:0, rsi:0, r8:0, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 3198 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3203 [rdx:0, rsi:0, r8:0, r9:0, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 3233 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3238 [rcx:0, rdx:0, rsi:0, r8:0, r9:0, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 3268 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3273 [rcx:0, rdx:0, rbp:0, rsi:0, r8:0, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 3303 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3308 [rdx:0, rbp:0, rsi:0, r8:0, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 3338 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3343 [rcx:0, rdx:0, rbp:0, rsi:0, r8:0, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 3373 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3378 [rcx:0, rdx:0, rsi:0, r8:0, r13:0, stack:68, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 3408 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3413 [rdx:0, rbp:0, rsi:0, r8:0, r13:0, stack:64, stack:68, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 3443 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3448 [rcx:0, rdx:0, rbp:0, rsi:0, r8:0, stack:60, stack:64, stack:68, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 3478 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3483 [rdx:0, rsi:0, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54, duringCall: false, rethrow: false]
              |0                  |1             |2          |3                  |4               |5 
     locals:  |stack:88|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |stack:64|QWORD[.]  |stack:48|DWORD  |- 
  at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |rdx|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 3513 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3518 [rcx:0, rbp:0, rsi:0, stack:60, stack:64, stack:68, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 3548 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3553 [rsi:0, stack:72, stack:88, stack:96, stack:104]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3                 
     locals:  |stack:88|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.] 
     stack:   |rcx|DWORD          |                   |                |                  
  at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 3583 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3588 [rax:0, rdx:0]at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50, duringCall: false, rethrow: false]
              |0  |1             |2               |3  |4 
     locals:  |-  |rdx|QWORD[.]  |stack:32|DWORD  |-  |-   <||@
  Comment 3596 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 3596 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 3602 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 3602 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-7845[java.util.regex.Pattern$Start.match(Matcher, int, CharSequence)]"
  method "HotSpotCompilation-7845[java.util.regex.Pattern$Start.match(Matcher, int, CharSequence)]"
  date 1724269716423
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ab39a00 448b560849bc0000002b787f00004d03d44d33e4493bc20f8563b6c4fe66669089842400c0feff4881ec98000000669041817f20000000000f85950b00009090909090909090909090904889ac2490000000448b5210442b5610413bca0f8ffa07000048897424684c894424609090909041817808d8e800000f852a0b000048895424584489942484000000909090448bd966660f1f8400000000006666669090909090453bda0f8f8107000044899c248000000090909090909090909090909090909090909090448b4e0c44894c2454428b0ccd080000008b5a1048bf0000002b787f0000488d0c0f418bf948c1e70348897c2448418bc3ffc08944247c483b0dbafeffff0f8412000000483b0db5feffff0f8410030000e9d80800009090909090418b4814443b1ccd0c0000000f835f0a0000909090909090428b2ccd10000000448b2ced08000000413bdb0f8e880700009090909041807810000f85070a0000909090909090909090909090909090410fbe4ccb100fb6d949be0000002b787f00004f8d2c2e4c3b2d40feffff0f841f0000004c3b2d3bfeffff0f84630000004c3b2d36feffff0f847e000000e969090000909090909090908b0ced0c0000003bcb0f94c10fb6c99090909085c90f856e0500009090909090498bb7580400008506448b5c247c448b9424840000004c8b442460488b542458488b742468e99afeffff90909090908b2ced0c0000003b1ced0c0000000f831608000090909090900fb6c90fb64ce910eb9d9090909090909090909090909090908b0ced0c000000448b2ccd0800000049be0000002b787f00004f8d2c2e4c3b2d87fdffff0f84120000004c3b2d72fdffff0f8434000000e9d8060000909090903b1ccd0c0000000f8cd5070000909090903b1ccd100000000f8fff060000909090b901000000e923ffffff896c2444909090909090909090909090909090448b2ccd0c000000468b34ed0800000048bd0000002b787f00004e8d7435004c3b3507fdffff0f84120000004c3b35f2fcffff0f8436000000e97b07000090909090423b1ced0c0000000f8c3f07000090909090423b1ced100000000f8f03060000909090b901000000e9a1feffff894c2440909090909090909090909090909090428b2ced0c000000448b34ed0800000048b90000002b787f00004e8d34314c3b3586fcffff0f84120000004c3b3571fcffff0f8434000000e9b9070000909090903b1ced0c0000000f8c80060000909090903b1ced100000000f8f84060000909090b901000000e922feffff44896c243c9090909090909090909090909090908b0ced0c000000448b34cd0800000049bd0000002b787f00004f8d7435004c3b3506fcffff0f84120000004c3b35f1fbffff0f84cb010000e9e7050000909090903b1ccd0c0000000f8c74070000909090903b1ccd100000000f8fed060000909090b901000000e9a2fdffff895c2478909090c744247400000000458bd3e9a100000090909090909090909090909090909090909090909090468b2ccd14000000428504ed0000000049c1e503498bf0418bd244895424704c896c242066669048b8ffffffffffffffffe8f4b7c4fe0f1f8400fc06000c488b7424208bd0669048b8ffffffffffffffffe8d4b7c4fe0f1f84001c07000d85c00f843700000090909090908b742474ffc6448b54247041ffc2897424748b5c2478448b4c24544c8b44246090909090413bda0f8f52ffffffe9990300009090908b5c2478909090903b5c24700f8ea7030000909090909090448b5c2474448b542470e98200000066669044895c24709090909090909090909090909090909090909090909090428b34cd0c0000008b0cf50800000049b80000002b787f0000498d0c08488b99f0010000488b434048c1e603488bfa418bca4c8b4424604489542474ffd00f1f84000000000085c00f8592020000448b5c2470448b542474909090909041ffcb41ffca448b4c2454488b54245890909090463b1ccd100000000f8d65ffffffe9790000009090909090909090909090909090908b34cd0c0000008b14f50800000049ba0000002b787f0000498d1412483b15f6f9ffff0f8412000000483b15e1f9ffff0f8463000000e928030000909090903b1cf50c0000000f8c6e040000909090903b1cf5100000000f8f1c050000909090b901000000e992fbffff9090909090498bb7580400008506448b5c247c448b9424840000004c8b442460488b542458488b742468e938faffff448b6c243c8b542440448b542444909090909090909090909090909090909090909090909090909090909090909090448b1cf50c000000428504dd000000008b34f510000000448b04cd10000000448b0ced10000000428b0ced100000008b14d510000000468b14d51000000049c1e30349c1e20348c1e20348c1e10349c1e10349c1e00348c1e6034889742430498bf348895424288bd3895c24784c8954242048894c24184c894c24104c894424089048b8ffffffffffffffffe858b5c4fe0f1f84009809001385c00f8473030000909090b901000000e986faffff448b4c24549090909090909090909090909090909090909090909090428b34cd0c0000008b14f50800000048b90000002b787f0000488d1411488b9af0010000488b434048c1e603488b5424588b4c247c4c8b442460ffd00f1f84000000000085c00f84b6010000909090909090488b54245890909090908b4238833cc50c000000020f82e1010000448b9c248000000090909090909090909090909044895a1c44891cc510000000448b5220448914c514000000b801000000488bac24900000004881c498000000493ba7500400000f87cb030000c3448b9c2480000000488b542458909090eb82909090909090909090c6423001b800000000488bac24900000004881c498000000493ba7500400000f879e030000c3909090909090909090c6423001b800000000488bac24900000004881c498000000493ba7500400000f8783030000c38b44247c448b9c2480000000488b542458448b4424749090904489542470e94bfcffff448b442474448b5424708b44247c448b4c2454448b9c2480000000488b54245890909090c6423001e92ffcffff90909049c7c09402000041baed23fdff448b8c2484000000488b4c2460488b74246890909090909090458997840400004d898790040000e8620ec5fe0f1f84000000000090909049c7c09425000041baed0ffdffebba448b9c2480000000488b54245890909049c7c01423000041bacd1effffeb9b90909049c7c01423000041bacd6affffeb89448b9c2480000000488b5424589090909090909041c78784040000edeffcff49c7879004000014050000e8e80dc5fe0f1f84000000000090909049c7c09425000041baed17fdffe93dffffff448b9c24800000009090909090909041c78784040000e5bffdff49c7879004000000000000e8a10dc5fe0f1f84000000000090909049c7c01423000041bacd31ffffe9f6feffff90909049c7c01400000041bacdb7ffffe9e1feffff90909049c7c09425000041baed0bfdffe9ccfeffff90909049c7c09425000041baed07fdffe9b7feffff90909049c7c00000000041bae56afeffe9a2feffff90909049c7c09425000041baed13fdffe98dfeffff90909049c7c09425000041baed1bfdffe978feffff90909049c7c01423000041bacd57ffffe963feffff448b9c2480000000488b54245890909049c7c09425000041baedfbfcffe941feffff488b7424304c8b4424084c8b4c2410488b4c2418488b7c24284c8b5424208b5c2478488b442448448b9c2480000000488b5424589090909090909041c78784040000edf3fcff49c7879004000094200000e8790cc5fe0f1f84000000000090909049c7c09425000041baedfffcffe9cefdffff90909049c7c0141e000041bacd7dffffe9b9fdffff90909049c7c01423000041bacd44ffffe9a4fdffff448b9c2480000000488b54245890909049c7c09425000041baedf7fcffe982fdffff90909049c7c0140a000041baed1ffdffe96dfdffff90909049c7c09425000041baed03fdffe958fdffff90909049c7c00000000041bae481feffe943fdffff9090909090909041c78784040000cd8efeff49c7879004000098320000e8af0bc5fe0f1f8400000000004889ac2490000000e8400cc3fee959f4fffff4488d0d21fcffff49898f68040000e9071ac5fef4488d0d4efcffff49898f68040000e9f319c5fef4488d0d69fcffff49898f68040000e9df19c5fef441c78784040000f5a3feff49c7879004000000000000e83d0bc5fe0f1f84000000000041c78784040000f58ffeff49c78790040000982f0000e81a0bc5fe0f1f84000000000041c78784040000f594feff49c7879004000000000000e8f70ac5fe0f1f84000000000041c78784040000f585feff49c7879004000000000000e8d40ac5fe0f1f84000000000041c78784040000f576feff49c7879004000000000000e8b10ac5fe0f1f84000000000041c78784040000f56ffeff49c7879004000000000000e88e0ac5fe0f1f84000000000041c78784040000f55dfeff49c7879004000000000000e86b0ac5fe0f1f84000000000041c78784040000f552feff49c7879004000000000000e8480ac5fe0f1f84000000000041c78784040000f547feff49c7879004000000000000e8250ac5fe0f1f84000000000041c78784040000f53cfeff49c7879004000000000000e8020ac5fe0f1f84000000000041c78784040000f501feff49c7879004000000000000e8df09c5fe0f1f84000000000041c78784040000f531feff49c7879004000000000000e8bc09c5fe0f1f84000000000041c78784040000f51efeff49c7879004000000000000e89909c5fe0f1f84000000000041c78784040000f5edfdff49c7879004000000000000e87609c5fe0f1f840000000000e8efaad8fef4e80907c5fef4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 48 FRAME_COMPLETE  <||@
  Comment 48 ENTRY_BARRIER_PATCH  <||@
  Comment 62 block B0 null  <||@
  Comment 62 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 62 2 NOP  <||@
  Comment 63 4 NOP  <||@
  Comment 64 6 NOP  <||@
  Comment 65 8 NOP  <||@
  Comment 66 10 NOP  <||@
  Comment 67 12 NOP  <||@
  Comment 68 14 NOP  <||@
  Comment 69 16 NOP  <||@
  Comment 70 18 NOP  <||@
  Comment 71 20 NOP  <||@
  Comment 72 22 NOP  <||@
  Comment 73 24 NOP  <||@
  Comment 74 26 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 82 28 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e1bc5ac slotKind: QWORD  <||@
  Comment 82 30 r10|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD state [bci:0]  <||@
  Comment 82 [rdx:0, rsi:0, r8:0]at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 82 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 86 32 r10|DWORD = SUB (x: r10|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD  <||@
  Comment 90 34 CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 9.93051617825813E-7 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 99 block B2 null  <||@
  Comment 99 62 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 99 64 stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 104 66 stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 109 68 NOP  <||@
  Comment 110 70 NOP  <||@
  Comment 111 72 NOP  <||@
  Comment 112 74 NOP  <||@
  Comment 113 76 CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B83 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0]  <||@
  Comment 113 [rdx:0, rsi:0, r8:0, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 113 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 113 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 127 block B3 null  <||@
  Comment 127 78 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 127 80 stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 132 82 stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 140 84 NOP  <||@
  Comment 141 86 NOP  <||@
  Comment 142 88 NOP  <||@
  Comment 143 90 r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 146 92 JUMP ~outgoingValues: [] destination: B3 -> B4  <||@
  Comment 146 block B4 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 146 94 [] = LABEL alignment: 16 numbPhis: 1 label: ?  <||@
  Comment 160 96 NOP  <||@
  Comment 161 98 NOP  <||@
  Comment 162 100 NOP  <||@
  Comment 163 102 NOP  <||@
  Comment 164 104 CMPBRANCH (x: r11|DWORD, y: r10|DWORD) trueDestinationProbability: 8.983968413646328E-4 condition: > trueDestination: B4 -> B78 falseDestination: B4 -> B5 size: DWORD  <||@
  Comment 173 block B5 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 173 106 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 173 108 stack:32|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 181 110 NOP  <||@
  Comment 182 112 NOP  <||@
  Comment 183 114 NOP  <||@
  Comment 184 116 NOP  <||@
  Comment 185 118 NOP  <||@
  Comment 186 120 NOP  <||@
  Comment 187 122 NOP  <||@
  Comment 188 124 NOP  <||@
  Comment 189 126 NOP  <||@
  Comment 190 128 NOP  <||@
  Comment 191 130 NOP  <||@
  Comment 192 132 NOP  <||@
  Comment 193 134 NOP  <||@
  Comment 194 136 NOP  <||@
  Comment 195 138 NOP  <||@
  Comment 196 140 NOP  <||@
  Comment 197 142 NOP  <||@
  Comment 198 144 NOP  <||@
  Comment 199 146 NOP  <||@
  Comment 200 148 r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 204 150 stack:76|DWORD[_] = MOVE input: r9|DWORD[_] moveKind: DWORD  <||@
  Comment 209 152 rcx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD state [bci:31]  <||@
  Comment 209 [rdx:0, rsi:0, r8:0, r9:0, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 209 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 217 154 rbx|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 220 156 rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 230 158 rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0  <||@
  Comment 234 160 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3  <||@
  Comment 241 162 stack:88|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 246 164 rax|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 251 166 stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 255 168 AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharProperty;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BmpCharPropertyGreedy;, resolved>}] keyTargets: [B5 -> B6, B5 -> B61] defaultTarget: B5 -> B81 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 255 {DataSection[0x0]}  <||@
  Comment 268 {DataSection[0x8]}  <||@
  Comment 286 block B6 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 286 170 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 286 172 NOP  <||@
  Comment 287 174 NOP  <||@
  Comment 288 176 NOP  <||@
  Comment 289 178 NOP  <||@
  Comment 290 180 NOP  <||@
  Comment 291 182 rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD  <||@
  Comment 295 184 CMPBRANCH (x: r11|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B60 size: DWORD state [bci:31]  <||@
  Comment 295 [rcx:0, rdx:0, rsi:0, r8:0, r9:0, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 295 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 309 block B7 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 309 186 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 309 188 NOP  <||@
  Comment 310 190 NOP  <||@
  Comment 311 192 NOP  <||@
  Comment 312 194 NOP  <||@
  Comment 313 196 NOP  <||@
  Comment 314 198 NOP  <||@
  Comment 315 200 rbp|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 323 202 r13|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31]  <||@
  Comment 323 [rcx:0, rdx:0, rbp:0, rsi:0, r8:0, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 323 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 331 204 CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B59 size: DWORD  <||@
  Comment 340 block B8 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 340 206 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 340 208 NOP  <||@
  Comment 341 210 NOP  <||@
  Comment 342 212 NOP  <||@
  Comment 343 214 NOP  <||@
  Comment 344 216 CMPCONSTBRANCH x: [r8|QWORD[.] + 16] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B58 y: 0 size: BYTE inlinedY: null  <||@
  Comment 355 block B9 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 355 218 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 355 220 NOP  <||@
  Comment 356 222 NOP  <||@
  Comment 357 224 NOP  <||@
  Comment 358 226 NOP  <||@
  Comment 359 228 NOP  <||@
  Comment 360 230 NOP  <||@
  Comment 361 232 NOP  <||@
  Comment 362 234 NOP  <||@
  Comment 363 236 NOP  <||@
  Comment 364 238 NOP  <||@
  Comment 365 240 NOP  <||@
  Comment 366 242 NOP  <||@
  Comment 367 244 NOP  <||@
  Comment 368 246 NOP  <||@
  Comment 369 248 NOP  <||@
  Comment 370 250 rcx|DWORD = MOVSXB input: [r11|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 376 252 rbx|DWORD = MOVZXB value: rcx|DWORD size: DWORD  <||@
  Comment 379 254 r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 389 256 r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0  <||@
  Comment 393 258 AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003b;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B9 -> B10, B9 -> B11, B9 -> B14] defaultTarget: B9 -> B57 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 393 {DataSection[0x10]}  <||@
  Comment 406 {DataSection[0x18]}  <||@
  Comment 419 {DataSection[0x20]}  <||@
  Comment 437 block B10 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 437 260 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 437 262 NOP  <||@
  Comment 438 264 NOP  <||@
  Comment 439 266 NOP  <||@
  Comment 440 268 NOP  <||@
  Comment 441 270 NOP  <||@
  Comment 442 272 NOP  <||@
  Comment 443 274 NOP  <||@
  Comment 444 276 rcx|DWORD = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 451 278 CMP (x: rcx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 453 280 rcx|DWORD = SETCC condition: =  <||@
  Comment 459 282 JUMP ~outgoingValues: [] destination: B10 -> B47  <||@
  Comment 459 block B47 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 459 1122 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 459 1124 NOP  <||@
  Comment 460 1126 NOP  <||@
  Comment 461 1128 NOP  <||@
  Comment 462 1130 NOP  <||@
  Comment 463 1132 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5929707392225225 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: DWORD  <||@
  Comment 471 block B48 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 471 1134 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 471 1136 NOP  <||@
  Comment 472 1138 NOP  <||@
  Comment 473 1140 NOP  <||@
  Comment 474 1142 NOP  <||@
  Comment 475 1144 NOP  <||@
  Comment 476 1146 SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:24, 44]  <||@
  Comment 483 [stack:72, stack:88, stack:96, stack:104]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3                 
     locals:  |stack:88|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.] 
     stack:   |rcx|DWORD          |                   |                |                  
  at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 483 {infopoint: SAFEPOINT}  <||@
  Comment 483 POLL_FAR  <||@
  Comment 485 1148 r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 490 1150 r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 498 1152 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 503 1154 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 508 1156 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 513 1158 JUMP ~outgoingValues: [] destination: B48 -> B4  <||@
  Comment 518 block B11 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 518 284 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 518 286 NOP  <||@
  Comment 519 288 NOP  <||@
  Comment 520 290 NOP  <||@
  Comment 521 292 NOP  <||@
  Comment 522 294 NOP  <||@
  Comment 523 296 rbp|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 530 298 CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD state [bci:31]  <||@
  Comment 530 [rdx:0, rbp:0, rsi:0, r8:0, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 530 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 543 block B12 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 543 300 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 543 302 NOP  <||@
  Comment 544 304 NOP  <||@
  Comment 545 306 NOP  <||@
  Comment 546 308 NOP  <||@
  Comment 547 310 NOP  <||@
  Comment 548 312 rcx|QWORD = MOVZXB value: rcx|DWORD size: DWORD  <||@
  Comment 551 314 rcx|DWORD = MOVZXB input: [rcx|QWORD + rbp|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 556 316 JUMP ~outgoingValues: [] destination: B12 -> B47  <||@
  Comment 558 block B14 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 558 338 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 558 340 NOP  <||@
  Comment 559 342 NOP  <||@
  Comment 560 344 NOP  <||@
  Comment 561 346 NOP  <||@
  Comment 562 348 NOP  <||@
  Comment 563 350 NOP  <||@
  Comment 564 352 NOP  <||@
  Comment 565 354 NOP  <||@
  Comment 566 356 NOP  <||@
  Comment 567 358 NOP  <||@
  Comment 568 360 NOP  <||@
  Comment 569 362 NOP  <||@
  Comment 570 364 NOP  <||@
  Comment 571 366 NOP  <||@
  Comment 572 368 NOP  <||@
  Comment 573 370 rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 580 372 r13|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31]  <||@
  Comment 580 [rcx:0, rdx:0, rbp:0, rsi:0, r8:0, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 580 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 588 374 r14|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 598 376 r13|QWORD = UNCOMPRESSPOINTER (input: r13|DWORD, ~baseRegister: r14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0  <||@
  Comment 602 378 AMD64HOTSPOTSTRATEGYSWITCH ~key: r13|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B14 -> B15, B14 -> B20] defaultTarget: B14 -> B56 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 602 {DataSection[0x28]}  <||@
  Comment 615 {DataSection[0x20]}  <||@
  Comment 633 block B15 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 633 380 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 633 382 NOP  <||@
  Comment 634 384 NOP  <||@
  Comment 635 386 NOP  <||@
  Comment 636 388 NOP  <||@
  Comment 637 390 CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 650 block B17 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 650 412 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 650 414 NOP  <||@
  Comment 651 416 NOP  <||@
  Comment 652 418 NOP  <||@
  Comment 653 420 NOP  <||@
  Comment 654 422 CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD  <||@
  Comment 667 block B19 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 667 444 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 667 446 NOP  <||@
  Comment 668 448 NOP  <||@
  Comment 669 450 NOP  <||@
  Comment 670 452 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 675 454 JUMP ~outgoingValues: [] destination: B19 -> B47  <||@
  Comment 680 block B20 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 680 456 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 680 458 stack:92|DWORD[_] = MOVE input: rbp|DWORD[_] moveKind: DWORD  <||@
  Comment 684 460 NOP  <||@
  Comment 685 462 NOP  <||@
  Comment 686 464 NOP  <||@
  Comment 687 466 NOP  <||@
  Comment 688 468 NOP  <||@
  Comment 689 470 NOP  <||@
  Comment 690 472 NOP  <||@
  Comment 691 474 NOP  <||@
  Comment 692 476 NOP  <||@
  Comment 693 478 NOP  <||@
  Comment 694 480 NOP  <||@
  Comment 695 482 NOP  <||@
  Comment 696 484 NOP  <||@
  Comment 697 486 NOP  <||@
  Comment 698 488 NOP  <||@
  Comment 699 490 r13|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 707 492 r14|DWORD = MOV input: [r13|DWORD[_] * 8 + 8] size: DWORD state [bci:31]  <||@
  Comment 707 [rcx:0, rdx:0, rsi:0, r8:0, r13:0, stack:68, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 707 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 715 494 rbp|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 725 496 r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rbp|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0  <||@
  Comment 730 498 AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B20 -> B21, B20 -> B26] defaultTarget: B20 -> B55 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 730 {DataSection[0x28]}  <||@
  Comment 743 {DataSection[0x20]}  <||@
  Comment 761 block B21 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 761 500 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 761 502 NOP  <||@
  Comment 762 504 NOP  <||@
  Comment 763 506 NOP  <||@
  Comment 764 508 NOP  <||@
  Comment 765 510 CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD  <||@
  Comment 779 block B23 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 779 532 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 779 534 NOP  <||@
  Comment 780 536 NOP  <||@
  Comment 781 538 NOP  <||@
  Comment 782 540 NOP  <||@
  Comment 783 542 CMPBRANCH (x: rbx|DWORD, y: [r13|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD  <||@
  Comment 797 block B25 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 797 564 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 797 566 NOP  <||@
  Comment 798 568 NOP  <||@
  Comment 799 570 NOP  <||@
  Comment 800 572 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 805 574 JUMP ~outgoingValues: [] destination: B25 -> B47  <||@
  Comment 810 block B26 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 810 576 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 810 578 stack:96|DWORD[_] = MOVE input: rcx|DWORD[_] moveKind: DWORD  <||@
  Comment 814 580 NOP  <||@
  Comment 815 582 NOP  <||@
  Comment 816 584 NOP  <||@
  Comment 817 586 NOP  <||@
  Comment 818 588 NOP  <||@
  Comment 819 590 NOP  <||@
  Comment 820 592 NOP  <||@
  Comment 821 594 NOP  <||@
  Comment 822 596 NOP  <||@
  Comment 823 598 NOP  <||@
  Comment 824 600 NOP  <||@
  Comment 825 602 NOP  <||@
  Comment 826 604 NOP  <||@
  Comment 827 606 NOP  <||@
  Comment 828 608 NOP  <||@
  Comment 829 610 rbp|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 837 612 r14|DWORD = MOV input: [rbp|DWORD[_] * 8 + 8] size: DWORD state [bci:31]  <||@
  Comment 837 [rdx:0, rbp:0, rsi:0, r8:0, r13:0, stack:64, stack:68, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 837 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 845 614 rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 855 616 r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0  <||@
  Comment 859 618 AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B26 -> B27, B26 -> B32] defaultTarget: B26 -> B54 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 859 {DataSection[0x28]}  <||@
  Comment 872 {DataSection[0x20]}  <||@
  Comment 890 block B27 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 890 620 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 890 622 NOP  <||@
  Comment 891 624 NOP  <||@
  Comment 892 626 NOP  <||@
  Comment 893 628 NOP  <||@
  Comment 894 630 CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD  <||@
  Comment 907 block B29 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 907 652 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 907 654 NOP  <||@
  Comment 908 656 NOP  <||@
  Comment 909 658 NOP  <||@
  Comment 910 660 NOP  <||@
  Comment 911 662 CMPBRANCH (x: rbx|DWORD, y: [rbp|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD  <||@
  Comment 924 block B31 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 924 684 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 924 686 NOP  <||@
  Comment 925 688 NOP  <||@
  Comment 926 690 NOP  <||@
  Comment 927 692 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 932 694 JUMP ~outgoingValues: [] destination: B31 -> B47  <||@
  Comment 937 block B32 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 937 696 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 937 698 stack:100|DWORD[_] = MOVE input: r13|DWORD[_] moveKind: DWORD  <||@
  Comment 942 700 NOP  <||@
  Comment 943 702 NOP  <||@
  Comment 944 704 NOP  <||@
  Comment 945 706 NOP  <||@
  Comment 946 708 NOP  <||@
  Comment 947 710 NOP  <||@
  Comment 948 712 NOP  <||@
  Comment 949 714 NOP  <||@
  Comment 950 716 NOP  <||@
  Comment 951 718 NOP  <||@
  Comment 952 720 NOP  <||@
  Comment 953 722 NOP  <||@
  Comment 954 724 NOP  <||@
  Comment 955 726 NOP  <||@
  Comment 956 728 NOP  <||@
  Comment 957 730 rcx|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 964 732 r14|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31]  <||@
  Comment 964 [rcx:0, rdx:0, rbp:0, rsi:0, r8:0, stack:60, stack:64, stack:68, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 964 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 972 734 r13|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 982 736 r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: r13|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0  <||@
  Comment 987 738 AMD64HOTSPOTSTRATEGYSWITCH ~key: r14|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B32 -> B33, B32 -> B38] defaultTarget: B32 -> B53 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 987 {DataSection[0x28]}  <||@
  Comment 1000 {DataSection[0x20]}  <||@
  Comment 1018 block B33 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 1018 740 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1018 742 NOP  <||@
  Comment 1019 744 NOP  <||@
  Comment 1020 746 NOP  <||@
  Comment 1021 748 NOP  <||@
  Comment 1022 750 CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD  <||@
  Comment 1035 block B35 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 1035 772 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1035 774 NOP  <||@
  Comment 1036 776 NOP  <||@
  Comment 1037 778 NOP  <||@
  Comment 1038 780 NOP  <||@
  Comment 1039 782 CMPBRANCH (x: rbx|DWORD, y: [rcx|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD  <||@
  Comment 1052 block B37 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 1052 804 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1052 806 NOP  <||@
  Comment 1053 808 NOP  <||@
  Comment 1054 810 NOP  <||@
  Comment 1055 812 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1060 814 JUMP ~outgoingValues: [] destination: B37 -> B47  <||@
  Comment 1065 block B61 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 1065 1454 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1065 1456 stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1069 1458 NOP  <||@
  Comment 1070 1460 NOP  <||@
  Comment 1071 1462 NOP  <||@
  Comment 1072 1464 stack:44|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1080 1466 r10|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1083 1468 JUMP ~outgoingValues: [] destination: B61 -> B62  <||@
  Comment 1088 block B63 loop 1 depth 2 outer 0 header:267|LoopBegin  <||@
  Comment 1088 1482 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1088 1484 NOP  <||@
  Comment 1089 1486 NOP  <||@
  Comment 1090 1488 NOP  <||@
  Comment 1091 1490 NOP  <||@
  Comment 1092 1492 NOP  <||@
  Comment 1093 1494 NOP  <||@
  Comment 1094 1496 NOP  <||@
  Comment 1095 1498 NOP  <||@
  Comment 1096 1500 NOP  <||@
  Comment 1097 1502 NOP  <||@
  Comment 1098 1504 NOP  <||@
  Comment 1099 1506 NOP  <||@
  Comment 1100 1508 NOP  <||@
  Comment 1101 1510 NOP  <||@
  Comment 1102 1512 NOP  <||@
  Comment 1103 1514 NOP  <||@
  Comment 1104 1516 NOP  <||@
  Comment 1105 1518 NOP  <||@
  Comment 1106 1520 NOP  <||@
  Comment 1107 1522 NOP  <||@
  Comment 1108 1524 NOP  <||@
  Comment 1109 1526 NOP  <||@
  Comment 1110 1528 r13|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 1118 1530 NULLCHECK address: [r13|DWORD[_] * 8] state [bci:9, 44]  <||@
  Comment 1118 [r8:0, r13:0, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 9, duringCall: false, rethrow: false]
              |0                  |1                  |2          |3            |4               |5              
     locals:  |stack:88|QWORD[.]  |stack:72|QWORD[.]  |r10|DWORD  |r8|QWORD[.]  |stack:44|DWORD  |stack:40|DWORD 
  at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3            |4              
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |r8|QWORD[.]  |stack:28|DWORD   <||@
  Comment 1118 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1126 1532 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3  <||@
  Comment 1130 1534 rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1133 1536 rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1136 1538 stack:48|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1141 1540 stack:128|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1146 1542 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<CharSequence.charAt(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:21, 44]  <||@
  Comment 1149 INVOKEINTERFACE  <||@
  Comment 1159 {HotSpotMethod<CharSequence.charAt(int)>}  <||@
  Comment 1164 [stack:32, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 21, duringCall: true, rethrow: false]
              |0                   |1                  |2               |3                  |4               |5              
     locals:  |stack:88|QWORD[.]   |stack:72|QWORD[.]  |stack:48|DWORD  |stack:64|QWORD[.]  |stack:44|DWORD  |stack:40|DWORD 
     stack:   |stack:128|QWORD[.]  |                   |                |                   |                |               
  at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 1172 1544 rsi|QWORD[.] = MOVE input: stack:128|QWORD[.] moveKind: QWORD  <||@
  Comment 1177 1546 rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1179 1548 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:26, 44]  <||@
  Comment 1181 INVOKEINTERFACE  <||@
  Comment 1191 {HotSpotMethod<Pattern$CharPredicate.is(int)>}  <||@
  Comment 1196 [stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4502) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4               |5              
     locals:  |stack:88|QWORD[.]  |stack:72|QWORD[.]  |stack:48|DWORD  |stack:64|QWORD[.]  |stack:44|DWORD  |stack:40|DWORD 
  at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 1204 1550 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5908646161430428 condition: = trueDestination: B63 -> B65 falseDestination: B63 -> B64 size: DWORD  <||@
  Comment 1212 block B64 loop 1 depth 2 outer 0 header:267|LoopBegin  <||@
  Comment 1212 1552 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1212 1554 NOP  <||@
  Comment 1213 1556 NOP  <||@
  Comment 1214 1558 NOP  <||@
  Comment 1215 1560 NOP  <||@
  Comment 1216 1562 NOP  <||@
  Comment 1217 1564 rsi|DWORD = INC value: stack:44|DWORD size: DWORD  <||@
  Comment 1223 1566 r10|DWORD = INC value: stack:48|DWORD size: DWORD  <||@
  Comment 1231 1568 stack:44|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 1235 1570 rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1239 1572 r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD  <||@
  Comment 1244 1574 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1249 1576 JUMP ~outgoingValues: [] destination: B64 -> B62  <||@
  Comment 1249 block B62 loop 1 depth 2 outer 0 header:267|LoopBegin  <||@
  Comment 1249 1470 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1249 1472 NOP  <||@
  Comment 1250 1474 NOP  <||@
  Comment 1251 1476 NOP  <||@
  Comment 1252 1478 NOP  <||@
  Comment 1253 1480 CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999997723712406 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B66 size: DWORD  <||@
  Comment 1267 block B65 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 1267 1578 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1267 1580 NOP  <||@
  Comment 1268 1582 NOP  <||@
  Comment 1269 1584 NOP  <||@
  Comment 1270 1586 rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1274 1588 JUMP ~outgoingValues: [] destination: B65 -> B67  <||@
  Comment 1274 block B67 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 1274 1612 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1274 1614 NOP  <||@
  Comment 1275 1616 NOP  <||@
  Comment 1276 1618 NOP  <||@
  Comment 1277 1620 NOP  <||@
  Comment 1278 1622 CMPBRANCH (x: rbx|DWORD, y: stack:48|DWORD) trueDestinationProbability: 0.9999996147864973 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD  <||@
  Comment 1288 block B68 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 1288 1624 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1288 1626 NOP  <||@
  Comment 1289 1628 NOP  <||@
  Comment 1290 1630 NOP  <||@
  Comment 1291 1632 JUMP ~outgoingValues: [] destination: B68 -> B70  <||@
  Comment 1291 block B70 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 1291 1664 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1291 1666 NOP  <||@
  Comment 1292 1668 NOP  <||@
  Comment 1293 1670 NOP  <||@
  Comment 1294 1672 r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1299 1674 r10|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD  <||@
  Comment 1304 1680 JUMP ~outgoingValues: [] destination: B70 -> B71  <||@
  Comment 1309 block B72 loop 2 depth 2 outer 0 header:312|LoopBegin  <||@
  Comment 1309 1694 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1312 1696 stack:48|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1317 1698 NOP  <||@
  Comment 1318 1700 NOP  <||@
  Comment 1319 1702 NOP  <||@
  Comment 1320 1704 NOP  <||@
  Comment 1321 1706 NOP  <||@
  Comment 1322 1708 NOP  <||@
  Comment 1323 1710 NOP  <||@
  Comment 1324 1712 NOP  <||@
  Comment 1325 1714 NOP  <||@
  Comment 1326 1716 NOP  <||@
  Comment 1327 1718 NOP  <||@
  Comment 1328 1720 NOP  <||@
  Comment 1329 1722 NOP  <||@
  Comment 1330 1724 NOP  <||@
  Comment 1331 1726 NOP  <||@
  Comment 1332 1728 NOP  <||@
  Comment 1333 1730 NOP  <||@
  Comment 1334 1732 NOP  <||@
  Comment 1335 1734 NOP  <||@
  Comment 1336 1736 NOP  <||@
  Comment 1337 1738 NOP  <||@
  Comment 1338 1740 NOP  <||@
  Comment 1339 1742 NOP  <||@
  Comment 1340 1744 rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1348 1746 rcx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:54, 44]  <||@
  Comment 1348 [rdx:0, rsi:0, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54, duringCall: false, rethrow: false]
              |0                  |1             |2          |3                  |4               |5 
     locals:  |stack:88|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |stack:64|QWORD[.]  |stack:48|DWORD  |- 
  at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |rdx|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 1348 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1355 1748 r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 1365 1750 rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0  <||@
  Comment 1369 1752 rbx|QWORD = MOV input: [rcx|QWORD + 496] size: QWORD  <||@
  Comment 1376 1754 rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD  <||@
  Comment 1380 1756 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3  <||@
  Comment 1384 1758 rdi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1387 1762 rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1390 1764 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1395 1766 stack:44|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1400 1768 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:70, 44]  <||@
  Comment 1400 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 1400 INLINE_INVOKE  <||@
  Comment 1402 [stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4509) [bci: 70, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:72|QWORD[.]  |stack:44|DWORD  |stack:64|QWORD[.]  |stack:48|DWORD  |- 
  at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 1410 1770 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.31374907693960497 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 size: DWORD  <||@
  Comment 1418 block B73 loop 2 depth 2 outer 0 header:312|LoopBegin  <||@
  Comment 1418 1772 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1418 1774 r11|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD  <||@
  Comment 1423 1776 r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1428 1778 NOP  <||@
  Comment 1429 1780 NOP  <||@
  Comment 1430 1782 NOP  <||@
  Comment 1431 1784 NOP  <||@
  Comment 1432 1786 NOP  <||@
  Comment 1433 1788 r11|DWORD = DEC value: r11|DWORD size: DWORD  <||@
  Comment 1436 1790 r10|DWORD = DEC value: r10|DWORD size: DWORD  <||@
  Comment 1439 1796 JUMP ~outgoingValues: [] destination: B73 -> B71  <||@
  Comment 1439 block B71 loop 2 depth 2 outer 0 header:312|LoopBegin  <||@
  Comment 1439 1682 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1439 1676 r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD  <||@
  Comment 1444 1678 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1449 1684 NOP  <||@
  Comment 1450 1686 NOP  <||@
  Comment 1451 1688 NOP  <||@
  Comment 1452 1690 NOP  <||@
  Comment 1453 1692 CMPBRANCH (x: r11|DWORD, y: [r9|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.2596988928056022 condition: < trueDestination: B71 -> B75 falseDestination: B71 -> B72 size: DWORD  <||@
  Comment 1472 block B38 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 1472 816 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1472 818 NOP  <||@
  Comment 1473 820 NOP  <||@
  Comment 1474 822 NOP  <||@
  Comment 1475 824 NOP  <||@
  Comment 1476 826 NOP  <||@
  Comment 1477 828 NOP  <||@
  Comment 1478 830 NOP  <||@
  Comment 1479 832 NOP  <||@
  Comment 1480 834 NOP  <||@
  Comment 1481 836 NOP  <||@
  Comment 1482 838 NOP  <||@
  Comment 1483 840 NOP  <||@
  Comment 1484 842 NOP  <||@
  Comment 1485 844 NOP  <||@
  Comment 1486 846 NOP  <||@
  Comment 1487 848 rsi|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1494 850 rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:31]  <||@
  Comment 1494 [rcx:0, rbp:0, rsi:0, stack:60, stack:64, stack:68, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 1494 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1501 852 r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 1511 854 rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0  <||@
  Comment 1515 856 AMD64HOTSPOTSTRATEGYSWITCH ~key: rdx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x80000003c;, resolved>}, meta{HotSpotType<Ljava/util/regex/Pattern$$Lambda.0x800000044;, resolved>}] keyTargets: [B38 -> B39, B38 -> B44] defaultTarget: B38 -> B52 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 1515 {DataSection[0x28]}  <||@
  Comment 1528 {DataSection[0x20]}  <||@
  Comment 1546 block B39 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 1546 858 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1546 860 NOP  <||@
  Comment 1547 862 NOP  <||@
  Comment 1548 864 NOP  <||@
  Comment 1549 866 NOP  <||@
  Comment 1550 868 CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD  <||@
  Comment 1563 block B41 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 1563 894 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1563 896 NOP  <||@
  Comment 1564 898 NOP  <||@
  Comment 1565 900 NOP  <||@
  Comment 1566 902 NOP  <||@
  Comment 1567 904 CMPBRANCH (x: rbx|DWORD, y: [rsi|DWORD[_] * 8 + 16]) trueDestinationProbability: 0.0 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: DWORD  <||@
  Comment 1580 block B43 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 1580 930 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1580 932 NOP  <||@
  Comment 1581 934 NOP  <||@
  Comment 1582 936 NOP  <||@
  Comment 1583 938 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1588 940 JUMP ~outgoingValues: [] destination: B43 -> B47  <||@
  Comment 1593 block B75 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 1593 1812 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1593 1814 NOP  <||@
  Comment 1594 1816 NOP  <||@
  Comment 1595 1818 NOP  <||@
  Comment 1596 1820 NOP  <||@
  Comment 1597 1822 NOP  <||@
  Comment 1598 1824 SAFEPOINT temp: rsi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:87, 44]  <||@
  Comment 1605 [stack:88, stack:96, stack:104]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4513) [bci: 87, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 1605 {infopoint: SAFEPOINT}  <||@
  Comment 1605 POLL_FAR  <||@
  Comment 1607 1826 r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1612 1828 r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1620 1830 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1625 1832 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1630 1834 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1635 1836 JUMP ~outgoingValues: [] destination: B75 -> B4  <||@
  Comment 1640 block B44 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 1640 942 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1640 944 r13|DWORD[_] = MOVE input: stack:100|DWORD[_] moveKind: DWORD  <||@
  Comment 1645 946 rdx|DWORD[_] = MOVE input: stack:96|DWORD[_] moveKind: DWORD  <||@
  Comment 1649 948 r10|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD  <||@
  Comment 1654 950 NOP  <||@
  Comment 1655 952 NOP  <||@
  Comment 1656 954 NOP  <||@
  Comment 1657 956 NOP  <||@
  Comment 1658 958 NOP  <||@
  Comment 1659 960 NOP  <||@
  Comment 1660 962 NOP  <||@
  Comment 1661 964 NOP  <||@
  Comment 1662 966 NOP  <||@
  Comment 1663 968 NOP  <||@
  Comment 1664 970 NOP  <||@
  Comment 1665 972 NOP  <||@
  Comment 1666 974 NOP  <||@
  Comment 1667 976 NOP  <||@
  Comment 1668 978 NOP  <||@
  Comment 1669 980 NOP  <||@
  Comment 1670 982 NOP  <||@
  Comment 1671 984 NOP  <||@
  Comment 1672 986 NOP  <||@
  Comment 1673 988 NOP  <||@
  Comment 1674 990 NOP  <||@
  Comment 1675 992 NOP  <||@
  Comment 1676 994 NOP  <||@
  Comment 1677 996 NOP  <||@
  Comment 1678 998 NOP  <||@
  Comment 1679 1000 NOP  <||@
  Comment 1680 1002 NOP  <||@
  Comment 1681 1004 NOP  <||@
  Comment 1682 1006 NOP  <||@
  Comment 1683 1008 NOP  <||@
  Comment 1684 1010 NOP  <||@
  Comment 1685 1012 NOP  <||@
  Comment 1686 1014 NOP  <||@
  Comment 1687 1016 r11|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1695 1018 NULLCHECK address: [r11|DWORD[_] * 8] state [bci:31]  <||@
  Comment 1695 [rcx:0, rdx:0, rbp:0, rsi:0, r10:0, r11:0, r13:0, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 1695 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1703 1020 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1710 1022 r8|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1718 1024 r9|DWORD[_] = MOV input: [rbp|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1726 1026 rcx|DWORD[_] = MOV input: [r13|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1734 1028 rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1741 1030 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1749 1032 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3  <||@
  Comment 1753 1034 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3  <||@
  Comment 1757 1036 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3  <||@
  Comment 1761 1038 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3  <||@
  Comment 1765 1040 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3  <||@
  Comment 1769 1042 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3  <||@
  Comment 1773 1044 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3  <||@
  Comment 1777 1046 stack:112|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1782 1048 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1785 1050 stack:120|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1790 1052 rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1792 1054 stack:40|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1796 1056 stack:128|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1801 1058 stack:136|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1806 1060 stack:144|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1811 1062 stack:152|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1816 1064 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern$CharPredicate.is(int)> invokeKind: Interface config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44]  <||@
  Comment 1817 INVOKEINTERFACE  <||@
  Comment 1827 {HotSpotMethod<Pattern$CharPredicate.is(int)>}  <||@
  Comment 1832 [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                   |2              
     locals:  |-  |stack:112|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                   |2              
     locals:  |-  |stack:152|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                   |2              
     locals:  |-  |stack:144|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                   |2              
     locals:  |-  |stack:136|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                   |2              
     locals:  |-  |stack:120|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1                   |2              
     locals:  |-  |stack:128|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                 
     locals:  |stack:88|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.] 
  at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 1840 1066 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD  <||@
  Comment 1848 block B46 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 1848 1110 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1848 1112 NOP  <||@
  Comment 1849 1114 NOP  <||@
  Comment 1850 1116 NOP  <||@
  Comment 1851 1118 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1856 1120 JUMP ~outgoingValues: [] destination: B46 -> B47  <||@
  Comment 1861 block B49 null  <||@
  Comment 1861 1160 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1861 1162 r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD  <||@
  Comment 1866 1164 NOP  <||@
  Comment 1867 1166 NOP  <||@
  Comment 1868 1168 NOP  <||@
  Comment 1869 1170 NOP  <||@
  Comment 1870 1172 NOP  <||@
  Comment 1871 1174 NOP  <||@
  Comment 1872 1176 NOP  <||@
  Comment 1873 1178 NOP  <||@
  Comment 1874 1180 NOP  <||@
  Comment 1875 1182 NOP  <||@
  Comment 1876 1184 NOP  <||@
  Comment 1877 1186 NOP  <||@
  Comment 1878 1188 NOP  <||@
  Comment 1879 1190 NOP  <||@
  Comment 1880 1192 NOP  <||@
  Comment 1881 1194 NOP  <||@
  Comment 1882 1196 NOP  <||@
  Comment 1883 1198 NOP  <||@
  Comment 1884 1200 NOP  <||@
  Comment 1885 1202 NOP  <||@
  Comment 1886 1204 NOP  <||@
  Comment 1887 1206 NOP  <||@
  Comment 1888 1208 NOP  <||@
  Comment 1889 1210 rsi|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1897 1212 rdx|DWORD = MOV input: [rsi|DWORD[_] * 8 + 8] size: DWORD state [bci:24, 44]  <||@
  Comment 1897 [rsi:0, stack:72, stack:88, stack:96, stack:104]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3                 
     locals:  |stack:88|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.] 
     stack:   |rcx|DWORD          |                   |                |                  
  at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 1897 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1904 1214 rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 1914 1216 rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 140154094223360 shift: 0  <||@
  Comment 1918 1218 rbx|QWORD = MOV input: [rdx|QWORD + 496] size: QWORD  <||@
  Comment 1925 1220 rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD  <||@
  Comment 1929 1222 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5391efe8 encoding: base: 0 shift: 3  <||@
  Comment 1933 1224 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1938 1226 rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1942 1228 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1947 1230 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:36, 44]  <||@
  Comment 1947 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 1947 INLINE_INVOKE  <||@
  Comment 1949 [stack:88, stack:96, stack:104]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 1957 1232 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: DWORD  <||@
  Comment 1965 block B51 null  <||@
  Comment 1965 1260 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1965 1262 NOP  <||@
  Comment 1966 1264 NOP  <||@
  Comment 1967 1266 NOP  <||@
  Comment 1968 1268 JUMP ~outgoingValues: [] destination: B51 -> B76  <||@
  Comment 1968 block B76 null  <||@
  Comment 1968 1838 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1968 1840 NOP  <||@
  Comment 1969 1842 NOP  <||@
  Comment 1970 1844 NOP  <||@
  Comment 1971 1846 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1976 1848 JUMP ~outgoingValues: [] destination: B76 -> B77  <||@
  Comment 1976 block B77 null  <||@
  Comment 1976 1850 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1976 1852 NOP  <||@
  Comment 1977 1854 NOP  <||@
  Comment 1978 1856 NOP  <||@
  Comment 1979 1858 NOP  <||@
  Comment 1980 1860 NOP  <||@
  Comment 1981 1862 rax|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD  <||@
  Comment 1984 1864 CMPCONSTBRANCH x: [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B77 -> B79 falseDestination: B77 -> B80 y: 2 size: DWORD inlinedY: null state [bci:50]  <||@
  Comment 1984 [rax:0, rdx:0]at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50, duringCall: false, rethrow: false]
              |0  |1             |2               |3  |4 
     locals:  |-  |rdx|QWORD[.]  |stack:32|DWORD  |-  |-   <||@
  Comment 1984 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1998 block B80 null  <||@
  Comment 1998 1916 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1998 1918 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2006 1920 NOP  <||@
  Comment 2007 1922 NOP  <||@
  Comment 2008 1924 NOP  <||@
  Comment 2009 1926 NOP  <||@
  Comment 2010 1928 NOP  <||@
  Comment 2011 1930 NOP  <||@
  Comment 2012 1932 NOP  <||@
  Comment 2013 1934 NOP  <||@
  Comment 2014 1936 NOP  <||@
  Comment 2015 1938 NOP  <||@
  Comment 2016 1940 NOP  <||@
  Comment 2017 1942 NOP  <||@
  Comment 2018 1944 MOV (x: [rdx|QWORD[.] + 28], y: r11|DWORD) size: DWORD  <||@
  Comment 2022 1946 MOV (x: [rax|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 2030 1948 r10|DWORD = MOV input: [rdx|QWORD[.] + 32] size: DWORD  <||@
  Comment 2034 1950 MOV (x: [rax|DWORD[_] * 8 + 20], y: r10|DWORD) size: DWORD  <||@
  Comment 2042 1952 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2047 1954 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 2062 POLL_RETURN_FAR  <||@
  Comment 2076 block B74 null  <||@
  Comment 2076 1798 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2076 1800 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2084 1802 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2089 1804 NOP  <||@
  Comment 2090 1806 NOP  <||@
  Comment 2091 1808 NOP  <||@
  Comment 2092 1810 JUMP ~outgoingValues: [] destination: B74 -> B76  <||@
  Comment 2094 block B78 null  <||@
  Comment 2094 1866 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2094 1868 NOP  <||@
  Comment 2095 1870 NOP  <||@
  Comment 2096 1872 NOP  <||@
  Comment 2097 1874 NOP  <||@
  Comment 2098 1876 NOP  <||@
  Comment 2099 1878 NOP  <||@
  Comment 2100 1880 NOP  <||@
  Comment 2101 1882 NOP  <||@
  Comment 2102 1884 NOP  <||@
  Comment 2103 1886 MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE  <||@
  Comment 2107 1888 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2112 1890 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 2127 POLL_RETURN_FAR  <||@
  Comment 2141 block B1 null  <||@
  Comment 2141 36 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2141 38 NOP  <||@
  Comment 2142 40 NOP  <||@
  Comment 2143 42 NOP  <||@
  Comment 2144 44 NOP  <||@
  Comment 2145 46 NOP  <||@
  Comment 2146 48 NOP  <||@
  Comment 2147 50 NOP  <||@
  Comment 2148 52 NOP  <||@
  Comment 2149 54 NOP  <||@
  Comment 2150 56 MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE  <||@
  Comment 2154 58 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2159 60 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 2174 POLL_RETURN_FAR  <||@
  Comment 2188 block B66 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 2188 1590 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2188 1592 rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 2192 1594 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2200 1596 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2205 1598 r8|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 2210 1600 NOP  <||@
  Comment 2211 1602 NOP  <||@
  Comment 2212 1604 NOP  <||@
  Comment 2213 1608 stack:48|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 2218 1610 JUMP ~outgoingValues: [] destination: B66 -> B67  <||@
  Comment 2223 block B69 loop 0 depth 1 header:24|LoopBegin  <||@
  Comment 2223 1634 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2223 1636 r8|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 2228 1638 r10|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD  <||@
  Comment 2233 1640 rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 2237 1642 r9|DWORD[_] = MOVE input: stack:76|DWORD[_] moveKind: DWORD  <||@
  Comment 2242 1644 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2250 1646 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2255 1648 NOP  <||@
  Comment 2256 1650 NOP  <||@
  Comment 2257 1652 NOP  <||@
  Comment 2258 1654 NOP  <||@
  Comment 2259 1656 MOVB x: [rdx|QWORD[.] + 48] y: 1 size: BYTE  <||@
  Comment 2263 1662 JUMP ~outgoingValues: [] destination: B69 -> B70  <||@
  Comment 2268 block B59 null  <||@
  Comment 2268 1414 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2268 1416 NOP  <||@
  Comment 2269 1418 NOP  <||@
  Comment 2270 1420 NOP  <||@
  Comment 2271 1422 r8|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 2278 1424 r10|DWORD = MOVE input: int[-187411|0xfffffffffffd23ed]  <||@
  Comment 2284 1432 JUMP ~outgoingValues: [] destination: B59 -> B82  <||@
  Comment 2284 block B82 null  <||@
  Comment 2284 1976 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2284 1968 r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 2292 1970 rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2297 1972 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2302 1978 NOP  <||@
  Comment 2303 1980 NOP  <||@
  Comment 2304 1982 NOP  <||@
  Comment 2305 1984 NOP  <||@
  Comment 2306 1986 NOP  <||@
  Comment 2307 1988 NOP  <||@
  Comment 2308 1990 NOP  <||@
  Comment 2309 1992 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2316 1994 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 2323 1996 DEOPT info [bci:31]  <||@
  Comment 2323 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2328 [rcx:0, rdx:0, rsi:0]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3             |4        
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |rcx|QWORD[.]  |r9|DWORD   <||@
  Comment 2336 block B24 null  <||@
  Comment 2336 544 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2336 546 NOP  <||@
  Comment 2337 548 NOP  <||@
  Comment 2338 550 NOP  <||@
  Comment 2339 552 r8|QWORD = MOVE input: long[9620|0x2594]  <||@
  Comment 2346 554 r10|DWORD = MOVE input: int[-192531|0xfffffffffffd0fed]  <||@
  Comment 2352 562 JUMP ~outgoingValues: [] destination: B24 -> B82  <||@
  Comment 2354 block B52 null  <||@
  Comment 2354 1270 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2354 1272 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2362 1274 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2367 1276 NOP  <||@
  Comment 2368 1278 NOP  <||@
  Comment 2369 1280 NOP  <||@
  Comment 2370 1282 r8|QWORD = MOVE input: long[8980|0x2314]  <||@
  Comment 2377 1284 r10|DWORD = MOVE input: int[-57651|0xffffffffffff1ecd]  <||@
  Comment 2383 1292 JUMP ~outgoingValues: [] destination: B52 -> B82  <||@
  Comment 2385 block B56 null  <||@
  Comment 2385 1354 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2385 1356 NOP  <||@
  Comment 2386 1358 NOP  <||@
  Comment 2387 1360 NOP  <||@
  Comment 2388 1362 r8|QWORD = MOVE input: long[8980|0x2314]  <||@
  Comment 2395 1364 r10|DWORD = MOVE input: int[-38195|0xffffffffffff6acd]  <||@
  Comment 2401 1372 JUMP ~outgoingValues: [] destination: B56 -> B82  <||@
  Comment 2403 block B50 null  <||@
  Comment 2403 1234 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2403 1236 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2411 1238 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2416 1240 NOP  <||@
  Comment 2417 1242 NOP  <||@
  Comment 2418 1244 NOP  <||@
  Comment 2419 1246 NOP  <||@
  Comment 2420 1248 NOP  <||@
  Comment 2421 1250 NOP  <||@
  Comment 2422 1252 NOP  <||@
  Comment 2423 1254 MOV x: [r15|QWORD + 1156] y: -200723 size: DWORD  <||@
  Comment 2434 1256 MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD  <||@
  Comment 2445 1258 DEOPT info [bci:39, 44]  <||@
  Comment 2445 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2450 [rdx:0, stack:96, stack:104]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4134) [bci: 39, duringCall: false, rethrow: false]
              |0           |1  |2  |3 
     locals:  |-           |-  |-  |- 
     stack:   |int[0|0x0]  |   |   |  
  at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1             |2          |3                  |4              
     locals:  |stack:56|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 2458 block B18 null  <||@
  Comment 2458 424 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2458 426 NOP  <||@
  Comment 2459 428 NOP  <||@
  Comment 2460 430 NOP  <||@
  Comment 2461 432 r8|QWORD = MOVE input: long[9620|0x2594]  <||@
  Comment 2468 434 r10|DWORD = MOVE input: int[-190483|0xfffffffffffd17ed]  <||@
  Comment 2474 442 JUMP ~outgoingValues: [] destination: B18 -> B82  <||@
  Comment 2479 block B79 null  <||@
  Comment 2479 1892 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2479 1894 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2487 1896 NOP  <||@
  Comment 2488 1898 NOP  <||@
  Comment 2489 1900 NOP  <||@
  Comment 2490 1902 NOP  <||@
  Comment 2491 1904 NOP  <||@
  Comment 2492 1906 NOP  <||@
  Comment 2493 1908 NOP  <||@
  Comment 2494 1910 MOV x: [r15|QWORD + 1156] y: -147483 size: DWORD  <||@
  Comment 2505 1912 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2516 1914 DEOPT info [bci:50]  <||@
  Comment 2516 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2521 [rdx:0]at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50, duringCall: false, rethrow: false]
              |0  |1             |2          |3  |4 
     locals:  |-  |rdx|QWORD[.]  |r11|DWORD  |-  |-   <||@
  Comment 2529 block B53 null  <||@
  Comment 2529 1294 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2529 1296 NOP  <||@
  Comment 2530 1298 NOP  <||@
  Comment 2531 1300 NOP  <||@
  Comment 2532 1302 r8|QWORD = MOVE input: long[8980|0x2314]  <||@
  Comment 2539 1304 r10|DWORD = MOVE input: int[-52787|0xffffffffffff31cd]  <||@
  Comment 2545 1312 JUMP ~outgoingValues: [] destination: B53 -> B82  <||@
  Comment 2550 block B81 null  <||@
  Comment 2550 1956 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2550 1958 NOP  <||@
  Comment 2551 1960 NOP  <||@
  Comment 2552 1962 NOP  <||@
  Comment 2553 1964 r8|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 2560 1966 r10|DWORD = MOVE input: int[-18483|0xffffffffffffb7cd]  <||@
  Comment 2566 1974 JUMP ~outgoingValues: [] destination: B81 -> B82  <||@
  Comment 2571 block B28 null  <||@
  Comment 2571 632 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2571 634 NOP  <||@
  Comment 2572 636 NOP  <||@
  Comment 2573 638 NOP  <||@
  Comment 2574 640 r8|QWORD = MOVE input: long[9620|0x2594]  <||@
  Comment 2581 642 r10|DWORD = MOVE input: int[-193555|0xfffffffffffd0bed]  <||@
  Comment 2587 650 JUMP ~outgoingValues: [] destination: B28 -> B82  <||@
  Comment 2592 block B30 null  <||@
  Comment 2592 664 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2592 666 NOP  <||@
  Comment 2593 668 NOP  <||@
  Comment 2594 670 NOP  <||@
  Comment 2595 672 r8|QWORD = MOVE input: long[9620|0x2594]  <||@
  Comment 2602 674 r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed]  <||@
  Comment 2608 682 JUMP ~outgoingValues: [] destination: B30 -> B82  <||@
  Comment 2613 block B13 null  <||@
  Comment 2613 318 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2613 320 NOP  <||@
  Comment 2614 322 NOP  <||@
  Comment 2615 324 NOP  <||@
  Comment 2616 326 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2623 328 r10|DWORD = MOVE input: int[-103707|0xfffffffffffe6ae5]  <||@
  Comment 2629 336 JUMP ~outgoingValues: [] destination: B13 -> B82  <||@
  Comment 2634 block B22 null  <||@
  Comment 2634 512 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2634 514 NOP  <||@
  Comment 2635 516 NOP  <||@
  Comment 2636 518 NOP  <||@
  Comment 2637 520 r8|QWORD = MOVE input: long[9620|0x2594]  <||@
  Comment 2644 522 r10|DWORD = MOVE input: int[-191507|0xfffffffffffd13ed]  <||@
  Comment 2650 530 JUMP ~outgoingValues: [] destination: B22 -> B82  <||@
  Comment 2655 block B16 null  <||@
  Comment 2655 392 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2655 394 NOP  <||@
  Comment 2656 396 NOP  <||@
  Comment 2657 398 NOP  <||@
  Comment 2658 400 r8|QWORD = MOVE input: long[9620|0x2594]  <||@
  Comment 2665 402 r10|DWORD = MOVE input: int[-189459|0xfffffffffffd1bed]  <||@
  Comment 2671 410 JUMP ~outgoingValues: [] destination: B16 -> B82  <||@
  Comment 2676 block B55 null  <||@
  Comment 2676 1334 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2676 1336 NOP  <||@
  Comment 2677 1338 NOP  <||@
  Comment 2678 1340 NOP  <||@
  Comment 2679 1342 r8|QWORD = MOVE input: long[8980|0x2314]  <||@
  Comment 2686 1344 r10|DWORD = MOVE input: int[-43059|0xffffffffffff57cd]  <||@
  Comment 2692 1352 JUMP ~outgoingValues: [] destination: B55 -> B82  <||@
  Comment 2697 block B40 null  <||@
  Comment 2697 870 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2697 872 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2705 874 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2710 876 NOP  <||@
  Comment 2711 878 NOP  <||@
  Comment 2712 880 NOP  <||@
  Comment 2713 882 r8|QWORD = MOVE input: long[9620|0x2594]  <||@
  Comment 2720 884 r10|DWORD = MOVE input: int[-197651|0xfffffffffffcfbed]  <||@
  Comment 2726 892 JUMP ~outgoingValues: [] destination: B40 -> B82  <||@
  Comment 2731 block B45 null  <||@
  Comment 2731 1068 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2731 1070 rsi|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2736 1072 r8|QWORD[.] = MOVE input: stack:152|QWORD[.] moveKind: QWORD  <||@
  Comment 2741 1074 r9|QWORD[.] = MOVE input: stack:144|QWORD[.] moveKind: QWORD  <||@
  Comment 2746 1076 rcx|QWORD[.] = MOVE input: stack:136|QWORD[.] moveKind: QWORD  <||@
  Comment 2751 1078 rdi|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2756 1080 r10|QWORD[.] = MOVE input: stack:128|QWORD[.] moveKind: QWORD  <||@
  Comment 2761 1082 rbx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 2765 1084 rax|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2770 1086 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2778 1088 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2783 1090 NOP  <||@
  Comment 2784 1092 NOP  <||@
  Comment 2785 1094 NOP  <||@
  Comment 2786 1096 NOP  <||@
  Comment 2787 1098 NOP  <||@
  Comment 2788 1100 NOP  <||@
  Comment 2789 1102 NOP  <||@
  Comment 2790 1104 MOV x: [r15|QWORD + 1156] y: -199699 size: DWORD  <||@
  Comment 2801 1106 MOV x: [r15|QWORD + 1168] y: 8340 size: QWORD  <||@
  Comment 2812 1108 DEOPT info [bci:7, 9, 2, 9, 2, 9, 2, 9, 2, 9, 2, 9, 19, 44]  <||@
  Comment 2812 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2817 [rax:0, rcx:0, rdx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, stack:96, stack:104]at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 7, duringCall: false, rethrow: false]
              |0           |1             |2         
     locals:  |-           |rsi|QWORD[.]  |rbx|DWORD 
     stack:   |int[0|0x0]  |              |          
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1            |2         
     locals:  |-  |r8|QWORD[.]  |rbx|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1            |2         
     locals:  |-  |r9|QWORD[.]  |rbx|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1             |2         
     locals:  |-  |rcx|QWORD[.]  |rbx|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1             |2         
     locals:  |-  |rdi|QWORD[.]  |rbx|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern.lambda$union$3(Pattern.java:5802) [bci: 2, duringCall: true, rethrow: false]
              |0  |1             |2         
     locals:  |-  |r10|QWORD[.]  |rbx|DWORD 
  at java.util.regex.Pattern$$Lambda/0x800000044.is(int) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 19, duringCall: true, rethrow: false]
              |0             |1             |2          |3                 
     locals:  |rax|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |stack:64|QWORD[.] 
  at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1             |2          |3                  |4              
     locals:  |stack:56|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 2825 block B36 null  <||@
  Comment 2825 784 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2825 786 NOP  <||@
  Comment 2826 788 NOP  <||@
  Comment 2827 790 NOP  <||@
  Comment 2828 792 r8|QWORD = MOVE input: long[9620|0x2594]  <||@
  Comment 2835 794 r10|DWORD = MOVE input: int[-196627|0xfffffffffffcffed]  <||@
  Comment 2841 802 JUMP ~outgoingValues: [] destination: B36 -> B82  <||@
  Comment 2846 block B57 null  <||@
  Comment 2846 1374 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2846 1376 NOP  <||@
  Comment 2847 1378 NOP  <||@
  Comment 2848 1380 NOP  <||@
  Comment 2849 1382 r8|QWORD = MOVE input: long[7700|0x1e14]  <||@
  Comment 2856 1384 r10|DWORD = MOVE input: int[-33331|0xffffffffffff7dcd]  <||@
  Comment 2862 1392 JUMP ~outgoingValues: [] destination: B57 -> B82  <||@
  Comment 2867 block B54 null  <||@
  Comment 2867 1314 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2867 1316 NOP  <||@
  Comment 2868 1318 NOP  <||@
  Comment 2869 1320 NOP  <||@
  Comment 2870 1322 r8|QWORD = MOVE input: long[8980|0x2314]  <||@
  Comment 2877 1324 r10|DWORD = MOVE input: int[-47923|0xffffffffffff44cd]  <||@
  Comment 2883 1332 JUMP ~outgoingValues: [] destination: B54 -> B82  <||@
  Comment 2888 block B42 null  <||@
  Comment 2888 906 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2888 908 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2896 910 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2901 912 NOP  <||@
  Comment 2902 914 NOP  <||@
  Comment 2903 916 NOP  <||@
  Comment 2904 918 r8|QWORD = MOVE input: long[9620|0x2594]  <||@
  Comment 2911 920 r10|DWORD = MOVE input: int[-198675|0xfffffffffffcf7ed]  <||@
  Comment 2917 928 JUMP ~outgoingValues: [] destination: B42 -> B82  <||@
  Comment 2922 block B58 null  <||@
  Comment 2922 1394 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2922 1396 NOP  <||@
  Comment 2923 1398 NOP  <||@
  Comment 2924 1400 NOP  <||@
  Comment 2925 1402 r8|QWORD = MOVE input: long[2580|0xa14]  <||@
  Comment 2932 1404 r10|DWORD = MOVE input: int[-188435|0xfffffffffffd1fed]  <||@
  Comment 2938 1412 JUMP ~outgoingValues: [] destination: B58 -> B82  <||@
  Comment 2943 block B34 null  <||@
  Comment 2943 752 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2943 754 NOP  <||@
  Comment 2944 756 NOP  <||@
  Comment 2945 758 NOP  <||@
  Comment 2946 760 r8|QWORD = MOVE input: long[9620|0x2594]  <||@
  Comment 2953 762 r10|DWORD = MOVE input: int[-195603|0xfffffffffffd03ed]  <||@
  Comment 2959 770 JUMP ~outgoingValues: [] destination: B34 -> B82  <||@
  Comment 2964 block B60 null  <||@
  Comment 2964 1434 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2964 1436 NOP  <||@
  Comment 2965 1438 NOP  <||@
  Comment 2966 1440 NOP  <||@
  Comment 2967 1442 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2974 1444 r10|DWORD = MOVE input: int[-97820|0xfffffffffffe81e4]  <||@
  Comment 2980 1452 JUMP ~outgoingValues: [] destination: B60 -> B82  <||@
  Comment 2985 block B83 null  <||@
  Comment 2985 1998 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2985 2000 NOP  <||@
  Comment 2986 2002 NOP  <||@
  Comment 2987 2004 NOP  <||@
  Comment 2988 2006 NOP  <||@
  Comment 2989 2008 NOP  <||@
  Comment 2990 2010 NOP  <||@
  Comment 2991 2012 NOP  <||@
  Comment 2992 2014 MOV x: [r15|QWORD + 1156] y: -94515 size: DWORD  <||@
  Comment 3003 2016 MOV x: [r15|QWORD + 1168] y: 12952 size: QWORD  <||@
  Comment 3014 2018 DEOPT info [bci:0]  <||@
  Comment 3014 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3019 [rdx:0, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2          |3                  |4 
     locals:  |stack:56|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |stack:64|QWORD[.]  |-   <||@
  Comment 3035 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 3060 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 3080 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 3100 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 3128 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3133 [rdx:0, rsi:0, r8:0]at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 3163 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3168 [rdx:0, rsi:0, r8:0, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 3198 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3203 [rdx:0, rsi:0, r8:0, r9:0, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 3233 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3238 [rcx:0, rdx:0, rsi:0, r8:0, r9:0, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 3268 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3273 [rcx:0, rdx:0, rbp:0, rsi:0, r8:0, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 3303 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3308 [rdx:0, rbp:0, rsi:0, r8:0, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 3338 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3343 [rcx:0, rdx:0, rbp:0, rsi:0, r8:0, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 3373 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3378 [rcx:0, rdx:0, rsi:0, r8:0, r13:0, stack:68, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 3408 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3413 [rdx:0, rbp:0, rsi:0, r8:0, r13:0, stack:64, stack:68, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 3443 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3448 [rcx:0, rdx:0, rbp:0, rsi:0, r8:0, stack:60, stack:64, stack:68, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 3478 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3483 [rdx:0, rsi:0, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$BmpCharPropertyGreedy.match(Pattern.java:4508) [bci: 54, duringCall: false, rethrow: false]
              |0                  |1             |2          |3                  |4               |5 
     locals:  |stack:88|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |stack:64|QWORD[.]  |stack:48|DWORD  |- 
  at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |rdx|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 3513 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3518 [rcx:0, rbp:0, rsi:0, stack:60, stack:64, stack:68, stack:72, stack:84, stack:88, stack:96, stack:104]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 3548 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3553 [rsi:0, stack:72, stack:88, stack:96, stack:104]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:4133) [bci: 24, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3                 
     locals:  |stack:88|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.] 
     stack:   |rcx|DWORD          |                   |                |                  
  at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD   <||@
  Comment 3583 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3588 [rax:0, rdx:0]at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50, duringCall: false, rethrow: false]
              |0  |1             |2               |3  |4 
     locals:  |-  |rdx|QWORD[.]  |stack:32|DWORD  |-  |-   <||@
  Comment 3596 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 3596 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 3602 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 3602 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
