begin_compilation
  name " HotSpotCompilation-5038[java.lang.Math.round(float)]"
  method "HotSpotCompilation-5038[java.lang.Math.round(float)]"
  date 1724269749427
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v16 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.round(Math.java:779) [bci: 13]
rawvalue: 149
stableDimension: 0
stamp: i32 [149]
stampKind: i32
value: int[149|0x95]
=== Inputs ===
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid f1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: f32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 i3 i29 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Float.floatToRawIntBits(float) [bci: -1]
at java.lang.Math.round(Math.java:776) [bci: 1]
stamp: i32
=== Inputs ===
value: f1 
=== Succesors ===
=== Usages ===
i5 i18 v21 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@jdk.graal.compiler.nodes.calc.ReinterpretNode>@ value: f1  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.round(Math.java:777) [bci: 6]
rawvalue: 2139095040
stableDimension: 0
stamp: i32 [2139095040]
stampKind: i32
value: int[2139095040|0x7f800000]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(Math.java:777) [bci: 8]
stamp: i32 [0 - 2139095040] bits:0xxxxxxxx00000000000000000000000
=== Inputs ===
x: i3 
y: i4 
=== Succesors ===
=== Usages ===
i7 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i3 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.round(Math.java:777) [bci: 9]
rawvalue: 23
stableDimension: 0
stamp: i32 [23]
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i7 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(Math.java:777) [bci: 11]
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
x: i5 
y: i6 
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i5 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(Math.java:779) [bci: 17]
stamp: i32 [-106 - 149]
=== Inputs ===
x: i8 
y: i7 
=== Succesors ===
=== Usages ===
i24 v13 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i8 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.round(Math.java:781) [bci: 20]
rawvalue: -32
stableDimension: 0
stamp: i32 [-32]
stampKind: i32
value: int[-32|0xffffffffffffffe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(Math.java:781) [bci: 23]
stamp: void
=== Inputs ===
x: i9 
y: i10 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i9 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(Math.java:781) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 0.9999812855612068
stamp: void
=== Inputs ===
condition: v13 
=== Succesors ===
trueSuccessor: v15 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v13 #trueSuccessor: v15 #falseSuccessor: v14  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Math.round(Math.java:783) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v34  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.round(Math.java:781) [bci: 23]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.round(Math.java:785) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i12 
=== Succesors ===
=== Usages ===
v34 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(Math.java:785) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v21 
=== Succesors ===
trueSuccessor: v32 
falseSuccessor: v33 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v21 #trueSuccessor: v32 #falseSuccessor: v33  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Math.round(Math.java:785) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v31  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: fload_0
code: ResolvedJavaMethodBytecode<Math.round(float)>
localsSize: 5
locksSize: 0
sourceFile: Math.java
sourceLine: 776
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: f1 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: f1  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.lang.Math.round(Math.java:785) [bci: 36]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0xec33a301]: UnreachedCode@6[HotSpotMethod<Math.round(float)>, 39]}
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Math.round(Math.java:794) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.round(Math.java:783) [bci: 27]
rawvalue: 8388607
stableDimension: 0
stamp: i32 [8388607]
stampKind: i32
value: int[8388607|0x7fffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(Math.java:783) [bci: 29]
stamp: i32 [0 - 8388607] bits:0...0xxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i3 
y: i17 
=== Succesors ===
=== Usages ===
i20 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i3 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.round(Math.java:783) [bci: 30]
rawvalue: 8388608
stableDimension: 0
stamp: i32 [8388608]
stampKind: i32
value: int[8388608|0x800000]
=== Inputs ===
=== Succesors ===
=== Usages ===
i20 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(Math.java:783) [bci: 32]
stamp: i32 [8388608 - 16777215] bits:000000001xxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i18 
y: i19 
=== Succesors ===
=== Usages ===
i24 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i18 y: i19  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(Math.java:794) [bci: 47]
stamp: i32 [0 - 16777215] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i20 
y: i9 
=== Succesors ===
=== Usages ===
i26 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i20 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.round(Math.java:794) [bci: 48]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i26 i27 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(Math.java:794) [bci: 49]
stamp: i32 [1 - 16777216] bits:0000000xxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i24 
y: i25 
=== Succesors ===
=== Usages ===
i27 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i24 y: i25  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(Math.java:794) [bci: 51]
stamp: i32 [0 - 8388608] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i26 
y: i25 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i26 y: i25  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(Math.java:794) [bci: 52]
stamp: void
=== Inputs ===
memoryMap: - 
result: i27 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i27  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4536144752541138944
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Math.round(Math.java:800) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(Math.java:800) [bci: 54]
op: F2I
stamp: i32
=== Inputs ===
value: f1 
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
- >@ <|@
instruction <@FloatConvert|@jdk.graal.compiler.nodes.calc.FloatConvertNode>@ value: f1  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(Math.java:800) [bci: 55]
stamp: void
=== Inputs ===
memoryMap: - 
result: i29 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i29  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [xmm0|SINGLE, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7ed0221c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|SINGLE = MOVE input: xmm0|SINGLE moveKind: SINGLE <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVD value: v0|SINGLE size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = AND x: v1|DWORD y: 2139095040 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SHR x: v2|DWORD y: 23 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: int[149|0x95] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SUB (x: v4|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.9999812855612068 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = AND x: v1|DWORD y: 8388607 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = OR x: v6|DWORD y: 8388608 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SHR value: v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4536144752541138944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = AMD64CONVERTFLOATTOINTEGER ~srcValue: v0|SINGLE tmpValue: v12|SINGLE canBeNaN: true canOverflow: true opcode: jdk.graal.compiler.core.amd64.AMD64ArithmeticLIRGenerator$$Lambda/0x00007f782c364f90@46b8258 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -7955 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.round(Math.java:776) [bci: 0]
locals: v0|SINGLE - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: fload_0       
     1: invokestatic  #18         // java.lang.Float.floatToRawIntBits:(float)int
     4: istore_1      
     5: iload_1       
     6: ldc           #76         // 2139095040
     8: iand          
     9: bipush        23
    11: ishr          
    12: istore_2      
    13: sipush        149
    16: iload_2       
    17: isub          
    18: istore_3      
    19: iload_3       
    20: bipush        -32
    22: iand          
    23: ifne          53
    26: iload_1       
    27: ldc           #77         // 8388607
    29: iand          
    30: ldc           #78         // 8388608
    32: ior           
    33: istore        4
    35: iload_1       
    36: ifge          44
    39: iload         4
    41: ineg          
    42: istore        4
    44: iload         4
    46: iload_3       
    47: ishr          
    48: iconst_1      
    49: iadd          
    50: iconst_1      
    51: ishr          
    52: ireturn       
    53: fload_0       
    54: f2i           
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v16 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[149|0x95] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.round(Math.java:779) [bci: 13]
rawvalue: 149
stableDimension: 0
stamp: i32 [149]
stampKind: i32
value: int[149|0x95]
=== Inputs ===
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid f1 <|@
result v0|SINGLE <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: f32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 i3 i29 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Float.floatToRawIntBits(float) [bci: -1]
at java.lang.Math.round(Math.java:776) [bci: 1]
stamp: i32
=== Inputs ===
value: f1 
=== Succesors ===
=== Usages ===
i5 i18 v21 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@jdk.graal.compiler.nodes.calc.ReinterpretNode>@ value: f1  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[2139095040|0x7f800000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.round(Math.java:777) [bci: 6]
rawvalue: 2139095040
stableDimension: 0
stamp: i32 [2139095040]
stampKind: i32
value: int[2139095040|0x7f800000]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(Math.java:777) [bci: 8]
stamp: i32 [0 - 2139095040] bits:0xxxxxxxx00000000000000000000000
=== Inputs ===
x: i3 
y: i4 
=== Succesors ===
=== Usages ===
i7 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i3 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.round(Math.java:777) [bci: 9]
rawvalue: 23
stableDimension: 0
stamp: i32 [23]
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i7 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(Math.java:777) [bci: 11]
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
x: i5 
y: i6 
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i5 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(Math.java:779) [bci: 17]
stamp: i32 [-106 - 149]
=== Inputs ===
x: i8 
y: i7 
=== Succesors ===
=== Usages ===
i24 v13 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i8 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[-32|0xffffffffffffffe0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.round(Math.java:781) [bci: 20]
rawvalue: -32
stableDimension: 0
stamp: i32 [-32]
stampKind: i32
value: int[-32|0xffffffffffffffe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(Math.java:781) [bci: 23]
stamp: void
=== Inputs ===
x: i9 
y: i10 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i9 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(Math.java:781) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 0.9999812855612068
stamp: void
=== Inputs ===
condition: v13 
=== Succesors ===
trueSuccessor: v15 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v13 #trueSuccessor: v15 #falseSuccessor: v14  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [xmm0|SINGLE, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7ed0221c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|SINGLE = MOVE input: xmm0|SINGLE moveKind: SINGLE <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVD value: v0|SINGLE size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = AND x: v1|DWORD y: 2139095040 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SHR x: v2|DWORD y: 23 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: int[149|0x95] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SUB (x: v4|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.9999812855612068 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Math.round(Math.java:783) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v34  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.round(Math.java:781) [bci: 23]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.round(Math.java:785) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i12 
=== Succesors ===
=== Usages ===
v34 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(Math.java:785) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v21 
=== Succesors ===
trueSuccessor: v32 
falseSuccessor: v33 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v21 #trueSuccessor: v32 #falseSuccessor: v33  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Math.round(Math.java:785) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v31  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: fload_0
code: ResolvedJavaMethodBytecode<Math.round(float)>
localsSize: 5
locksSize: 0
sourceFile: Math.java
sourceLine: 776
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: f1 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: f1  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.lang.Math.round(Math.java:785) [bci: 36]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0xec33a301]: UnreachedCode@6[HotSpotMethod<Math.round(float)>, 39]}
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -7955 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.round(Math.java:776) [bci: 0]
locals: v0|SINGLE - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Math.round(Math.java:794) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result int[8388607|0x7fffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.round(Math.java:783) [bci: 27]
rawvalue: 8388607
stableDimension: 0
stamp: i32 [8388607]
stampKind: i32
value: int[8388607|0x7fffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(Math.java:783) [bci: 29]
stamp: i32 [0 - 8388607] bits:0...0xxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i3 
y: i17 
=== Succesors ===
=== Usages ===
i20 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i3 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result int[8388608|0x800000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.round(Math.java:783) [bci: 30]
rawvalue: 8388608
stableDimension: 0
stamp: i32 [8388608]
stampKind: i32
value: int[8388608|0x800000]
=== Inputs ===
=== Succesors ===
=== Usages ===
i20 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(Math.java:783) [bci: 32]
stamp: i32 [8388608 - 16777215] bits:000000001xxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i18 
y: i19 
=== Succesors ===
=== Usages ===
i24 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i18 y: i19  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(Math.java:794) [bci: 47]
stamp: i32 [0 - 16777215] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i20 
y: i9 
=== Succesors ===
=== Usages ===
i26 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i20 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.round(Math.java:794) [bci: 48]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i26 i27 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(Math.java:794) [bci: 49]
stamp: i32 [1 - 16777216] bits:0000000xxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i24 
y: i25 
=== Succesors ===
=== Usages ===
i27 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i24 y: i25  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(Math.java:794) [bci: 51]
stamp: i32 [0 - 8388608] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i26 
y: i25 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i26 y: i25  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(Math.java:794) [bci: 52]
stamp: void
=== Inputs ===
memoryMap: - 
result: i27 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i27  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = AND x: v1|DWORD y: 8388607 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = OR x: v6|DWORD y: 8388608 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SHR value: v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4536144752541138944
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Math.round(Math.java:800) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(Math.java:800) [bci: 54]
op: F2I
stamp: i32
=== Inputs ===
value: f1 
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
- >@ <|@
instruction <@FloatConvert|@jdk.graal.compiler.nodes.calc.FloatConvertNode>@ value: f1  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(Math.java:800) [bci: 55]
stamp: void
=== Inputs ===
memoryMap: - 
result: i29 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i29  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = AMD64CONVERTFLOATTOINTEGER ~srcValue: v0|SINGLE tmpValue: v12|SINGLE canBeNaN: true canOverflow: true opcode: jdk.graal.compiler.core.amd64.AMD64ArithmeticLIRGenerator$$Lambda/0x00007f782c364f90@46b8258 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [xmm0|SINGLE, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7ed0221c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|SINGLE = MOVE input: xmm0|SINGLE moveKind: SINGLE <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVD value: v0|SINGLE size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = AND x: v1|DWORD y: 2139095040 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SHR x: v2|DWORD y: 23 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: int[149|0x95] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SUB (x: v4|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.9999812855612068 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = AND x: v1|DWORD y: 8388607 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = OR x: v6|DWORD y: 8388608 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SHR value: v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4536144752541138944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = AMD64CONVERTFLOATTOINTEGER ~srcValue: v0|SINGLE tmpValue: v12|SINGLE canBeNaN: true canOverflow: true opcode: jdk.graal.compiler.core.amd64.AMD64ArithmeticLIRGenerator$$Lambda/0x00007f782c364f90@46b8258 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -7955 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.round(Math.java:776) [bci: 0]
locals: v0|SINGLE - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: fload_0       
     1: invokestatic  #18         // java.lang.Float.floatToRawIntBits:(float)int
     4: istore_1      
     5: iload_1       
     6: ldc           #76         // 2139095040
     8: iand          
     9: bipush        23
    11: ishr          
    12: istore_2      
    13: sipush        149
    16: iload_2       
    17: isub          
    18: istore_3      
    19: iload_3       
    20: bipush        -32
    22: iand          
    23: ifne          53
    26: iload_1       
    27: ldc           #77         // 8388607
    29: iand          
    30: ldc           #78         // 8388608
    32: ior           
    33: istore        4
    35: iload_1       
    36: ifge          44
    39: iload         4
    41: ineg          
    42: istore        4
    44: iload         4
    46: iload_3       
    47: ishr          
    48: iconst_1      
    49: iadd          
    50: iconst_1      
    51: ishr          
    52: ireturn       
    53: fload_0       
    54: f2i           
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [xmm0|SINGLE, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7ed0221c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|SINGLE = MOVE input: xmm0|SINGLE moveKind: SINGLE <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVD value: v0|SINGLE size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = AND x: v1|DWORD y: 2139095040 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SHR x: v2|DWORD y: 23 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: int[149|0x95] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SUB (x: v4|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.9999812855612068 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = AND x: v1|DWORD y: 8388607 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = OR x: v6|DWORD y: 8388608 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SHR value: v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4536144752541138944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = AMD64CONVERTFLOATTOINTEGER ~srcValue: v0|SINGLE tmpValue: v12|SINGLE canBeNaN: true canOverflow: true opcode: jdk.graal.compiler.core.amd64.AMD64ArithmeticLIRGenerator$$Lambda/0x00007f782c364f90@46b8258 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -7955 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.round(Math.java:776) [bci: 0]
locals: v0|SINGLE - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: fload_0       
     1: invokestatic  #18         // java.lang.Float.floatToRawIntBits:(float)int
     4: istore_1      
     5: iload_1       
     6: ldc           #76         // 2139095040
     8: iand          
     9: bipush        23
    11: ishr          
    12: istore_2      
    13: sipush        149
    16: iload_2       
    17: isub          
    18: istore_3      
    19: iload_3       
    20: bipush        -32
    22: iand          
    23: ifne          53
    26: iload_1       
    27: ldc           #77         // 8388607
    29: iand          
    30: ldc           #78         // 8388608
    32: ior           
    33: istore        4
    35: iload_1       
    36: ifge          44
    39: iload         4
    41: ineg          
    42: istore        4
    44: iload         4
    46: iload_3       
    47: ishr          
    48: iconst_1      
    49: iadd          
    50: iconst_1      
    51: ishr          
    52: ireturn       
    53: fload_0       
    54: f2i           
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [xmm0|SINGLE, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7ed0221c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|SINGLE = MOVE input: xmm0|SINGLE moveKind: SINGLE <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVD value: v0|SINGLE size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = AND x: v1|DWORD y: 2139095040 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SHR x: v2|DWORD y: 23 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: int[149|0x95] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SUB (x: v4|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.9999812855612068 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = AND x: v1|DWORD y: 8388607 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = OR x: v6|DWORD y: 8388608 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SHR value: v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4536144752541138944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = AMD64CONVERTFLOATTOINTEGER ~srcValue: v0|SINGLE tmpValue: v12|SINGLE canBeNaN: true canOverflow: true opcode: jdk.graal.compiler.core.amd64.AMD64ArithmeticLIRGenerator$$Lambda/0x00007f782c364f90@46b8258 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -7955 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.round(Math.java:776) [bci: 0]
locals: v0|SINGLE - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: fload_0       
     1: invokestatic  #18         // java.lang.Float.floatToRawIntBits:(float)int
     4: istore_1      
     5: iload_1       
     6: ldc           #76         // 2139095040
     8: iand          
     9: bipush        23
    11: ishr          
    12: istore_2      
    13: sipush        149
    16: iload_2       
    17: isub          
    18: istore_3      
    19: iload_3       
    20: bipush        -32
    22: iand          
    23: ifne          53
    26: iload_1       
    27: ldc           #77         // 8388607
    29: iand          
    30: ldc           #78         // 8388608
    32: ior           
    33: istore        4
    35: iload_1       
    36: ifge          44
    39: iload         4
    41: ineg          
    42: istore        4
    44: iload         4
    46: iload_3       
    47: ishr          
    48: iconst_1      
    49: iadd          
    50: iconst_1      
    51: ishr          
    52: ireturn       
    53: fload_0       
    54: f2i           
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [xmm0|SINGLE, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7ed0221c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|SINGLE = MOVE input: xmm0|SINGLE moveKind: SINGLE <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVD value: v0|SINGLE size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = AND x: v1|DWORD y: 2139095040 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SHR x: v2|DWORD y: 23 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: int[149|0x95] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SUB (x: v4|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.9999812855612068 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = AND x: v1|DWORD y: 8388607 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = OR x: v6|DWORD y: 8388608 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SHR value: v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4536144752541138944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = AMD64CONVERTFLOATTOINTEGER ~srcValue: v0|SINGLE tmpValue: v12|SINGLE canBeNaN: true canOverflow: true opcode: jdk.graal.compiler.core.amd64.AMD64ArithmeticLIRGenerator$$Lambda/0x00007f782c364f90@46b8258 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -7955 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.round(Math.java:776) [bci: 0]
locals: v0|SINGLE - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: fload_0       
     1: invokestatic  #18         // java.lang.Float.floatToRawIntBits:(float)int
     4: istore_1      
     5: iload_1       
     6: ldc           #76         // 2139095040
     8: iand          
     9: bipush        23
    11: ishr          
    12: istore_2      
    13: sipush        149
    16: iload_2       
    17: isub          
    18: istore_3      
    19: iload_3       
    20: bipush        -32
    22: iand          
    23: ifne          53
    26: iload_1       
    27: ldc           #77         // 8388607
    29: iand          
    30: ldc           #78         // 8388608
    32: ior           
    33: istore        4
    35: iload_1       
    36: ifge          44
    39: iload         4
    41: ineg          
    42: istore        4
    44: iload         4
    46: iload_3       
    47: ishr          
    48: iconst_1      
    49: iadd          
    50: iconst_1      
    51: ishr          
    52: ireturn       
    53: fload_0       
    54: f2i           
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [xmm0|SINGLE, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7ed0221c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|SINGLE = MOVE input: xmm0|SINGLE moveKind: SINGLE <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVD value: v0|SINGLE size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = AND x: v1|DWORD y: 2139095040 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SHR x: v2|DWORD y: 23 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: int[149|0x95] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SUB (x: v4|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.9999812855612068 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = AND x: v1|DWORD y: 8388607 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = OR x: v6|DWORD y: 8388608 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SHR value: v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4536144752541138944
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = AMD64CONVERTFLOATTOINTEGER ~srcValue: v0|SINGLE tmpValue: v12|SINGLE canBeNaN: true canOverflow: true opcode: jdk.graal.compiler.core.amd64.AMD64ArithmeticLIRGenerator$$Lambda/0x00007f782c364f90@46b8258 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -7955 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.Math.round(Math.java:776) [bci: 0]
locals: v0|SINGLE - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: fload_0       
     1: invokestatic  #18         // java.lang.Float.floatToRawIntBits:(float)int
     4: istore_1      
     5: iload_1       
     6: ldc           #76         // 2139095040
     8: iand          
     9: bipush        23
    11: ishr          
    12: istore_2      
    13: sipush        149
    16: iload_2       
    17: isub          
    18: istore_3      
    19: iload_3       
    20: bipush        -32
    22: iand          
    23: ifne          53
    26: iload_1       
    27: ldc           #77         // 8388607
    29: iand          
    30: ldc           #78         // 8388608
    32: ior           
    33: istore        4
    35: iload_1       
    36: ifge          44
    39: iload         4
    41: ineg          
    42: istore        4
    44: iload         4
    46: iload_3       
    47: ishr          
    48: iconst_1      
    49: iadd          
    50: iconst_1      
    51: ishr          
    52: ireturn       
    53: fload_0       
    54: f2i           
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [xmm0|SINGLE, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7ed0221c slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|SINGLE = MOVE input: xmm0|SINGLE moveKind: SINGLE <|@ <|@
      nr   32  <|@ instruction v1|DWORD = MOVD value: v0|SINGLE size: DWORD <|@ <|@
      nr   34  <|@ instruction v2|DWORD = AND x: v1|DWORD y: 2139095040 size: DWORD <|@ <|@
      nr   36  <|@ instruction v3|DWORD = SHR x: v2|DWORD y: 23 size: DWORD <|@ <|@
      nr   38  <|@ instruction v4|DWORD = MOVE input: int[149|0x95] <|@ <|@
      nr   40  <|@ instruction v5|DWORD = SUB (x: v4|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.9999812855612068 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v6|DWORD = AND x: v1|DWORD y: 8388607 size: DWORD <|@ <|@
      nr   88  <|@ instruction v7|DWORD = OR x: v6|DWORD y: 8388608 size: DWORD <|@ <|@
      nr   90  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction v8|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction v10|DWORD = SHR value: v9|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4536144752541138944
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction v11|DWORD = AMD64CONVERTFLOATTOINTEGER ~srcValue: v0|SINGLE tmpValue: v12|SINGLE canBeNaN: true canOverflow: true opcode: jdk.graal.compiler.core.amd64.AMD64ArithmeticLIRGenerator$$Lambda/0x00007f782c364f90@46b8258 <|@ <|@
      nr  130  <|@ instruction rax|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -7955 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.lang.Math.round(Math.java:776) [bci: 0]
locals: v0|SINGLE - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: fload_0       
     1: invokestatic  #18         // java.lang.Float.floatToRawIntBits:(float)int
     4: istore_1      
     5: iload_1       
     6: ldc           #76         // 2139095040
     8: iand          
     9: bipush        23
    11: ishr          
    12: istore_2      
    13: sipush        149
    16: iload_2       
    17: isub          
    18: istore_3      
    19: iload_3       
    20: bipush        -32
    22: iand          
    23: ifne          53
    26: iload_1       
    27: ldc           #77         // 8388607
    29: iand          
    30: ldc           #78         // 8388608
    32: ior           
    33: istore        4
    35: iload_1       
    36: ifge          44
    39: iload         4
    41: ineg          
    42: istore        4
    44: iload         4
    46: iload_3       
    47: ishr          
    48: iconst_1      
    49: iadd          
    50: iconst_1      
    51: ishr          
    52: ireturn       
    53: fload_0       
    54: f2i           
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [xmm0|SINGLE, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7ed0221c slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|SINGLE = MOVE input: xmm0|SINGLE moveKind: SINGLE <|@ <|@
      nr   32  <|@ instruction v1|DWORD = MOVD value: v0|SINGLE size: DWORD <|@ <|@
      nr   34  <|@ instruction v2|DWORD = AND x: v1|DWORD y: 2139095040 size: DWORD <|@ <|@
      nr   36  <|@ instruction v3|DWORD = SHR x: v2|DWORD y: 23 size: DWORD <|@ <|@
      nr   38  <|@ instruction v4|DWORD = MOVE input: int[149|0x95] <|@ <|@
      nr   40  <|@ instruction v5|DWORD = SUB (x: v4|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.9999812855612068 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v6|DWORD = AND x: v1|DWORD y: 8388607 size: DWORD <|@ <|@
      nr   88  <|@ instruction v7|DWORD = OR x: v6|DWORD y: 8388608 size: DWORD <|@ <|@
      nr   90  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction v8|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction v10|DWORD = SHR value: v9|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4536144752541138944
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction v11|DWORD = AMD64CONVERTFLOATTOINTEGER ~srcValue: v0|SINGLE tmpValue: v12|SINGLE canBeNaN: true canOverflow: true opcode: jdk.graal.compiler.core.amd64.AMD64ArithmeticLIRGenerator$$Lambda/0x00007f782c364f90@46b8258 <|@ <|@
      nr  130  <|@ instruction rax|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -7955 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.lang.Math.round(Math.java:776) [bci: 0]
locals: v0|SINGLE - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: fload_0       
     1: invokestatic  #18         // java.lang.Float.floatToRawIntBits:(float)int
     4: istore_1      
     5: iload_1       
     6: ldc           #76         // 2139095040
     8: iand          
     9: bipush        23
    11: ishr          
    12: istore_2      
    13: sipush        149
    16: iload_2       
    17: isub          
    18: istore_3      
    19: iload_3       
    20: bipush        -32
    22: iand          
    23: ifne          53
    26: iload_1       
    27: ldc           #77         // 8388607
    29: iand          
    30: ldc           #78         // 8388608
    32: ior           
    33: istore        4
    35: iload_1       
    36: ifge          44
    39: iload         4
    41: ineg          
    42: istore        4
    44: iload         4
    46: iload_3       
    47: ishr          
    48: iconst_1      
    49: iadd          
    50: iconst_1      
    51: ishr          
    52: ireturn       
    53: fload_0       
    54: f2i           
    55: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v10|d [0, 1[[98, 100[[130, 132[ "NoOptimization"
  rcx|d fixed "[rcx|d]" rcx|d v5|d [0, 1[[90, 93[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 26[ "NoSpillStore"
  xmm0|S fixed "[xmm0|S]" xmm0|S -1 [0, 30[ "NoSpillStore"
  v0|S SINGLE "[v0|S]" v0|S xmm0|S [30, 56[[102, 129[[134, 155[30 MustHaveRegister 32 MustHaveRegister 128 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d -1 [32, 86[32 MustHaveRegister 34 MustHaveRegister 54 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d v1|d [34, 36[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d v2|d [36, 41[36 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [38, 40[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d v4|d [40, 90[40 MustHaveRegister 42 ShouldHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d v1|d [86, 88[86 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d v6|d [88, 92[88 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d v7|d [92, 94[92 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d v8|d [94, 96[94 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d v9|d [96, 98[96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [128, 130[128 MustHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v12|S SINGLE "[v12|S]" v12|S -1 [128, 129[128 MustHaveRegister  "NoDefinitionFound"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v10|d [0, 1[[98, 100[[130, 132[ "NoOptimization"
  rcx|d fixed "[rcx|d]" rcx|d v5|d [0, 1[[90, 93[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 26[ "NoSpillStore"
  xmm0|S fixed "[xmm0|S]" xmm0|S -1 [0, 30[ "NoSpillStore"
  v0|S SINGLE "[xmm0|S]" v0|S xmm0|S [30, 56[[102, 129[[134, 155[30 MustHaveRegister 32 MustHaveRegister 128 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rcx|d]" v1|d -1 [32, 86[32 MustHaveRegister 34 MustHaveRegister 54 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d v1|d [34, 36[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d v2|d [36, 41[36 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r10|d]" v4|d -1 [38, 40[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r10|d]" v5|d v4|d [40, 90[40 MustHaveRegister 42 ShouldHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[rcx|d]" v6|d v1|d [86, 88[86 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rax|d]" v7|d v6|d [88, 92[88 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d v7|d [92, 94[92 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rax|d]" v9|d v8|d [94, 96[94 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[rax|d]" v10|d v9|d [96, 98[96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d -1 [128, 130[128 MustHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v12|S SINGLE "[xmm1|S]" v12|S -1 [128, 129[128 MustHaveRegister  "NoDefinitionFound"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [xmm0|SINGLE, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7ed0221c slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|SINGLE = MOVE input: xmm0|SINGLE moveKind: SINGLE <|@ <|@
      nr   32  <|@ instruction v1|DWORD = MOVD value: v0|SINGLE size: DWORD <|@ <|@
      nr   34  <|@ instruction v2|DWORD = AND x: v1|DWORD y: 2139095040 size: DWORD <|@ <|@
      nr   36  <|@ instruction v3|DWORD = SHR x: v2|DWORD y: 23 size: DWORD <|@ <|@
      nr   38  <|@ instruction v4|DWORD = MOVE input: int[149|0x95] <|@ <|@
      nr   40  <|@ instruction v5|DWORD = SUB (x: v4|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.9999812855612068 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v6|DWORD = AND x: v1|DWORD y: 8388607 size: DWORD <|@ <|@
      nr   88  <|@ instruction v7|DWORD = OR x: v6|DWORD y: 8388608 size: DWORD <|@ <|@
      nr   90  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction v8|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction v10|DWORD = SHR value: v9|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4536144752541138944
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction v11|DWORD = AMD64CONVERTFLOATTOINTEGER ~srcValue: v0|SINGLE tmpValue: v12|SINGLE canBeNaN: true canOverflow: true opcode: jdk.graal.compiler.core.amd64.AMD64ArithmeticLIRGenerator$$Lambda/0x00007f782c364f90@46b8258 <|@ <|@
      nr  130  <|@ instruction rax|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -7955 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.lang.Math.round(Math.java:776) [bci: 0]
locals: v0|SINGLE - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: fload_0       
     1: invokestatic  #18         // java.lang.Float.floatToRawIntBits:(float)int
     4: istore_1      
     5: iload_1       
     6: ldc           #76         // 2139095040
     8: iand          
     9: bipush        23
    11: ishr          
    12: istore_2      
    13: sipush        149
    16: iload_2       
    17: isub          
    18: istore_3      
    19: iload_3       
    20: bipush        -32
    22: iand          
    23: ifne          53
    26: iload_1       
    27: ldc           #77         // 8388607
    29: iand          
    30: ldc           #78         // 8388608
    32: ior           
    33: istore        4
    35: iload_1       
    36: ifge          44
    39: iload         4
    41: ineg          
    42: istore        4
    44: iload         4
    46: iload_3       
    47: ishr          
    48: iconst_1      
    49: iadd          
    50: iconst_1      
    51: ishr          
    52: ireturn       
    53: fload_0       
    54: f2i           
    55: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v10|d [0, 1[[98, 100[[130, 132[ "NoOptimization"
  rcx|d fixed "[rcx|d]" rcx|d v5|d [0, 1[[90, 93[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 26[ "NoSpillStore"
  xmm0|S fixed "[xmm0|S]" xmm0|S -1 [0, 30[ "NoSpillStore"
  v0|S SINGLE "[xmm0|S]" v0|S xmm0|S [30, 56[[102, 129[[134, 155[30 MustHaveRegister 32 MustHaveRegister 128 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rcx|d]" v1|d -1 [32, 86[32 MustHaveRegister 34 MustHaveRegister 54 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d v1|d [34, 36[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d v2|d [36, 41[36 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r10|d]" v4|d -1 [38, 40[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r10|d]" v5|d v4|d [40, 90[40 MustHaveRegister 42 ShouldHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[rcx|d]" v6|d v1|d [86, 88[86 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rax|d]" v7|d v6|d [88, 92[88 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d v7|d [92, 94[92 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rax|d]" v9|d v8|d [94, 96[94 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[rax|d]" v10|d v9|d [96, 98[96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d -1 [128, 130[128 MustHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v12|S SINGLE "[xmm1|S]" v12|S -1 [128, 129[128 MustHaveRegister  "NoDefinitionFound"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [xmm0|SINGLE, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7ed0221c slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|SINGLE = MOVE input: xmm0|SINGLE moveKind: SINGLE <|@ <|@
      nr   32  <|@ instruction v1|DWORD = MOVD value: v0|SINGLE size: DWORD <|@ <|@
      nr   34  <|@ instruction v2|DWORD = AND x: v1|DWORD y: 2139095040 size: DWORD <|@ <|@
      nr   36  <|@ instruction v3|DWORD = SHR x: v2|DWORD y: 23 size: DWORD <|@ <|@
      nr   38  <|@ instruction v4|DWORD = MOVE input: int[149|0x95] <|@ <|@
      nr   40  <|@ instruction v5|DWORD = SUB (x: v4|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.9999812855612068 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v6|DWORD = AND x: v1|DWORD y: 8388607 size: DWORD <|@ <|@
      nr   88  <|@ instruction v7|DWORD = OR x: v6|DWORD y: 8388608 size: DWORD <|@ <|@
      nr   90  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction v8|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction v10|DWORD = SHR value: v9|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4536144752541138944
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction v11|DWORD = AMD64CONVERTFLOATTOINTEGER ~srcValue: v0|SINGLE tmpValue: v12|SINGLE canBeNaN: true canOverflow: true opcode: jdk.graal.compiler.core.amd64.AMD64ArithmeticLIRGenerator$$Lambda/0x00007f782c364f90@46b8258 <|@ <|@
      nr  130  <|@ instruction rax|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -7955 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.lang.Math.round(Math.java:776) [bci: 0]
locals: v0|SINGLE - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: fload_0       
     1: invokestatic  #18         // java.lang.Float.floatToRawIntBits:(float)int
     4: istore_1      
     5: iload_1       
     6: ldc           #76         // 2139095040
     8: iand          
     9: bipush        23
    11: ishr          
    12: istore_2      
    13: sipush        149
    16: iload_2       
    17: isub          
    18: istore_3      
    19: iload_3       
    20: bipush        -32
    22: iand          
    23: ifne          53
    26: iload_1       
    27: ldc           #77         // 8388607
    29: iand          
    30: ldc           #78         // 8388608
    32: ior           
    33: istore        4
    35: iload_1       
    36: ifge          44
    39: iload         4
    41: ineg          
    42: istore        4
    44: iload         4
    46: iload_3       
    47: ishr          
    48: iconst_1      
    49: iadd          
    50: iconst_1      
    51: ishr          
    52: ireturn       
    53: fload_0       
    54: f2i           
    55: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v10|d [0, 1[[98, 100[[130, 132[ "NoOptimization"
  rcx|d fixed "[rcx|d]" rcx|d v5|d [0, 1[[90, 93[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 26[ "NoSpillStore"
  xmm0|S fixed "[xmm0|S]" xmm0|S -1 [0, 30[ "NoSpillStore"
  v0|S SINGLE "[xmm0|S]" v0|S xmm0|S [30, 56[[102, 129[[134, 155[30 MustHaveRegister 32 MustHaveRegister 128 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rcx|d]" v1|d -1 [32, 86[32 MustHaveRegister 34 MustHaveRegister 54 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d v1|d [34, 36[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d v2|d [36, 41[36 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r10|d]" v4|d -1 [38, 40[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r10|d]" v5|d v4|d [40, 90[40 MustHaveRegister 42 ShouldHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[rcx|d]" v6|d v1|d [86, 88[86 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rax|d]" v7|d v6|d [88, 92[88 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d v7|d [92, 94[92 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rax|d]" v9|d v8|d [94, 96[94 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[rax|d]" v10|d v9|d [96, 98[96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d -1 [128, 130[128 MustHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v12|S SINGLE "[xmm1|S]" v12|S -1 [128, 129[128 MustHaveRegister  "NoDefinitionFound"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [xmm0|SINGLE, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7ed0221c slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|SINGLE = MOVE input: xmm0|SINGLE moveKind: SINGLE <|@ <|@
      nr   32  <|@ instruction v1|DWORD = MOVD value: v0|SINGLE size: DWORD <|@ <|@
      nr   34  <|@ instruction v2|DWORD = AND x: v1|DWORD y: 2139095040 size: DWORD <|@ <|@
      nr   36  <|@ instruction v3|DWORD = SHR x: v2|DWORD y: 23 size: DWORD <|@ <|@
      nr   38  <|@ instruction v4|DWORD = MOVE input: int[149|0x95] <|@ <|@
      nr   40  <|@ instruction v5|DWORD = SUB (x: v4|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.9999812855612068 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v6|DWORD = AND x: v1|DWORD y: 8388607 size: DWORD <|@ <|@
      nr   88  <|@ instruction v7|DWORD = OR x: v6|DWORD y: 8388608 size: DWORD <|@ <|@
      nr   90  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction v8|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction v10|DWORD = SHR value: v9|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4536144752541138944
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction v11|DWORD = AMD64CONVERTFLOATTOINTEGER ~srcValue: v0|SINGLE tmpValue: v12|SINGLE canBeNaN: true canOverflow: true opcode: jdk.graal.compiler.core.amd64.AMD64ArithmeticLIRGenerator$$Lambda/0x00007f782c364f90@46b8258 <|@ <|@
      nr  130  <|@ instruction rax|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -7955 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.lang.Math.round(Math.java:776) [bci: 0]
locals: v0|SINGLE - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: fload_0       
     1: invokestatic  #18         // java.lang.Float.floatToRawIntBits:(float)int
     4: istore_1      
     5: iload_1       
     6: ldc           #76         // 2139095040
     8: iand          
     9: bipush        23
    11: ishr          
    12: istore_2      
    13: sipush        149
    16: iload_2       
    17: isub          
    18: istore_3      
    19: iload_3       
    20: bipush        -32
    22: iand          
    23: ifne          53
    26: iload_1       
    27: ldc           #77         // 8388607
    29: iand          
    30: ldc           #78         // 8388608
    32: ior           
    33: istore        4
    35: iload_1       
    36: ifge          44
    39: iload         4
    41: ineg          
    42: istore        4
    44: iload         4
    46: iload_3       
    47: ishr          
    48: iconst_1      
    49: iadd          
    50: iconst_1      
    51: ishr          
    52: ireturn       
    53: fload_0       
    54: f2i           
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [xmm0|SINGLE, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7ed0221c slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|SINGLE = MOVE input: xmm0|SINGLE moveKind: SINGLE <|@ <|@
      nr   32  <|@ instruction v1|DWORD = MOVD value: v0|SINGLE size: DWORD <|@ <|@
      nr   34  <|@ instruction v2|DWORD = AND x: v1|DWORD y: 2139095040 size: DWORD <|@ <|@
      nr   36  <|@ instruction v3|DWORD = SHR x: v2|DWORD y: 23 size: DWORD <|@ <|@
      nr   38  <|@ instruction v4|DWORD = MOVE input: int[149|0x95] <|@ <|@
      nr   40  <|@ instruction v5|DWORD = SUB (x: v4|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTCONSTBRANCH x: v5|DWORD trueDestinationProbability: 0.9999812855612068 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v6|DWORD = AND x: v1|DWORD y: 8388607 size: DWORD <|@ <|@
      nr   88  <|@ instruction v7|DWORD = OR x: v6|DWORD y: 8388608 size: DWORD <|@ <|@
      nr   90  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction v8|DWORD = SHR (x: v7|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction v10|DWORD = SHR value: v9|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4536144752541138944
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction v11|DWORD = AMD64CONVERTFLOATTOINTEGER ~srcValue: v0|SINGLE tmpValue: v12|SINGLE canBeNaN: true canOverflow: true opcode: jdk.graal.compiler.core.amd64.AMD64ArithmeticLIRGenerator$$Lambda/0x00007f782c364f90@46b8258 <|@ <|@
      nr  130  <|@ instruction rax|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -7955 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.lang.Math.round(Math.java:776) [bci: 0]
locals: v0|SINGLE - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: fload_0       
     1: invokestatic  #18         // java.lang.Float.floatToRawIntBits:(float)int
     4: istore_1      
     5: iload_1       
     6: ldc           #76         // 2139095040
     8: iand          
     9: bipush        23
    11: ishr          
    12: istore_2      
    13: sipush        149
    16: iload_2       
    17: isub          
    18: istore_3      
    19: iload_3       
    20: bipush        -32
    22: iand          
    23: ifne          53
    26: iload_1       
    27: ldc           #77         // 8388607
    29: iand          
    30: ldc           #78         // 8388608
    32: ior           
    33: istore        4
    35: iload_1       
    36: ifge          44
    39: iload         4
    41: ineg          
    42: istore        4
    44: iload         4
    46: iload_3       
    47: ishr          
    48: iconst_1      
    49: iadd          
    50: iconst_1      
    51: ishr          
    52: ireturn       
    53: fload_0       
    54: f2i           
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [xmm0|SINGLE, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7ed0221c slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD = MOVD value: xmm0|SINGLE size: DWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = AND x: rcx|DWORD y: 2139095040 size: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = SHR x: rax|DWORD y: 23 size: DWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: int[149|0x95] <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9999812855612068 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = AND x: rcx|DWORD y: 8388607 size: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD = OR x: rcx|DWORD y: 8388608 size: DWORD <|@ <|@
      nr   90  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = SHR value: rax|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4536144752541138944
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction rax|DWORD = AMD64CONVERTFLOATTOINTEGER ~srcValue: xmm0|SINGLE tmpValue: xmm1|SINGLE canBeNaN: true canOverflow: true opcode: jdk.graal.compiler.core.amd64.AMD64ArithmeticLIRGenerator$$Lambda/0x00007f782c364f90@46b8258 <|@ <|@
      nr  132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -7955 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.lang.Math.round(Math.java:776) [bci: 0]
locals: xmm0|SINGLE - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: fload_0       
     1: invokestatic  #18         // java.lang.Float.floatToRawIntBits:(float)int
     4: istore_1      
     5: iload_1       
     6: ldc           #76         // 2139095040
     8: iand          
     9: bipush        23
    11: ishr          
    12: istore_2      
    13: sipush        149
    16: iload_2       
    17: isub          
    18: istore_3      
    19: iload_3       
    20: bipush        -32
    22: iand          
    23: ifne          53
    26: iload_1       
    27: ldc           #77         // 8388607
    29: iand          
    30: ldc           #78         // 8388608
    32: ior           
    33: istore        4
    35: iload_1       
    36: ifge          44
    39: iload         4
    41: ineg          
    42: istore        4
    44: iload         4
    46: iload_3       
    47: ishr          
    48: iconst_1      
    49: iadd          
    50: iconst_1      
    51: ishr          
    52: ireturn       
    53: fload_0       
    54: f2i           
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [xmm0|SINGLE, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7ed0221c slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD = MOVD value: xmm0|SINGLE size: DWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = AND x: rcx|DWORD y: 2139095040 size: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = SHR x: rax|DWORD y: 23 size: DWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: int[149|0x95] <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9999812855612068 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = AND x: rcx|DWORD y: 8388607 size: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD = OR x: rcx|DWORD y: 8388608 size: DWORD <|@ <|@
      nr   90  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = SHR value: rax|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4536144752541138944
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction rax|DWORD = AMD64CONVERTFLOATTOINTEGER ~srcValue: xmm0|SINGLE tmpValue: xmm1|SINGLE canBeNaN: true canOverflow: true opcode: jdk.graal.compiler.core.amd64.AMD64ArithmeticLIRGenerator$$Lambda/0x00007f782c364f90@46b8258 <|@ <|@
      nr  132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -7955 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.lang.Math.round(Math.java:776) [bci: 0]
locals: xmm0|SINGLE - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: fload_0       
     1: invokestatic  #18         // java.lang.Float.floatToRawIntBits:(float)int
     4: istore_1      
     5: iload_1       
     6: ldc           #76         // 2139095040
     8: iand          
     9: bipush        23
    11: ishr          
    12: istore_2      
    13: sipush        149
    16: iload_2       
    17: isub          
    18: istore_3      
    19: iload_3       
    20: bipush        -32
    22: iand          
    23: ifne          53
    26: iload_1       
    27: ldc           #77         // 8388607
    29: iand          
    30: ldc           #78         // 8388608
    32: ior           
    33: istore        4
    35: iload_1       
    36: ifge          44
    39: iload         4
    41: ineg          
    42: istore        4
    44: iload         4
    46: iload_3       
    47: ishr          
    48: iconst_1      
    49: iadd          
    50: iconst_1      
    51: ishr          
    52: ireturn       
    53: fload_0       
    54: f2i           
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [xmm0|SINGLE, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7ed0221c slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD = MOVD value: xmm0|SINGLE size: DWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = AND x: rcx|DWORD y: 2139095040 size: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = SHR x: rax|DWORD y: 23 size: DWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: int[149|0x95] <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9999812855612068 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = AND x: rcx|DWORD y: 8388607 size: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD = OR x: rcx|DWORD y: 8388608 size: DWORD <|@ <|@
      nr   90  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = SHR value: rax|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4536144752541138944
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction rax|DWORD = AMD64CONVERTFLOATTOINTEGER ~srcValue: xmm0|SINGLE tmpValue: xmm1|SINGLE canBeNaN: true canOverflow: true opcode: jdk.graal.compiler.core.amd64.AMD64ArithmeticLIRGenerator$$Lambda/0x00007f782c364f90@46b8258 <|@ <|@
      nr  132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -7955 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.lang.Math.round(Math.java:776) [bci: 0]
locals: xmm0|SINGLE - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: fload_0       
     1: invokestatic  #18         // java.lang.Float.floatToRawIntBits:(float)int
     4: istore_1      
     5: iload_1       
     6: ldc           #76         // 2139095040
     8: iand          
     9: bipush        23
    11: ishr          
    12: istore_2      
    13: sipush        149
    16: iload_2       
    17: isub          
    18: istore_3      
    19: iload_3       
    20: bipush        -32
    22: iand          
    23: ifne          53
    26: iload_1       
    27: ldc           #77         // 8388607
    29: iand          
    30: ldc           #78         // 8388608
    32: ior           
    33: istore        4
    35: iload_1       
    36: ifge          44
    39: iload         4
    41: ineg          
    42: istore        4
    44: iload         4
    46: iload_3       
    47: ishr          
    48: iconst_1      
    49: iadd          
    50: iconst_1      
    51: ishr          
    52: ireturn       
    53: fload_0       
    54: f2i           
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [xmm0|SINGLE, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7ed0221c slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD = MOVD value: xmm0|SINGLE size: DWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = AND x: rcx|DWORD y: 2139095040 size: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = SHR x: rax|DWORD y: 23 size: DWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: int[149|0x95] <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9999812855612068 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = AND x: rcx|DWORD y: 8388607 size: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD = OR x: rcx|DWORD y: 8388608 size: DWORD <|@ <|@
      nr   90  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = SHR value: rax|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4536144752541138944
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction rax|DWORD = AMD64CONVERTFLOATTOINTEGER ~srcValue: xmm0|SINGLE tmpValue: xmm1|SINGLE canBeNaN: true canOverflow: true opcode: jdk.graal.compiler.core.amd64.AMD64ArithmeticLIRGenerator$$Lambda/0x00007f782c364f90@46b8258 <|@ <|@
      nr  132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -7955 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.lang.Math.round(Math.java:776) [bci: 0]
locals: xmm0|SINGLE - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: fload_0       
     1: invokestatic  #18         // java.lang.Float.floatToRawIntBits:(float)int
     4: istore_1      
     5: iload_1       
     6: ldc           #76         // 2139095040
     8: iand          
     9: bipush        23
    11: ishr          
    12: istore_2      
    13: sipush        149
    16: iload_2       
    17: isub          
    18: istore_3      
    19: iload_3       
    20: bipush        -32
    22: iand          
    23: ifne          53
    26: iload_1       
    27: ldc           #77         // 8388607
    29: iand          
    30: ldc           #78         // 8388608
    32: ior           
    33: istore        4
    35: iload_1       
    36: ifge          44
    39: iload         4
    41: ineg          
    42: istore        4
    44: iload         4
    46: iload_3       
    47: ishr          
    48: iconst_1      
    49: iadd          
    50: iconst_1      
    51: ishr          
    52: ireturn       
    53: fload_0       
    54: f2i           
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [xmm0|SINGLE, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7ed0221c slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD = MOVD value: xmm0|SINGLE size: DWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = AND x: rcx|DWORD y: 2139095040 size: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = SHR x: rax|DWORD y: 23 size: DWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: int[149|0x95] <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9999812855612068 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = AND x: rcx|DWORD y: 8388607 size: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD = OR x: rcx|DWORD y: 8388608 size: DWORD <|@ <|@
      nr   90  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = SHR value: rax|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4536144752541138944
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction rax|DWORD = AMD64CONVERTFLOATTOINTEGER ~srcValue: xmm0|SINGLE tmpValue: xmm1|SINGLE canBeNaN: true canOverflow: true opcode: jdk.graal.compiler.core.amd64.AMD64ArithmeticLIRGenerator$$Lambda/0x00007f782c364f90@46b8258 <|@ <|@
      nr  132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -7955 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.lang.Math.round(Math.java:776) [bci: 0]
locals: xmm0|SINGLE - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: fload_0       
     1: invokestatic  #18         // java.lang.Float.floatToRawIntBits:(float)int
     4: istore_1      
     5: iload_1       
     6: ldc           #76         // 2139095040
     8: iand          
     9: bipush        23
    11: ishr          
    12: istore_2      
    13: sipush        149
    16: iload_2       
    17: isub          
    18: istore_3      
    19: iload_3       
    20: bipush        -32
    22: iand          
    23: ifne          53
    26: iload_1       
    27: ldc           #77         // 8388607
    29: iand          
    30: ldc           #78         // 8388608
    32: ior           
    33: istore        4
    35: iload_1       
    36: ifge          44
    39: iload         4
    41: ineg          
    42: istore        4
    44: iload         4
    46: iload_3       
    47: ishr          
    48: iconst_1      
    49: iadd          
    50: iconst_1      
    51: ishr          
    52: ireturn       
    53: fload_0       
    54: f2i           
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [xmm0|SINGLE, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7ed0221c slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD = MOVD value: xmm0|SINGLE size: DWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = AND x: rcx|DWORD y: 2139095040 size: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = SHR x: rax|DWORD y: 23 size: DWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: int[149|0x95] <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9999812855612068 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = AND x: rcx|DWORD y: 8388607 size: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD = OR x: rcx|DWORD y: 8388608 size: DWORD <|@ <|@
      nr   90  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = SHR value: rax|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4536144752541138944
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction rax|DWORD = AMD64CONVERTFLOATTOINTEGER ~srcValue: xmm0|SINGLE tmpValue: xmm1|SINGLE canBeNaN: true canOverflow: true opcode: jdk.graal.compiler.core.amd64.AMD64ArithmeticLIRGenerator$$Lambda/0x00007f782c364f90@46b8258 <|@ <|@
      nr  132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -7955 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.lang.Math.round(Math.java:776) [bci: 0]
locals: xmm0|SINGLE - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: fload_0       
     1: invokestatic  #18         // java.lang.Float.floatToRawIntBits:(float)int
     4: istore_1      
     5: iload_1       
     6: ldc           #76         // 2139095040
     8: iand          
     9: bipush        23
    11: ishr          
    12: istore_2      
    13: sipush        149
    16: iload_2       
    17: isub          
    18: istore_3      
    19: iload_3       
    20: bipush        -32
    22: iand          
    23: ifne          53
    26: iload_1       
    27: ldc           #77         // 8388607
    29: iand          
    30: ldc           #78         // 8388608
    32: ior           
    33: istore        4
    35: iload_1       
    36: ifge          44
    39: iload         4
    41: ineg          
    42: istore        4
    44: iload         4
    46: iload_3       
    47: ishr          
    48: iconst_1      
    49: iadd          
    50: iconst_1      
    51: ishr          
    52: ireturn       
    53: fload_0       
    54: f2i           
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [xmm0|SINGLE, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7ed0221c slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD = MOVD value: xmm0|SINGLE size: DWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = AND x: rcx|DWORD y: 2139095040 size: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = SHR x: rax|DWORD y: 23 size: DWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: int[149|0x95] <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9999812855612068 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = AND x: rcx|DWORD y: 8388607 size: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD = OR x: rcx|DWORD y: 8388608 size: DWORD <|@ <|@
      nr   90  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = SHR value: rax|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4536144752541138944
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction rax|DWORD = AMD64CONVERTFLOATTOINTEGER ~srcValue: xmm0|SINGLE tmpValue: xmm1|SINGLE canBeNaN: true canOverflow: true opcode: jdk.graal.compiler.core.amd64.AMD64ArithmeticLIRGenerator$$Lambda/0x00007f782c364f90@46b8258 <|@ <|@
      nr  132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -7955 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.lang.Math.round(Math.java:776) [bci: 0]
locals: xmm0|SINGLE - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: fload_0       
     1: invokestatic  #18         // java.lang.Float.floatToRawIntBits:(float)int
     4: istore_1      
     5: iload_1       
     6: ldc           #76         // 2139095040
     8: iand          
     9: bipush        23
    11: ishr          
    12: istore_2      
    13: sipush        149
    16: iload_2       
    17: isub          
    18: istore_3      
    19: iload_3       
    20: bipush        -32
    22: iand          
    23: ifne          53
    26: iload_1       
    27: ldc           #77         // 8388607
    29: iand          
    30: ldc           #78         // 8388608
    32: ior           
    33: istore        4
    35: iload_1       
    36: ifge          44
    39: iload         4
    41: ineg          
    42: istore        4
    44: iload         4
    46: iload_3       
    47: ishr          
    48: iconst_1      
    49: iadd          
    50: iconst_1      
    51: ishr          
    52: ireturn       
    53: fload_0       
    54: f2i           
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [xmm0|SINGLE, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7ed0221c slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD = MOVD value: xmm0|SINGLE size: DWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = AND x: rcx|DWORD y: 2139095040 size: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = SHR x: rax|DWORD y: 23 size: DWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: int[149|0x95] <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9999812855612068 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = AND x: rcx|DWORD y: 8388607 size: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD = OR x: rcx|DWORD y: 8388608 size: DWORD <|@ <|@
      nr   90  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = SHR value: rax|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4536144752541138944
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction rax|DWORD = AMD64CONVERTFLOATTOINTEGER ~srcValue: xmm0|SINGLE tmpValue: xmm1|SINGLE canBeNaN: true canOverflow: true opcode: jdk.graal.compiler.core.amd64.AMD64ArithmeticLIRGenerator$$Lambda/0x00007f782c364f90@46b8258 <|@ <|@
      nr  132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -7955 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.lang.Math.round(Math.java:776) [bci: 0]
locals: xmm0|SINGLE - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: fload_0       
     1: invokestatic  #18         // java.lang.Float.floatToRawIntBits:(float)int
     4: istore_1      
     5: iload_1       
     6: ldc           #76         // 2139095040
     8: iand          
     9: bipush        23
    11: ishr          
    12: istore_2      
    13: sipush        149
    16: iload_2       
    17: isub          
    18: istore_3      
    19: iload_3       
    20: bipush        -32
    22: iand          
    23: ifne          53
    26: iload_1       
    27: ldc           #77         // 8388607
    29: iand          
    30: ldc           #78         // 8388608
    32: ior           
    33: istore        4
    35: iload_1       
    36: ifge          44
    39: iload         4
    41: ineg          
    42: istore        4
    44: iload         4
    46: iload_3       
    47: ishr          
    48: iconst_1      
    49: iadd          
    50: iconst_1      
    51: ishr          
    52: ireturn       
    53: fload_0       
    54: f2i           
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [xmm0|SINGLE, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7ed0221c slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD = MOVD value: xmm0|SINGLE size: DWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = AND x: rcx|DWORD y: 2139095040 size: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = SHR x: rax|DWORD y: 23 size: DWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: int[149|0x95] <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9999812855612068 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = AND x: rcx|DWORD y: 8388607 size: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD = OR x: rcx|DWORD y: 8388608 size: DWORD <|@ <|@
      nr   90  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = SHR value: rax|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4536144752541138944
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction rax|DWORD = AMD64CONVERTFLOATTOINTEGER ~srcValue: xmm0|SINGLE tmpValue: xmm1|SINGLE canBeNaN: true canOverflow: true opcode: jdk.graal.compiler.core.amd64.AMD64ArithmeticLIRGenerator$$Lambda/0x00007f782c364f90@46b8258 <|@ <|@
      nr  132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -7955 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.lang.Math.round(Math.java:776) [bci: 0]
locals: xmm0|SINGLE - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: fload_0       
     1: invokestatic  #18         // java.lang.Float.floatToRawIntBits:(float)int
     4: istore_1      
     5: iload_1       
     6: ldc           #76         // 2139095040
     8: iand          
     9: bipush        23
    11: ishr          
    12: istore_2      
    13: sipush        149
    16: iload_2       
    17: isub          
    18: istore_3      
    19: iload_3       
    20: bipush        -32
    22: iand          
    23: ifne          53
    26: iload_1       
    27: ldc           #77         // 8388607
    29: iand          
    30: ldc           #78         // 8388608
    32: ior           
    33: istore        4
    35: iload_1       
    36: ifge          44
    39: iload         4
    41: ineg          
    42: istore        4
    44: iload         4
    46: iload_3       
    47: ishr          
    48: iconst_1      
    49: iadd          
    50: iconst_1      
    51: ishr          
    52: ireturn       
    53: fload_0       
    54: f2i           
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [xmm0|SINGLE, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7ed0221c slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD = MOVD value: xmm0|SINGLE size: DWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = AND x: rcx|DWORD y: 2139095040 size: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = SHR x: rax|DWORD y: 23 size: DWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: int[149|0x95] <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9999812855612068 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = AND x: rcx|DWORD y: 8388607 size: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD = OR x: rcx|DWORD y: 8388608 size: DWORD <|@ <|@
      nr   90  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = SHR value: rax|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4536144752541138944
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction rax|DWORD = AMD64CONVERTFLOATTOINTEGER ~srcValue: xmm0|SINGLE tmpValue: xmm1|SINGLE canBeNaN: true canOverflow: true opcode: jdk.graal.compiler.core.amd64.AMD64ArithmeticLIRGenerator$$Lambda/0x00007f782c364f90@46b8258 <|@ <|@
      nr  132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -7955 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.lang.Math.round(Math.java:776) [bci: 0]
locals: xmm0|SINGLE - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: fload_0       
     1: invokestatic  #18         // java.lang.Float.floatToRawIntBits:(float)int
     4: istore_1      
     5: iload_1       
     6: ldc           #76         // 2139095040
     8: iand          
     9: bipush        23
    11: ishr          
    12: istore_2      
    13: sipush        149
    16: iload_2       
    17: isub          
    18: istore_3      
    19: iload_3       
    20: bipush        -32
    22: iand          
    23: ifne          53
    26: iload_1       
    27: ldc           #77         // 8388607
    29: iand          
    30: ldc           #78         // 8388608
    32: ior           
    33: istore        4
    35: iload_1       
    36: ifge          44
    39: iload         4
    41: ineg          
    42: istore        4
    44: iload         4
    46: iload_3       
    47: ishr          
    48: iconst_1      
    49: iadd          
    50: iconst_1      
    51: ishr          
    52: ireturn       
    53: fload_0       
    54: f2i           
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [xmm0|SINGLE, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7ed0221c slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD = MOVD value: xmm0|SINGLE size: DWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = AND x: rcx|DWORD y: 2139095040 size: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = SHR x: rax|DWORD y: 23 size: DWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: int[149|0x95] <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9999812855612068 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = AND x: rcx|DWORD y: 8388607 size: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD = OR x: rcx|DWORD y: 8388608 size: DWORD <|@ <|@
      nr   90  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = SHR value: rax|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4536144752541138944
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction rax|DWORD = AMD64CONVERTFLOATTOINTEGER ~srcValue: xmm0|SINGLE tmpValue: xmm1|SINGLE canBeNaN: true canOverflow: true opcode: jdk.graal.compiler.core.amd64.AMD64ArithmeticLIRGenerator$$Lambda/0x00007f782c364f90@46b8258 <|@ <|@
      nr  132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -7955 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.lang.Math.round(Math.java:776) [bci: 0]
locals: xmm0|SINGLE - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: fload_0       
     1: invokestatic  #18         // java.lang.Float.floatToRawIntBits:(float)int
     4: istore_1      
     5: iload_1       
     6: ldc           #76         // 2139095040
     8: iand          
     9: bipush        23
    11: ishr          
    12: istore_2      
    13: sipush        149
    16: iload_2       
    17: isub          
    18: istore_3      
    19: iload_3       
    20: bipush        -32
    22: iand          
    23: ifne          53
    26: iload_1       
    27: ldc           #77         // 8388607
    29: iand          
    30: ldc           #78         // 8388608
    32: ior           
    33: istore        4
    35: iload_1       
    36: ifge          44
    39: iload         4
    41: ineg          
    42: istore        4
    44: iload         4
    46: iload_3       
    47: ishr          
    48: iconst_1      
    49: iadd          
    50: iconst_1      
    51: ishr          
    52: ireturn       
    53: fload_0       
    54: f2i           
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [xmm0|SINGLE, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7ed0221c slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD = MOVD value: xmm0|SINGLE size: DWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = AND x: rcx|DWORD y: 2139095040 size: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = SHR x: rax|DWORD y: 23 size: DWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: int[149|0x95] <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9999812855612068 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = AND x: rcx|DWORD y: 8388607 size: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD = OR x: rcx|DWORD y: 8388608 size: DWORD <|@ <|@
      nr   90  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = SHR value: rax|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4536144752541138944
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction rax|DWORD = AMD64CONVERTFLOATTOINTEGER ~srcValue: xmm0|SINGLE tmpValue: xmm1|SINGLE canBeNaN: true canOverflow: true opcode: jdk.graal.compiler.core.amd64.AMD64ArithmeticLIRGenerator$$Lambda/0x00007f782c364f90@46b8258 <|@ <|@
      nr  132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -7955 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.Math.round(Math.java:776) [bci: 0]
locals: xmm0|SINGLE - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: fload_0       
     1: invokestatic  #18         // java.lang.Float.floatToRawIntBits:(float)int
     4: istore_1      
     5: iload_1       
     6: ldc           #76         // 2139095040
     8: iand          
     9: bipush        23
    11: ishr          
    12: istore_2      
    13: sipush        149
    16: iload_2       
    17: isub          
    18: istore_3      
    19: iload_3       
    20: bipush        -32
    22: iand          
    23: ifne          53
    26: iload_1       
    27: ldc           #77         // 8388607
    29: iand          
    30: ldc           #78         // 8388608
    32: ior           
    33: istore        4
    35: iload_1       
    36: ifge          44
    39: iload         4
    41: ineg          
    42: istore        4
    44: iload         4
    46: iload_3       
    47: ishr          
    48: iconst_1      
    49: iadd          
    50: iconst_1      
    51: ishr          
    52: ireturn       
    53: fload_0       
    54: f2i           
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [xmm0|SINGLE, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7ed0221c slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD = MOVD value: xmm0|SINGLE size: DWORD <|@ <|@
      nr   34  <|@ instruction rax|DWORD = AND x: rcx|DWORD y: 2139095040 size: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = SHR x: rax|DWORD y: 23 size: DWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: int[149|0x95] <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9999812855612068 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182250235338257
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = AND x: rcx|DWORD y: 8388607 size: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD = OR x: rcx|DWORD y: 8388608 size: DWORD <|@ <|@
      nr   90  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = SHR value: rax|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4536144752541138944
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction rax|DWORD = AMD64CONVERTFLOATTOINTEGER ~srcValue: xmm0|SINGLE tmpValue: xmm1|SINGLE canBeNaN: true canOverflow: true opcode: jdk.graal.compiler.core.amd64.AMD64ArithmeticLIRGenerator$$Lambda/0x00007f782c364f90@46b8258 <|@ <|@
      nr  132  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -7955 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.Math.round(Math.java:776) [bci: 0]
locals: xmm0|SINGLE - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: fload_0       
     1: invokestatic  #18         // java.lang.Float.floatToRawIntBits:(float)int
     4: istore_1      
     5: iload_1       
     6: ldc           #76         // 2139095040
     8: iand          
     9: bipush        23
    11: ishr          
    12: istore_2      
    13: sipush        149
    16: iload_2       
    17: isub          
    18: istore_3      
    19: iload_3       
    20: bipush        -32
    22: iand          
    23: ifne          53
    26: iload_1       
    27: ldc           #77         // 8388607
    29: iand          
    30: ldc           #78         // 8388608
    32: ior           
    33: istore        4
    35: iload_1       
    36: ifge          44
    39: iload         4
    41: ineg          
    42: istore        4
    44: iload         4
    46: iload_3       
    47: ishr          
    48: iconst_1      
    49: iadd          
    50: iconst_1      
    51: ishr          
    52: ireturn       
    53: fload_0       
    54: f2i           
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec189041817f20000000000f85db00000090909090909090909090909048896c2410c5f97ec18bc181e00000807fc1e81741ba95000000442bd041f7c2e0ffffff0f85480000009090909085c90f8c6f000000909090909090909090909090909081e1ffff7f008bc181c800008000418bcad3e8ffc0d1e8488b6c24104883c418493ba7500400000f876e000000c3909090909090909090909090c5fa2cc081f8000000800f8465000000488b6c24104883c418493ba7500400000f876b000000c39090909090909041c78784040000ede0ffff49c7879004000014000000e8000000000f1f84000000000048896c2410e800000000e916fffffff4488d0d7effffff49898f68040000e9e8fefffff4c5f82ec07b07b800000000eb8ec5f1efc9c5f82ec17684f7d0eb80f4488d0d81ffffff49898f68040000e9b8fefffff4e800000000f4e800000000f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [xmm0|SINGLE, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 NOP  <||@
  Comment 36 22 NOP  <||@
  Comment 37 24 NOP  <||@
  Comment 38 26 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 43 28 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7ed0221c slotKind: QWORD  <||@
  Comment 43 32 rcx|DWORD = MOVD value: xmm0|SINGLE size: DWORD  <||@
  Comment 47 34 rax|DWORD = AND x: rcx|DWORD y: 2139095040 size: DWORD  <||@
  Comment 55 36 rax|DWORD = SHR x: rax|DWORD y: 23 size: DWORD  <||@
  Comment 58 38 r10|DWORD = MOVE input: int[149|0x95]  <||@
  Comment 64 40 r10|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 67 42 TESTCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9999812855612068 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -32 size: DWORD  <||@
  Comment 80 block B1 null  <||@
  Comment 80 44 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 80 46 NOP  <||@
  Comment 81 48 NOP  <||@
  Comment 82 50 NOP  <||@
  Comment 83 52 NOP  <||@
  Comment 84 54 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD  <||@
  Comment 92 block B3 null  <||@
  Comment 92 56 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 92 58 NOP  <||@
  Comment 93 60 NOP  <||@
  Comment 94 62 NOP  <||@
  Comment 95 64 NOP  <||@
  Comment 96 66 NOP  <||@
  Comment 97 68 NOP  <||@
  Comment 98 70 NOP  <||@
  Comment 99 72 NOP  <||@
  Comment 100 74 NOP  <||@
  Comment 101 76 NOP  <||@
  Comment 102 78 NOP  <||@
  Comment 103 80 NOP  <||@
  Comment 104 82 NOP  <||@
  Comment 105 84 NOP  <||@
  Comment 106 86 rcx|DWORD = AND x: rcx|DWORD y: 8388607 size: DWORD  <||@
  Comment 112 88 rax|DWORD = OR x: rcx|DWORD y: 8388608 size: DWORD  <||@
  Comment 120 90 rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 123 92 rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 125 94 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 127 96 rax|DWORD = SHR value: rax|DWORD size: DWORD  <||@
  Comment 129 100 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 138 POLL_RETURN_FAR  <||@
  Comment 152 block B4 null  <||@
  Comment 152 102 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 152 104 NOP  <||@
  Comment 153 106 NOP  <||@
  Comment 154 108 NOP  <||@
  Comment 155 110 NOP  <||@
  Comment 156 112 NOP  <||@
  Comment 157 114 NOP  <||@
  Comment 158 116 NOP  <||@
  Comment 159 118 NOP  <||@
  Comment 160 120 NOP  <||@
  Comment 161 122 NOP  <||@
  Comment 162 124 NOP  <||@
  Comment 163 126 NOP  <||@
  Comment 164 128 rax|DWORD = AMD64CONVERTFLOATTOINTEGER ~srcValue: xmm0|SINGLE tmpValue: xmm1|SINGLE canBeNaN: true canOverflow: true opcode: jdk.graal.compiler.core.amd64.AMD64ArithmeticLIRGenerator$$Lambda/0x00007f782c364f90@46b8258  <||@
  Comment 180 132 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 189 POLL_RETURN_FAR  <||@
  Comment 203 block B2 null  <||@
  Comment 203 134 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 203 136 NOP  <||@
  Comment 204 138 NOP  <||@
  Comment 205 140 NOP  <||@
  Comment 206 142 NOP  <||@
  Comment 207 144 NOP  <||@
  Comment 208 146 NOP  <||@
  Comment 209 148 NOP  <||@
  Comment 210 150 MOV x: [r15|QWORD + 1156] y: -7955 size: DWORD  <||@
  Comment 221 152 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 232 154 DEOPT info [bci:0]  <||@
  Comment 232 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 237 []at java.lang.Math.round(Math.java:776) [bci: 0, duringCall: false, rethrow: false]
              |0            |1  |2  |3  |4 
     locals:  |xmm0|SINGLE  |-  |-  |-  |-   <||@
  Comment 250 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 275 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 323 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 329 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 329 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 335 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 335 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5038[java.lang.Math.round(float)]"
  method "HotSpotCompilation-5038[java.lang.Math.round(float)]"
  date 1724269749516
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789aeb0b00 89842400c0feff4883ec189041817f20000000000f85db00000090909090909090909090909048896c2410c5f97ec18bc181e00000807fc1e81741ba95000000442bd041f7c2e0ffffff0f85480000009090909085c90f8c6f000000909090909090909090909090909081e1ffff7f008bc181c800008000418bcad3e8ffc0d1e8488b6c24104883c418493ba7500400000f876e000000c3909090909090909090909090c5fa2cc081f8000000800f8465000000488b6c24104883c418493ba7500400000f876b000000c39090909090909041c78784040000ede0ffff49c7879004000014000000e88da58dfe0f1f84000000000048896c2410e821a68bfee916fffffff4488d0d7effffff49898f68040000e9e8b38dfef4c5f82ec07b07b800000000eb8ec5f1efc9c5f82ec17684f7d0eb80f4488d0d81ffffff49898f68040000e9b8b38dfef4e8b246a1fef4e8cca28dfef4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [xmm0|SINGLE, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 NOP  <||@
  Comment 36 22 NOP  <||@
  Comment 37 24 NOP  <||@
  Comment 38 26 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 43 28 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7ed0221c slotKind: QWORD  <||@
  Comment 43 32 rcx|DWORD = MOVD value: xmm0|SINGLE size: DWORD  <||@
  Comment 47 34 rax|DWORD = AND x: rcx|DWORD y: 2139095040 size: DWORD  <||@
  Comment 55 36 rax|DWORD = SHR x: rax|DWORD y: 23 size: DWORD  <||@
  Comment 58 38 r10|DWORD = MOVE input: int[149|0x95]  <||@
  Comment 64 40 r10|DWORD = SUB (x: r10|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 67 42 TESTCONSTBRANCH x: r10|DWORD trueDestinationProbability: 0.9999812855612068 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -32 size: DWORD  <||@
  Comment 80 block B1 null  <||@
  Comment 80 44 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 80 46 NOP  <||@
  Comment 81 48 NOP  <||@
  Comment 82 50 NOP  <||@
  Comment 83 52 NOP  <||@
  Comment 84 54 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD  <||@
  Comment 92 block B3 null  <||@
  Comment 92 56 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 92 58 NOP  <||@
  Comment 93 60 NOP  <||@
  Comment 94 62 NOP  <||@
  Comment 95 64 NOP  <||@
  Comment 96 66 NOP  <||@
  Comment 97 68 NOP  <||@
  Comment 98 70 NOP  <||@
  Comment 99 72 NOP  <||@
  Comment 100 74 NOP  <||@
  Comment 101 76 NOP  <||@
  Comment 102 78 NOP  <||@
  Comment 103 80 NOP  <||@
  Comment 104 82 NOP  <||@
  Comment 105 84 NOP  <||@
  Comment 106 86 rcx|DWORD = AND x: rcx|DWORD y: 8388607 size: DWORD  <||@
  Comment 112 88 rax|DWORD = OR x: rcx|DWORD y: 8388608 size: DWORD  <||@
  Comment 120 90 rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 123 92 rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 125 94 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 127 96 rax|DWORD = SHR value: rax|DWORD size: DWORD  <||@
  Comment 129 100 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 138 POLL_RETURN_FAR  <||@
  Comment 152 block B4 null  <||@
  Comment 152 102 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 152 104 NOP  <||@
  Comment 153 106 NOP  <||@
  Comment 154 108 NOP  <||@
  Comment 155 110 NOP  <||@
  Comment 156 112 NOP  <||@
  Comment 157 114 NOP  <||@
  Comment 158 116 NOP  <||@
  Comment 159 118 NOP  <||@
  Comment 160 120 NOP  <||@
  Comment 161 122 NOP  <||@
  Comment 162 124 NOP  <||@
  Comment 163 126 NOP  <||@
  Comment 164 128 rax|DWORD = AMD64CONVERTFLOATTOINTEGER ~srcValue: xmm0|SINGLE tmpValue: xmm1|SINGLE canBeNaN: true canOverflow: true opcode: jdk.graal.compiler.core.amd64.AMD64ArithmeticLIRGenerator$$Lambda/0x00007f782c364f90@46b8258  <||@
  Comment 180 132 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 189 POLL_RETURN_FAR  <||@
  Comment 203 block B2 null  <||@
  Comment 203 134 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 203 136 NOP  <||@
  Comment 204 138 NOP  <||@
  Comment 205 140 NOP  <||@
  Comment 206 142 NOP  <||@
  Comment 207 144 NOP  <||@
  Comment 208 146 NOP  <||@
  Comment 209 148 NOP  <||@
  Comment 210 150 MOV x: [r15|QWORD + 1156] y: -7955 size: DWORD  <||@
  Comment 221 152 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 232 154 DEOPT info [bci:0]  <||@
  Comment 232 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 237 []at java.lang.Math.round(Math.java:776) [bci: 0, duringCall: false, rethrow: false]
              |0            |1  |2  |3  |4 
     locals:  |xmm0|SINGLE  |-  |-  |-  |-   <||@
  Comment 250 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 275 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 323 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 329 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 329 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 335 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 335 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
