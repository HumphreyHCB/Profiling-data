begin_compilation
  name " HotSpotCompilation-11056[java.util.BitSet.get(int)]"
  method "HotSpotCompilation-11056[java.util.BitSet.get(int)]"
  date 1724269767663
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v74 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.BitSet
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v94 v93 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v5 j21 i92 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_1
code: ResolvedJavaMethodBytecode<BitSet.get(int)>
localsSize: 3
locksSize: 0
sourceFile: BitSet.java
sourceLine: 625
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v82 i90 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:625) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5 i27 i32 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:625) [bci: 1]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:625) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v72 
falseSuccessor: v73 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v72 #falseSuccessor: v73  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:625) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid j39 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 49]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j81 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:625) [bci: 1]
rawvalue: -18195
stableDimension: 0
stamp: i32 [-18195]
stampKind: i32
value: int[-18195|0xffffffffffffb8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i80 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:625) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v72 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: i88 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i88  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i88 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BitSet.wordsInUse
memoryOrder: PLAIN
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 42]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v93 
lastLocationAccess: - 
=== Succesors ===
next: v17 
=== Usages ===
v14 
=== Predecessor ===
v73 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v93 lastLocationAccess: - #next: v17  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.wordIndex(BitSet.java:115) [bci: 1]
at java.util.BitSet.get(BitSet.java:630) [bci: 36]
rawvalue: 6
stableDimension: 0
stamp: i32 [6]
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i92 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i92 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 67108863] bits:000000xxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i2 
y: i11 
=== Succesors ===
=== Usages ===
v14 j58 v48 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i2 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 45]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i92 
y: i88 
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i92 y: i88  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 45]
profileData: PROFILED designatedSuccessorProbability: 0.7491515891152227
stamp: void
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v16 
falseSuccessor: v15 
=== Usages ===
=== Predecessor ===
i88 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v16 #falseSuccessor: v15  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: a89 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a89  <|@  <|@
f <@~|@floating>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a89 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a89 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BitSet.words
memoryOrder: PLAIN
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 49]
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v94 
lastLocationAccess: - 
=== Succesors ===
next: i90 
=== Usages ===
a42 v95 
=== Predecessor ===
v16 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v94 lastLocationAccess: - #next: i90  <|@  <|@
f <@~|@floating>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a89 
=== Succesors ===
=== Usages ===
i90 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a89  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i90 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-11275|0xffffffffffffd3f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 53]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v95 
lastLocationAccess: - 
=== Succesors ===
next: v70 
=== Usages ===
v48 
=== Predecessor ===
a89 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v95 lastLocationAccess: - #next: v70  <|@  <|@
f <@~|@floating>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 53]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i92 
y: i90 
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i92 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 53]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v48 
=== Succesors ===
trueSuccessor: v67 
falseSuccessor: v69 
=== Usages ===
=== Predecessor ===
i90 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v48 #trueSuccessor: v67 #falseSuccessor: v69  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: j91 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j91  <|@  <|@
f <@~|@floating>@ <|@
tid a42 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 49]
op: Uncompress
stamp: a# long[]
=== Inputs ===
value: a89 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a89  <|@  <|@
f <@~|@floating>@ <|@
tid j58 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 53]
resultBits: 64
stamp: i64 [0 - 67108863] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i92 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i92  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: a42 
index: j58 
=== Succesors ===
=== Usages ===
j91 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a42 index: j58  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j91 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 53]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v96 
lastLocationAccess: - 
=== Succesors ===
next: v29 
=== Usages ===
v25 
=== Predecessor ===
v67 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v96 lastLocationAccess: - #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid j20 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 54]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 56]
stamp: i64
=== Inputs ===
x: j20 
y: i2 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j20 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 60]
stamp: void
=== Inputs ===
x: j21 
y: j91 
=== Succesors ===
=== Usages ===
i27 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j21 y: j91  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 60]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i27 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 60]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
condition: v25 
trueValue: i4 
falseValue: i26 
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v25 trueValue: i4 falseValue: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
j91 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v86  <|@  <|@
f <@~|@floating>@ <|@
tid j85 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:625) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j81 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i87 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:625) [bci: 1]
rawvalue: -12571
stableDimension: 0
stamp: i32 [-12571]
stampKind: i32
value: int[-12571|0xffffffffffffcee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i80 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:625) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v69 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:625) [bci: 1]
stamp: i32 [-18195 - -12571] bits:1...1xxx1xx01110x101
valueDescription: i32
=== Inputs ===
merge: v77 
values: i79 i87 
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v77 values: i79 i87  <|@  <|@
f <@~|@floating>@ <|@
tid j81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:625) [bci: 1]
stamp: i64 [0 - 20] bits:0...0x0x00
valueDescription: i64
=== Inputs ===
merge: v77 
values: j39 j85 
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v77 values: j39 j85  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:625) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v78 v86 
=== Succesors ===
next: v82 
=== Usages ===
i80 j81 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v78 v86 #next: v82  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:625) [bci: 1]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i80 
speculation: j81 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i80 speculation: j81  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598190503157054576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
v15 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 68]
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v30 
values: i27 i4 
=== Succesors ===
=== Usages ===
v34 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v30 values: i27 i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 68]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v29 v31 
=== Succesors ===
next: v34 
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v29 v31 #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 68]
stamp: void
=== Inputs ===
memoryMap: - 
result: i32 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i32  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4f0c9e9f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = SHR x: v1|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.7491515891152227 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@26560356 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [v4|QWORD[.] + v2|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = SHL (x: v7|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v8|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598190503157054576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-18195|0xffffffffffffb8ed], long[20|0x14]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-12571|0xffffffffffffcee5], long[0|0x0]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD, v11|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #142        // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #33         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #153        // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: aload_0       
    32: invokevirtual #13         // checkInvariants:()void
    35: iload_1       
    36: invokestatic  #12         // wordIndex:(int)int
    39: istore_2      
    40: iload_2       
    41: aload_0       
    42: getfield      #1          // wordsInUse:int
    45: if_icmpge     67
    48: aload_0       
    49: getfield      #2          // words:long[]
    52: iload_2       
    53: laload        
    54: lconst_1      
    55: iload_1       
    56: lshl          
    57: land          
    58: lconst_0      
    59: lcmp          
    60: ifeq          67
    63: iconst_1      
    64: goto          68
    67: iconst_0      
    68: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v74 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.BitSet
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v94 v93 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v5 j21 i92 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_1
code: ResolvedJavaMethodBytecode<BitSet.get(int)>
localsSize: 3
locksSize: 0
sourceFile: BitSet.java
sourceLine: 625
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v82 i90 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:625) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5 i27 i32 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:625) [bci: 1]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:625) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v72 
falseSuccessor: v73 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v72 #falseSuccessor: v73  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4f0c9e9f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:625) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid j39 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 49]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j81 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
result int[-18195|0xffffffffffffb8ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:625) [bci: 1]
rawvalue: -18195
stableDimension: 0
stamp: i32 [-18195]
stampKind: i32
value: int[-18195|0xffffffffffffb8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i80 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:625) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v72 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-18195|0xffffffffffffb8ed], long[20|0x14]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:628) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: i88 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i88  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i88 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BitSet.wordsInUse
memoryOrder: PLAIN
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 42]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v93 
lastLocationAccess: - 
=== Succesors ===
next: v17 
=== Usages ===
v14 
=== Predecessor ===
v73 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v93 lastLocationAccess: - #next: v17  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.wordIndex(BitSet.java:115) [bci: 1]
at java.util.BitSet.get(BitSet.java:630) [bci: 36]
rawvalue: 6
stableDimension: 0
stamp: i32 [6]
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i92 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i92 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 67108863] bits:000000xxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i2 
y: i11 
=== Succesors ===
=== Usages ===
v14 j58 v48 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i2 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 45]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i92 
y: i88 
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i92 y: i88  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 45]
profileData: PROFILED designatedSuccessorProbability: 0.7491515891152227
stamp: void
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v16 
falseSuccessor: v15 
=== Usages ===
=== Predecessor ===
i88 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v16 #falseSuccessor: v15  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = SHR x: v1|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.7491515891152227 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: a89 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a89  <|@  <|@
f <@~|@floating>@ <|@
tid v94 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a89 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a89 <|@
result v3|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BitSet.words
memoryOrder: PLAIN
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 49]
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v94 
lastLocationAccess: - 
=== Succesors ===
next: i90 
=== Usages ===
a42 v95 
=== Predecessor ===
v16 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v94 lastLocationAccess: - #next: i90  <|@  <|@
f <@~|@floating>@ <|@
tid v95 <|@
result [v3|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a89 
=== Succesors ===
=== Usages ===
i90 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a89  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i90 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-11275|0xffffffffffffd3f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 53]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v95 
lastLocationAccess: - 
=== Succesors ===
next: v70 
=== Usages ===
v48 
=== Predecessor ===
a89 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v95 lastLocationAccess: - #next: v70  <|@  <|@
f <@~|@floating>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 53]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i92 
y: i90 
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i92 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 53]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v48 
=== Succesors ===
trueSuccessor: v67 
falseSuccessor: v69 
=== Usages ===
=== Predecessor ===
i90 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v48 #trueSuccessor: v67 #falseSuccessor: v69  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: j91 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j91  <|@  <|@
f <@~|@floating>@ <|@
tid a42 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 49]
op: Uncompress
stamp: a# long[]
=== Inputs ===
value: a89 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a89  <|@  <|@
f <@~|@floating>@ <|@
tid j58 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 53]
resultBits: 64
stamp: i64 [0 - 67108863] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i92 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i92  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
result [v4|QWORD[.] + v2|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: a42 
index: j58 
=== Succesors ===
=== Usages ===
j91 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a42 index: j58  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j91 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 53]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v96 
lastLocationAccess: - 
=== Succesors ===
next: v29 
=== Usages ===
v25 
=== Predecessor ===
v67 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v96 lastLocationAccess: - #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid j20 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 54]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j21 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 56]
stamp: i64
=== Inputs ===
x: j20 
y: i2 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j20 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 60]
stamp: void
=== Inputs ===
x: j21 
y: j91 
=== Succesors ===
=== Usages ===
i27 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j21 y: j91  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 60]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i27 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 60]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
condition: v25 
trueValue: i4 
falseValue: i26 
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v25 trueValue: i4 falseValue: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
j91 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@26560356 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [v4|QWORD[.] + v2|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = SHL (x: v7|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v8|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v86  <|@  <|@
f <@~|@floating>@ <|@
tid j85 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:625) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j81 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i87 <|@
result int[-12571|0xffffffffffffcee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:625) [bci: 1]
rawvalue: -12571
stableDimension: 0
stamp: i32 [-12571]
stampKind: i32
value: int[-12571|0xffffffffffffcee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i80 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:625) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v69 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-12571|0xffffffffffffcee5], long[0|0x0]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i80 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:625) [bci: 1]
stamp: i32 [-18195 - -12571] bits:1...1xxx1xx01110x101
valueDescription: i32
=== Inputs ===
merge: v77 
values: i79 i87 
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v77 values: i79 i87  <|@  <|@
f <@~|@floating>@ <|@
tid j81 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:625) [bci: 1]
stamp: i64 [0 - 20] bits:0...0x0x00
valueDescription: i64
=== Inputs ===
merge: v77 
values: j39 j85 
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v77 values: j39 j85  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:625) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v78 v86 
=== Succesors ===
next: v82 
=== Usages ===
i80 j81 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v78 v86 #next: v82  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:625) [bci: 1]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i80 
speculation: j81 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i80 speculation: j81  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD, v11|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598190503157054576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
v15 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i32 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 68]
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v30 
values: i27 i4 
=== Succesors ===
=== Usages ===
v34 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v30 values: i27 i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 68]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v29 v31 
=== Succesors ===
next: v34 
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v29 v31 #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.get(BitSet.java:631) [bci: 68]
stamp: void
=== Inputs ===
memoryMap: - 
result: i32 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i32  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4f0c9e9f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = SHR x: v1|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.7491515891152227 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@26560356 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [v4|QWORD[.] + v2|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = SHL (x: v7|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v8|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598190503157054576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-18195|0xffffffffffffb8ed], long[20|0x14]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-12571|0xffffffffffffcee5], long[0|0x0]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD, v11|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #142        // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #33         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #153        // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: aload_0       
    32: invokevirtual #13         // checkInvariants:()void
    35: iload_1       
    36: invokestatic  #12         // wordIndex:(int)int
    39: istore_2      
    40: iload_2       
    41: aload_0       
    42: getfield      #1          // wordsInUse:int
    45: if_icmpge     67
    48: aload_0       
    49: getfield      #2          // words:long[]
    52: iload_2       
    53: laload        
    54: lconst_1      
    55: iload_1       
    56: lshl          
    57: land          
    58: lconst_0      
    59: lcmp          
    60: ifeq          67
    63: iconst_1      
    64: goto          68
    67: iconst_0      
    68: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4f0c9e9f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = SHR x: v1|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.7491515891152227 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@26560356 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [v4|QWORD[.] + v2|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = SHL (x: v7|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v8|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598190503157054576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-18195|0xffffffffffffb8ed], long[20|0x14]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-12571|0xffffffffffffcee5], long[0|0x0]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD, v11|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #142        // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #33         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #153        // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: aload_0       
    32: invokevirtual #13         // checkInvariants:()void
    35: iload_1       
    36: invokestatic  #12         // wordIndex:(int)int
    39: istore_2      
    40: iload_2       
    41: aload_0       
    42: getfield      #1          // wordsInUse:int
    45: if_icmpge     67
    48: aload_0       
    49: getfield      #2          // words:long[]
    52: iload_2       
    53: laload        
    54: lconst_1      
    55: iload_1       
    56: lshl          
    57: land          
    58: lconst_0      
    59: lcmp          
    60: ifeq          67
    63: iconst_1      
    64: goto          68
    67: iconst_0      
    68: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4f0c9e9f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = SHR x: v1|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.7491515891152227 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@26560356 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [v4|QWORD[.] + v2|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = SHL (x: v7|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v8|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598190503157054576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-18195|0xffffffffffffb8ed], long[20|0x14]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-12571|0xffffffffffffcee5], long[0|0x0]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD, v11|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #142        // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #33         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #153        // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: aload_0       
    32: invokevirtual #13         // checkInvariants:()void
    35: iload_1       
    36: invokestatic  #12         // wordIndex:(int)int
    39: istore_2      
    40: iload_2       
    41: aload_0       
    42: getfield      #1          // wordsInUse:int
    45: if_icmpge     67
    48: aload_0       
    49: getfield      #2          // words:long[]
    52: iload_2       
    53: laload        
    54: lconst_1      
    55: iload_1       
    56: lshl          
    57: land          
    58: lconst_0      
    59: lcmp          
    60: ifeq          67
    63: iconst_1      
    64: goto          68
    67: iconst_0      
    68: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4f0c9e9f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = SHR x: v1|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.7491515891152227 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@26560356 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [v4|QWORD[.] + v2|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = SHL (x: v7|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v8|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598190503157054576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-18195|0xffffffffffffb8ed], long[20|0x14]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-12571|0xffffffffffffcee5], long[0|0x0]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD, v11|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #142        // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #33         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #153        // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: aload_0       
    32: invokevirtual #13         // checkInvariants:()void
    35: iload_1       
    36: invokestatic  #12         // wordIndex:(int)int
    39: istore_2      
    40: iload_2       
    41: aload_0       
    42: getfield      #1          // wordsInUse:int
    45: if_icmpge     67
    48: aload_0       
    49: getfield      #2          // words:long[]
    52: iload_2       
    53: laload        
    54: lconst_1      
    55: iload_1       
    56: lshl          
    57: land          
    58: lconst_0      
    59: lcmp          
    60: ifeq          67
    63: iconst_1      
    64: goto          68
    67: iconst_0      
    68: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4f0c9e9f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = SHR x: v1|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.7491515891152227 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@26560356 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [v4|QWORD[.] + v2|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = SHL (x: v7|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v8|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598190503157054576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-18195|0xffffffffffffb8ed], long[20|0x14]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-12571|0xffffffffffffcee5], long[0|0x0]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD, v11|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #142        // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #33         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #153        // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: aload_0       
    32: invokevirtual #13         // checkInvariants:()void
    35: iload_1       
    36: invokestatic  #12         // wordIndex:(int)int
    39: istore_2      
    40: iload_2       
    41: aload_0       
    42: getfield      #1          // wordsInUse:int
    45: if_icmpge     67
    48: aload_0       
    49: getfield      #2          // words:long[]
    52: iload_2       
    53: laload        
    54: lconst_1      
    55: iload_1       
    56: lshl          
    57: land          
    58: lconst_0      
    59: lcmp          
    60: ifeq          67
    63: iconst_1      
    64: goto          68
    67: iconst_0      
    68: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4f0c9e9f slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction v2|DWORD = SHR x: v1|DWORD y: 6 size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.7491515891152227 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@26560356 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction v5|QWORD = MOV input: [v4|QWORD[.] + v2|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   90  <|@ instruction v7|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction v6|QWORD = SHL (x: v7|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: v5|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction v8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction v9|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v8|DWORD) condition: = <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598190503157054576
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  114  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [int[-18195|0xffffffffffffb8ed], long[20|0x14]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [int[-12571|0xffffffffffffcee5], long[0|0x0]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  156  <|@ instruction [v10|DWORD, v11|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v11|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #142        // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #33         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #153        // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: aload_0       
    32: invokevirtual #13         // checkInvariants:()void
    35: iload_1       
    36: invokestatic  #12         // wordIndex:(int)int
    39: istore_2      
    40: iload_2       
    41: aload_0       
    42: getfield      #1          // wordsInUse:int
    45: if_icmpge     67
    48: aload_0       
    49: getfield      #2          // words:long[]
    52: iload_2       
    53: laload        
    54: lconst_1      
    55: iload_1       
    56: lshl          
    57: land          
    58: lconst_0      
    59: lcmp          
    60: ifeq          67
    63: iconst_1      
    64: goto          68
    67: iconst_0      
    68: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4f0c9e9f slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction v2|DWORD = SHR x: v1|DWORD y: 6 size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.7491515891152227 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@26560356 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction v5|QWORD = MOV input: [v4|QWORD[.] + v2|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   90  <|@ instruction v7|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction v6|QWORD = SHL (x: v7|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: v5|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction v8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction v9|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v8|DWORD) condition: = <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598190503157054576
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  114  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [int[-18195|0xffffffffffffb8ed], long[20|0x14]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [int[-12571|0xffffffffffffcee5], long[0|0x0]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  156  <|@ instruction [v10|DWORD, v11|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v11|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #142        // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #33         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #153        // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: aload_0       
    32: invokevirtual #13         // checkInvariants:()void
    35: iload_1       
    36: invokestatic  #12         // wordIndex:(int)int
    39: istore_2      
    40: iload_2       
    41: aload_0       
    42: getfield      #1          // wordsInUse:int
    45: if_icmpge     67
    48: aload_0       
    49: getfield      #2          // words:long[]
    52: iload_2       
    53: laload        
    54: lconst_1      
    55: iload_1       
    56: lshl          
    57: land          
    58: lconst_0      
    59: lcmp          
    60: ifeq          67
    63: iconst_1      
    64: goto          68
    67: iconst_0      
    68: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v12|d [0, 1[[132, 134[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v1|d [0, 1[[92, 95[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 24[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 18[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 22[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [22, 60[[136, 177[22 MustHaveRegister 42 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|d [24, 92[[136, 177[24 MustHaveRegister 26 MustHaveRegister 40 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d v1|d [40, 88[40 MustHaveRegister 42 MustHaveRegister 58 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [56, 86[56 MustHaveRegister 58 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q v3|d [86, 88[86 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q -1 [88, 96[88 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q v7|q [94, 96[94 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q -1 [90, 94[90 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [98, 101[98 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d v12|d [100, 103[100 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [156, 172[172 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q -1 [156, 174[174 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d v9|d [114, 132[132 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v12|d [0, 1[[132, 134[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v1|d [0, 1[[92, 95[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 24[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 18[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 22[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [22, 60[[136, 177[22 MustHaveRegister 42 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [24, 92[[136, 177[24 MustHaveRegister 26 MustHaveRegister 40 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d v1|d [40, 88[40 MustHaveRegister 42 MustHaveRegister 58 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [56, 86[56 MustHaveRegister 58 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q v3|d [86, 88[86 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q -1 [88, 96[88 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r10|q]" v6|q v7|q [94, 96[94 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[r10|q]" v7|q -1 [90, 94[90 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d -1 [98, 101[98 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r10|d]" v9|d v12|d [100, 103[100 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[r10|d]" v10|d -1 [156, 172[172 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[r11|q]" v11|q -1 [156, 174[174 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[r10|d]" v12|d v9|d [114, 132[132 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4f0c9e9f slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction v2|DWORD = SHR x: v1|DWORD y: 6 size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.7491515891152227 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@26560356 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction v5|QWORD = MOV input: [v4|QWORD[.] + v2|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   90  <|@ instruction v7|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction v6|QWORD = SHL (x: v7|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: v5|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction v8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction v9|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v8|DWORD) condition: = <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598190503157054576
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  114  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [int[-18195|0xffffffffffffb8ed], long[20|0x14]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [int[-12571|0xffffffffffffcee5], long[0|0x0]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  156  <|@ instruction [v10|DWORD, v11|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v11|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #142        // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #33         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #153        // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: aload_0       
    32: invokevirtual #13         // checkInvariants:()void
    35: iload_1       
    36: invokestatic  #12         // wordIndex:(int)int
    39: istore_2      
    40: iload_2       
    41: aload_0       
    42: getfield      #1          // wordsInUse:int
    45: if_icmpge     67
    48: aload_0       
    49: getfield      #2          // words:long[]
    52: iload_2       
    53: laload        
    54: lconst_1      
    55: iload_1       
    56: lshl          
    57: land          
    58: lconst_0      
    59: lcmp          
    60: ifeq          67
    63: iconst_1      
    64: goto          68
    67: iconst_0      
    68: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v12|d [0, 1[[132, 134[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v1|d [0, 1[[92, 95[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 24[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 18[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 22[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [22, 60[[136, 177[22 MustHaveRegister 42 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [24, 92[[136, 177[24 MustHaveRegister 26 MustHaveRegister 40 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d v1|d [40, 88[40 MustHaveRegister 42 MustHaveRegister 58 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [56, 86[56 MustHaveRegister 58 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q v3|d [86, 88[86 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q -1 [88, 96[88 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r10|q]" v6|q v7|q [94, 96[94 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[r10|q]" v7|q -1 [90, 94[90 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d -1 [98, 101[98 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r10|d]" v9|d v12|d [100, 103[100 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[r10|d]" v10|d -1 [156, 172[172 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[r11|q]" v11|q -1 [156, 174[174 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[r10|d]" v12|d v9|d [114, 132[132 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4f0c9e9f slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction v2|DWORD = SHR x: v1|DWORD y: 6 size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.7491515891152227 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@26560356 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction v5|QWORD = MOV input: [v4|QWORD[.] + v2|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   90  <|@ instruction v7|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction v6|QWORD = SHL (x: v7|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: v5|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction v8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction v9|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v8|DWORD) condition: = <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598190503157054576
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  114  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [int[-18195|0xffffffffffffb8ed], long[20|0x14]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [int[-12571|0xffffffffffffcee5], long[0|0x0]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  156  <|@ instruction [v10|DWORD, v11|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v11|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #142        // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #33         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #153        // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: aload_0       
    32: invokevirtual #13         // checkInvariants:()void
    35: iload_1       
    36: invokestatic  #12         // wordIndex:(int)int
    39: istore_2      
    40: iload_2       
    41: aload_0       
    42: getfield      #1          // wordsInUse:int
    45: if_icmpge     67
    48: aload_0       
    49: getfield      #2          // words:long[]
    52: iload_2       
    53: laload        
    54: lconst_1      
    55: iload_1       
    56: lshl          
    57: land          
    58: lconst_0      
    59: lcmp          
    60: ifeq          67
    63: iconst_1      
    64: goto          68
    67: iconst_0      
    68: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v12|d [0, 1[[132, 134[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v1|d [0, 1[[92, 95[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 24[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 18[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 22[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [22, 60[[136, 177[22 MustHaveRegister 42 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [24, 92[[136, 177[24 MustHaveRegister 26 MustHaveRegister 40 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d v1|d [40, 88[40 MustHaveRegister 42 MustHaveRegister 58 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [56, 86[56 MustHaveRegister 58 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q v3|d [86, 88[86 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q -1 [88, 96[88 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r10|q]" v6|q v7|q [94, 96[94 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[r10|q]" v7|q -1 [90, 94[90 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d -1 [98, 101[98 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r10|d]" v9|d v12|d [100, 103[100 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[r10|d]" v10|d -1 [156, 172[172 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[r11|q]" v11|q -1 [156, 174[174 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[r10|d]" v12|d v9|d [114, 132[132 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4f0c9e9f slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction v2|DWORD = SHR x: v1|DWORD y: 6 size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.7491515891152227 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@26560356 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction v5|QWORD = MOV input: [v4|QWORD[.] + v2|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   90  <|@ instruction v7|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction v6|QWORD = SHL (x: v7|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: v5|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction v8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction v9|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v8|DWORD) condition: = <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598190503157054576
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  114  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: int[-18195|0xffffffffffffb8ed] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: int[-12571|0xffffffffffffcee5] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  156  <|@ instruction [v10|DWORD, v11|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v11|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #142        // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #33         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #153        // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: aload_0       
    32: invokevirtual #13         // checkInvariants:()void
    35: iload_1       
    36: invokestatic  #12         // wordIndex:(int)int
    39: istore_2      
    40: iload_2       
    41: aload_0       
    42: getfield      #1          // wordsInUse:int
    45: if_icmpge     67
    48: aload_0       
    49: getfield      #2          // words:long[]
    52: iload_2       
    53: laload        
    54: lconst_1      
    55: iload_1       
    56: lshl          
    57: land          
    58: lconst_0      
    59: lcmp          
    60: ifeq          67
    63: iconst_1      
    64: goto          68
    67: iconst_0      
    68: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4f0c9e9f slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction v2|DWORD = SHR x: v1|DWORD y: 6 size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.7491515891152227 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@26560356 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction v5|QWORD = MOV input: [v4|QWORD[.] + v2|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   90  <|@ instruction v7|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction v6|QWORD = SHL (x: v7|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: v5|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction v8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction v9|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v8|DWORD) condition: = <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598190503157054576
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: int[-18195|0xffffffffffffb8ed] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: int[-12571|0xffffffffffffcee5] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v11|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #142        // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #33         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #153        // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: aload_0       
    32: invokevirtual #13         // checkInvariants:()void
    35: iload_1       
    36: invokestatic  #12         // wordIndex:(int)int
    39: istore_2      
    40: iload_2       
    41: aload_0       
    42: getfield      #1          // wordsInUse:int
    45: if_icmpge     67
    48: aload_0       
    49: getfield      #2          // words:long[]
    52: iload_2       
    53: laload        
    54: lconst_1      
    55: iload_1       
    56: lshl          
    57: land          
    58: lconst_0      
    59: lcmp          
    60: ifeq          67
    63: iconst_1      
    64: goto          68
    67: iconst_0      
    68: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4f0c9e9f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction rcx|DWORD = SHR x: rdx|DWORD y: 6 size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.7491515891152227 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@26560356 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOV input: [rax|QWORD[.] + rcx|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   90  <|@ instruction r10|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598190503157054576
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18195|0xffffffffffffb8ed] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-12571|0xffffffffffffcee5] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #142        // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #33         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #153        // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: aload_0       
    32: invokevirtual #13         // checkInvariants:()void
    35: iload_1       
    36: invokestatic  #12         // wordIndex:(int)int
    39: istore_2      
    40: iload_2       
    41: aload_0       
    42: getfield      #1          // wordsInUse:int
    45: if_icmpge     67
    48: aload_0       
    49: getfield      #2          // words:long[]
    52: iload_2       
    53: laload        
    54: lconst_1      
    55: iload_1       
    56: lshl          
    57: land          
    58: lconst_0      
    59: lcmp          
    60: ifeq          67
    63: iconst_1      
    64: goto          68
    67: iconst_0      
    68: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4f0c9e9f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction rcx|DWORD = SHR x: rdx|DWORD y: 6 size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.7491515891152227 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@26560356 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOV input: [rax|QWORD[.] + rcx|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   90  <|@ instruction r10|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598190503157054576
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18195|0xffffffffffffb8ed] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-12571|0xffffffffffffcee5] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #142        // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #33         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #153        // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: aload_0       
    32: invokevirtual #13         // checkInvariants:()void
    35: iload_1       
    36: invokestatic  #12         // wordIndex:(int)int
    39: istore_2      
    40: iload_2       
    41: aload_0       
    42: getfield      #1          // wordsInUse:int
    45: if_icmpge     67
    48: aload_0       
    49: getfield      #2          // words:long[]
    52: iload_2       
    53: laload        
    54: lconst_1      
    55: iload_1       
    56: lshl          
    57: land          
    58: lconst_0      
    59: lcmp          
    60: ifeq          67
    63: iconst_1      
    64: goto          68
    67: iconst_0      
    68: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4f0c9e9f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction rcx|DWORD = SHR x: rdx|DWORD y: 6 size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.7491515891152227 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@26560356 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOV input: [rax|QWORD[.] + rcx|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   90  <|@ instruction r10|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598190503157054576
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18195|0xffffffffffffb8ed] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-12571|0xffffffffffffcee5] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #142        // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #33         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #153        // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: aload_0       
    32: invokevirtual #13         // checkInvariants:()void
    35: iload_1       
    36: invokestatic  #12         // wordIndex:(int)int
    39: istore_2      
    40: iload_2       
    41: aload_0       
    42: getfield      #1          // wordsInUse:int
    45: if_icmpge     67
    48: aload_0       
    49: getfield      #2          // words:long[]
    52: iload_2       
    53: laload        
    54: lconst_1      
    55: iload_1       
    56: lshl          
    57: land          
    58: lconst_0      
    59: lcmp          
    60: ifeq          67
    63: iconst_1      
    64: goto          68
    67: iconst_0      
    68: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4f0c9e9f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction rcx|DWORD = SHR x: rdx|DWORD y: 6 size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.7491515891152227 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@26560356 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOV input: [rax|QWORD[.] + rcx|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   90  <|@ instruction r10|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598190503157054576
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18195|0xffffffffffffb8ed] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-12571|0xffffffffffffcee5] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #142        // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #33         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #153        // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: aload_0       
    32: invokevirtual #13         // checkInvariants:()void
    35: iload_1       
    36: invokestatic  #12         // wordIndex:(int)int
    39: istore_2      
    40: iload_2       
    41: aload_0       
    42: getfield      #1          // wordsInUse:int
    45: if_icmpge     67
    48: aload_0       
    49: getfield      #2          // words:long[]
    52: iload_2       
    53: laload        
    54: lconst_1      
    55: iload_1       
    56: lshl          
    57: land          
    58: lconst_0      
    59: lcmp          
    60: ifeq          67
    63: iconst_1      
    64: goto          68
    67: iconst_0      
    68: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4f0c9e9f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction rcx|DWORD = SHR x: rdx|DWORD y: 6 size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.7491515891152227 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@26560356 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOV input: [rax|QWORD[.] + rcx|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   90  <|@ instruction r10|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598190503157054576
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18195|0xffffffffffffb8ed] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-12571|0xffffffffffffcee5] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #142        // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #33         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #153        // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: aload_0       
    32: invokevirtual #13         // checkInvariants:()void
    35: iload_1       
    36: invokestatic  #12         // wordIndex:(int)int
    39: istore_2      
    40: iload_2       
    41: aload_0       
    42: getfield      #1          // wordsInUse:int
    45: if_icmpge     67
    48: aload_0       
    49: getfield      #2          // words:long[]
    52: iload_2       
    53: laload        
    54: lconst_1      
    55: iload_1       
    56: lshl          
    57: land          
    58: lconst_0      
    59: lcmp          
    60: ifeq          67
    63: iconst_1      
    64: goto          68
    67: iconst_0      
    68: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4f0c9e9f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction rcx|DWORD = SHR x: rdx|DWORD y: 6 size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.7491515891152227 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@26560356 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOV input: [rax|QWORD[.] + rcx|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   90  <|@ instruction r10|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598190503157054576
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18195|0xffffffffffffb8ed] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-12571|0xffffffffffffcee5] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #142        // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #33         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #153        // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: aload_0       
    32: invokevirtual #13         // checkInvariants:()void
    35: iload_1       
    36: invokestatic  #12         // wordIndex:(int)int
    39: istore_2      
    40: iload_2       
    41: aload_0       
    42: getfield      #1          // wordsInUse:int
    45: if_icmpge     67
    48: aload_0       
    49: getfield      #2          // words:long[]
    52: iload_2       
    53: laload        
    54: lconst_1      
    55: iload_1       
    56: lshl          
    57: land          
    58: lconst_0      
    59: lcmp          
    60: ifeq          67
    63: iconst_1      
    64: goto          68
    67: iconst_0      
    68: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4f0c9e9f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction rcx|DWORD = SHR x: rdx|DWORD y: 6 size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.7491515891152227 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@26560356 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOV input: [rax|QWORD[.] + rcx|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   90  <|@ instruction r10|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598190503157054576
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18195|0xffffffffffffb8ed] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-12571|0xffffffffffffcee5] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #142        // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #33         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #153        // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: aload_0       
    32: invokevirtual #13         // checkInvariants:()void
    35: iload_1       
    36: invokestatic  #12         // wordIndex:(int)int
    39: istore_2      
    40: iload_2       
    41: aload_0       
    42: getfield      #1          // wordsInUse:int
    45: if_icmpge     67
    48: aload_0       
    49: getfield      #2          // words:long[]
    52: iload_2       
    53: laload        
    54: lconst_1      
    55: iload_1       
    56: lshl          
    57: land          
    58: lconst_0      
    59: lcmp          
    60: ifeq          67
    63: iconst_1      
    64: goto          68
    67: iconst_0      
    68: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4f0c9e9f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction rcx|DWORD = SHR x: rdx|DWORD y: 6 size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.7491515891152227 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@26560356 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOV input: [rax|QWORD[.] + rcx|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   90  <|@ instruction r10|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598190503157054576
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18195|0xffffffffffffb8ed] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-12571|0xffffffffffffcee5] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #142        // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #33         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #153        // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: aload_0       
    32: invokevirtual #13         // checkInvariants:()void
    35: iload_1       
    36: invokestatic  #12         // wordIndex:(int)int
    39: istore_2      
    40: iload_2       
    41: aload_0       
    42: getfield      #1          // wordsInUse:int
    45: if_icmpge     67
    48: aload_0       
    49: getfield      #2          // words:long[]
    52: iload_2       
    53: laload        
    54: lconst_1      
    55: iload_1       
    56: lshl          
    57: land          
    58: lconst_0      
    59: lcmp          
    60: ifeq          67
    63: iconst_1      
    64: goto          68
    67: iconst_0      
    68: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4f0c9e9f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction rcx|DWORD = SHR x: rdx|DWORD y: 6 size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.7491515891152227 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@26560356 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOV input: [rax|QWORD[.] + rcx|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   90  <|@ instruction r10|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598190503157054576
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18195|0xffffffffffffb8ed] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-12571|0xffffffffffffcee5] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #142        // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #33         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #153        // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: aload_0       
    32: invokevirtual #13         // checkInvariants:()void
    35: iload_1       
    36: invokestatic  #12         // wordIndex:(int)int
    39: istore_2      
    40: iload_2       
    41: aload_0       
    42: getfield      #1          // wordsInUse:int
    45: if_icmpge     67
    48: aload_0       
    49: getfield      #2          // words:long[]
    52: iload_2       
    53: laload        
    54: lconst_1      
    55: iload_1       
    56: lshl          
    57: land          
    58: lconst_0      
    59: lcmp          
    60: ifeq          67
    63: iconst_1      
    64: goto          68
    67: iconst_0      
    68: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4f0c9e9f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction rcx|DWORD = SHR x: rdx|DWORD y: 6 size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.7491515891152227 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@26560356 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOV input: [rax|QWORD[.] + rcx|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   90  <|@ instruction r10|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598190503157054576
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18195|0xffffffffffffb8ed] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-12571|0xffffffffffffcee5] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #142        // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #33         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #153        // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: aload_0       
    32: invokevirtual #13         // checkInvariants:()void
    35: iload_1       
    36: invokestatic  #12         // wordIndex:(int)int
    39: istore_2      
    40: iload_2       
    41: aload_0       
    42: getfield      #1          // wordsInUse:int
    45: if_icmpge     67
    48: aload_0       
    49: getfield      #2          // words:long[]
    52: iload_2       
    53: laload        
    54: lconst_1      
    55: iload_1       
    56: lshl          
    57: land          
    58: lconst_0      
    59: lcmp          
    60: ifeq          67
    63: iconst_1      
    64: goto          68
    67: iconst_0      
    68: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4f0c9e9f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction rcx|DWORD = SHR x: rdx|DWORD y: 6 size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.7491515891152227 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@26560356 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOV input: [rax|QWORD[.] + rcx|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   90  <|@ instruction r10|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598190503157054576
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18195|0xffffffffffffb8ed] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-12571|0xffffffffffffcee5] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #142        // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #33         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #153        // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: aload_0       
    32: invokevirtual #13         // checkInvariants:()void
    35: iload_1       
    36: invokestatic  #12         // wordIndex:(int)int
    39: istore_2      
    40: iload_2       
    41: aload_0       
    42: getfield      #1          // wordsInUse:int
    45: if_icmpge     67
    48: aload_0       
    49: getfield      #2          // words:long[]
    52: iload_2       
    53: laload        
    54: lconst_1      
    55: iload_1       
    56: lshl          
    57: land          
    58: lconst_0      
    59: lcmp          
    60: ifeq          67
    63: iconst_1      
    64: goto          68
    67: iconst_0      
    68: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4f0c9e9f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction rcx|DWORD = SHR x: rdx|DWORD y: 6 size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.7491515891152227 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@26560356 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOV input: [rax|QWORD[.] + rcx|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   90  <|@ instruction r10|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598190503157054576
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18195|0xffffffffffffb8ed] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-12571|0xffffffffffffcee5] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #142        // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #33         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #153        // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: aload_0       
    32: invokevirtual #13         // checkInvariants:()void
    35: iload_1       
    36: invokestatic  #12         // wordIndex:(int)int
    39: istore_2      
    40: iload_2       
    41: aload_0       
    42: getfield      #1          // wordsInUse:int
    45: if_icmpge     67
    48: aload_0       
    49: getfield      #2          // words:long[]
    52: iload_2       
    53: laload        
    54: lconst_1      
    55: iload_1       
    56: lshl          
    57: land          
    58: lconst_0      
    59: lcmp          
    60: ifeq          67
    63: iconst_1      
    64: goto          68
    67: iconst_0      
    68: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4f0c9e9f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction rcx|DWORD = SHR x: rdx|DWORD y: 6 size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.7491515891152227 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4604922977180443080
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@26560356 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOV input: [rax|QWORD[.] + rcx|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   90  <|@ instruction r10|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr  102  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598190503157054576
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18195|0xffffffffffffb8ed] // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.BitSet.get(BitSet.java:625) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-12571|0xffffffffffffcee5] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #142        // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #33         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #153        // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: aload_0       
    32: invokevirtual #13         // checkInvariants:()void
    35: iload_1       
    36: invokestatic  #12         // wordIndex:(int)int
    39: istore_2      
    40: iload_2       
    41: aload_0       
    42: getfield      #1          // wordsInUse:int
    45: if_icmpge     67
    48: aload_0       
    49: getfield      #2          // words:long[]
    52: iload_2       
    53: laload        
    54: lconst_1      
    55: iload_1       
    56: lshl          
    57: land          
    58: lconst_0      
    59: lcmp          
    60: ifeq          67
    63: iconst_1      
    64: goto          68
    67: iconst_0      
    68: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f85e1000000909090909090909048896c241085d20f8c8800000090909090908bcac1e9063b4e0c0f8d6a00000090909090908b46143b0cc50c0000000f839200000090909090909090909090909048c1e003488b44c81049c7c2010000008bca49d3e24985c2b80000000041ba01000000440f44d09090909090909090418bc2488b6c24104883c418493ba7500400000f8760000000c390909041ba00000000ebd390909049c7c31400000041baedb8ffff90909090909090458997840400004d899f90040000e8000000000f1f84000000000090909049c7c30000000041bae5ceffffebcc48896c2410e800000000e910fffffff4488d0d8cffffff49898f68040000e9c2fefffff441c78784040000f5d3ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 71 20 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4f0c9e9f slotKind: QWORD  <||@
  Comment 71 26 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 79 block B2 null  <||@
  Comment 79 28 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 79 30 NOP  <||@
  Comment 80 32 NOP  <||@
  Comment 81 34 NOP  <||@
  Comment 82 36 NOP  <||@
  Comment 83 38 NOP  <||@
  Comment 84 40 rcx|DWORD = SHR x: rdx|DWORD y: 6 size: DWORD  <||@
  Comment 89 42 CMPBRANCH (x: rcx|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.7491515891152227 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 size: DWORD  <||@
  Comment 98 block B3 null  <||@
  Comment 98 44 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 98 46 NOP  <||@
  Comment 99 48 NOP  <||@
  Comment 100 50 NOP  <||@
  Comment 101 52 NOP  <||@
  Comment 102 54 NOP  <||@
  Comment 103 56 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 106 58 CMPBRANCH (x: rcx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0]  <||@
  Comment 106 [rax:0, rsi:0]at java.util.BitSet.get(BitSet.java:625) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 106 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 119 block B4 null  <||@
  Comment 119 60 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 119 62 NOP  <||@
  Comment 120 64 NOP  <||@
  Comment 121 66 NOP  <||@
  Comment 122 68 NOP  <||@
  Comment 123 70 NOP  <||@
  Comment 124 72 NOP  <||@
  Comment 125 74 NOP  <||@
  Comment 126 76 NOP  <||@
  Comment 127 78 NOP  <||@
  Comment 128 80 NOP  <||@
  Comment 129 82 NOP  <||@
  Comment 130 84 NOP  <||@
  Comment 131 86 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@26560356 encoding: base: 0 shift: 3  <||@
  Comment 135 88 rax|QWORD = MOV input: [rax|QWORD[.] + rcx|DWORD * 8 + 16] size: QWORD  <||@
  Comment 140 90 r10|QWORD = MOVE input: long[1|0x1]  <||@
  Comment 147 92 rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 149 94 r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 152 96 TEST (x: rax|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 155 98 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 160 100 r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: =  <||@
  Comment 170 102 JUMP ~outgoingValues: [] destination: B4 -> B8  <||@
  Comment 170 block B8 null  <||@
  Comment 170 114 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 170 116 NOP  <||@
  Comment 171 118 NOP  <||@
  Comment 172 120 NOP  <||@
  Comment 173 122 NOP  <||@
  Comment 174 124 NOP  <||@
  Comment 175 126 NOP  <||@
  Comment 176 128 NOP  <||@
  Comment 177 130 NOP  <||@
  Comment 178 132 rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 181 134 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 190 POLL_RETURN_FAR  <||@
  Comment 204 block B7 null  <||@
  Comment 204 104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 204 106 NOP  <||@
  Comment 205 108 NOP  <||@
  Comment 206 110 NOP  <||@
  Comment 207 -1 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 213 112 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 215 block B1 null  <||@
  Comment 215 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 215 138 NOP  <||@
  Comment 216 140 NOP  <||@
  Comment 217 142 NOP  <||@
  Comment 218 -1 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 225 -1 r10|DWORD = MOVE input: int[-18195|0xffffffffffffb8ed]  <||@
  Comment 231 144 JUMP ~outgoingValues: [] destination: B1 -> B6  <||@
  Comment 231 block B6 null  <||@
  Comment 231 156 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 231 158 NOP  <||@
  Comment 232 160 NOP  <||@
  Comment 233 162 NOP  <||@
  Comment 234 164 NOP  <||@
  Comment 235 166 NOP  <||@
  Comment 236 168 NOP  <||@
  Comment 237 170 NOP  <||@
  Comment 238 172 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 245 174 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 252 176 DEOPT info [bci:0]  <||@
  Comment 252 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 257 [rsi:0]at java.util.BitSet.get(BitSet.java:625) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 265 block B5 null  <||@
  Comment 265 146 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 265 148 NOP  <||@
  Comment 266 150 NOP  <||@
  Comment 267 152 NOP  <||@
  Comment 268 -1 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 275 -1 r10|DWORD = MOVE input: int[-12571|0xffffffffffffcee5]  <||@
  Comment 281 154 JUMP ~outgoingValues: [] destination: B5 -> B6  <||@
  Comment 288 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 313 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 341 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 346 [rax:0, rsi:0]at java.util.BitSet.get(BitSet.java:625) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 354 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 354 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 360 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 360 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-11056[java.util.BitSet.get(int)]"
  method "HotSpotCompilation-11056[java.util.BitSet.get(int)]"
  date 1724269767747
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af8b780 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3987ffe66669089842400c0feff4883ec189041817f20000000000f85e1000000909090909090909048896c241085d20f8c8800000090909090908bcac1e9063b4e0c0f8d6a00000090909090908b46143b0cc50c0000000f839200000090909090909090909090909048c1e003488b44c81049c7c2010000008bca49d3e24985c2b80000000041ba01000000440f44d09090909090909090418bc2488b6c24104883c418493ba7500400000f8760000000c390909041ba00000000ebd390909049c7c31400000041baedb8ffff90909090909090458997840400004d899f90040000e8f9f87ffe0f1f84000000000090909049c7c30000000041bae5ceffffebcc48896c2410e87bf97dfee910fffffff4488d0d8cffffff49898f68040000e9420780fef441c78784040000f5d3ffff49c7879004000000000000e8a0f87ffe0f1f840000000000e8199a93fef4e833f67ffef4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 71 20 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4f0c9e9f slotKind: QWORD  <||@
  Comment 71 26 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 79 block B2 null  <||@
  Comment 79 28 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 79 30 NOP  <||@
  Comment 80 32 NOP  <||@
  Comment 81 34 NOP  <||@
  Comment 82 36 NOP  <||@
  Comment 83 38 NOP  <||@
  Comment 84 40 rcx|DWORD = SHR x: rdx|DWORD y: 6 size: DWORD  <||@
  Comment 89 42 CMPBRANCH (x: rcx|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.7491515891152227 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B7 size: DWORD  <||@
  Comment 98 block B3 null  <||@
  Comment 98 44 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 98 46 NOP  <||@
  Comment 99 48 NOP  <||@
  Comment 100 50 NOP  <||@
  Comment 101 52 NOP  <||@
  Comment 102 54 NOP  <||@
  Comment 103 56 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 106 58 CMPBRANCH (x: rcx|DWORD, y: [rax|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD state [bci:0]  <||@
  Comment 106 [rax:0, rsi:0]at java.util.BitSet.get(BitSet.java:625) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 106 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 119 block B4 null  <||@
  Comment 119 60 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 119 62 NOP  <||@
  Comment 120 64 NOP  <||@
  Comment 121 66 NOP  <||@
  Comment 122 68 NOP  <||@
  Comment 123 70 NOP  <||@
  Comment 124 72 NOP  <||@
  Comment 125 74 NOP  <||@
  Comment 126 76 NOP  <||@
  Comment 127 78 NOP  <||@
  Comment 128 80 NOP  <||@
  Comment 129 82 NOP  <||@
  Comment 130 84 NOP  <||@
  Comment 131 86 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@26560356 encoding: base: 0 shift: 3  <||@
  Comment 135 88 rax|QWORD = MOV input: [rax|QWORD[.] + rcx|DWORD * 8 + 16] size: QWORD  <||@
  Comment 140 90 r10|QWORD = MOVE input: long[1|0x1]  <||@
  Comment 147 92 rcx|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 149 94 r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 152 96 TEST (x: rax|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 155 98 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 160 100 r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: =  <||@
  Comment 170 102 JUMP ~outgoingValues: [] destination: B4 -> B8  <||@
  Comment 170 block B8 null  <||@
  Comment 170 114 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 170 116 NOP  <||@
  Comment 171 118 NOP  <||@
  Comment 172 120 NOP  <||@
  Comment 173 122 NOP  <||@
  Comment 174 124 NOP  <||@
  Comment 175 126 NOP  <||@
  Comment 176 128 NOP  <||@
  Comment 177 130 NOP  <||@
  Comment 178 132 rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 181 134 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 190 POLL_RETURN_FAR  <||@
  Comment 204 block B7 null  <||@
  Comment 204 104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 204 106 NOP  <||@
  Comment 205 108 NOP  <||@
  Comment 206 110 NOP  <||@
  Comment 207 -1 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 213 112 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 215 block B1 null  <||@
  Comment 215 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 215 138 NOP  <||@
  Comment 216 140 NOP  <||@
  Comment 217 142 NOP  <||@
  Comment 218 -1 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 225 -1 r10|DWORD = MOVE input: int[-18195|0xffffffffffffb8ed]  <||@
  Comment 231 144 JUMP ~outgoingValues: [] destination: B1 -> B6  <||@
  Comment 231 block B6 null  <||@
  Comment 231 156 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 231 158 NOP  <||@
  Comment 232 160 NOP  <||@
  Comment 233 162 NOP  <||@
  Comment 234 164 NOP  <||@
  Comment 235 166 NOP  <||@
  Comment 236 168 NOP  <||@
  Comment 237 170 NOP  <||@
  Comment 238 172 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 245 174 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 252 176 DEOPT info [bci:0]  <||@
  Comment 252 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 257 [rsi:0]at java.util.BitSet.get(BitSet.java:625) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 265 block B5 null  <||@
  Comment 265 146 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 265 148 NOP  <||@
  Comment 266 150 NOP  <||@
  Comment 267 152 NOP  <||@
  Comment 268 -1 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 275 -1 r10|DWORD = MOVE input: int[-12571|0xffffffffffffcee5]  <||@
  Comment 281 154 JUMP ~outgoingValues: [] destination: B5 -> B6  <||@
  Comment 288 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 313 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 341 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 346 [rax:0, rsi:0]at java.util.BitSet.get(BitSet.java:625) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 354 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 354 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 360 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 360 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
