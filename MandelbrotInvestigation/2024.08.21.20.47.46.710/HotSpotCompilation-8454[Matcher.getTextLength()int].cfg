begin_compilation
  name " HotSpotCompilation-8454[java.util.regex.Matcher.getTextLength()]"
  method "HotSpotCompilation-8454[java.util.regex.Matcher.getTextLength()]"
  date 1724269749661
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a75 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a75  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.regex.Matcher
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v80 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a75 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a75 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.text
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 1]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v80 
lastLocationAccess: - 
=== Succesors ===
next: v76 
=== Usages ===
v84 v81 v83 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v80 lastLocationAccess: - #next: v76  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Matcher.getTextLength()>
localsSize: 1
locksSize: 0
sourceFile: Matcher.java
sourceLine: 1808
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v85 v76 i78 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a75 
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-6411|0xffffffffffffe6f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v84 
lastLocationAccess: - 
=== Succesors ===
next: v53 
=== Usages ===
v74 
=== Predecessor ===
a75 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v84 lastLocationAccess: - #next: v53  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v76 
y: v73 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v76 y: v73  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v74 
=== Succesors ===
trueSuccessor: v50 
falseSuccessor: v52 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v74 #trueSuccessor: v50 #falseSuccessor: v52  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a77 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a77  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a75 
=== Succesors ===
=== Usages ===
a77 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a77 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v81 
lastLocationAccess: - 
=== Succesors ===
next: i78 
=== Usages ===
v82 
=== Predecessor ===
v50 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v81 lastLocationAccess: - #next: i78  <|@  <|@
f <@~|@floating>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a77 
=== Succesors ===
=== Usages ===
i78 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a77  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i78 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-8203|0xffffffffffffdff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v82 
lastLocationAccess: - 
=== Succesors ===
next: i79 
=== Usages ===
i18 
=== Predecessor ===
a77 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v82 lastLocationAccess: - #next: i79  <|@  <|@
f <@~|@floating>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a75 
=== Succesors ===
=== Usages ===
i79 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i79 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v83 
lastLocationAccess: - 
=== Succesors ===
next: v7 
=== Usages ===
i40 
=== Predecessor ===
i78 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v83 lastLocationAccess: - #next: v7  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i79 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i79  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i78 
y: i40 
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i78 y: i40  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 9]
stamp: void
=== Inputs ===
memoryMap: - 
result: i18 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i79 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i18  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 26
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
reason: TypeCheckedInliningViolated
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0xa926bbfd]: FallbackDeopt@9[HotSpotMethod<Matcher.getTextLength()>, 4, FALSE, jdk.graal.compiler.phases.common.inlining.InliningUtil$ReceiverTypeSpeculationContext, HotSpotType<Ljava/lang/String;, resolved>]}
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6ac1adec slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVSXB input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6707 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // text:java.lang.CharSequence
     4: invokeinterface#27, 1      // java.lang.CharSequence.length:()int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a75 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a75  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.regex.Matcher
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v80 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v80 <|@
result [v0|QWORD[.] + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a75 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a75 <|@
result v1|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.text
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 1]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v80 
lastLocationAccess: - 
=== Succesors ===
next: v76 
=== Usages ===
v84 v81 v83 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v80 lastLocationAccess: - #next: v76  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Matcher.getTextLength()>
localsSize: 1
locksSize: 0
sourceFile: Matcher.java
sourceLine: 1808
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v85 v76 i78 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v84 <|@
result [v1|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a75 
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-6411|0xffffffffffffe6f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v84 
lastLocationAccess: - 
=== Succesors ===
next: v53 
=== Usages ===
v74 
=== Predecessor ===
a75 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v84 lastLocationAccess: - #next: v53  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v76 
y: v73 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v76 y: v73  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v74 
=== Succesors ===
trueSuccessor: v50 
falseSuccessor: v52 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v74 #trueSuccessor: v50 #falseSuccessor: v52  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6ac1adec slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a77 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a77  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
result [v1|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a75 
=== Succesors ===
=== Usages ===
a77 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a77 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v81 
lastLocationAccess: - 
=== Succesors ===
next: i78 
=== Usages ===
v82 
=== Predecessor ===
v50 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v81 lastLocationAccess: - #next: i78  <|@  <|@
f <@~|@floating>@ <|@
tid v82 <|@
result [v2|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a77 
=== Succesors ===
=== Usages ===
i78 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a77  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i78 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-8203|0xffffffffffffdff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v82 
lastLocationAccess: - 
=== Succesors ===
next: i79 
=== Usages ===
i18 
=== Predecessor ===
a77 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v82 lastLocationAccess: - #next: i79  <|@  <|@
f <@~|@floating>@ <|@
tid v83 <|@
result [v1|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a75 
=== Succesors ===
=== Usages ===
i79 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i79 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v83 
lastLocationAccess: - 
=== Succesors ===
next: v7 
=== Usages ===
i40 
=== Predecessor ===
i78 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v83 lastLocationAccess: - #next: v7  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i79 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i79  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i78 
y: i40 
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i78 y: i40  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 9]
stamp: void
=== Inputs ===
memoryMap: - 
result: i18 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i79 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i18  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVSXB input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 26
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
reason: TypeCheckedInliningViolated
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0xa926bbfd]: FallbackDeopt@9[HotSpotMethod<Matcher.getTextLength()>, 4, FALSE, jdk.graal.compiler.phases.common.inlining.InliningUtil$ReceiverTypeSpeculationContext, HotSpotType<Ljava/lang/String;, resolved>]}
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6707 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6ac1adec slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVSXB input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6707 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // text:java.lang.CharSequence
     4: invokeinterface#27, 1      // java.lang.CharSequence.length:()int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6ac1adec slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVSXB input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6707 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // text:java.lang.CharSequence
     4: invokeinterface#27, 1      // java.lang.CharSequence.length:()int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6ac1adec slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVSXB input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6707 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // text:java.lang.CharSequence
     4: invokeinterface#27, 1      // java.lang.CharSequence.length:()int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6ac1adec slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVSXB input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6707 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // text:java.lang.CharSequence
     4: invokeinterface#27, 1      // java.lang.CharSequence.length:()int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6ac1adec slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVSXB input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6707 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // text:java.lang.CharSequence
     4: invokeinterface#27, 1      // java.lang.CharSequence.length:()int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6ac1adec slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction v4|DWORD = MOVSXB input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction v5|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rax|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6707 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // text:java.lang.CharSequence
     4: invokeinterface#27, 1      // java.lang.CharSequence.length:()int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6ac1adec slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction v4|DWORD = MOVSXB input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction v5|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rax|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6707 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // text:java.lang.CharSequence
     4: invokeinterface#27, 1      // java.lang.CharSequence.length:()int
     9: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v5|d [0, 1[[66, 68[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v4|d [0, 1[[62, 65[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 18[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 22[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [22, 59[[70, 91[22 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d -1 [24, 60[24 MustHaveRegister 26 MustHaveRegister 56 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [56, 58[56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [58, 64[58 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [60, 62[60 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d v3|d [64, 66[64 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v5|d [0, 1[[66, 68[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v4|d [0, 1[[62, 65[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 18[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 22[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [22, 59[[70, 91[22 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rcx|d]" v1|d -1 [24, 60[24 MustHaveRegister 26 MustHaveRegister 56 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [56, 58[56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [58, 64[58 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rcx|d]" v4|d -1 [60, 62[60 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d v3|d [64, 66[64 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6ac1adec slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction v4|DWORD = MOVSXB input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction v5|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rax|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6707 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // text:java.lang.CharSequence
     4: invokeinterface#27, 1      // java.lang.CharSequence.length:()int
     9: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v5|d [0, 1[[66, 68[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v4|d [0, 1[[62, 65[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 18[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 22[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [22, 59[[70, 91[22 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rcx|d]" v1|d -1 [24, 60[24 MustHaveRegister 26 MustHaveRegister 56 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [56, 58[56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [58, 64[58 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rcx|d]" v4|d -1 [60, 62[60 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d v3|d [64, 66[64 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6ac1adec slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction v4|DWORD = MOVSXB input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction v5|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rax|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6707 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // text:java.lang.CharSequence
     4: invokeinterface#27, 1      // java.lang.CharSequence.length:()int
     9: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v5|d [0, 1[[66, 68[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v4|d [0, 1[[62, 65[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 18[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 22[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [22, 59[[70, 91[22 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rcx|d]" v1|d -1 [24, 60[24 MustHaveRegister 26 MustHaveRegister 56 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [56, 58[56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [58, 64[58 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rcx|d]" v4|d -1 [60, 62[60 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d v3|d [64, 66[64 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6ac1adec slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction v4|DWORD = MOVSXB input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction v5|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rax|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6707 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // text:java.lang.CharSequence
     4: invokeinterface#27, 1      // java.lang.CharSequence.length:()int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6ac1adec slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction v4|DWORD = MOVSXB input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction v5|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rax|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6707 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // text:java.lang.CharSequence
     4: invokeinterface#27, 1      // java.lang.CharSequence.length:()int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6ac1adec slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   64  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6707 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // text:java.lang.CharSequence
     4: invokeinterface#27, 1      // java.lang.CharSequence.length:()int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6ac1adec slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   64  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6707 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // text:java.lang.CharSequence
     4: invokeinterface#27, 1      // java.lang.CharSequence.length:()int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6ac1adec slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   64  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6707 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // text:java.lang.CharSequence
     4: invokeinterface#27, 1      // java.lang.CharSequence.length:()int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6ac1adec slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   64  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6707 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // text:java.lang.CharSequence
     4: invokeinterface#27, 1      // java.lang.CharSequence.length:()int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6ac1adec slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   64  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6707 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // text:java.lang.CharSequence
     4: invokeinterface#27, 1      // java.lang.CharSequence.length:()int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6ac1adec slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   64  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6707 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // text:java.lang.CharSequence
     4: invokeinterface#27, 1      // java.lang.CharSequence.length:()int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6ac1adec slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   64  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6707 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // text:java.lang.CharSequence
     4: invokeinterface#27, 1      // java.lang.CharSequence.length:()int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6ac1adec slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   64  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6707 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // text:java.lang.CharSequence
     4: invokeinterface#27, 1      // java.lang.CharSequence.length:()int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6ac1adec slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   64  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6707 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // text:java.lang.CharSequence
     4: invokeinterface#27, 1      // java.lang.CharSequence.length:()int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6ac1adec slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   64  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6707 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // text:java.lang.CharSequence
     4: invokeinterface#27, 1      // java.lang.CharSequence.length:()int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6ac1adec slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   64  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6707 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // text:java.lang.CharSequence
     4: invokeinterface#27, 1      // java.lang.CharSequence.length:()int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6ac1adec slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   64  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6707 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // text:java.lang.CharSequence
     4: invokeinterface#27, 1      // java.lang.CharSequence.length:()int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6ac1adec slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction rax|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   64  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV x: [r15|QWORD + 1156] y: -6707 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #9          // text:java.lang.CharSequence
     4: invokeinterface#27, 1      // java.lang.CharSequence.length:()int
     9: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f8587000000909090909090909048896c24108b4e3c813ccd08000000addeadde0f853c000000909090909090909090909090908b04cd140000008b04c50c0000000fbe0ccd10000000d3e8488b6c24104883c418493ba7500400000f873b000000c39090909090909041c78784040000cde5ffff49c7879004000014000000e8000000000f1f84000000000048896c2410e800000000e96afffffff4488d0db1ffffff49898f68040000e91cfffffff441c78784040000f5e6ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5dfffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 71 20 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6ac1adec slotKind: QWORD  <||@
  Comment 71 24 rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD  <||@
  Comment 74 26 CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0]  <||@
  Comment 74 [rcx:0, rsi:0]at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 74 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 74 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 91 block B1 null  <||@
  Comment 91 28 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 91 30 NOP  <||@
  Comment 92 32 NOP  <||@
  Comment 93 34 NOP  <||@
  Comment 94 36 NOP  <||@
  Comment 95 38 NOP  <||@
  Comment 96 40 NOP  <||@
  Comment 97 42 NOP  <||@
  Comment 98 44 NOP  <||@
  Comment 99 46 NOP  <||@
  Comment 100 48 NOP  <||@
  Comment 101 50 NOP  <||@
  Comment 102 52 NOP  <||@
  Comment 103 54 NOP  <||@
  Comment 104 56 rax|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 111 58 rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 111 [rcx:0, rsi:0]at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 111 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 118 60 rcx|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 126 64 rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 128 68 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 137 POLL_RETURN_FAR  <||@
  Comment 151 block B2 null  <||@
  Comment 151 70 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 151 72 NOP  <||@
  Comment 152 74 NOP  <||@
  Comment 153 76 NOP  <||@
  Comment 154 78 NOP  <||@
  Comment 155 80 NOP  <||@
  Comment 156 82 NOP  <||@
  Comment 157 84 NOP  <||@
  Comment 158 86 MOV x: [r15|QWORD + 1156] y: -6707 size: DWORD  <||@
  Comment 169 88 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 180 90 DEOPT info [bci:0]  <||@
  Comment 180 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 185 [rsi:0]at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 198 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 223 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 251 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 256 [rcx:0, rsi:0]at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 286 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 291 [rcx:0, rsi:0]at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 299 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 299 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 305 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 305 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8454[java.util.regex.Matcher.getTextLength()]"
  method "HotSpotCompilation-8454[java.util.regex.Matcher.getTextLength()]"
  date 1724269749719
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789aeb3780 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3188dfe66669089842400c0feff4883ec189041817f20030000000f8587000000909090909090909048896c24108b4e3c813ccd08000000d8e800000f853c000000909090909090909090909090908b04cd140000008b04c50c0000000fbe0ccd10000000d3e8488b6c24104883c418493ba7500400000f873b000000c39090909090909041c78784040000cde5ffff49c7879004000014000000e841798dfe0f1f84000000000048896c2410e8d5798bfee96afffffff4488d0db1ffffff49898f68040000e99c878dfef441c78784040000f5e6ffff49c7879004000000000000e8fa788dfe0f1f84000000000041c78784040000f5dfffff49c7879004000000000000e8d7788dfe0f1f840000000000e8501aa1fef4e86a768dfef4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 71 20 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6ac1adec slotKind: QWORD  <||@
  Comment 71 24 rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD  <||@
  Comment 74 26 CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0]  <||@
  Comment 74 [rcx:0, rsi:0]at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 74 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 74 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 91 block B1 null  <||@
  Comment 91 28 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 91 30 NOP  <||@
  Comment 92 32 NOP  <||@
  Comment 93 34 NOP  <||@
  Comment 94 36 NOP  <||@
  Comment 95 38 NOP  <||@
  Comment 96 40 NOP  <||@
  Comment 97 42 NOP  <||@
  Comment 98 44 NOP  <||@
  Comment 99 46 NOP  <||@
  Comment 100 48 NOP  <||@
  Comment 101 50 NOP  <||@
  Comment 102 52 NOP  <||@
  Comment 103 54 NOP  <||@
  Comment 104 56 rax|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 111 58 rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 111 [rcx:0, rsi:0]at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 111 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 118 60 rcx|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 126 64 rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 128 68 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 137 POLL_RETURN_FAR  <||@
  Comment 151 block B2 null  <||@
  Comment 151 70 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 151 72 NOP  <||@
  Comment 152 74 NOP  <||@
  Comment 153 76 NOP  <||@
  Comment 154 78 NOP  <||@
  Comment 155 80 NOP  <||@
  Comment 156 82 NOP  <||@
  Comment 157 84 NOP  <||@
  Comment 158 86 MOV x: [r15|QWORD + 1156] y: -6707 size: DWORD  <||@
  Comment 169 88 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 180 90 DEOPT info [bci:0]  <||@
  Comment 180 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 185 [rsi:0]at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 198 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 223 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 251 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 256 [rcx:0, rsi:0]at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 286 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 291 [rcx:0, rsi:0]at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 299 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 299 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 305 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 305 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
